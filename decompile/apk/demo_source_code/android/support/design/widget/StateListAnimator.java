// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package android.support.design.widget;

import android.util.StateSet;
import java.util.ArrayList;

// Referenced classes of package android.support.design.widget:
//            ValueAnimatorCompat

final class StateListAnimator {
    static class Tuple {

        final ValueAnimatorCompat mAnimator;
        final int mSpecs[];

        Tuple(int ai[], ValueAnimatorCompat valueanimatorcompat) {
            mSpecs = ai;
            mAnimator = valueanimatorcompat;
        }
    }


    private final ValueAnimatorCompat.AnimatorListener mAnimationListener = new ValueAnimatorCompat.AnimatorListenerAdapter() {

        final StateListAnimator this$0;

        public void onAnimationEnd(ValueAnimatorCompat valueanimatorcompat) {
            if (mRunningAnimator == valueanimatorcompat)
                mRunningAnimator = null;
        }

             {
                this$0 = StateListAnimator.this;
                super();
            }
    }
;
    private Tuple mLastMatch;
    ValueAnimatorCompat mRunningAnimator;
    private final ArrayList mTuples = new ArrayList();

    StateListAnimator() {
        mLastMatch = null;
        mRunningAnimator = null;
    }

    private void cancel() {
        if (mRunningAnimator != null) {
            mRunningAnimator.cancel();
            mRunningAnimator = null;
        }
    }

    private void start(Tuple tuple) {
        mRunningAnimator = tuple.mAnimator;
        mRunningAnimator.start();
    }

    public void addState(int ai[], ValueAnimatorCompat valueanimatorcompat) {
        ai = new Tuple(ai, valueanimatorcompat);
        valueanimatorcompat.addListener(mAnimationListener);
        mTuples.add(ai);
    }

    public void jumpToCurrentState() {
        if (mRunningAnimator != null) {
            mRunningAnimator.end();
            mRunningAnimator = null;
        }
    }

    void setState(int ai[]) {
        int i;
        int j;
        j = mTuples.size();
        i = 0;
_L3:
        Tuple tuple;
        if (i >= j)
            break MISSING_BLOCK_LABEL_86;
        tuple = (Tuple)mTuples.get(i);
        if (!StateSet.stateSetMatches(tuple.mSpecs, ai)) goto _L2; else goto _L1
_L1:
        ai = tuple;
_L4:
        if (ai != mLastMatch) {
            if (mLastMatch != null)
                cancel();
            mLastMatch = ai;
            if (ai != null)
                start(ai);
        }
        return;
_L2:
        i++;
          goto _L3
        ai = null;
          goto _L4
    }
}
