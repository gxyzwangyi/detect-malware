// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package android.support.design.widget;

import android.content.Context;
import android.util.AttributeSet;
import android.view.View;

// Referenced classes of package android.support.design.widget:
//            ViewOffsetHelper, CoordinatorLayout

class ViewOffsetBehavior extends CoordinatorLayout.Behavior {

    private int mTempLeftRightOffset;
    private int mTempTopBottomOffset;
    private ViewOffsetHelper mViewOffsetHelper;

    public ViewOffsetBehavior() {
        mTempTopBottomOffset = 0;
        mTempLeftRightOffset = 0;
    }

    public ViewOffsetBehavior(Context context, AttributeSet attributeset) {
        super(context, attributeset);
        mTempTopBottomOffset = 0;
        mTempLeftRightOffset = 0;
    }

    public int getLeftAndRightOffset() {
        int i;
        if (mViewOffsetHelper != null)
            i = mViewOffsetHelper.getLeftAndRightOffset();
        else
            i = 0;
        return i;
    }

    public int getTopAndBottomOffset() {
        int i;
        if (mViewOffsetHelper != null)
            i = mViewOffsetHelper.getTopAndBottomOffset();
        else
            i = 0;
        return i;
    }

    protected void layoutChild(CoordinatorLayout coordinatorlayout, View view, int i) {
        coordinatorlayout.onLayoutChild(view, i);
    }

    public boolean onLayoutChild(CoordinatorLayout coordinatorlayout, View view, int i) {
        layoutChild(coordinatorlayout, view, i);
        if (mViewOffsetHelper == null)
            mViewOffsetHelper = new ViewOffsetHelper(view);
        mViewOffsetHelper.onViewLayout();
        if (mTempTopBottomOffset != 0) {
            mViewOffsetHelper.setTopAndBottomOffset(mTempTopBottomOffset);
            mTempTopBottomOffset = 0;
        }
        if (mTempLeftRightOffset != 0) {
            mViewOffsetHelper.setLeftAndRightOffset(mTempLeftRightOffset);
            mTempLeftRightOffset = 0;
        }
        return true;
    }

    public boolean setLeftAndRightOffset(int i) {
        boolean flag;
        if (mViewOffsetHelper != null) {
            flag = mViewOffsetHelper.setLeftAndRightOffset(i);
        } else {
            mTempLeftRightOffset = i;
            flag = false;
        }
        return flag;
    }

    public boolean setTopAndBottomOffset(int i) {
        boolean flag;
        if (mViewOffsetHelper != null) {
            flag = mViewOffsetHelper.setTopAndBottomOffset(i);
        } else {
            mTempTopBottomOffset = i;
            flag = false;
        }
        return flag;
    }
}
