// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package android.support.v7.widget;

import android.content.Context;
import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.database.DataSetObserver;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.support.v4.view.TintableBackgroundView;
import android.support.v4.view.ViewCompat;
import android.support.v7.content.res.AppCompatResources;
import android.support.v7.view.ContextThemeWrapper;
import android.support.v7.view.menu.ShowableListMenu;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import android.widget.Adapter;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.SpinnerAdapter;
import android.widget.ThemedSpinnerAdapter;

// Referenced classes of package android.support.v7.widget:
//            TintTypedArray, AppCompatBackgroundHelper, ForwardingListener, ThemedSpinnerAdapter, 
//            ListPopupWindow, ViewUtils

public class AppCompatSpinner extends Spinner
    implements TintableBackgroundView {
    private static class DropDownAdapter
        implements ListAdapter, SpinnerAdapter {

        private SpinnerAdapter mAdapter;
        private ListAdapter mListAdapter;

        public boolean areAllItemsEnabled() {
            ListAdapter listadapter = mListAdapter;
            boolean flag;
            if (listadapter != null)
                flag = listadapter.areAllItemsEnabled();
            else
                flag = true;
            return flag;
        }

        public int getCount() {
            int i;
            if (mAdapter == null)
                i = 0;
            else
                i = mAdapter.getCount();
            return i;
        }

        public View getDropDownView(int i, View view, ViewGroup viewgroup) {
            if (mAdapter == null)
                view = null;
            else
                view = mAdapter.getDropDownView(i, view, viewgroup);
            return view;
        }

        public Object getItem(int i) {
            Object obj;
            if (mAdapter == null)
                obj = null;
            else
                obj = mAdapter.getItem(i);
            return obj;
        }

        public long getItemId(int i) {
            long l;
            if (mAdapter == null)
                l = -1L;
            else
                l = mAdapter.getItemId(i);
            return l;
        }

        public int getItemViewType(int i) {
            return 0;
        }

        public View getView(int i, View view, ViewGroup viewgroup) {
            return getDropDownView(i, view, viewgroup);
        }

        public int getViewTypeCount() {
            return 1;
        }

        public boolean hasStableIds() {
            boolean flag;
            if (mAdapter != null && mAdapter.hasStableIds())
                flag = true;
            else
                flag = false;
            return flag;
        }

        public boolean isEmpty() {
            boolean flag;
            if (getCount() == 0)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public boolean isEnabled(int i) {
            ListAdapter listadapter = mListAdapter;
            boolean flag;
            if (listadapter != null)
                flag = listadapter.isEnabled(i);
            else
                flag = true;
            return flag;
        }

        public void registerDataSetObserver(DataSetObserver datasetobserver) {
            if (mAdapter != null)
                mAdapter.registerDataSetObserver(datasetobserver);
        }

        public void unregisterDataSetObserver(DataSetObserver datasetobserver) {
            if (mAdapter != null)
                mAdapter.unregisterDataSetObserver(datasetobserver);
        }

        public DropDownAdapter(SpinnerAdapter spinneradapter, android.content.res.Resources.Theme theme) {
            mAdapter = spinneradapter;
            if (spinneradapter instanceof ListAdapter)
                mListAdapter = (ListAdapter)spinneradapter;
            if (theme == null) goto _L2; else goto _L1
_L1:
            if (!AppCompatSpinner.IS_AT_LEAST_M || !(spinneradapter instanceof ThemedSpinnerAdapter)) goto _L4; else goto _L3
_L3:
            spinneradapter = (ThemedSpinnerAdapter)spinneradapter;
            if (spinneradapter.getDropDownViewTheme() != theme)
                spinneradapter.setDropDownViewTheme(theme);
_L2:
            return;
_L4:
            if (spinneradapter instanceof android.support.v7.widget.ThemedSpinnerAdapter) {
                spinneradapter = (android.support.v7.widget.ThemedSpinnerAdapter)spinneradapter;
                if (spinneradapter.getDropDownViewTheme() == null)
                    spinneradapter.setDropDownViewTheme(theme);
            }
            if (true) goto _L2; else goto _L5
_L5:
        }
    }

    private class DropdownPopup extends ListPopupWindow {

        ListAdapter mAdapter;
        private CharSequence mHintText;
        private final Rect mVisibleRect = new Rect();
        final AppCompatSpinner this$0;

        void computeContentWidth() {
            Drawable drawable = getBackground();
            int i;
            int l;
            int i1;
            int j1;
            if (drawable != null) {
                drawable.getPadding(mTempRect);
                if (ViewUtils.isLayoutRtl(AppCompatSpinner.this))
                    i = mTempRect.right;
                else
                    i = -mTempRect.left;
            } else {
                Rect rect = mTempRect;
                mTempRect.right = 0;
                rect.left = 0;
                i = 0;
            }
            i1 = getPaddingLeft();
            j1 = getPaddingRight();
            l = getWidth();
            if (mDropDownWidth == -2) {
                int k = compatMeasureContentWidth((SpinnerAdapter)mAdapter, getBackground());
                int j = getContext().getResources().getDisplayMetrics().widthPixels - mTempRect.left - mTempRect.right;
                if (k <= j)
                    j = k;
                setContentWidth(Math.max(j, l - i1 - j1));
            } else
            if (mDropDownWidth == -1)
                setContentWidth(l - i1 - j1);
            else
                setContentWidth(mDropDownWidth);
            if (ViewUtils.isLayoutRtl(AppCompatSpinner.this))
                i = (l - j1 - getWidth()) + i;
            else
                i += i1;
            setHorizontalOffset(i);
        }

        public CharSequence getHintText() {
            return mHintText;
        }

        boolean isVisibleToUser(View view) {
            boolean flag;
            if (ViewCompat.isAttachedToWindow(view) && view.getGlobalVisibleRect(mVisibleRect))
                flag = true;
            else
                flag = false;
            return flag;
        }

        public void setAdapter(ListAdapter listadapter) {
            setAdapter(listadapter);
            mAdapter = listadapter;
        }

        public void setPromptText(CharSequence charsequence) {
            mHintText = charsequence;
        }

        public void show() {
            boolean flag;
            flag = isShowing();
            computeContentWidth();
            setInputMethodMode(2);
            show();
            getListView().setChoiceMode(1);
            setSelection(getSelectedItemPosition());
            if (!flag) goto _L2; else goto _L1
_L1:
            return;
_L2:
            ViewTreeObserver viewtreeobserver = getViewTreeObserver();
            if (viewtreeobserver != null) {
                android.view.ViewTreeObserver.OnGlobalLayoutListener ongloballayoutlistener = new android.view.ViewTreeObserver.OnGlobalLayoutListener() {

                    final DropdownPopup this$1;

                    public void onGlobalLayout() {
                        if (!isVisibleToUser(_fld0)) {
                            dismiss();
                        } else {
                            computeContentWidth();
                            show();
                        }
                    }

             {
                this$1 = DropdownPopup.this;
                Object();
            }
                }
;
                viewtreeobserver.addOnGlobalLayoutListener(ongloballayoutlistener);
                setOnDismissListener(ongloballayoutlistener. new android.widget.PopupWindow.OnDismissListener() {

                    final DropdownPopup this$1;
                    final android.view.ViewTreeObserver.OnGlobalLayoutListener val$layoutListener;

                    public void onDismiss() {
                        ViewTreeObserver viewtreeobserver = getViewTreeObserver();
                        if (viewtreeobserver != null)
                            viewtreeobserver.removeGlobalOnLayoutListener(layoutListener);
                    }

             {
                this$1 = final_dropdownpopup;
                layoutListener = android.view.ViewTreeObserver.OnGlobalLayoutListener.this;
                Object();
            }
                }
);
            }
            if (true) goto _L1; else goto _L3
_L3:
        }


        public DropdownPopup(Context context, AttributeSet attributeset, int i) {
            this$0 = AppCompatSpinner.this;
            ListPopupWindow(context, attributeset, i);
            setAnchorView(AppCompatSpinner.this);
            setModal(true);
            setPromptPosition(0);
            setOnItemClickListener(new _cls1());
        }
    }


    private static final int ATTRS_ANDROID_SPINNERMODE[] = {
        0x10102f1
    };
    private static final boolean IS_AT_LEAST_JB;
    static final boolean IS_AT_LEAST_M;
    private static final int MAX_ITEMS_MEASURED = 15;
    private static final int MODE_DIALOG = 0;
    private static final int MODE_DROPDOWN = 1;
    private static final int MODE_THEME = -1;
    private static final String TAG = "AppCompatSpinner";
    private AppCompatBackgroundHelper mBackgroundTintHelper;
    int mDropDownWidth;
    private ForwardingListener mForwardingListener;
    DropdownPopup mPopup;
    private Context mPopupContext;
    private boolean mPopupSet;
    private SpinnerAdapter mTempAdapter;
    final Rect mTempRect;

    public AppCompatSpinner(Context context) {
        this(context, ((AttributeSet) (null)));
    }

    public AppCompatSpinner(Context context, int i) {
        this(context, null, android.support.v7.appcompat.R.attr.spinnerStyle, i);
    }

    public AppCompatSpinner(Context context, AttributeSet attributeset) {
        this(context, attributeset, android.support.v7.appcompat.R.attr.spinnerStyle);
    }

    public AppCompatSpinner(Context context, AttributeSet attributeset, int i) {
        this(context, attributeset, i, -1);
    }

    public AppCompatSpinner(Context context, AttributeSet attributeset, int i, int j) {
        this(context, attributeset, i, j, null);
    }

    public AppCompatSpinner(Context context, AttributeSet attributeset, int i, int j, android.content.res.Resources.Theme theme) {
        int k;
        Object obj;
        super(context, attributeset, i);
        mTempRect = new Rect();
        TintTypedArray tinttypedarray = TintTypedArray.obtainStyledAttributes(context, attributeset, android.support.v7.appcompat.R.styleable.Spinner, i, 0);
        mBackgroundTintHelper = new AppCompatBackgroundHelper(this);
        int l;
        if (theme != null) {
            mPopupContext = new ContextThemeWrapper(context, theme);
        } else {
            k = tinttypedarray.getResourceId(android.support.v7.appcompat.R.styleable.Spinner_popupTheme, 0);
            if (k != 0) {
                mPopupContext = new ContextThemeWrapper(context, k);
            } else {
                if (!IS_AT_LEAST_M)
                    theme = context;
                else
                    theme = null;
                mPopupContext = theme;
            }
        }
        if (mPopupContext == null) goto _L2; else goto _L1
_L1:
        k = j;
        if (j != -1) goto _L4; else goto _L3
_L3:
        if (android.os.Build.VERSION.SDK_INT < 11) goto _L6; else goto _L5
_L5:
        obj = context.obtainStyledAttributes(attributeset, ATTRS_ANDROID_SPINNERMODE, i, 0);
        l = j;
        theme = ((android.content.res.Resources.Theme) (obj));
        if (!((TypedArray) (obj)).hasValue(0))
            break MISSING_BLOCK_LABEL_128;
        theme = ((android.content.res.Resources.Theme) (obj));
        l = ((TypedArray) (obj)).getInt(0, 0);
        k = l;
        if (obj != null) {
            ((TypedArray) (obj)).recycle();
            k = l;
        }
_L4:
        if (k == 1) {
            theme = new DropdownPopup(mPopupContext, attributeset, i);
            obj = TintTypedArray.obtainStyledAttributes(mPopupContext, attributeset, android.support.v7.appcompat.R.styleable.Spinner, i, 0);
            mDropDownWidth = ((TintTypedArray) (obj)).getLayoutDimension(android.support.v7.appcompat.R.styleable.Spinner_android_dropDownWidth, -2);
            theme.setBackgroundDrawable(((TintTypedArray) (obj)).getDrawable(android.support.v7.appcompat.R.styleable.Spinner_android_popupBackground));
            theme.setPromptText(tinttypedarray.getString(android.support.v7.appcompat.R.styleable.Spinner_android_prompt));
            ((TintTypedArray) (obj)).recycle();
            mPopup = theme;
            mForwardingListener = new ForwardingListener(theme) {

                final AppCompatSpinner this$0;
                final DropdownPopup val$popup;

                public ShowableListMenu getPopup() {
                    return popup;
                }

                public boolean onForwardingStarted() {
                    if (!mPopup.isShowing())
                        mPopup.show();
                    return true;
                }

             {
                this$0 = AppCompatSpinner.this;
                popup = dropdownpopup;
                ForwardingListener(final_view);
            }
            }
;
        }
_L2:
        theme = tinttypedarray.getTextArray(android.support.v7.appcompat.R.styleable.Spinner_android_entries);
        if (theme != null) {
            context = new ArrayAdapter(context, 0x1090008, theme);
            context.setDropDownViewResource(android.support.v7.appcompat.R.layout.support_simple_spinner_dropdown_item);
            setAdapter(context);
        }
        tinttypedarray.recycle();
        mPopupSet = true;
        if (mTempAdapter != null) {
            setAdapter(mTempAdapter);
            mTempAdapter = null;
        }
        mBackgroundTintHelper.loadFromAttributes(attributeset, i);
        return;
        Exception exception;
        exception;
        obj = null;
_L8:
        theme = ((android.content.res.Resources.Theme) (obj));
        Log.i("AppCompatSpinner", "Could not read android:spinnerMode", exception);
        k = j;
        if (obj != null) {
            ((TypedArray) (obj)).recycle();
            k = j;
        }
          goto _L4
        context;
        theme = null;
_L7:
        if (theme != null)
            theme.recycle();
        throw context;
_L6:
        k = 1;
          goto _L4
        context;
          goto _L7
        exception;
          goto _L8
    }

    int compatMeasureContentWidth(SpinnerAdapter spinneradapter, Drawable drawable) {
        int i = 0;
        if (spinneradapter != null) goto _L2; else goto _L1
_L1:
        return i;
_L2:
        int i1 = android.view.View.MeasureSpec.makeMeasureSpec(getMeasuredWidth(), 0);
        int k1 = android.view.View.MeasureSpec.makeMeasureSpec(getMeasuredHeight(), 0);
        i = Math.max(0, getSelectedItemPosition());
        int j1 = Math.min(spinneradapter.getCount(), i + 15);
        int k = Math.max(0, i - (15 - (j1 - i)));
        View view = null;
        i = 0;
        int j = 0;
        for (; k < j1; k++) {
            int l = spinneradapter.getItemViewType(k);
            if (l != j) {
                view = null;
                j = l;
            }
            view = spinneradapter.getView(k, view, this);
            if (view.getLayoutParams() == null)
                view.setLayoutParams(new android.view.ViewGroup.LayoutParams(-2, -2));
            view.measure(i1, k1);
            i = Math.max(i, view.getMeasuredWidth());
        }

        if (drawable != null) {
            drawable.getPadding(mTempRect);
            i = mTempRect.left + mTempRect.right + i;
        }
        if (true) goto _L1; else goto _L3
_L3:
    }

    protected void drawableStateChanged() {
        super.drawableStateChanged();
        if (mBackgroundTintHelper != null)
            mBackgroundTintHelper.applySupportBackgroundTint();
    }

    public int getDropDownHorizontalOffset() {
        int i;
        if (mPopup != null)
            i = mPopup.getHorizontalOffset();
        else
        if (IS_AT_LEAST_JB)
            i = super.getDropDownHorizontalOffset();
        else
            i = 0;
        return i;
    }

    public int getDropDownVerticalOffset() {
        int i;
        if (mPopup != null)
            i = mPopup.getVerticalOffset();
        else
        if (IS_AT_LEAST_JB)
            i = super.getDropDownVerticalOffset();
        else
            i = 0;
        return i;
    }

    public int getDropDownWidth() {
        int i;
        if (mPopup != null)
            i = mDropDownWidth;
        else
        if (IS_AT_LEAST_JB)
            i = super.getDropDownWidth();
        else
            i = 0;
        return i;
    }

    public Drawable getPopupBackground() {
        Drawable drawable;
        if (mPopup != null)
            drawable = mPopup.getBackground();
        else
        if (IS_AT_LEAST_JB)
            drawable = super.getPopupBackground();
        else
            drawable = null;
        return drawable;
    }

    public Context getPopupContext() {
        Context context;
        if (mPopup != null)
            context = mPopupContext;
        else
        if (IS_AT_LEAST_M)
            context = super.getPopupContext();
        else
            context = null;
        return context;
    }

    public CharSequence getPrompt() {
        CharSequence charsequence;
        if (mPopup != null)
            charsequence = mPopup.getHintText();
        else
            charsequence = super.getPrompt();
        return charsequence;
    }

    public ColorStateList getSupportBackgroundTintList() {
        ColorStateList colorstatelist;
        if (mBackgroundTintHelper != null)
            colorstatelist = mBackgroundTintHelper.getSupportBackgroundTintList();
        else
            colorstatelist = null;
        return colorstatelist;
    }

    public android.graphics.PorterDuff.Mode getSupportBackgroundTintMode() {
        android.graphics.PorterDuff.Mode mode;
        if (mBackgroundTintHelper != null)
            mode = mBackgroundTintHelper.getSupportBackgroundTintMode();
        else
            mode = null;
        return mode;
    }

    protected void onDetachedFromWindow() {
        super.onDetachedFromWindow();
        if (mPopup != null && mPopup.isShowing())
            mPopup.dismiss();
    }

    protected void onMeasure(int i, int j) {
        super.onMeasure(i, j);
        if (mPopup != null && android.view.View.MeasureSpec.getMode(i) == 0x80000000)
            setMeasuredDimension(Math.min(Math.max(getMeasuredWidth(), compatMeasureContentWidth(getAdapter(), getBackground())), android.view.View.MeasureSpec.getSize(i)), getMeasuredHeight());
    }

    public boolean onTouchEvent(MotionEvent motionevent) {
        boolean flag;
        if (mForwardingListener != null && mForwardingListener.onTouch(this, motionevent))
            flag = true;
        else
            flag = super.onTouchEvent(motionevent);
        return flag;
    }

    public boolean performClick() {
        boolean flag;
        if (mPopup != null) {
            if (!mPopup.isShowing())
                mPopup.show();
            flag = true;
        } else {
            flag = super.performClick();
        }
        return flag;
    }

    public volatile void setAdapter(Adapter adapter) {
        setAdapter((SpinnerAdapter)adapter);
    }

    public void setAdapter(SpinnerAdapter spinneradapter) {
        if (mPopupSet) goto _L2; else goto _L1
_L1:
        mTempAdapter = spinneradapter;
_L4:
        return;
_L2:
        super.setAdapter(spinneradapter);
        if (mPopup != null) {
            Context context;
            if (mPopupContext == null)
                context = getContext();
            else
                context = mPopupContext;
            mPopup.setAdapter(new DropDownAdapter(spinneradapter, context.getTheme()));
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public void setBackgroundDrawable(Drawable drawable) {
        super.setBackgroundDrawable(drawable);
        if (mBackgroundTintHelper != null)
            mBackgroundTintHelper.onSetBackgroundDrawable(drawable);
    }

    public void setBackgroundResource(int i) {
        super.setBackgroundResource(i);
        if (mBackgroundTintHelper != null)
            mBackgroundTintHelper.onSetBackgroundResource(i);
    }

    public void setDropDownHorizontalOffset(int i) {
        if (mPopup == null) goto _L2; else goto _L1
_L1:
        mPopup.setHorizontalOffset(i);
_L4:
        return;
_L2:
        if (IS_AT_LEAST_JB)
            super.setDropDownHorizontalOffset(i);
        if (true) goto _L4; else goto _L3
_L3:
    }

    public void setDropDownVerticalOffset(int i) {
        if (mPopup == null) goto _L2; else goto _L1
_L1:
        mPopup.setVerticalOffset(i);
_L4:
        return;
_L2:
        if (IS_AT_LEAST_JB)
            super.setDropDownVerticalOffset(i);
        if (true) goto _L4; else goto _L3
_L3:
    }

    public void setDropDownWidth(int i) {
        if (mPopup == null) goto _L2; else goto _L1
_L1:
        mDropDownWidth = i;
_L4:
        return;
_L2:
        if (IS_AT_LEAST_JB)
            super.setDropDownWidth(i);
        if (true) goto _L4; else goto _L3
_L3:
    }

    public void setPopupBackgroundDrawable(Drawable drawable) {
        if (mPopup == null) goto _L2; else goto _L1
_L1:
        mPopup.setBackgroundDrawable(drawable);
_L4:
        return;
_L2:
        if (IS_AT_LEAST_JB)
            super.setPopupBackgroundDrawable(drawable);
        if (true) goto _L4; else goto _L3
_L3:
    }

    public void setPopupBackgroundResource(int i) {
        setPopupBackgroundDrawable(AppCompatResources.getDrawable(getPopupContext(), i));
    }

    public void setPrompt(CharSequence charsequence) {
        if (mPopup != null)
            mPopup.setPromptText(charsequence);
        else
            super.setPrompt(charsequence);
    }

    public void setSupportBackgroundTintList(ColorStateList colorstatelist) {
        if (mBackgroundTintHelper != null)
            mBackgroundTintHelper.setSupportBackgroundTintList(colorstatelist);
    }

    public void setSupportBackgroundTintMode(android.graphics.PorterDuff.Mode mode) {
        if (mBackgroundTintHelper != null)
            mBackgroundTintHelper.setSupportBackgroundTintMode(mode);
    }

    static  {
        boolean flag;
        if (android.os.Build.VERSION.SDK_INT >= 23)
            flag = true;
        else
            flag = false;
        IS_AT_LEAST_M = flag;
        if (android.os.Build.VERSION.SDK_INT >= 16)
            flag = true;
        else
            flag = false;
        IS_AT_LEAST_JB = flag;
    }

    // Unreferenced inner class android/support/v7/widget/AppCompatSpinner$DropdownPopup$1

/* anonymous class */
    class DropdownPopup._cls1
        implements android.widget.AdapterView.OnItemClickListener {

        final DropdownPopup this$1;
        final AppCompatSpinner val$this$0;

        public void onItemClick(AdapterView adapterview, View view, int i, long l) {
            setSelection(i);
            if (getOnItemClickListener() != null)
                performItemClick(view, i, mAdapter.getItemId(i));
            dismiss();
        }

             {
                this$1 = final_dropdownpopup;
                this$0 = AppCompatSpinner.this;
                Object();
            }
    }

}
