// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package android.support.v7.widget;

import android.graphics.Rect;
import android.support.v4.view.ViewCompat;
import android.util.Log;
import android.view.View;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class ViewUtils {

    private static final String TAG = "ViewUtils";
    private static Method sComputeFitSystemWindowsMethod;

    private ViewUtils() {
    }

    public static int combineMeasuredStates(int i, int j) {
        return i | j;
    }

    public static void computeFitSystemWindows(View view, Rect rect, Rect rect1) {
        if (sComputeFitSystemWindowsMethod == null)
            break MISSING_BLOCK_LABEL_26;
        sComputeFitSystemWindowsMethod.invoke(view, new Object[] {
            rect, rect1
        });
_L1:
        return;
        view;
        Log.d("ViewUtils", "Could not invoke computeFitSystemWindows", view);
          goto _L1
    }

    public static boolean isLayoutRtl(View view) {
        boolean flag = true;
        if (ViewCompat.getLayoutDirection(view) != 1)
            flag = false;
        return flag;
    }

    public static void makeOptionalFitsSystemWindows(View view) {
        if (android.os.Build.VERSION.SDK_INT < 16)
            break MISSING_BLOCK_LABEL_44;
        Method method = view.getClass().getMethod("makeOptionalFitsSystemWindows", new Class[0]);
        if (!method.isAccessible())
            method.setAccessible(true);
        method.invoke(view, new Object[0]);
_L1:
        return;
        view;
        Log.d("ViewUtils", "Could not find method makeOptionalFitsSystemWindows. Oh well...");
          goto _L1
        view;
        Log.d("ViewUtils", "Could not invoke makeOptionalFitsSystemWindows", view);
          goto _L1
        view;
        Log.d("ViewUtils", "Could not invoke makeOptionalFitsSystemWindows", view);
          goto _L1
    }

    static  {
        if (android.os.Build.VERSION.SDK_INT < 18)
            break MISSING_BLOCK_LABEL_48;
        sComputeFitSystemWindowsMethod = android/view/View.getDeclaredMethod("computeFitSystemWindows", new Class[] {
            android/graphics/Rect, android/graphics/Rect
        });
        if (!sComputeFitSystemWindowsMethod.isAccessible())
            sComputeFitSystemWindowsMethod.setAccessible(true);
_L1:
        return;
        NoSuchMethodException nosuchmethodexception;
        nosuchmethodexception;
        Log.d("ViewUtils", "Could not find method computeFitSystemWindows. Oh well.");
          goto _L1
    }
}
