// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package android.support.v7.widget;

import android.content.Context;
import android.support.v4.widget.PopupWindowCompat;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;
import android.widget.PopupWindow;
import java.lang.ref.WeakReference;
import java.lang.reflect.Field;

// Referenced classes of package android.support.v7.widget:
//            TintTypedArray

class AppCompatPopupWindow extends PopupWindow {

    private static final boolean COMPAT_OVERLAP_ANCHOR;
    private static final String TAG = "AppCompatPopupWindow";
    private boolean mOverlapAnchor;

    public AppCompatPopupWindow(Context context, AttributeSet attributeset, int i) {
        PopupWindow(context, attributeset, i);
        init(context, attributeset, i, 0);
    }

    public AppCompatPopupWindow(Context context, AttributeSet attributeset, int i, int j) {
        PopupWindow(context, attributeset, i, j);
        init(context, attributeset, i, j);
    }

    private void init(Context context, AttributeSet attributeset, int i, int j) {
        context = TintTypedArray.obtainStyledAttributes(context, attributeset, android.support.v7.appcompat.R.styleable.PopupWindow, i, j);
        if (context.hasValue(android.support.v7.appcompat.R.styleable.PopupWindow_overlapAnchor))
            setSupportOverlapAnchor(context.getBoolean(android.support.v7.appcompat.R.styleable.PopupWindow_overlapAnchor, false));
        setBackgroundDrawable(context.getDrawable(android.support.v7.appcompat.R.styleable.PopupWindow_android_popupBackground));
        i = android.os.Build.VERSION.SDK_INT;
        if (j != 0 && i < 11 && context.hasValue(android.support.v7.appcompat.R.styleable.PopupWindow_android_popupAnimationStyle))
            setAnimationStyle(context.getResourceId(android.support.v7.appcompat.R.styleable.PopupWindow_android_popupAnimationStyle, -1));
        context.recycle();
        if (android.os.Build.VERSION.SDK_INT < 14)
            wrapOnScrollChangedListener(this);
    }

    private static void wrapOnScrollChangedListener(PopupWindow popupwindow) {
        Field field1 = android/widget/PopupWindow.getDeclaredField("mAnchor");
        field1.setAccessible(true);
        Field field = android/widget/PopupWindow.getDeclaredField("mOnScrollChangedListener");
        field.setAccessible(true);
        android.view.ViewTreeObserver.OnScrollChangedListener onscrollchangedlistener1 = (android.view.ViewTreeObserver.OnScrollChangedListener)field.get(popupwindow);
        android.view.ViewTreeObserver.OnScrollChangedListener onscrollchangedlistener = JVM INSTR new #6   <Class AppCompatPopupWindow$1>;
        onscrollchangedlistener._cls1(field1, popupwindow, onscrollchangedlistener1);
        field.set(popupwindow, onscrollchangedlistener);
_L1:
        return;
        popupwindow;
        Log.d("AppCompatPopupWindow", "Exception while installing workaround OnScrollChangedListener", popupwindow);
          goto _L1
    }

    public boolean getSupportOverlapAnchor() {
        boolean flag;
        if (COMPAT_OVERLAP_ANCHOR)
            flag = mOverlapAnchor;
        else
            flag = PopupWindowCompat.getOverlapAnchor(this);
        return flag;
    }

    public void setSupportOverlapAnchor(boolean flag) {
        if (COMPAT_OVERLAP_ANCHOR)
            mOverlapAnchor = flag;
        else
            PopupWindowCompat.setOverlapAnchor(this, flag);
    }

    public void showAsDropDown(View view, int i, int j) {
        int k = j;
        if (COMPAT_OVERLAP_ANCHOR) {
            k = j;
            if (mOverlapAnchor)
                k = j - view.getHeight();
        }
        showAsDropDown(view, i, k);
    }

    public void showAsDropDown(View view, int i, int j, int k) {
        int l = j;
        if (COMPAT_OVERLAP_ANCHOR) {
            l = j;
            if (mOverlapAnchor)
                l = j - view.getHeight();
        }
        showAsDropDown(view, i, l, k);
    }

    public void update(View view, int i, int j, int k, int l) {
        if (COMPAT_OVERLAP_ANCHOR && mOverlapAnchor)
            j -= view.getHeight();
        update(view, i, j, k, l);
    }

    static  {
        boolean flag;
        if (android.os.Build.VERSION.SDK_INT < 21)
            flag = true;
        else
            flag = false;
        COMPAT_OVERLAP_ANCHOR = flag;
    }

    // Unreferenced inner class android/support/v7/widget/AppCompatPopupWindow$1

/* anonymous class */
    static final class _cls1
        implements android.view.ViewTreeObserver.OnScrollChangedListener {

        final Field val$fieldAnchor;
        final android.view.ViewTreeObserver.OnScrollChangedListener val$originalListener;
        final PopupWindow val$popup;

        public void onScrollChanged() {
            WeakReference weakreference = (WeakReference)fieldAnchor.get(popup);
            if (weakreference == null)
                break MISSING_BLOCK_LABEL_26;
            if (weakreference.get() != null)
                try {
                    originalListener.onScrollChanged();
                }
                catch (IllegalAccessException illegalaccessexception) { }
        }

             {
                fieldAnchor = field;
                popup = popupwindow;
                originalListener = onscrollchangedlistener;
                Object();
            }
    }

}
