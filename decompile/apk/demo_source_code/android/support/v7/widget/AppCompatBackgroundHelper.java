// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package android.support.v7.widget;

import android.content.res.ColorStateList;
import android.graphics.drawable.Drawable;
import android.support.v4.view.ViewCompat;
import android.util.AttributeSet;
import android.view.View;

// Referenced classes of package android.support.v7.widget:
//            AppCompatDrawableManager, TintInfo, TintTypedArray, DrawableUtils

class AppCompatBackgroundHelper {
    private static class BackgroundTintInfo extends TintInfo {

        public ColorStateList mOriginalTintList;

        void clear() {
            clear();
            mOriginalTintList = null;
        }

        BackgroundTintInfo() {
        }
    }


    private int mBackgroundResId;
    private BackgroundTintInfo mBackgroundTint;
    private final AppCompatDrawableManager mDrawableManager = AppCompatDrawableManager.get();
    private BackgroundTintInfo mInternalBackgroundTint;
    private BackgroundTintInfo mTmpInfo;
    private final View mView;

    AppCompatBackgroundHelper(View view) {
        mBackgroundResId = -1;
        mView = view;
    }

    private boolean applyFrameworkTintUsingColorFilter(Drawable drawable) {
        boolean flag = true;
        if (mTmpInfo == null)
            mTmpInfo = new BackgroundTintInfo();
        BackgroundTintInfo backgroundtintinfo = mTmpInfo;
        backgroundtintinfo.clear();
        Object obj = ViewCompat.getBackgroundTintList(mView);
        if (obj != null) {
            backgroundtintinfo.mHasTintList = true;
            backgroundtintinfo.mTintList = ((ColorStateList) (obj));
        }
        obj = ViewCompat.getBackgroundTintMode(mView);
        if (obj != null) {
            backgroundtintinfo.mHasTintMode = true;
            backgroundtintinfo.mTintMode = ((android.graphics.PorterDuff.Mode) (obj));
        }
        if (((TintInfo) (backgroundtintinfo)).mHasTintList || ((TintInfo) (backgroundtintinfo)).mHasTintMode)
            AppCompatDrawableManager.tintDrawable(drawable, backgroundtintinfo, mView.getDrawableState());
        else
            flag = false;
        return flag;
    }

    private boolean updateBackgroundTint() {
        boolean flag = true;
        if (mBackgroundTint == null || !mBackgroundTint.mHasTintList) goto _L2; else goto _L1
_L1:
        if (mBackgroundResId < 0) goto _L4; else goto _L3
_L3:
        ColorStateList colorstatelist = mDrawableManager.getTintList(mView.getContext(), mBackgroundResId, mBackgroundTint.mOriginalTintList);
        if (colorstatelist == null) goto _L4; else goto _L5
_L5:
        mBackgroundTint.mTintList = colorstatelist;
_L7:
        return flag;
_L4:
        if (mBackgroundTint.mTintList != mBackgroundTint.mOriginalTintList) {
            mBackgroundTint.mTintList = mBackgroundTint.mOriginalTintList;
            continue; /* Loop/switch isn't completed */
        }
_L2:
        flag = false;
        if (true) goto _L7; else goto _L6
_L6:
    }

    void applySupportBackgroundTint() {
        Drawable drawable = mView.getBackground();
        if (drawable != null && (android.os.Build.VERSION.SDK_INT != 21 || !applyFrameworkTintUsingColorFilter(drawable))) goto _L2; else goto _L1
_L1:
        return;
_L2:
        if (mBackgroundTint != null)
            AppCompatDrawableManager.tintDrawable(drawable, mBackgroundTint, mView.getDrawableState());
        else
        if (mInternalBackgroundTint != null)
            AppCompatDrawableManager.tintDrawable(drawable, mInternalBackgroundTint, mView.getDrawableState());
        if (true) goto _L1; else goto _L3
_L3:
    }

    ColorStateList getSupportBackgroundTintList() {
        ColorStateList colorstatelist;
        if (mBackgroundTint != null)
            colorstatelist = mBackgroundTint.mTintList;
        else
            colorstatelist = null;
        return colorstatelist;
    }

    android.graphics.PorterDuff.Mode getSupportBackgroundTintMode() {
        android.graphics.PorterDuff.Mode mode;
        if (mBackgroundTint != null)
            mode = mBackgroundTint.mTintMode;
        else
            mode = null;
        return mode;
    }

    void loadFromAttributes(AttributeSet attributeset, int i) {
        attributeset = TintTypedArray.obtainStyledAttributes(mView.getContext(), attributeset, android.support.v7.appcompat.R.styleable.ViewBackgroundHelper, i, 0);
        ColorStateList colorstatelist;
        if (!attributeset.hasValue(android.support.v7.appcompat.R.styleable.ViewBackgroundHelper_android_background))
            break MISSING_BLOCK_LABEL_67;
        mBackgroundResId = attributeset.getResourceId(android.support.v7.appcompat.R.styleable.ViewBackgroundHelper_android_background, -1);
        colorstatelist = mDrawableManager.getTintList(mView.getContext(), mBackgroundResId);
        if (colorstatelist == null)
            break MISSING_BLOCK_LABEL_67;
        setInternalBackgroundTint(colorstatelist);
        if (attributeset.hasValue(android.support.v7.appcompat.R.styleable.ViewBackgroundHelper_backgroundTint))
            ViewCompat.setBackgroundTintList(mView, attributeset.getColorStateList(android.support.v7.appcompat.R.styleable.ViewBackgroundHelper_backgroundTint));
        if (attributeset.hasValue(android.support.v7.appcompat.R.styleable.ViewBackgroundHelper_backgroundTintMode))
            ViewCompat.setBackgroundTintMode(mView, DrawableUtils.parseTintMode(attributeset.getInt(android.support.v7.appcompat.R.styleable.ViewBackgroundHelper_backgroundTintMode, -1), null));
        attributeset.recycle();
        return;
        Exception exception;
        exception;
        attributeset.recycle();
        throw exception;
    }

    void onSetBackgroundDrawable(Drawable drawable) {
        mBackgroundResId = -1;
        setInternalBackgroundTint(null);
        if (updateBackgroundTint())
            applySupportBackgroundTint();
    }

    void onSetBackgroundResource(int i) {
        mBackgroundResId = i;
        ColorStateList colorstatelist;
        if (mDrawableManager != null)
            colorstatelist = mDrawableManager.getTintList(mView.getContext(), i);
        else
            colorstatelist = null;
        setInternalBackgroundTint(colorstatelist);
        if (updateBackgroundTint())
            applySupportBackgroundTint();
    }

    void setInternalBackgroundTint(ColorStateList colorstatelist) {
        if (colorstatelist != null) {
            if (mInternalBackgroundTint == null)
                mInternalBackgroundTint = new BackgroundTintInfo();
            mInternalBackgroundTint.mTintList = colorstatelist;
            mInternalBackgroundTint.mHasTintList = true;
        } else {
            mInternalBackgroundTint = null;
        }
        applySupportBackgroundTint();
    }

    void setSupportBackgroundTintList(ColorStateList colorstatelist) {
        if (mBackgroundTint == null)
            mBackgroundTint = new BackgroundTintInfo();
        mBackgroundTint.mOriginalTintList = colorstatelist;
        mBackgroundTint.mTintList = null;
        mBackgroundTint.mHasTintList = true;
        if (updateBackgroundTint())
            applySupportBackgroundTint();
    }

    void setSupportBackgroundTintMode(android.graphics.PorterDuff.Mode mode) {
        if (mBackgroundTint == null)
            mBackgroundTint = new BackgroundTintInfo();
        mBackgroundTint.mTintMode = mode;
        mBackgroundTint.mHasTintMode = true;
        applySupportBackgroundTint();
    }
}
