// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package android.support.v4.view.accessibility;

import android.view.accessibility.AccessibilityManager;

class AccessibilityManagerCompatKitKat {
    static interface TouchExplorationStateChangeListenerBridge {

        public abstract void onTouchExplorationStateChanged(boolean flag);
    }

    public static class TouchExplorationStateChangeListenerWrapper
        implements android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener {

        final Object mListener;
        final TouchExplorationStateChangeListenerBridge mListenerBridge;

        public boolean equals(Object obj) {
            boolean flag = true;
            if (this != obj) goto _L2; else goto _L1
_L1:
            return flag;
_L2:
            if (obj == null || getClass() != obj.getClass()) {
                flag = false;
            } else {
                obj = (TouchExplorationStateChangeListenerWrapper)obj;
                if (mListener == null) {
                    if (((TouchExplorationStateChangeListenerWrapper) (obj)).mListener != null)
                        flag = false;
                } else {
                    flag = mListener.equals(((TouchExplorationStateChangeListenerWrapper) (obj)).mListener);
                }
            }
            if (true) goto _L1; else goto _L3
_L3:
        }

        public int hashCode() {
            int i;
            if (mListener == null)
                i = 0;
            else
                i = mListener.hashCode();
            return i;
        }

        public void onTouchExplorationStateChanged(boolean flag) {
            mListenerBridge.onTouchExplorationStateChanged(flag);
        }

        public TouchExplorationStateChangeListenerWrapper(Object obj, TouchExplorationStateChangeListenerBridge touchexplorationstatechangelistenerbridge) {
            mListener = obj;
            mListenerBridge = touchexplorationstatechangelistenerbridge;
        }
    }


    AccessibilityManagerCompatKitKat() {
    }

    public static boolean addTouchExplorationStateChangeListener(AccessibilityManager accessibilitymanager, Object obj) {
        return accessibilitymanager.addTouchExplorationStateChangeListener((android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)obj);
    }

    public static Object newTouchExplorationStateChangeListener(TouchExplorationStateChangeListenerBridge touchexplorationstatechangelistenerbridge) {
        return new android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener(touchexplorationstatechangelistenerbridge) {

            final TouchExplorationStateChangeListenerBridge val$bridge;

            public void onTouchExplorationStateChanged(boolean flag) {
                bridge.onTouchExplorationStateChanged(flag);
            }

             {
                bridge = touchexplorationstatechangelistenerbridge;
                super();
            }
        }
;
    }

    public static boolean removeTouchExplorationStateChangeListener(AccessibilityManager accessibilitymanager, Object obj) {
        return accessibilitymanager.removeTouchExplorationStateChangeListener((android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)obj);
    }
}
