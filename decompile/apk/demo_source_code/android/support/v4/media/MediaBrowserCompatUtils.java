// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package android.support.v4.media;

import android.os.Bundle;

public class MediaBrowserCompatUtils {

    public MediaBrowserCompatUtils() {
    }

    public static boolean areSameOptions(Bundle bundle, Bundle bundle1) {
        boolean flag = true;
        if (bundle != bundle1) goto _L2; else goto _L1
_L1:
        return flag;
_L2:
        if (bundle == null) {
            if (bundle1.getInt("android.media.browse.extra.PAGE", -1) != -1 || bundle1.getInt("android.media.browse.extra.PAGE_SIZE", -1) != -1)
                flag = false;
        } else
        if (bundle1 == null) {
            if (bundle.getInt("android.media.browse.extra.PAGE", -1) != -1 || bundle.getInt("android.media.browse.extra.PAGE_SIZE", -1) != -1)
                flag = false;
        } else
        if (bundle.getInt("android.media.browse.extra.PAGE", -1) != bundle1.getInt("android.media.browse.extra.PAGE", -1) || bundle.getInt("android.media.browse.extra.PAGE_SIZE", -1) != bundle1.getInt("android.media.browse.extra.PAGE_SIZE", -1))
            flag = false;
        if (true) goto _L1; else goto _L3
_L3:
    }

    public static boolean hasDuplicatedItems(Bundle bundle, Bundle bundle1) {
        int j;
        int k;
        int l;
        boolean flag;
        int j1 = 0x7fffffff;
        flag = true;
        int i;
        if (bundle == null)
            k = -1;
        else
            k = bundle.getInt("android.media.browse.extra.PAGE", -1);
        if (bundle1 == null)
            i = -1;
        else
            i = bundle1.getInt("android.media.browse.extra.PAGE", -1);
        if (bundle == null)
            l = -1;
        else
            l = bundle.getInt("android.media.browse.extra.PAGE_SIZE", -1);
        if (bundle1 == null)
            j = -1;
        else
            j = bundle1.getInt("android.media.browse.extra.PAGE_SIZE", -1);
        if (k == -1 || l == -1) {
            k = 0x7fffffff;
            l = 0;
        } else {
            k *= l;
            int i1 = k;
            k = (k + l) - 1;
            l = i1;
        }
        if (i == -1 || j == -1) {
            i = 0;
            j = j1;
        } else {
            i = j * i;
            j = (i + j) - 1;
        }
        break MISSING_BLOCK_LABEL_67;
        if ((l > i || i > k) && (l > j || j > k))
            flag = false;
        return flag;
    }
}
