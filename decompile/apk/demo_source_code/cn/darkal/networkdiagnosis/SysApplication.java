// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package cn.darkal.networkdiagnosis;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Environment;
import android.preference.PreferenceManager;
import android.support.multidex.MultiDexApplication;
import android.util.Log;
import com.tencent.bugly.Bugly;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.*;
import net.gotev.uploadservice.UploadService;
import net.lightbody.bmp.BrowserMobProxy;
import net.lightbody.bmp.BrowserMobProxyServer;
import net.lightbody.bmp.proxy.CaptureType;
import net.lightbody.bmp.proxy.dns.AdvancedHostResolver;
import org.apache.commons.io.b;

public class SysApplication extends MultiDexApplication {

    public static Boolean a = Boolean.valueOf(false);
    public static int b = 8888;
    public BrowserMobProxy c;

    public SysApplication() {
    }

    public void a() {
        try {
            File file = JVM INSTR new #34  <Class File>;
            StringBuilder stringbuilder = JVM INSTR new #36  <Class StringBuilder>;
            stringbuilder.StringBuilder();
            file.File(stringbuilder.append(Environment.getExternalStorageDirectory()).append("/har").toString());
            org.apache.commons.io.b.g(file);
        }
        catch (IOException ioexception) { }
        (new Thread(new Runnable() {

            final SysApplication a;

            public void run() {
                a.b();
                Intent intent = new Intent();
                intent.setAction("proxyfinished");
                a.sendBroadcast(intent);
            }

             {
                a = SysApplication.this;
                super();
            }
        }
)).start();
    }

    public void b() {
        String s;
        SharedPreferences sharedpreferences;
        try {
            BrowserMobProxyServer browsermobproxyserver = JVM INSTR new #80  <Class BrowserMobProxyServer>;
            browsermobproxyserver.BrowserMobProxyServer();
            c = browsermobproxyserver;
            c.setTrustAllServers(true);
            c.start(8888);
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            int j = (new Random()).nextInt(1000) + 8000;
            b = j;
            c = new BrowserMobProxyServer();
            c.setTrustAllServers(true);
            c.start(j);
        }
        Log.e("~~~", (new StringBuilder()).append(c.getPort()).append("").toString());
        c.enableHarCaptureTypes(new CaptureType[] {
            CaptureType.REQUEST_HEADERS, CaptureType.REQUEST_COOKIES, CaptureType.REQUEST_CONTENT, CaptureType.RESPONSE_HEADERS, CaptureType.REQUEST_COOKIES, CaptureType.RESPONSE_CONTENT
        });
        s = (new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.CHINA)).format(new Date(System.currentTimeMillis()));
        c.newHar(s);
        sharedpreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
        if (sharedpreferences.getString("system_host", "").length() > 0) {
            Object obj = c.getHostNameResolver();
            String as[] = sharedpreferences.getString("system_host", "").split("\\n");
            int k = as.length;
            for (int i = 0; i < k; i++) {
                String s1 = as[i];
                if (s1.split(" ").length == 2) {
                    ((AdvancedHostResolver) (obj)).remapHost(s1.split(" ")[1], s1.split(" ")[0]);
                    Log.e("~~~~remapHost ", (new StringBuilder()).append(s1.split(" ")[1]).append(" ").append(s1.split(" ")[0]).toString());
                }
            }

            c.setHostNameResolver(((AdvancedHostResolver) (obj)));
        }
        a = Boolean.valueOf(true);
    }

    public void onCreate() {
        super.onCreate();
        a();
        UploadService.d = "cn.darkal.networkdiagnosis";
        (new com.tencent.bugly.crashreport.CrashReport.UserStrategy(getApplicationContext())).setAppChannel("GitHub");
        Bugly.init(getApplicationContext(), "db9f598223", true);
    }

    public void onTerminate() {
        super.onTerminate();
        (new Thread(new Runnable() {

            final SysApplication a;

            public void run() {
                Log.e("~~~", "onTerminate");
                a.c.stop();
            }

             {
                a = SysApplication.this;
                super();
            }
        }
)).start();
    }

}
