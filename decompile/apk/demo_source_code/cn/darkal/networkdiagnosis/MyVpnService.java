// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package cn.darkal.networkdiagnosis;

import android.content.Intent;
import android.net.VpnService;
import android.os.Handler;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import android.widget.Toast;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.nio.ByteBuffer;

public class MyVpnService extends VpnService {

    private Handler a;

    public MyVpnService() {
        a = new Handler();
    }

    private void a() {
        Object obj;
        Log.i("~~~", "VpnService: try to setup VPN.");
        obj = new android.net.VpnService.Builder(this);
        ((android.net.VpnService.Builder) (obj)).setSession("firewall");
        ((android.net.VpnService.Builder) (obj)).addAddress("10.0.8.1", 32);
        ((android.net.VpnService.Builder) (obj)).addRoute("0.0.0.0", 0);
        Object obj1 = ((android.net.VpnService.Builder) (obj)).establish();
        if (obj1 == null) goto _L2; else goto _L1
_L1:
        FileInputStream fileinputstream;
        Log.i("~~~", "VpnService: call ProxyWorker.start()");
        fileinputstream = JVM INSTR new #64  <Class FileInputStream>;
        fileinputstream.FileInputStream(((ParcelFileDescriptor) (obj1)).getFileDescriptor());
        obj = JVM INSTR new #75  <Class FileOutputStream>;
        ((FileOutputStream) (obj)).FileOutputStream(((ParcelFileDescriptor) (obj1)).getFileDescriptor());
        obj1 = ByteBuffer.allocate(32767);
        int j = 0;
_L10:
        int k = fileinputstream.read(((ByteBuffer) (obj1)).array());
        if (k <= 0)
            break MISSING_BLOCK_LABEL_354;
        ((ByteBuffer) (obj1)).limit(k);
        ((ByteBuffer) (obj1)).clear();
        int i;
        if (j < 1) {
            i = 0;
            j = 1;
        } else {
            i = 0;
        }
_L12:
        if (k <= 0) goto _L4; else goto _L3
_L3:
        if (((ByteBuffer) (obj1)).get(0) != 0)
            ((FileOutputStream) (obj)).write(((ByteBuffer) (obj1)).array(), 0, k);
        ((ByteBuffer) (obj1)).clear();
        if (j > 0) {
            j = 0;
            i = 0;
        } else {
            i = j;
            j = 0;
        }
_L11:
        k = i;
        if (j == 0) goto _L6; else goto _L5
_L5:
        Thread.sleep(100L);
        if (i > 0)
            j = 100;
        else
            j = -100;
        j = i + j;
        i = j;
        if (j >= -15000)
            break MISSING_BLOCK_LABEL_258;
        ((ByteBuffer) (obj1)).put((byte)0).limit(1);
        i = 0;
_L8:
        if (i >= 3)
            break; /* Loop/switch isn't completed */
        ((ByteBuffer) (obj1)).position(0);
        i++;
        if (true) goto _L8; else goto _L7
_L7:
        ((ByteBuffer) (obj1)).clear();
        i = 1;
        k = i;
        if (i <= 20000) goto _L6; else goto _L9
_L9:
        try {
            IllegalStateException illegalstateexception = JVM INSTR new #22  <Class IllegalStateException>;
            illegalstateexception.IllegalStateException("Timed out");
            throw illegalstateexception;
        }
        catch (IllegalStateException illegalstateexception1) {
            Log.i("~~~", "VpnService: builder.establish() failed.");
            if (a != null)
                a.post(new Runnable(illegalstateexception1) {

                    final IllegalStateException a;
                    final MyVpnService b;

                    public void run() {
                        Toast.makeText(b, (new StringBuilder()).append("Cannot establish VPN (").append(a.toString()).append(")").toString(), 1).show();
                    }

             {
                b = MyVpnService.this;
                a = illegalstateexception;
                super();
            }
                }
);
        }
        catch (Exception exception) {
            exception.printStackTrace();
        }
_L2:
        return;
_L6:
        j = k;
          goto _L10
_L4:
        int l = j;
        j = i;
        i = l;
          goto _L11
        i = 1;
          goto _L12
    }

    static void a(MyVpnService myvpnservice) {
        myvpnservice.a();
    }

    private void b() {
        Log.i("~~~", "VpnService: call ProxyWorker.stop()");
    }

    public void onDestroy() {
        super.onDestroy();
    }

    public void onRevoke() {
        b();
        super.onRevoke();
    }

    public int onStartCommand(Intent intent, int i, int j) {
        (new Thread(new Runnable() {

            final MyVpnService a;

            public void run() {
                MyVpnService.a(a);
            }

             {
                a = MyVpnService.this;
                super();
            }
        }
)).start();
        return super.onStartCommand(intent, i, j);
    }
}
