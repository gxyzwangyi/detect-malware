// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package cn.darkal.networkdiagnosis.d.a;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.telephony.TelephonyManager;
import java.io.*;
import java.net.*;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;

public class a {

    private static volatile a a = null;
    private String b;
    private Context c;

    private a(Context context) {
        b = "wlan0";
        c = context;
    }

    public static int a(int i) {
        i;
        JVM INSTR tableswitch 1 18: default 88
    //                   1 92
    //                   2 92
    //                   3 97
    //                   4 92
    //                   5 97
    //                   6 97
    //                   7 92
    //                   8 97
    //                   9 97
    //                   10 97
    //                   11 92
    //                   12 97
    //                   13 102
    //                   14 97
    //                   15 97
    //                   16 88
    //                   17 97
    //                   18 97;
           goto _L1 _L2 _L2 _L3 _L2 _L3 _L3 _L2 _L3 _L3 _L3 _L2 _L3 _L4 _L3 _L3 _L1 _L3 _L3
_L1:
        i = 0;
_L6:
        return i;
_L2:
        i = 1;
        continue; /* Loop/switch isn't completed */
_L3:
        i = 2;
        continue; /* Loop/switch isn't completed */
_L4:
        i = 3;
        if (true) goto _L6; else goto _L5
_L5:
    }

    public static a a(Context context) {
        if (a != null) goto _L2; else goto _L1
_L1:
        cn/darkal/networkdiagnosis/d/a/a;
        JVM INSTR monitorenter ;
        if (a == null) {
            a a1 = JVM INSTR new #2   <Class a>;
            a1.a(context);
            a = a1;
        }
        cn/darkal/networkdiagnosis/d/a/a;
        JVM INSTR monitorexit ;
_L2:
        return a;
        context;
        cn/darkal/networkdiagnosis/d/a/a;
        JVM INSTR monitorexit ;
        throw context;
    }

    private String b() {
        Object obj4 = null;
        Object obj = Runtime.getRuntime().exec("getprop net.dns1");
        Object obj3;
        obj3 = JVM INSTR new #48  <Class BufferedReader>;
        InputStreamReader inputstreamreader = JVM INSTR new #50  <Class InputStreamReader>;
        inputstreamreader.InputStreamReader(((Process) (obj)).getInputStream());
        ((BufferedReader) (obj3)).BufferedReader(inputstreamreader);
        Object obj1 = ((BufferedReader) (obj3)).readLine();
        if (obj3 != null)
            try {
                ((BufferedReader) (obj3)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj3) {
                ((Exception) (obj3)).printStackTrace();
            }
        obj3 = obj1;
        if (obj != null) {
            ((Process) (obj)).destroy();
            obj3 = obj1;
        }
_L2:
        return ((String) (obj3));
        obj;
        obj1 = null;
        obj = null;
_L5:
        if (obj1 != null)
            try {
                ((BufferedReader) (obj1)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj1) {
                ((Exception) (obj1)).printStackTrace();
            }
        obj3 = obj4;
        if (obj != null) {
            ((Process) (obj)).destroy();
            obj3 = obj4;
        }
        if (true) goto _L2; else goto _L1
_L1:
        Object obj2;
        obj2;
        obj = null;
        obj3 = null;
_L4:
        if (obj3 != null)
            try {
                ((BufferedReader) (obj3)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj3) {
                ((Exception) (obj3)).printStackTrace();
            }
        if (obj != null)
            ((Process) (obj)).destroy();
        throw obj2;
        obj2;
        obj3 = null;
        continue; /* Loop/switch isn't completed */
        obj2;
        if (true) goto _L4; else goto _L3
_L3:
        obj2;
        obj2 = null;
          goto _L5
        obj2;
        obj2 = obj3;
          goto _L5
    }

    public String a() {
        String s;
        NetworkInfo networkinfo;
        StringBuilder stringbuilder;
        String s1 = ((TelephonyManager)c.getSystemService("phone")).getSimOperator();
        Object obj;
        if (s1.startsWith("46000") || s1.startsWith("46002"))
            s = "\u4E2D\u56FD\u79FB\u52A8";
        else
        if (s1.equals("46001"))
            s = "\u4E2D\u56FD\u8054\u901A";
        else
        if (s1.equals("46003"))
            s = "\u4E2D\u56FD\u7535\u4FE1";
        else
            s = "\u672A\u77E5";
        obj = (ConnectivityManager)c.getSystemService("connectivity");
        networkinfo = ((ConnectivityManager) (obj)).getNetworkInfo(0);
        obj = ((ConnectivityManager) (obj)).getNetworkInfo(1);
        stringbuilder = new StringBuilder();
        stringbuilder.append("MNC Code Info:\n");
        stringbuilder.append((new StringBuilder()).append("IMSI=").append(s1).append(" <").append(s).append(">\n").toString());
        stringbuilder.append("\nMobile Network Info:\n");
        if (networkinfo == null || networkinfo.getExtraInfo() == null) goto _L2; else goto _L1
_L1:
        stringbuilder.append("\u8FD0\u8425\u5546\u7C7B\u578B\uFF1A");
        if (networkinfo.getExtraInfo().equals("cmwap") || networkinfo.getExtraInfo().equals("cmnet"))
            stringbuilder.append("\u79FB\u52A8");
        else
        if (networkinfo.getExtraInfo().equals("uniwap") || networkinfo.getExtraInfo().equals("uninet") || networkinfo.getExtraInfo().equals("3gwap") || networkinfo.getExtraInfo().equals("3gnet"))
            stringbuilder.append("\u8054\u901A");
        else
        if (networkinfo.getExtraInfo().equals("ctwap") || networkinfo.getExtraInfo().equals("ctnet") || networkinfo.getExtraInfo().equals("ctlte"))
            stringbuilder.append("\u7535\u4FE1");
        else
            stringbuilder.append(s);
        if (networkinfo.getExtraInfo().contains("wap"))
            stringbuilder.append("--Wap");
        else
        if (networkinfo.getExtraInfo().contains("net"))
            stringbuilder.append("--Net");
        else
            stringbuilder.append("--Unkown");
        stringbuilder.append("\n\u7F51\u7EDC\u7C7B\u578B\uFF1A");
        a(networkinfo.getSubtype());
        JVM INSTR tableswitch 1 3: default 244
    //                   1 822
    //                   2 833
    //                   3 844;
           goto _L3 _L4 _L5 _L6
_L3:
        stringbuilder.append("\u672A\u77E5\n");
_L2:
        if (networkinfo != null) {
            stringbuilder.append((new StringBuilder()).append("ExtraInfo=").append(networkinfo.getExtraInfo()).append("\n").toString());
            stringbuilder.append((new StringBuilder()).append("SubtypeName=").append(networkinfo.getSubtypeName()).append("  SubType = ").append(networkinfo.getSubtype()).append("\n").toString());
            stringbuilder.append((new StringBuilder()).append("TypeName=").append(networkinfo.getTypeName()).append("  Type = ").append(networkinfo.getType()).append("\n").toString());
        }
        stringbuilder.append("\nWIFI Network Info:\n");
        stringbuilder.append((new StringBuilder()).append("ExtraInfo=").append(((NetworkInfo) (obj)).getExtraInfo()).append("\n").toString());
        stringbuilder.append((new StringBuilder()).append("SubtypeName=").append(((NetworkInfo) (obj)).getSubtypeName()).append("  SubType = ").append(((NetworkInfo) (obj)).getSubtype()).append("\n").toString());
        stringbuilder.append((new StringBuilder()).append("TypeName=").append(((NetworkInfo) (obj)).getTypeName()).append("  Type = ").append(((NetworkInfo) (obj)).getType()).append("\n").toString());
        stringbuilder.append("\nIP Info:\n");
        stringbuilder.append((new StringBuilder()).append("IPv4 Address=").append(a(Boolean.valueOf(true))).append("\n").toString());
        stringbuilder.append((new StringBuilder()).append("IPv6 Address=").append(a(Boolean.valueOf(false))).append("\n").toString());
        stringbuilder.append((new StringBuilder()).append("DNS Address=").append(b()).append("\n").toString());
        return stringbuilder.toString();
_L4:
        stringbuilder.append("2G\n");
        continue; /* Loop/switch isn't completed */
_L5:
        stringbuilder.append("3G\n");
        continue; /* Loop/switch isn't completed */
_L6:
        stringbuilder.append("4G\n");
        if (true) goto _L2; else goto _L7
_L7:
    }

    public String a(Boolean boolean1) {
        Enumeration enumeration1 = NetworkInterface.getNetworkInterfaces();
_L2:
        Enumeration enumeration;
        if (!enumeration1.hasMoreElements())
            break MISSING_BLOCK_LABEL_105;
        enumeration = ((NetworkInterface)enumeration1.nextElement()).getInetAddresses();
_L4:
        if (!enumeration.hasMoreElements()) goto _L2; else goto _L1
_L1:
        InetAddress inetaddress;
        inetaddress = (InetAddress)enumeration.nextElement();
        if (!boolean1.booleanValue())
            continue; /* Loop/switch isn't completed */
        if (inetaddress.isLoopbackAddress() || !InetAddressUtils.isIPv4Address(inetaddress.getHostAddress())) goto _L4; else goto _L3
_L3:
        boolean1 = inetaddress.getHostAddress();
_L6:
        return boolean1;
        if (inetaddress.isLoopbackAddress() || !InetAddressUtils.isIPv6Address(inetaddress.getHostAddress())) goto _L4; else goto _L5
_L5:
        boolean1 = inetaddress.getHostAddress();
          goto _L6
        boolean1;
        boolean1 = "";
          goto _L6
    }

    public String a(String s) {
        int i = 0;
        Object obj1 = NetworkInterface.getByName(s);
        if (obj1 != null) goto _L2; else goto _L1
_L1:
        obj1 = NetworkInterface.getByName("rmnet0");
        StringBuilder stringbuilder = JVM INSTR new #109 <Class StringBuilder>;
        stringbuilder.StringBuilder();
        s = stringbuilder.append("\u6CA1\u6709 ").append(s).append(" \u7F51\u5361").toString();
_L10:
        Object obj = s;
        if (obj1 == null) goto _L4; else goto _L3
_L3:
        byte abyte0[] = ((NetworkInterface) (obj1)).getHardwareAddress();
        if (abyte0 != null) goto _L6; else goto _L5
_L5:
        obj = s;
_L4:
        return ((String) (obj));
_L6:
        StringBuffer stringbuffer;
        stringbuffer = JVM INSTR new #306 <Class StringBuffer>;
        stringbuffer.StringBuffer();
_L7:
        if (i >= abyte0.length)
            break MISSING_BLOCK_LABEL_162;
        if (i == 0)
            break MISSING_BLOCK_LABEL_102;
        stringbuffer.append(':');
        obj1 = Integer.toHexString(abyte0[i] & 0xff);
        obj = obj1;
        if (((String) (obj1)).length() == 1) {
            obj = JVM INSTR new #109 <Class StringBuilder>;
            ((StringBuilder) (obj)).StringBuilder();
            obj = ((StringBuilder) (obj)).append(0).append(((String) (obj1))).toString();
        }
        stringbuffer.append(((String) (obj)));
        i++;
          goto _L7
        SocketException socketexception;
        try {
            obj = stringbuffer.toString().toUpperCase();
            continue; /* Loop/switch isn't completed */
        }
        // Misplaced declaration of an exception variable
        catch (SocketException socketexception) { }
        break MISSING_BLOCK_LABEL_179;
        socketexception;
        s = "";
        socketexception.printStackTrace();
        socketexception = s;
        if (true) goto _L4; else goto _L8
_L8:
_L2:
        s = "";
        if (true) goto _L10; else goto _L9
_L9:
    }

}
