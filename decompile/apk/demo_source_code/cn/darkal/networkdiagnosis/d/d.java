// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package cn.darkal.networkdiagnosis.d;

import android.content.Context;
import android.content.Intent;
import android.os.Parcelable;
import android.util.ArrayMap;
import android.util.Log;
import android.webkit.WebView;
import java.lang.reflect.*;
import java.util.*;
import org.apache.http.HttpHost;

public class d {

    private static Object a(Field field, Object obj) {
        boolean flag = field.isAccessible();
        field.setAccessible(true);
        obj = field.get(obj);
        field.setAccessible(flag);
        return obj;
    }

    private static boolean a(Context context, String s, int i) {
        System.setProperty("http.proxyHost", s);
        System.setProperty("http.proxyPort", (new StringBuilder()).append(i).append("").toString());
        System.setProperty("https.proxyHost", s);
        System.setProperty("https.proxyPort", (new StringBuilder()).append(i).append("").toString());
        try {
            context = context.getApplicationContext();
            s = Class.forName("android.app.Application").getDeclaredField("mLoadedApk");
            s.setAccessible(true);
            Object obj = s.get(context);
            s = Class.forName("android.app.LoadedApk").getDeclaredField("mReceivers");
            s.setAccessible(true);
            for (obj = ((ArrayMap)s.get(obj)).values().iterator(); ((Iterator) (obj)).hasNext();) {
                s = ((ArrayMap)((Iterator) (obj)).next()).keySet().iterator();
                while (s.hasNext())  {
                    Object obj1 = s.next();
                    Object obj2 = obj1.getClass();
                    if (((Class) (obj2)).getName().contains("ProxyChangeListener")) {
                        Method method = ((Class) (obj2)).getDeclaredMethod("onReceive", new Class[] {
                            android/content/Context, android/content/Intent
                        });
                        obj2 = JVM INSTR new #131 <Class Intent>;
                        ((Intent) (obj2)).Intent("android.intent.action.PROXY_CHANGE");
                        method.invoke(obj1, new Object[] {
                            context, obj2
                        });
                    }
                }
            }

        }
        // Misplaced declaration of an exception variable
        catch (Context context) {
            context.printStackTrace();
        }
        return false;
    }

    public static boolean a(WebView webview, String s, int i) {
        int j = android.os.Build.VERSION.SDK_INT;
        boolean flag;
        if (j < 14)
            flag = b(webview, s, i);
        else
        if (j < 16)
            flag = c(webview, s, i);
        else
        if (j < 19)
            flag = d(webview, s, i);
        else
        if (j < 21)
            flag = a(webview, s, i, "android.app.Application");
        else
        if (webview.getContext() != null && a(webview.getContext(), s, i))
            flag = true;
        else
            flag = false;
        return flag;
    }

    private static boolean a(WebView webview, String s, int i, String s1) {
        boolean flag;
        webview = webview.getContext().getApplicationContext();
        Object obj;
        Iterator iterator;
        Object obj1;
        Intent intent;
        Method method;
        if (s == null) {
            System.clearProperty("http.proxyHost");
            System.clearProperty("http.proxyPort");
            System.clearProperty("https.proxyHost");
            System.clearProperty("https.proxyPort");
        } else {
            System.setProperty("http.proxyHost", s);
            System.setProperty("http.proxyPort", (new StringBuilder()).append(i).append("").toString());
            System.setProperty("https.proxyHost", s);
            System.setProperty("https.proxyPort", (new StringBuilder()).append(i).append("").toString());
        }
        s1 = Class.forName(s1).getField("mLoadedApk");
        s1.setAccessible(true);
        s1 = ((String) (s1.get(webview)));
        obj = Class.forName("android.app.LoadedApk").getDeclaredField("mReceivers");
        ((Field) (obj)).setAccessible(true);
        for (obj = ((Map)((Field) (obj)).get(s1)).values().iterator(); ((Iterator) (obj)).hasNext();) {
            iterator = ((Map)((Iterator) (obj)).next()).keySet().iterator();
            while (iterator.hasNext())  {
                s1 = ((String) (iterator.next()));
                obj1 = s1.getClass();
                if (((Class) (obj1)).getName().contains("ProxyChangeListener")) {
                    method = ((Class) (obj1)).getDeclaredMethod("onReceive", new Class[] {
                        android/content/Context, android/content/Intent
                    });
                    intent = JVM INSTR new #131 <Class Intent>;
                    intent.Intent("android.intent.action.PROXY_CHANGE");
                    obj1 = Class.forName("android.net.ProxyProperties").getConstructor(new Class[] {
                        java/lang/String, Integer.TYPE, java/lang/String
                    });
                    ((Constructor) (obj1)).setAccessible(true);
                    intent.putExtra("proxy", (Parcelable)((Constructor) (obj1)).newInstance(new Object[] {
                        s, Integer.valueOf(i), null
                    }));
                    method.invoke(s1, new Object[] {
                        webview, intent
                    });
                }
            }
        }

          goto _L1
        webview;
        webview.printStackTrace();
_L4:
        flag = false;
_L2:
        return flag;
_L1:
        Log.d("ProxyUtils", "Setting proxy with >= 4.4 API successful!");
        flag = true;
          goto _L2
        webview;
        webview.printStackTrace();
        continue; /* Loop/switch isn't completed */
        webview;
        webview.printStackTrace();
        continue; /* Loop/switch isn't completed */
        webview;
        webview.printStackTrace();
        continue; /* Loop/switch isn't completed */
        webview;
        webview.printStackTrace();
        continue; /* Loop/switch isn't completed */
        webview;
        webview.printStackTrace();
        continue; /* Loop/switch isn't completed */
        webview;
        webview.printStackTrace();
        if (true) goto _L4; else goto _L3
_L3:
    }

    private static boolean b(WebView webview, String s, int i) {
        boolean flag;
        Object obj;
        if (s == null)
            s = null;
        else
            s = new HttpHost(s, i);
        Method method;
        try {
            obj = Class.forName("android.webkit.Network");
        }
        // Misplaced declaration of an exception variable
        catch (WebView webview) {
            Log.e("ProxyUtils", (new StringBuilder()).append("error getting network: ").append(webview).toString());
            flag = false;
            continue; /* Loop/switch isn't completed */
        }
        if (obj != null) goto _L2; else goto _L1
_L1:
        Log.e("ProxyUtils", "failed to get class for android.webkit.Network");
        flag = false;
_L6:
        return flag;
_L2:
        method = ((Class) (obj)).getMethod("getInstance", new Class[] {
            android/content/Context
        });
        if (method != null)
            break MISSING_BLOCK_LABEL_76;
        Log.e("ProxyUtils", "failed to get getInstance method");
        webview = ((WebView) (method.invoke(obj, new Object[] {
            webview.getContext()
        })));
        if (webview == null) {
            Log.e("ProxyUtils", "error getting network: network is null");
            flag = false;
            continue; /* Loop/switch isn't completed */
        }
        try {
            obj = a(((Class) (obj)).getDeclaredField("mRequestQueue"), webview);
        }
        // Misplaced declaration of an exception variable
        catch (WebView webview) {
            Log.e("ProxyUtils", "error getting field value");
            flag = false;
            continue; /* Loop/switch isn't completed */
        }
        if (obj == null) {
            Log.e("ProxyUtils", "Request queue is null");
            flag = false;
            continue; /* Loop/switch isn't completed */
        }
        try {
            webview = Class.forName("android.net.http.RequestQueue").getDeclaredField("mProxyHost");
        }
        // Misplaced declaration of an exception variable
        catch (WebView webview) {
            Log.e("ProxyUtils", "error getting proxy host field");
            flag = false;
            continue; /* Loop/switch isn't completed */
        }
        flag = webview.isAccessible();
        webview.setAccessible(true);
        webview.set(obj, s);
        webview.setAccessible(flag);
_L4:
        Log.d("ProxyUtils", "Setting proxy with <= 3.2 API successful!");
        flag = true;
        continue; /* Loop/switch isn't completed */
        s;
        Log.e("ProxyUtils", "error setting proxy host");
        webview.setAccessible(flag);
        if (true) goto _L4; else goto _L3
_L3:
        s;
        webview.setAccessible(flag);
        throw s;
        if (true) goto _L6; else goto _L5
_L5:
    }

    private static boolean c(WebView webview, String s, int i) {
        boolean flag = true;
        try {
            Method method = Class.forName("android.webkit.JWebCoreJavaBridge").getDeclaredMethod("updateProxy", new Class[] {
                Class.forName("android.net.ProxyProperties")
            });
            webview = ((WebView) (a(Class.forName("android.webkit.WebView").getDeclaredField("mWebViewCore"), webview)));
            webview = ((WebView) (a(Class.forName("android.webkit.WebViewCore").getDeclaredField("mBrowserFrame"), webview)));
            method.invoke(a(Class.forName("android.webkit.BrowserFrame").getDeclaredField("sJavaBridge"), webview), new Object[] {
                Class.forName("android.net.ProxyProperties").getConstructor(new Class[] {
                    java/lang/String, Integer.TYPE, java/lang/String
                }).newInstance(new Object[] {
                    s, Integer.valueOf(i), null
                })
            });
            Log.d("ProxyUtils", "Setting proxy with 4.0 API successful!");
        }
        // Misplaced declaration of an exception variable
        catch (WebView webview) {
            Log.e("ProxyUtils", (new StringBuilder()).append("failed to set HTTP proxy: ").append(webview).toString());
            flag = false;
        }
        return flag;
    }

    private static boolean d(WebView webview, String s, int i) {
        boolean flag = true;
        webview = ((WebView) (Class.forName("android.webkit.WebViewClassic").getDeclaredMethod("fromWebView", new Class[] {
            Class.forName("android.webkit.WebView")
        }).invoke(null, new Object[] {
            webview
        })));
        webview = ((WebView) (a(Class.forName("android.webkit.WebViewClassic").getDeclaredField("mWebViewCore"), webview)));
        webview = ((WebView) (a(Class.forName("android.webkit.WebViewCore").getDeclaredField("mBrowserFrame"), webview)));
        Object obj = a(Class.forName("android.webkit.BrowserFrame").getDeclaredField("sJavaBridge"), webview);
        webview = Class.forName("android.net.ProxyProperties").getConstructor(new Class[] {
            java/lang/String, Integer.TYPE, java/lang/String
        });
        Class.forName("android.webkit.JWebCoreJavaBridge").getDeclaredMethod("updateProxy", new Class[] {
            Class.forName("android.net.ProxyProperties")
        }).invoke(obj, new Object[] {
            webview.newInstance(new Object[] {
                s, Integer.valueOf(i), null
            })
        });
        Log.d("ProxyUtils", "Setting proxy with 4.1 - 4.3 API successful!");
_L2:
        return flag;
        webview;
        Log.e("ProxyUtils", (new StringBuilder()).append("Setting proxy with >= 4.1 API failed with error: ").append(webview.getMessage()).toString());
        flag = false;
        if (true) goto _L2; else goto _L1
_L1:
    }
}
