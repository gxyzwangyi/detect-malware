// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package cn.darkal.networkdiagnosis.Activity;

import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.os.Bundle;
import android.preference.ListPreference;
import android.preference.Preference;
import android.security.KeyChain;
import android.support.v7.app.ActionBar;
import android.view.MenuItem;
import android.widget.Toast;
import cn.darkal.networkdiagnosis.SysApplication;
import cn.darkal.networkdiagnosis.d.b;
import cn.darkal.networkdiagnosis.d.e;
import com.tencent.bugly.beta.Beta;
import java.io.InputStream;
import java.util.*;
import net.lightbody.bmp.BrowserMobProxy;
import net.lightbody.bmp.proxy.dns.AdvancedHostResolver;

// Referenced classes of package cn.darkal.networkdiagnosis.Activity:
//            AppCompatPreferenceActivity, MainActivity

public class SettingsActivity extends AppCompatPreferenceActivity
    implements android.preference.Preference.OnPreferenceChangeListener {

    ListPreference a;
    Preference b;

    public SettingsActivity() {
    }

    private static boolean a(Context context) {
        boolean flag;
        if ((context.getResources().getConfiguration().screenLayout & 0xf) >= 4)
            flag = true;
        else
            flag = false;
        return flag;
    }

    private void e() {
        ActionBar actionbar = a();
        if (actionbar != null)
            actionbar.setDisplayHomeAsUpEnabled(true);
    }

    public void b() {
        Toast.makeText(this, "\u5FC5\u987B\u5B89\u88C5\u8BC1\u4E66\u624D\u53EF\u5B9E\u73B0HTTPS\u6293\u5305", 1).show();
        Object obj = cn/darkal/networkdiagnosis/Activity/MainActivity.getResourceAsStream("/sslSupport/ca-certificate-rsa.cer");
        byte abyte0[] = new byte[((InputStream) (obj)).available()];
        ((InputStream) (obj)).read(abyte0);
        obj = KeyChain.createInstallIntent();
        ((Intent) (obj)).putExtra("CERT", abyte0);
        ((Intent) (obj)).putExtra("name", "NetworkDiagnosis CA Certificate");
        startActivityForResult(((Intent) (obj)), 3);
_L1:
        return;
        Exception exception;
        exception;
        exception.printStackTrace();
          goto _L1
    }

    public void c() {
        b();
    }

    public String d() {
        String s = "";
        AdvancedHostResolver advancedhostresolver = ((SysApplication)getApplication()).c.getHostNameResolver();
        for (Iterator iterator = advancedhostresolver.getHostRemappings().keySet().iterator(); iterator.hasNext();) {
            String s1 = (String)iterator.next();
            s = (new StringBuilder()).append(s).append(s1).append(" ").append((String)advancedhostresolver.getHostRemappings().get(s1)).append("\n").toString();
        }

        if (s.length() > 1)
            s = s.substring(0, s.length() - 1);
        else
            s = "\u65E0";
        return s;
    }

    public void onActivityResult(int i, int j, Intent intent) {
        if (i == 3)
            if (j == -1) {
                cn.darkal.networkdiagnosis.d.e.a(this, "isInstallCert", true);
                Toast.makeText(this, "\u5B89\u88C5\u6210\u529F", 1).show();
            } else {
                Toast.makeText(this, "\u5B89\u88C5\u5931\u8D25", 1).show();
            }
    }

    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        e();
        addPreferencesFromResource(0x7f060001);
        a = (ListPreference)findPreference("select_ua");
        a.setOnPreferenceChangeListener(this);
        a.setSummary(a.getEntry());
        findPreference("system_host").setOnPreferenceChangeListener(this);
        findPreference("install_cert").setOnPreferenceClickListener(new android.preference.Preference.OnPreferenceClickListener() {

            final SettingsActivity a;

            public boolean onPreferenceClick(Preference preference) {
                a.c();
                return false;
            }

             {
                a = SettingsActivity.this;
                super();
            }
        }
);
        findPreference("system_proxy").setOnPreferenceClickListener(new android.preference.Preference.OnPreferenceClickListener() {

            final SettingsActivity a;

            public boolean onPreferenceClick(Preference preference) {
                a.startActivity(new Intent("android.settings.WIFI_SETTINGS"));
                return false;
            }

             {
                a = SettingsActivity.this;
                super();
            }
        }
);
        findPreference("app_version").setSummary(cn.darkal.networkdiagnosis.d.b.a(this));
        findPreference("app_version").setOnPreferenceClickListener(new android.preference.Preference.OnPreferenceClickListener() {

            final SettingsActivity a;

            public boolean onPreferenceClick(Preference preference) {
                try {
                    Beta.checkUpgrade();
                }
                // Misplaced declaration of an exception variable
                catch (Preference preference) {
                    preference.printStackTrace();
                }
                return false;
            }

             {
                a = SettingsActivity.this;
                super();
            }
        }
);
        b = findPreference("app_host");
        b.setSummary(d());
    }

    public boolean onIsMultiPane() {
        return a(this);
    }

    public boolean onOptionsItemSelected(MenuItem menuitem) {
        boolean flag;
        if (menuitem.getItemId() == 0x102002c) {
            finish();
            flag = true;
        } else {
            flag = super.onOptionsItemSelected(menuitem);
        }
        return flag;
    }

    protected void onPause() {
        super.onPause();
    }

    public boolean onPreferenceChange(Preference preference, Object obj) {
        if (preference instanceof ListPreference) {
            ListPreference listpreference = (ListPreference)preference;
            listpreference.setSummary(listpreference.getEntries()[listpreference.findIndexOfValue((String)obj)]);
        }
        if (preference.getKey().equals("system_host")) {
            cn.darkal.networkdiagnosis.d.b.a(((SysApplication)getApplication()).c, obj.toString());
            b.setSummary(d());
        }
        return true;
    }
}
