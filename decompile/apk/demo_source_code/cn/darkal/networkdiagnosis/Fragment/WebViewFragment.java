// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package cn.darkal.networkdiagnosis.Fragment;

import android.content.*;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.support.design.widget.NavigationView;
import android.support.v4.app.FragmentActivity;
import android.support.v4.widget.SwipeRefreshLayout;
import android.text.Editable;
import android.util.Log;
import android.view.*;
import android.view.inputmethod.InputMethodManager;
import android.webkit.*;
import android.widget.*;
import butterknife.ButterKnife;
import cn.darkal.networkdiagnosis.Activity.MainActivity;
import cn.darkal.networkdiagnosis.SysApplication;
import cn.darkal.networkdiagnosis.d.*;
import java.io.File;

// Referenced classes of package cn.darkal.networkdiagnosis.Fragment:
//            BaseFragment

public class WebViewFragment extends BaseFragment {
    public class Receiver extends BroadcastReceiver {

        final WebViewFragment a;

        public void onReceive(Context context, Intent intent) {
            a.c();
            Log.i("~~~~", "Receiver initProxyWebView");
        }

        public Receiver() {
            a = WebViewFragment.this;
            super();
        }
    }

    private class a
        implements DownloadListener {

        final WebViewFragment a;

        public void onDownloadStart(String s, String s1, String s2, String s3, long l) {
            s = new Intent("android.intent.action.VIEW", Uri.parse(s));
            a.startActivity(s);
        }

        private a() {
            a = WebViewFragment.this;
            super();
        }

    }


    private static final WebViewFragment f = new WebViewFragment();
    Receiver b;
    public Boolean c;
    public String d;
    public String e;
    Button jumpButton;
    ProgressBar progressBar;
    SwipeRefreshLayout swipeRefreshLayout;
    EditText urlText;
    WebView webView;

    public WebViewFragment() {
        c = Boolean.valueOf(false);
        d = "Mozilla/5.0 (Linux; Android 5.0.2) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0";
        e = d;
    }

    public static WebViewFragment b() {
        return f;
    }

    public void a(String s) {
        if (!c.booleanValue()) {
            cn.darkal.networkdiagnosis.d.d.a(webView, "127.0.0.1", SysApplication.b);
            Log.e("~~~~", "initProxyWebView()");
            c = Boolean.valueOf(true);
        }
        if (webView != null) {
            String s1 = s;
            if (!s.startsWith("http://")) {
                s1 = s;
                if (!s.startsWith("https://"))
                    s1 = (new StringBuilder()).append("http://").append(s).toString();
            }
            urlText.setText(s1);
            webView.loadUrl(s1);
        }
    }

    public boolean a() {
        boolean flag;
        if (webView.canGoBack()) {
            webView.goBack();
            flag = true;
        } else {
            flag = false;
        }
        return flag;
    }

    public void c() {
        if (getActivity() != null && SysApplication.a.booleanValue() && !c.booleanValue())
            webView.post(new Runnable() {

                final WebViewFragment a;

                public void run() {
                    cn.darkal.networkdiagnosis.d.d.a(a.webView, "127.0.0.1", SysApplication.b);
                    Log.e("~~~~", "initProxyWebView()");
                    a.webView.loadUrl((new StringBuilder()).append(a.urlText.getText()).append("").toString());
                    a.c = Boolean.valueOf(true);
                }

             {
                a = WebViewFragment.this;
                super();
            }
            }
);
    }

    public void d() {
        byte byte0;
        String s;
        String s1;
        s = e;
        s1 = cn.darkal.networkdiagnosis.d.e.b(getContext(), "select_ua", "0");
        byte0 = -1;
        s1.hashCode();
        JVM INSTR tableswitch 48 50: default 48
    //                   48 113
    //                   49 127
    //                   50 141;
           goto _L1 _L2 _L3 _L4
_L1:
        byte0;
        JVM INSTR tableswitch 0 2: default 76
    //                   0 155
    //                   1 166
    //                   2 195;
           goto _L5 _L6 _L7 _L8
_L5:
        webView.getSettings().setUserAgentString(e);
        if (!s.equals(e) && webView != null)
            e();
        return;
_L2:
        if (s1.equals("0"))
            byte0 = 0;
          goto _L1
_L3:
        if (s1.equals("1"))
            byte0 = 1;
          goto _L1
_L4:
        if (s1.equals("2"))
            byte0 = 2;
          goto _L1
_L6:
        e = d;
          goto _L5
_L7:
        e = (new StringBuilder()).append(d).append(" MQQBrowser/6.2 TBS/036524 MicroMessenger/6.3.18.800 NetType/WIFI Language/zh_CN").toString();
          goto _L5
_L8:
        e = (new StringBuilder()).append(d).append(" MQQBrowser/6.2 TBS/036524 V1_AND_SQ_6.0.0_300_YYB_D QQ/6.0.0.2605 NetType/WIFI WebP/0.3.0 Pixel/1440").toString();
          goto _L5
    }

    public void e() {
        if (webView != null && webView.getUrl() != null)
            webView.reload();
    }

    public void onActivityCreated(Bundle bundle) {
        super.onActivityCreated(bundle);
        b = new Receiver();
        getActivity().registerReceiver(b, new IntentFilter("proxyfinished"));
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
    }

    public View onCreateView(LayoutInflater layoutinflater, ViewGroup viewgroup, Bundle bundle) {
        viewgroup = layoutinflater.inflate(0x7f040034, viewgroup, false);
        ButterKnife.bind(this, viewgroup);
        c = Boolean.valueOf(false);
        urlText.setText("http://h5.darkal.cn/har/guide/widget.basic.html");
        layoutinflater = webView.getSettings();
        layoutinflater.setJavaScriptEnabled(true);
        layoutinflater.setAllowFileAccess(true);
        layoutinflater.setDatabaseEnabled(true);
        layoutinflater.setDatabasePath(getActivity().getApplicationContext().getDir("database", 0).getPath());
        layoutinflater.setDomStorageEnabled(true);
        layoutinflater.setGeolocationEnabled(true);
        d = (new StringBuilder()).append(layoutinflater.getUserAgentString()).append(" jdhttpmonitor/").append(cn.darkal.networkdiagnosis.d.b.a(getContext())).toString();
        layoutinflater.setUserAgentString(e);
        if (android.os.Build.VERSION.SDK_INT >= 19)
            WebView.setWebContentsDebuggingEnabled(true);
        webView.setDownloadListener(new a());
        webView.setWebViewClient(new WebViewClient() {

            final WebViewFragment a;

            public void onPageFinished(WebView webview, String s) {
                super.onPageFinished(webview, s);
            }

            public void onPageStarted(WebView webview, String s, Bitmap bitmap) {
                super.onPageStarted(webview, s, bitmap);
                a.urlText.setText(s);
            }

            public boolean shouldOverrideUrlLoading(WebView webview, String s) {
                boolean flag;
                if (s.startsWith("jdhttpmonitor://webview")) {
                    webview = new Intent("android.intent.action.VIEW");
                    webview.setData(Uri.parse(s));
                    a.startActivity(webview);
                    flag = true;
                } else {
                    flag = false;
                }
                return flag;
            }

             {
                a = WebViewFragment.this;
                super();
            }
        }
);
        webView.setWebChromeClient(new WebChromeClient() {

            final WebViewFragment a;

            public boolean onConsoleMessage(ConsoleMessage consolemessage) {
                ((MainActivity)a.getActivity()).h.append(consolemessage.message()).append("\n").append("\n");
                return super.onConsoleMessage(consolemessage);
            }

            public void onProgressChanged(WebView webview, int i) {
                a.progressBar.setProgress(i);
                if (i == 100) {
                    a.progressBar.setVisibility(8);
                    a.swipeRefreshLayout.setRefreshing(false);
                } else {
                    a.progressBar.setVisibility(0);
                }
            }

             {
                a = WebViewFragment.this;
                super();
            }
        }
);
        jumpButton.setOnClickListener(new android.view.View.OnClickListener() {

            final WebViewFragment a;

            public void onClick(View view) {
                if (a.urlText.getText().length() > 0)
                    a.a((new StringBuilder()).append(a.urlText.getText()).append("").toString());
            }

             {
                a = WebViewFragment.this;
                super();
            }
        }
);
        urlText.setImeOptions(2);
        urlText.setOnEditorActionListener(new android.widget.TextView.OnEditorActionListener() {

            final WebViewFragment a;

            public boolean onEditorAction(TextView textview, int i, KeyEvent keyevent) {
                if ((i == 2 || i == 6 || keyevent != null && 66 == keyevent.getKeyCode() && keyevent.getAction() == 0) && a.urlText.getText().length() > 0) {
                    a.a((new StringBuilder()).append(textview.getText()).append("").toString());
                    keyevent = (InputMethodManager)a.getActivity().getSystemService("input_method");
                    if (keyevent != null)
                        keyevent.hideSoftInputFromWindow(textview.getWindowToken(), 0);
                }
                return false;
            }

             {
                a = WebViewFragment.this;
                super();
            }
        }
);
        swipeRefreshLayout.setColorSchemeResources(new int[] {
            0x7f0e0013, 0x7f0e0012
        });
        swipeRefreshLayout.setOnRefreshListener(new android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener() {

            final WebViewFragment a;

            public void onRefresh() {
                a.webView.loadUrl(a.webView.getUrl());
            }

             {
                a = WebViewFragment.this;
                super();
            }
        }
);
        c();
        return viewgroup;
    }

    public void onDestroyView() {
        super.onDestroyView();
        getActivity().unregisterReceiver(b);
    }

    public void onResume() {
        super.onResume();
        d();
    }

    public void onSaveInstanceState(Bundle bundle) {
        super.onSaveInstanceState(bundle);
    }

    public void setUserVisibleHint(boolean flag) {
        super.setUserVisibleHint(flag);
        if (flag)
            ((MainActivity)getActivity()).navigationView.getMenu().getItem(0).setChecked(true);
    }

}
