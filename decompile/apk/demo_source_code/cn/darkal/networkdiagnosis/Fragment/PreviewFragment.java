// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package cn.darkal.networkdiagnosis.Fragment;

import android.content.Intent;
import android.content.res.Resources;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v7.widget.*;
import android.view.*;
import android.widget.*;
import butterknife.ButterKnife;
import cn.darkal.networkdiagnosis.Activity.HarDetailActivity;
import cn.darkal.networkdiagnosis.Activity.MainActivity;
import cn.darkal.networkdiagnosis.SysApplication;
import cn.darkal.networkdiagnosis.View.RecycleViewDivider;
import java.util.ArrayList;
import java.util.List;
import net.lightbody.bmp.BrowserMobProxy;
import net.lightbody.bmp.core.har.*;

// Referenced classes of package cn.darkal.networkdiagnosis.Fragment:
//            BaseFragment

public class PreviewFragment extends BaseFragment {
    private class PreviewAdapter extends android.support.v7.widget.RecyclerView.Adapter
        implements Filterable {

        final PreviewFragment a;

        public MyViewHolder a(ViewGroup viewgroup, int i) {
            return new MyViewHolder(this, LayoutInflater.from(a.getContext()).inflate(0x7f040038, viewgroup, false));
        }

        public void a(MyViewHolder myviewholder, int i) {
            HarEntry harentry = (HarEntry)a.c.get(i);
            myviewholder.c.setOnClickListener(a. new a(harentry));
            myviewholder.a.setText(harentry.getRequest().getUrl());
            if (harentry.getResponse().getStatus() > 400)
                myviewholder.d.setImageDrawable(a.getResources().getDrawable(0x7f020065));
            else
            if (harentry.getResponse().getStatus() > 300)
                myviewholder.d.setImageDrawable(a.getResources().getDrawable(0x7f020062));
            else
            if (harentry.getResponse().getContent().getMimeType().contains("image"))
                myviewholder.d.setImageDrawable(a.getResources().getDrawable(0x7f020075));
            else
                myviewholder.d.setImageDrawable(a.getResources().getDrawable(0x7f020060));
            myviewholder.b.setText((new StringBuilder()).append("Status:").append(harentry.getResponse().getStatus()).append(" Size:").append(harentry.getResponse().getBodySize()).append("Bytes Time:").append(harentry.getTime()).append("ms").toString());
        }

        public Filter getFilter() {
            return new Filter(this) {

                final PreviewAdapter a;

                protected android.widget.Filter.FilterResults performFiltering(CharSequence charsequence) {
                    android.widget.Filter.FilterResults filterresults;
                    a.a.b = ((MainActivity)a.a.getActivity()).g().getLog();
                    filterresults = new android.widget.Filter.FilterResults();
                    if (filterresults.values == null) {
                        a.a.c.clear();
                        a.a.c.addAll(a.a.b.getEntries());
                    }
                    if (charsequence != null && charsequence.length() != 0) goto _L2; else goto _L1
_L1:
                    filterresults.values = a.a.b.getEntries();
                    filterresults.count = a.a.b.getEntries().size();
_L8:
                    return filterresults;
_L2:
                    int i;
                    int k;
                    ArrayList arraylist;
                    charsequence = charsequence.toString();
                    k = a.a.c.size();
                    arraylist = new ArrayList();
                    i = 0;
_L4:
                    String s;
                    HarEntry harentry;
                    if (i >= k)
                        break MISSING_BLOCK_LABEL_292;
                    harentry = (HarEntry)a.a.c.get(i);
                    s = harentry.getRequest().getUrl();
                    if (!s.contains(charsequence))
                        break; /* Loop/switch isn't completed */
                    arraylist.add(harentry);
_L5:
                    i++;
                    if (true) goto _L4; else goto _L3
_L3:
                    int j;
                    int l;
                    String as[];
                    as = charsequence.split(" ");
                    l = as.length;
                    j = 0;
_L6:
                    if (j < l) {
label0:
                        {
                            if (!s.contains(as[j]))
                                break label0;
                            arraylist.add(harentry);
                        }
                    }
                      goto _L5
                    j++;
                      goto _L6
                    filterresults.values = arraylist;
                    filterresults.count = arraylist.size();
                    if (true) goto _L8; else goto _L7
_L7:
                }

                protected void publishResults(CharSequence charsequence, android.widget.Filter.FilterResults filterresults) {
                    a.a.c.clear();
                    if (filterresults.values instanceof List)
                        a.a.c.addAll((List)filterresults.values);
                    if (filterresults.count > 0)
                        a.a.d.notifyDataSetChanged();
                    else
                    if (charsequence.length() != 0) {
                        a.a.d.notifyDataSetChanged();
                    } else {
                        a.a.c.addAll(a.a.b.getEntries());
                        a.a.d.notifyDataSetChanged();
                    }
                }

             {
                a = previewadapter;
                super();
            }
            }
;
        }

        public int getItemCount() {
            return a.c.size();
        }

        public void onBindViewHolder(android.support.v7.widget.RecyclerView.ViewHolder viewholder, int i) {
            a((MyViewHolder)viewholder, i);
        }

        public android.support.v7.widget.RecyclerView.ViewHolder onCreateViewHolder(ViewGroup viewgroup, int i) {
            return a(viewgroup, i);
        }

        private PreviewAdapter() {
            a = PreviewFragment.this;
            super();
        }

    }

    public class PreviewAdapter.MyViewHolder extends android.support.v7.widget.RecyclerView.ViewHolder {

        TextView a;
        TextView b;
        View c;
        ImageView d;
        final PreviewAdapter e;

        public PreviewAdapter.MyViewHolder(PreviewAdapter previewadapter, View view) {
            e = previewadapter;
            super(view);
            a = (TextView)view.findViewById(0x7f0f00bc);
            b = (TextView)view.findViewById(0x7f0f00bd);
            c = view;
            d = (ImageView)view.findViewById(0x7f0f00bb);
        }
    }

    public class a
        implements android.view.View.OnClickListener {

        HarEntry a;
        final PreviewFragment b;

        public void onClick(View view) {
            if (b.b.getEntries().indexOf(a) >= 0) {
                b.e = Boolean.valueOf(true);
                view = new Intent(b.getContext(), cn/darkal/networkdiagnosis/Activity/HarDetailActivity);
                view.putExtra("pos", ((SysApplication)b.getActivity().getApplication()).c.getHar().getLog().getEntries().indexOf(a));
                b.getActivity().startActivity(view);
            }
        }

        public a(HarEntry harentry) {
            b = PreviewFragment.this;
            super();
            a = harentry;
        }
    }


    static PreviewFragment f;
    HarLog b;
    List c;
    PreviewAdapter d;
    Boolean e;
    RecyclerView recyclerView;

    public PreviewFragment() {
        c = new ArrayList();
        e = Boolean.valueOf(false);
    }

    public static PreviewFragment b() {
        if (f == null)
            f = new PreviewFragment();
        return f;
    }

    public void a(CharSequence charsequence) {
        if (d != null)
            d.getFilter().filter(charsequence);
    }

    public boolean a() {
        return false;
    }

    public void c() {
        if (d != null) {
            b = ((MainActivity)getActivity()).g().getLog();
            c.clear();
            c.addAll(b.getEntries());
            d.notifyDataSetChanged();
        }
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
    }

    public View onCreateView(LayoutInflater layoutinflater, ViewGroup viewgroup, Bundle bundle) {
        bundle = layoutinflater.inflate(0x7f040033, viewgroup, false);
        ButterKnife.bind(this, bundle);
        if (SysApplication.a.booleanValue()) {
            b = ((SysApplication)getActivity().getApplication()).c.getHar().getLog();
            c.addAll(b.getEntries());
        }
        recyclerView.addItemDecoration(new RecycleViewDivider(getActivity(), 1));
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
        layoutinflater = recyclerView;
        viewgroup = new PreviewAdapter();
        d = viewgroup;
        layoutinflater.setAdapter(viewgroup);
        if (((MainActivity)getActivity()).c != null)
            ((MainActivity)getActivity()).c.setVisibility(0);
        return bundle;
    }

    public void onResume() {
        super.onResume();
        if (recyclerView != null) {
            recyclerView.requestFocus();
            if (((MainActivity)getActivity()).c != null)
                a(((MainActivity)getActivity()).c.getQuery());
        }
    }

    public void setUserVisibleHint(boolean flag) {
        super.setUserVisibleHint(flag);
        if (flag)
            c();
    }
}
