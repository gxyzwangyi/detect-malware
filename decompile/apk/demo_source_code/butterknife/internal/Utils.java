// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package butterknife.internal;

import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.support.v4.graphics.drawable.DrawableCompat;
import android.util.TypedValue;
import java.lang.reflect.Array;
import java.util.List;

// Referenced classes of package butterknife.internal:
//            ImmutableList

public final class Utils {
    static class SupportV4 {

        private static final TypedValue OUT_VALUE = new TypedValue();

        static Drawable getTintedDrawable(Resources resources, android.content.res.Resources.Theme theme, int i, int j) {
            if (!theme.resolveAttribute(j, OUT_VALUE, true)) {
                throw new android.content.res.Resources.NotFoundException((new StringBuilder()).append("Required tint color attribute with name ").append(resources.getResourceEntryName(j)).append(" and attribute ID ").append(j).append(" was not found.").toString());
            } else {
                Drawable drawable = DrawableCompat.wrap(Utils.getDrawable(resources, theme, i).mutate());
                DrawableCompat.setTint(drawable, Utils.getColor(resources, theme, OUT_VALUE.resourceId));
                return drawable;
            }
        }


        SupportV4() {
        }
    }


    private static final boolean HAS_SUPPORT_V4 = hasSupportV4();

    private Utils() {
        throw new AssertionError("No instances.");
    }

    public static transient Object[] arrayOf(Object aobj[]) {
        return filterNull(aobj);
    }

    private static Object[] filterNull(Object aobj[]) {
        int l = aobj.length;
        int j = 0;
        int i = 0;
        for (; j < l; j++) {
            Object obj = aobj[j];
            if (obj != null) {
                int k = i + 1;
                aobj[i] = obj;
                i = k;
            }
        }

        if (i != l) {
            Object aobj1[] = (Object[])(Object[])Array.newInstance(((Object) (aobj)).getClass().getComponentType(), i);
            System.arraycopy(((Object) (aobj)), 0, ((Object) (aobj1)), 0, i);
            aobj = aobj1;
        }
        return aobj;
    }

    public static int getColor(Resources resources, android.content.res.Resources.Theme theme, int i) {
        if (android.os.Build.VERSION.SDK_INT < 23)
            i = resources.getColor(i);
        else
            i = resources.getColor(i, theme);
        return i;
    }

    public static ColorStateList getColorStateList(Resources resources, android.content.res.Resources.Theme theme, int i) {
        if (android.os.Build.VERSION.SDK_INT < 23)
            resources = resources.getColorStateList(i);
        else
            resources = resources.getColorStateList(i, theme);
        return resources;
    }

    public static Drawable getDrawable(Resources resources, android.content.res.Resources.Theme theme, int i) {
        if (android.os.Build.VERSION.SDK_INT < 21)
            resources = resources.getDrawable(i);
        else
            resources = resources.getDrawable(i, theme);
        return resources;
    }

    public static Drawable getTintedDrawable(Resources resources, android.content.res.Resources.Theme theme, int i, int j) {
        if (HAS_SUPPORT_V4)
            return SupportV4.getTintedDrawable(resources, theme, i, j);
        else
            throw new RuntimeException("Android support-v4 library is required for @BindDrawable with tint.");
    }

    private static boolean hasSupportV4() {
        boolean flag = false;
        Class.forName("android.support.v4.graphics.drawable.DrawableCompat");
        flag = true;
_L2:
        return flag;
        Object obj;
        obj;
        continue; /* Loop/switch isn't completed */
        obj;
        if (true) goto _L2; else goto _L1
_L1:
    }

    public static transient List listOf(Object aobj[]) {
        return new ImmutableList(filterNull(aobj));
    }

}
