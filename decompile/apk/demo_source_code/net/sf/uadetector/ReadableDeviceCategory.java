// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.sf.uadetector;

import net.sf.qualitycheck.a;

public interface ReadableDeviceCategory {
    public static final class Category extends Enum {

        public static final Category a;
        public static final Category b;
        public static final Category c;
        public static final Category d;
        public static final Category e;
        public static final Category f;
        public static final Category g;
        public static final Category h;
        public static final Category i;
        private static final Category k[];
        private final String j;

        public static Category a(String s) {
            int l;
            int i1;
            Category category1;
            Category acategory[];
            net.sf.qualitycheck.a.a(s, "categoryName");
            category1 = h;
            acategory = values();
            i1 = acategory.length;
            l = 0;
_L3:
            Category category;
            if (l >= i1)
                break MISSING_BLOCK_LABEL_54;
            category = acategory[l];
            if (!category.a().equals(s)) goto _L2; else goto _L1
_L1:
            s = category;
_L4:
            return s;
_L2:
            l++;
              goto _L3
            s = category1;
              goto _L4
        }

        public static Category valueOf(String s) {
            return (Category)Enum.valueOf(net/sf/uadetector/ReadableDeviceCategory$Category, s);
        }

        public static Category[] values() {
            return (Category[])k.clone();
        }

        public String a() {
            return j;
        }

        static  {
            a = new Category("GAME_CONSOLE", 0, "Game console");
            b = new Category("OTHER", 1, "Other");
            c = new Category("PDA", 2, "PDA");
            d = new Category("PERSONAL_COMPUTER", 3, "Personal computer");
            e = new Category("SMART_TV", 4, "Smart TV");
            f = new Category("SMARTPHONE", 5, "Smartphone");
            g = new Category("TABLET", 6, "Tablet");
            h = new Category("UNKNOWN", 7, "");
            i = new Category("WEARABLE_COMPUTER", 8, "Wearable computer");
            k = (new Category[] {
                a, b, c, d, e, f, g, h, i
            });
        }

        private Category(String s, int l, String s1) {
            super(s, l);
            j = s1;
        }
    }

}
