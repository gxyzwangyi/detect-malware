// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.sf.uadetector.internal.data.domain;

import java.io.Serializable;
import java.util.*;
import net.sf.qualitycheck.a;

public final class Device
    implements Serializable {
    public static final class a {

        private String a;
        private int b;
        private String c;
        private String d;
        private SortedSet e;

        public a a(int i) {
            b = net.sf.qualitycheck.a.a(i, "id");
            return this;
        }

        public a a(String s) {
            a = (String)net.sf.qualitycheck.a.a(s, "icon");
            return this;
        }

        public a a(SortedSet sortedset) {
            e = new TreeSet((SortedSet)net.sf.qualitycheck.a.a(sortedset, "patterns"));
            return this;
        }

        public Device a() {
            return new Device(d, b, net.sf.uadetector.ReadableDeviceCategory.Category.a(d), a, c, e);
        }

        public a b() {
            return new a(this);
        }

        public a b(String s) {
            a(Integer.parseInt((String)net.sf.qualitycheck.a.a(s.replace("\n", "").replace("\t", ""), "id")));
            return this;
        }

        public int c() {
            return b;
        }

        public a c(String s) {
            c = (String)net.sf.qualitycheck.a.a(s, "infoUrl");
            return this;
        }

        public String d() {
            return d;
        }

        public a d(String s) {
            d = (String)net.sf.qualitycheck.a.a(s, "name");
            return this;
        }

        public a() {
            a = "";
            b = 0x80000000;
            c = "";
            e = new TreeSet();
        }

        private a(a a1) {
            a = "";
            b = 0x80000000;
            c = "";
            e = new TreeSet();
            net.sf.qualitycheck.a.a(a1, "builder");
            a = a1.a;
            b = a1.b;
            c = a1.c;
            d = a1.d;
        }
    }


    private final int a;
    private final String b;
    private final net.sf.uadetector.ReadableDeviceCategory.Category c;
    private final int d;
    private final String e;
    private final String f;
    private final SortedSet g;

    public Device(String s, int i, net.sf.uadetector.ReadableDeviceCategory.Category category, String s1, String s2, SortedSet sortedset) {
        c = category;
        b = (String)net.sf.qualitycheck.a.a(s1, "icon");
        d = net.sf.qualitycheck.a.a(i, "id");
        e = (String)net.sf.qualitycheck.a.a(s2, "infoUrl");
        f = (String)net.sf.qualitycheck.a.a(s, "name");
        g = Collections.unmodifiableSortedSet(new TreeSet((SortedSet)net.sf.qualitycheck.a.a(sortedset, "patterns")));
        a = a(category, s1, i, s2, s, sortedset);
    }

    private static int a(net.sf.uadetector.ReadableDeviceCategory.Category category, String s, int i, String s1, String s2, SortedSet sortedset) {
        return (((((category.hashCode() + 31) * 31 + s.hashCode()) * 31 + i) * 31 + s1.hashCode()) * 31 + s2.hashCode()) * 31 + sortedset.hashCode();
    }

    public SortedSet a() {
        return g;
    }

    public boolean equals(Object obj) {
        boolean flag = true;
        if (this != obj) goto _L2; else goto _L1
_L1:
        return flag;
_L2:
        if (obj == null)
            flag = false;
        else
        if (getClass() != obj.getClass()) {
            flag = false;
        } else {
            obj = (Device)obj;
            if (c != ((Device) (obj)).c)
                flag = false;
            else
            if (!b.equals(((Device) (obj)).b))
                flag = false;
            else
            if (d != ((Device) (obj)).d)
                flag = false;
            else
            if (!e.equals(((Device) (obj)).e))
                flag = false;
            else
            if (!f.equals(((Device) (obj)).f))
                flag = false;
            else
            if (!g.equals(((Device) (obj)).g))
                flag = false;
        }
        if (true) goto _L1; else goto _L3
_L3:
    }

    public int hashCode() {
        return a;
    }

    public String toString() {
        return (new StringBuilder()).append("Device [icon=").append(b).append(", id=").append(d).append(", infoUrl=").append(e).append(", name=").append(f).append(", patterns=").append(g).append("]").toString();
    }
}
