// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.lightbody.bmp.proxy.dns;

import java.util.Collection;
import java.util.Map;
import java.util.concurrent.TimeUnit;

// Referenced classes of package net.lightbody.bmp.proxy.dns:
//            AdvancedHostResolver

public abstract class BasicHostResolver
    implements AdvancedHostResolver {

    public BasicHostResolver() {
    }

    public void clearDNSCache() {
        throw new UnsupportedOperationException((new StringBuilder()).append((new Throwable()).getStackTrace()[0].getMethodName()).append(" is not supported by this host resolver (").append(getClass().getName()).append(")").toString());
    }

    public void clearHostRemappings() {
        throw new UnsupportedOperationException((new StringBuilder()).append((new Throwable()).getStackTrace()[0].getMethodName()).append(" is not supported by this host resolver (").append(getClass().getName()).append(")").toString());
    }

    public Map getHostRemappings() {
        throw new UnsupportedOperationException((new StringBuilder()).append((new Throwable()).getStackTrace()[0].getMethodName()).append(" is not supported by this host resolver (").append(getClass().getName()).append(")").toString());
    }

    public Collection getOriginalHostnames(String s) {
        throw new UnsupportedOperationException((new StringBuilder()).append((new Throwable()).getStackTrace()[0].getMethodName()).append(" is not supported by this host resolver (").append(getClass().getName()).append(")").toString());
    }

    public void remapHost(String s, String s1) {
        throw new UnsupportedOperationException((new StringBuilder()).append((new Throwable()).getStackTrace()[0].getMethodName()).append(" is not supported by this host resolver (").append(getClass().getName()).append(")").toString());
    }

    public void remapHosts(Map map) {
        throw new UnsupportedOperationException((new StringBuilder()).append((new Throwable()).getStackTrace()[0].getMethodName()).append(" is not supported by this host resolver (").append(getClass().getName()).append(")").toString());
    }

    public void removeHostRemapping(String s) {
        throw new UnsupportedOperationException((new StringBuilder()).append((new Throwable()).getStackTrace()[0].getMethodName()).append(" is not supported by this host resolver (").append(getClass().getName()).append(")").toString());
    }

    public void setNegativeDNSCacheTimeout(int i, TimeUnit timeunit) {
        throw new UnsupportedOperationException((new StringBuilder()).append((new Throwable()).getStackTrace()[0].getMethodName()).append(" is not supported by this host resolver (").append(getClass().getName()).append(")").toString());
    }

    public void setPositiveDNSCacheTimeout(int i, TimeUnit timeunit) {
        throw new UnsupportedOperationException((new StringBuilder()).append((new Throwable()).getStackTrace()[0].getMethodName()).append(" is not supported by this host resolver (").append(getClass().getName()).append(")").toString());
    }
}
