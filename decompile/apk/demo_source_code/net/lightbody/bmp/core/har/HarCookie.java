// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.lightbody.bmp.core.har;

import java.net.URLDecoder;
import java.util.Date;

public class HarCookie {

    private volatile String comment;
    private volatile String domain;
    private volatile Date expires;
    private volatile Boolean httpOnly;
    private volatile String name;
    private volatile String path;
    private volatile Boolean secure;
    private volatile String value;

    public HarCookie() {
        comment = "";
    }

    public String getComment() {
        return comment;
    }

    public String getDecodeValue() {
        String s;
        try {
            s = URLDecoder.decode(value);
        }
        catch (Exception exception) {
            exception = value;
        }
        return s;
    }

    public String getDomain() {
        return domain;
    }

    public Date getExpires() {
        return expires;
    }

    public Boolean getHttpOnly() {
        return httpOnly;
    }

    public String getName() {
        return name;
    }

    public String getPath() {
        return path;
    }

    public Boolean getSecure() {
        return secure;
    }

    public String getValue() {
        return value;
    }

    public void setComment(String s) {
        comment = s;
    }

    public void setDomain(String s) {
        domain = s;
    }

    public void setExpires(Date date) {
        expires = date;
    }

    public void setHttpOnly(Boolean boolean1) {
        httpOnly = boolean1;
    }

    public void setName(String s) {
        name = s;
    }

    public void setPath(String s) {
        path = s;
    }

    public void setSecure(Boolean boolean1) {
        secure = boolean1;
    }

    public void setValue(String s) {
        value = s;
    }

    public String toString() {
        return (new StringBuilder()).append("HarCookie{name='").append(name).append('\'').append(", value='").append(value).append('\'').append(", path='").append(path).append('\'').append(", domain='").append(domain).append('\'').append(", expires=").append(expires).append(", httpOnly=").append(httpOnly).append(", secure=").append(secure).append(", comment='").append(comment).append('\'').append('}').toString();
    }
}
