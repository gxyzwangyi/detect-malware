// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.lightbody.bmp.core.har;

import java.text.SimpleDateFormat;
import java.util.*;
import java.util.concurrent.CopyOnWriteArrayList;
import net.lightbody.bmp.BrowserMobProxyServer;
import net.lightbody.bmp.util.BrowserMobProxyUtil;

// Referenced classes of package net.lightbody.bmp.core.har:
//            HarNameVersion, HarEntry, HarPage

public class HarLog {

    private volatile HarNameVersion browser;
    private volatile String comment;
    private volatile HarNameVersion creator;
    private List entries;
    private List pages;
    private BrowserMobProxyServer server;
    private final String version;

    public HarLog() {
        version = "1.2";
        creator = new HarNameVersion("BrowserMob Proxy", BrowserMobProxyUtil.getVersionString());
        pages = new CopyOnWriteArrayList();
        entries = new CopyOnWriteArrayList();
        comment = "";
    }

    public HarLog(HarNameVersion harnameversion, BrowserMobProxyServer browsermobproxyserver) {
        version = "1.2";
        creator = new HarNameVersion("BrowserMob Proxy", BrowserMobProxyUtil.getVersionString());
        pages = new CopyOnWriteArrayList();
        entries = new CopyOnWriteArrayList();
        comment = "";
        creator = harnameversion;
        server = browsermobproxyserver;
    }

    public void addEntry(HarEntry harentry) {
        int i = 0;
        this;
        JVM INSTR monitorenter ;
        Object obj1 = entries.iterator();
_L1:
        Object obj;
        if (!((Iterator) (obj1)).hasNext())
            break MISSING_BLOCK_LABEL_56;
        obj = (HarEntry)((Iterator) (obj1)).next();
        if (harentry.getPageref().equals(((HarEntry) (obj)).getPageref()))
            i++;
          goto _L1
        if (i < 999)
            break MISSING_BLOCK_LABEL_176;
        if (server == null)
            break MISSING_BLOCK_LABEL_176;
        obj = JVM INSTR new #90  <Class SimpleDateFormat>;
        ((SimpleDateFormat) (obj)).SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.CHINA);
        obj1 = JVM INSTR new #103 <Class Date>;
        ((Date) (obj1)).Date(System.currentTimeMillis());
        obj1 = ((SimpleDateFormat) (obj)).format(((Date) (obj1)));
        obj = Boolean.valueOf(false);
        Iterator iterator = pages.iterator();
        do {
            if (!iterator.hasNext())
                break;
            if (((HarPage)iterator.next()).getId().equals(obj1))
                obj = Boolean.valueOf(true);
        } while (true);
        if (!((Boolean) (obj)).booleanValue())
            server.newPage(((String) (obj1)));
        entries.add(harentry);
        this;
        JVM INSTR monitorexit ;
        return;
        harentry;
        throw harentry;
    }

    public void addPage(HarPage harpage) {
        pages.add(harpage);
    }

    public void clearAllEntries() {
        entries.clear();
    }

    public Boolean deletePage(HarPage harpage) {
        return Boolean.valueOf(pages.remove(harpage));
    }

    public HarNameVersion getBrowser() {
        return browser;
    }

    public String getComment() {
        return comment;
    }

    public HarNameVersion getCreator() {
        return creator;
    }

    public List getEntries() {
        return entries;
    }

    public List getPages() {
        return pages;
    }

    public String getVersion() {
        return "1.2";
    }

    public void setBrowser(HarNameVersion harnameversion) {
        browser = harnameversion;
    }

    public void setComment(String s) {
        comment = s;
    }

    public void setCreator(HarNameVersion harnameversion) {
        creator = harnameversion;
    }

    public void setEntries(List list) {
        entries = list;
    }

    public void setPages(List list) {
        pages = list;
    }
}
