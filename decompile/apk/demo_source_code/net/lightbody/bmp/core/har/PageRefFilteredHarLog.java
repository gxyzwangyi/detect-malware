// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.lightbody.bmp.core.har;

import java.util.*;
import java.util.concurrent.CopyOnWriteArrayList;

// Referenced classes of package net.lightbody.bmp.core.har:
//            HarLog, HarEntry, HarPage

public class PageRefFilteredHarLog extends HarLog {

    public PageRefFilteredHarLog(HarLog harlog, String s) {
        setBrowser(harlog.getBrowser());
        setPages(getFilteredPages(harlog.getPages(), s));
        setEntries(getFilteredEntries(harlog.getEntries(), s));
        setComment(harlog.getComment());
    }

    public PageRefFilteredHarLog(HarLog harlog, Set set) {
        setBrowser(harlog.getBrowser());
        setPages(getFilteredPages(harlog.getPages(), set));
        setEntries(getFilteredEntries(harlog.getEntries(), set));
        setComment(harlog.getComment());
    }

    private static List getFilteredEntries(List list, String s) {
        CopyOnWriteArrayList copyonwritearraylist = new CopyOnWriteArrayList();
        Iterator iterator = list.iterator();
        do {
            if (!iterator.hasNext())
                break;
            list = (HarEntry)iterator.next();
            if (s.contains(list.getPageref()))
                copyonwritearraylist.add(list);
        } while (true);
        return copyonwritearraylist;
    }

    private static List getFilteredEntries(List list, Set set) {
        CopyOnWriteArrayList copyonwritearraylist = new CopyOnWriteArrayList();
        list = list.iterator();
        do {
            if (!list.hasNext())
                break;
            HarEntry harentry = (HarEntry)list.next();
            if (set.contains(harentry.getPageref()))
                copyonwritearraylist.add(harentry);
        } while (true);
        return copyonwritearraylist;
    }

    private static List getFilteredPages(List list, String s) {
        CopyOnWriteArrayList copyonwritearraylist = new CopyOnWriteArrayList();
        list = list.iterator();
        do {
            if (!list.hasNext())
                break;
            HarPage harpage = (HarPage)list.next();
            if (s.contains(harpage.getId()))
                copyonwritearraylist.add(harpage);
        } while (true);
        return copyonwritearraylist;
    }

    private static List getFilteredPages(List list, Set set) {
        CopyOnWriteArrayList copyonwritearraylist = new CopyOnWriteArrayList();
        Iterator iterator = list.iterator();
        do {
            if (!iterator.hasNext())
                break;
            list = (HarPage)iterator.next();
            if (set.contains(list.getId()))
                copyonwritearraylist.add(list);
        } while (true);
        return copyonwritearraylist;
    }
}
