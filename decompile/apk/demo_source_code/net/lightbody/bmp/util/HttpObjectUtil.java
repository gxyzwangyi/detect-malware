// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.lightbody.bmp.util;

import io.netty.buffer.h;
import io.netty.handler.codec.http.*;
import java.nio.charset.Charset;
import net.lightbody.bmp.exception.UnsupportedCharsetException;
import org.slf4j.b;
import org.slf4j.c;

// Referenced classes of package net.lightbody.bmp.util:
//            BrowserMobHttpUtil

public class HttpObjectUtil {

    private static final b log = c.a(net/lightbody/bmp/util/HttpObjectUtil);

    public HttpObjectUtil() {
    }

    public static byte[] extractBinaryHttpEntityBody(n n1) {
        return BrowserMobHttpUtil.extractReadableBytes(n1.a());
    }

    public static String extractHttpEntityBody(k k1) {
        Charset charset;
        try {
            charset = getCharsetFromMessage(k1);
        }
        catch (UnsupportedCharsetException unsupportedcharsetexception) {
            java.nio.charset.UnsupportedCharsetException unsupportedcharsetexception1 = unsupportedcharsetexception.getUnsupportedCharsetExceptionCause();
            k1 = s.a(k1, "Content-Type");
            log.e("Cannot retrieve text contents of message because HTTP message declares a character set that is not supported on this platform. Content type header: {}.", k1, unsupportedcharsetexception1);
            throw unsupportedcharsetexception1;
        }
        return extractHttpEntityBody(((n) (k1)), charset);
    }

    public static String extractHttpEntityBody(n n1, Charset charset) {
        if (charset == null)
            throw new IllegalArgumentException("No charset specified when extracting the contents of an HTTP message");
        else
            return new String(BrowserMobHttpUtil.extractReadableBytes(n1.a()), charset);
    }

    public static Charset getCharsetFromMessage(t t) {
        Charset charset = BrowserMobHttpUtil.readCharsetInContentTypeHeader(s.a(t, "Content-Type"));
        t = charset;
        if (charset == null)
            t = BrowserMobHttpUtil.DEFAULT_HTTP_CHARSET;
        return t;
    }

    public static void replaceBinaryHttpEntityBody(k k1, byte abyte0[]) {
        k1.a().k();
        k1.a().a(abyte0.length, true);
        k1.a().b(abyte0);
        k1.j().b("Content-Length", Integer.valueOf(abyte0.length));
    }

    public static void replaceTextHttpEntityBody(k k1, String s1) {
        Object obj = k1.j().b("Content-Type");
        Charset charset;
        try {
            charset = BrowserMobHttpUtil.readCharsetInContentTypeHeader(((String) (obj)));
        }
        // Misplaced declaration of an exception variable
        catch (k k1) {
            k1 = k1.getUnsupportedCharsetExceptionCause();
            log.e("Found unsupported character set in Content-Type header '{}' while attempting to replace contents of HTTP message.", obj, k1);
            throw k1;
        }
        obj = charset;
        if (charset == null) {
            obj = BrowserMobHttpUtil.DEFAULT_HTTP_CHARSET;
            log.d("No character set declared in HTTP message. Replacing text using default charset {}.", obj);
        }
        replaceBinaryHttpEntityBody(k1, s1.getBytes(((Charset) (obj))));
    }

}
