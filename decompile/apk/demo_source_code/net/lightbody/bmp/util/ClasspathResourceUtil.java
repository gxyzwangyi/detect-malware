// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.lightbody.bmp.util;

import com.google.common.a.c;
import java.io.*;
import java.nio.charset.Charset;
import net.lightbody.bmp.mitm.exception.UncheckedIOException;

public class ClasspathResourceUtil {

    public ClasspathResourceUtil() {
    }

    public static String classpathResourceToString(String s, Charset charset) {
        Object obj;
        if (s == null)
            throw new IllegalArgumentException("Classpath resource to load cannot be null");
        if (charset == null)
            throw new IllegalArgumentException("Character set cannot be null");
        StringBuilder stringbuilder;
        try {
            obj = net/lightbody/bmp/util/ClasspathResourceUtil.getResourceAsStream(s);
        }
        // Misplaced declaration of an exception variable
        catch (String s) {
            throw new UncheckedIOException("Error occurred while reading classpath resource", s);
        }
        if (obj != null)
            break MISSING_BLOCK_LABEL_91;
        charset = JVM INSTR new #30  <Class UncheckedIOException>;
        obj = JVM INSTR new #32  <Class FileNotFoundException>;
        stringbuilder = JVM INSTR new #34  <Class StringBuilder>;
        stringbuilder.StringBuilder();
        ((FileNotFoundException) (obj)).FileNotFoundException(stringbuilder.append("Unable to locate classpath resource: ").append(s).toString());
        charset.UncheckedIOException(((IOException) (obj)));
        throw charset;
        s = JVM INSTR new #56  <Class InputStreamReader>;
        s.InputStreamReader(((java.io.InputStream) (obj)), charset);
        s = c.a(s);
        return s;
    }
}
