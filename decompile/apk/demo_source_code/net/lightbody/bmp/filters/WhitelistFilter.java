// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.lightbody.bmp.filters;

import io.netty.channel.k;
import io.netty.handler.codec.http.*;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.littleshoot.proxy.impl.j;

// Referenced classes of package net.lightbody.bmp.filters:
//            HttpsAwareFiltersAdapter

public class WhitelistFilter extends HttpsAwareFiltersAdapter {

    private final boolean whitelistEnabled;
    private final int whitelistResponseCode;
    private final Collection whitelistUrls;

    public WhitelistFilter(z z1, k k, boolean flag, int i, Collection collection) {
        super(z1, k);
        whitelistEnabled = flag;
        whitelistResponseCode = i;
        if (collection != null)
            whitelistUrls = collection;
        else
            whitelistUrls = Collections.emptyList();
    }

    public ac clientToProxyRequest(w w) {
        if (whitelistEnabled) goto _L2; else goto _L1
_L1:
        w = null;
_L5:
        return w;
_L2:
        if (!(w instanceof z)) goto _L4; else goto _L3
_L3:
label0:
        {
            w = (z)w;
            if (!j.c(w))
                break label0;
            w = null;
        }
          goto _L5
        boolean flag;
        String s1 = getFullUrl(w);
        Iterator iterator = whitelistUrls.iterator();
        do
            if (!iterator.hasNext())
                break MISSING_BLOCK_LABEL_124;
        while (!((Pattern)iterator.next()).matcher(s1).matches());
        flag = true;
_L7:
        if (flag) goto _L4; else goto _L6
_L6:
        af af1 = af.a(whitelistResponseCode);
        w = new c(w.k(), af1);
        s.b(w, 0L);
          goto _L5
_L4:
        w = null;
          goto _L5
        flag = false;
          goto _L7
    }
}
