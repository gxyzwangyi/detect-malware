// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.lightbody.bmp.filters;

import io.netty.channel.k;
import io.netty.handler.codec.http.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import net.lightbody.bmp.util.BrowserMobHttpUtil;
import org.littleshoot.proxy.j;

public class ClientRequestCaptureFilter extends j {

    private volatile z httpRequest;
    private final ByteArrayOutputStream requestContents;
    private volatile s trailingHeaders;

    public ClientRequestCaptureFilter(z z1) {
        super(z1);
        requestContents = new ByteArrayOutputStream();
    }

    public ClientRequestCaptureFilter(z z1, k k) {
        super(z1, k);
        requestContents = new ByteArrayOutputStream();
    }

    public ac clientToProxyRequest(w w) {
        if (w instanceof z)
            httpRequest = (z)w;
        if (w instanceof n) {
            w = (n)w;
            storeRequestContent(w);
            if (w instanceof ah)
                trailingHeaders = ((ah)w).b();
        }
        return null;
    }

    public byte[] getFullRequestContents() {
        return requestContents.toByteArray();
    }

    public z getHttpRequest() {
        return httpRequest;
    }

    public s getTrailingHeaders() {
        return trailingHeaders;
    }

    protected void storeRequestContent(n n1) {
        n1 = BrowserMobHttpUtil.extractReadableBytes(n1.a());
        requestContents.write(n1);
_L2:
        return;
        n1;
        if (true) goto _L2; else goto _L1
_L1:
    }
}
