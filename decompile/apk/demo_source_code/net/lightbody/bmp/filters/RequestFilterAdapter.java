// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.lightbody.bmp.filters;

import io.netty.handler.codec.http.ac;
import io.netty.handler.codec.http.k;
import io.netty.handler.codec.http.w;
import io.netty.handler.codec.http.z;
import net.lightbody.bmp.util.HttpMessageContents;
import net.lightbody.bmp.util.HttpMessageInfo;
import org.littleshoot.proxy.i;
import org.littleshoot.proxy.l;

// Referenced classes of package net.lightbody.bmp.filters:
//            HttpsAwareFiltersAdapter, RequestFilter

public class RequestFilterAdapter extends HttpsAwareFiltersAdapter {
    public static class FilterSource extends l {

        private static final int DEFAULT_MAXIMUM_REQUEST_BUFFER_SIZE = 0x200000;
        private final RequestFilter filter;
        private final int maximumRequestBufferSizeInBytes;

        public i filterRequest(z z1, io.netty.channel.k k1) {
            return new RequestFilterAdapter(z1, k1, filter);
        }

        public int getMaximumRequestBufferSizeInBytes() {
            return maximumRequestBufferSizeInBytes;
        }

        public FilterSource(RequestFilter requestfilter) {
            filter = requestfilter;
            maximumRequestBufferSizeInBytes = 0x200000;
        }

        public FilterSource(RequestFilter requestfilter, int i) {
            filter = requestfilter;
            maximumRequestBufferSizeInBytes = i;
        }
    }


    private final RequestFilter requestFilter;

    public RequestFilterAdapter(z z1, io.netty.channel.k k1, RequestFilter requestfilter) {
        super(z1, k1);
        requestFilter = requestfilter;
    }

    public ac clientToProxyRequest(w w) {
        Object obj1 = null;
        Object obj = obj1;
        if (w instanceof z) {
            obj = (z)w;
            HttpMessageInfo httpmessageinfo;
            if (w instanceof k)
                w = new HttpMessageContents((k)w);
            else
                w = null;
            httpmessageinfo = new HttpMessageInfo(originalRequest, ctx, isHttps(), getFullUrl(((z) (obj))), getOriginalUrl());
            w = requestFilter.filterRequest(((z) (obj)), w, httpmessageinfo);
            obj = obj1;
            if (w != null)
                obj = w;
        }
        return ((ac) (obj));
    }
}
