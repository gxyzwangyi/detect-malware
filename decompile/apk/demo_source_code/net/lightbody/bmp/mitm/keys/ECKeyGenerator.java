// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.lightbody.bmp.mitm.keys;

import java.security.*;
import java.security.spec.ECGenParameterSpec;
import net.lightbody.bmp.mitm.exception.KeyGeneratorException;

// Referenced classes of package net.lightbody.bmp.mitm.keys:
//            KeyGenerator

public class ECKeyGenerator
    implements KeyGenerator {

    private static final String DEFAULT_NAMED_CURVE = "secp256r1";
    private static final String EC_KEY_GEN_ALGORITHM = "EC";
    private final String namedCurve;

    public ECKeyGenerator() {
        namedCurve = "secp256r1";
    }

    public ECKeyGenerator(String s) {
        namedCurve = s;
    }

    public KeyPair generate() {
        KeyPairGenerator keypairgenerator;
        keypairgenerator = KeyPairGenerator.getInstance("EC");
        ECGenParameterSpec ecgenparameterspec = JVM INSTR new #36  <Class ECGenParameterSpec>;
        ecgenparameterspec.ECGenParameterSpec(namedCurve);
        keypairgenerator.initialize(ecgenparameterspec);
        return keypairgenerator.generateKeyPair();
        Object obj;
        obj;
_L2:
        throw new KeyGeneratorException((new StringBuilder()).append("Unable to generate EC public/private key pair using named curve: ").append(namedCurve).toString(), ((Throwable) (obj)));
        obj;
        if (true) goto _L2; else goto _L1
_L1:
    }

    public String toString() {
        return (new StringBuilder()).append("EC (").append(namedCurve).append(")").toString();
    }
}
