// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.gotev.uploadservice;


// Referenced classes of package net.gotev.uploadservice:
//            b

public class Logger {
    public static final class LogLevel extends Enum {

        public static final LogLevel a;
        public static final LogLevel b;
        public static final LogLevel c;
        public static final LogLevel d;
        private static final LogLevel e[];

        public static LogLevel valueOf(String s) {
            return (LogLevel)Enum.valueOf(net/gotev/uploadservice/Logger$LogLevel, s);
        }

        public static LogLevel[] values() {
            return (LogLevel[])e.clone();
        }

        static  {
            a = new LogLevel("DEBUG", 0);
            b = new LogLevel("INFO", 1);
            c = new LogLevel("ERROR", 2);
            d = new LogLevel("OFF", 3);
            e = (new LogLevel[] {
                a, b, c, d
            });
        }

        private LogLevel(String s, int i) {
            super(s, i);
        }
    }

    public static interface a {

        public abstract void a(String s, String s1);

        public abstract void a(String s, String s1, Throwable throwable);

        public abstract void b(String s, String s1);

        public abstract void c(String s, String s1);
    }

    private static class b {

        private static final Logger a = new Logger();

        static Logger a() {
            return a;
        }

    }


    private LogLevel a;
    private a b;

    private Logger() {
        a = LogLevel.d;
        b = new net.gotev.uploadservice.b();
    }


    public static void a(String s, String s1) {
        if (b.a().a.compareTo(LogLevel.c) <= 0)
            b.a().b.a(s, s1);
    }

    public static void a(String s, String s1, Throwable throwable) {
        if (b.a().a.compareTo(LogLevel.c) <= 0)
            b.a().b.a(s, s1, throwable);
    }

    public static void b(String s, String s1) {
        if (b.a().a.compareTo(LogLevel.b) <= 0)
            b.a().b.c(s, s1);
    }

    public static void c(String s, String s1) {
        if (b.a().a.compareTo(LogLevel.a) <= 0)
            b.a().b.b(s, s1);
    }
}
