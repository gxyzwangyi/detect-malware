// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package net.gotev.uploadservice;

import android.os.Parcel;
import android.os.Parcelable;
import java.io.*;
import java.util.LinkedHashMap;

public class UploadFile
    implements Parcelable {

    public static final android.os.Parcelable.Creator CREATOR = new android.os.Parcelable.Creator() {

        public UploadFile a(Parcel parcel) {
            return new UploadFile(parcel);
        }

        public UploadFile[] a(int i) {
            return new UploadFile[i];
        }

        public Object createFromParcel(Parcel parcel) {
            return a(parcel);
        }

        public Object[] newArray(int i) {
            return a(i);
        }

    }
;
    protected final File a;
    private LinkedHashMap b;

    private UploadFile(Parcel parcel) {
        b = new LinkedHashMap();
        a = new File(parcel.readString());
        b = (LinkedHashMap)parcel.readSerializable();
    }


    public UploadFile(String s) {
        b = new LinkedHashMap();
        if (s == null || "".equals(s))
            throw new IllegalArgumentException("Please specify a file path!");
        File file = new File(s);
        if (!file.exists())
            throw new FileNotFoundException((new StringBuilder()).append("Could not find file at path: ").append(s).toString());
        if (file.isDirectory()) {
            throw new FileNotFoundException((new StringBuilder()).append("The specified path refers to a directory: ").append(s).toString());
        } else {
            a = file;
            return;
        }
    }

    public long a() {
        return a.length();
    }

    public String a(String s) {
        return (String)b.get(s);
    }

    public void a(String s, String s1) {
        b.put(s, s1);
    }

    public final InputStream b() {
        return new FileInputStream(a);
    }

    public final String c() {
        return a.getAbsolutePath();
    }

    public final String d() {
        return a.getName();
    }

    public int describeContents() {
        return 0;
    }

    public void writeToParcel(Parcel parcel, int i) {
        parcel.writeString(a.getAbsolutePath());
        parcel.writeSerializable(b);
    }

}
