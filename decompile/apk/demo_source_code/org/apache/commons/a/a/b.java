// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.apache.commons.a.a;

import java.util.Arrays;

public abstract class b {
    static class a {

        int a;
        long b;
        byte c[];
        int d;
        int e;
        boolean f;
        int g;
        int h;

        public String toString() {
            return String.format("%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, modulus=%s, pos=%s, readPos=%s]", new Object[] {
                getClass().getSimpleName(), Arrays.toString(c), Integer.valueOf(g), Boolean.valueOf(f), Integer.valueOf(a), Long.valueOf(b), Integer.valueOf(h), Integer.valueOf(d), Integer.valueOf(e)
            });
        }

        a() {
        }
    }


    private final int a;
    protected final byte b;
    protected final byte c;
    protected final int d;
    private final int e;
    private final int f;

    protected b(int i, int j, int k, int l) {
        this(i, j, k, l, (byte)61);
    }

    protected b(int i, int j, int k, int l, byte byte0) {
        int i1 = 0;
        super();
        b = 61;
        a = i;
        e = j;
        if (k > 0 && l > 0)
            i = 1;
        else
            i = 0;
        if (i != 0)
            i1 = (k / j) * j;
        d = i1;
        f = l;
        c = byte0;
    }

    private byte[] b(a a1) {
        if (a1.c == null) {
            a1.c = new byte[a()];
            a1.d = 0;
            a1.e = 0;
        } else {
            byte abyte0[] = new byte[a1.c.length * 2];
            System.arraycopy(a1.c, 0, abyte0, 0, a1.c.length);
            a1.c = abyte0;
        }
        return a1.c;
    }

    protected int a() {
        return 8192;
    }

    int a(a a1) {
        int i;
        if (a1.c != null)
            i = a1.d - a1.e;
        else
            i = 0;
        return i;
    }

    abstract void a(byte abyte0[], int i, int j, a a1);

    protected abstract boolean a(byte byte0);

    protected byte[] a(int i, a a1) {
        if (a1.c == null || a1.c.length < a1.d + i)
            a1 = b(a1);
        else
            a1 = a1.c;
        return a1;
    }

    int b(byte abyte0[], int i, int j, a a1) {
        if (a1.c != null) {
            j = Math.min(a(a1), j);
            System.arraycopy(a1.c, a1.e, abyte0, i, j);
            a1.e = a1.e + j;
            i = j;
            if (a1.e >= a1.d) {
                a1.c = null;
                i = j;
            }
        } else
        if (a1.f)
            i = -1;
        else
            i = 0;
        return i;
    }

    public byte[] b(byte abyte0[]) {
        byte abyte1[] = abyte0;
        if (abyte0 != null)
            if (abyte0.length == 0) {
                abyte1 = abyte0;
            } else {
                a a1 = new a();
                a(abyte0, 0, abyte0.length, a1);
                a(abyte0, 0, -1, a1);
                abyte1 = new byte[a1.d];
                b(abyte1, 0, abyte1.length, a1);
            }
        return abyte1;
    }

    protected boolean c(byte abyte0[]) {
        boolean flag1 = false;
        if (abyte0 != null) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L4:
        return flag;
_L2:
        int j = abyte0.length;
        int i = 0;
        do {
            flag = flag1;
            if (i < j) {
label0:
                {
                    byte byte0 = abyte0[i];
                    if (c != byte0 && !a(byte0))
                        break label0;
                    flag = true;
                }
            }
            if (true)
                continue;
            i++;
        } while (true);
        if (true) goto _L4; else goto _L3
_L3:
    }
}
