// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.littleshoot.proxy.impl;

import java.util.Arrays;
import org.slf4j.a.a;
import org.slf4j.b;
import org.slf4j.c;

// Referenced classes of package org.littleshoot.proxy.impl:
//            f, ConnectionState

class g {
    private class a
        implements b {

        final g a;
        private org.slf4j.a.a b;

        public void a(int i, String s, Object aobj[], Throwable throwable) {
            String s1 = org.littleshoot.proxy.impl.g.a(a, s);
            s = s1;
            if (aobj != null) {
                s = s1;
                if (aobj.length > 0)
                    s = org.slf4j.helpers.b.a(s1, aobj).a();
            }
            b.a(null, org.littleshoot.proxy.impl.g.b(a), i, s, null, throwable);
        }

        public a(org.slf4j.a.a a1) {
            a = g.this;
            super();
            b = a1;
        }
    }

    private static interface b {

        public abstract void a(int i, String s, Object aobj[], Throwable throwable);
    }

    private class c
        implements b {

        final g a;

        public void a(int i, String s, Object aobj[], Throwable throwable) {
            String s1;
            s1 = org.littleshoot.proxy.impl.g.a(a, s);
            s = ((String) (aobj));
            if (throwable != null)
                if (aobj == null) {
                    s = ((String) (new Object[1]));
                    s[0] = throwable;
                } else {
                    s = ((String) (Arrays.copyOf(aobj, aobj.length + 1)));
                    s[aobj.length] = throwable;
                }
            i;
            JVM INSTR lookupswitch 4: default 76
        //                       0: 110
        //                       10: 128
        //                       20: 146
        //                       30: 164;
               goto _L1 _L2 _L3 _L4 _L5
_L1:
            org.littleshoot.proxy.impl.g.a(a).e(s1, s);
_L7:
            return;
_L2:
            org.littleshoot.proxy.impl.g.a(a).a(s1, s);
            continue; /* Loop/switch isn't completed */
_L3:
            org.littleshoot.proxy.impl.g.a(a).b(s1, s);
            continue; /* Loop/switch isn't completed */
_L4:
            org.littleshoot.proxy.impl.g.a(a).c(s1, s);
            continue; /* Loop/switch isn't completed */
_L5:
            org.littleshoot.proxy.impl.g.a(a).d(s1, s);
            if (true) goto _L7; else goto _L6
_L6:
        }

        private c() {
            a = g.this;
            super();
        }

    }


    private final f a;
    private final b b;
    private final org.slf4j.b c;
    private final String d = getClass().getCanonicalName();

    public g(f f1) {
        a = f1;
        f1 = org.slf4j.c.a(f1.getClass());
        if (f1 instanceof org.slf4j.a.a)
            b = new a((org.slf4j.a.a)f1);
        else
            b = new c();
        c = f1;
    }

    private String a(String s) {
        String s2 = a.o().toString();
        String s1 = s2;
        if (a.j())
            s1 = (new StringBuilder()).append(s2).append(" {tunneling}").toString();
        s2 = (new StringBuilder()).append("(").append(s1).append(")").toString();
        s1 = s2;
        if (a.g != null)
            s1 = (new StringBuilder()).append(s2).append(" ").append(a.g).toString();
        return (new StringBuilder()).append(s1).append(": ").append(s).toString();
    }

    static String a(g g1, String s) {
        return g1.a(s);
    }

    static org.slf4j.b a(g g1) {
        return g1.c;
    }

    static String b(g g1) {
        return g1.d;
    }

    protected void a(String s, Throwable throwable) {
        if (c.e())
            b.a(40, s, null, throwable);
    }

    protected transient void a(String s, Object aobj[]) {
        if (c.d())
            b.a(30, s, aobj, null);
    }

    protected void b(String s, Throwable throwable) {
        if (c.d())
            b.a(30, s, null, throwable);
    }

    protected transient void b(String s, Object aobj[]) {
        if (c.c())
            b.a(20, s, aobj, null);
    }

    protected void c(String s, Throwable throwable) {
        if (c.c())
            b.a(20, s, null, throwable);
    }

    protected transient void c(String s, Object aobj[]) {
        if (c.b())
            b.a(10, s, aobj, null);
    }

    protected void d(String s, Throwable throwable) {
        if (c.b())
            b.a(10, s, null, throwable);
    }
}
