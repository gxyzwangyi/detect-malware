// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.util.*;

public final class s {

    private static Map a;

    public static void a() {
        Object obj = System.getProperty("dnsjava.options");
        if (obj != null)
            for (obj = new StringTokenizer(((String) (obj)), ","); ((StringTokenizer) (obj)).hasMoreTokens();) {
                String s1 = ((StringTokenizer) (obj)).nextToken();
                int i = s1.indexOf('=');
                if (i == -1)
                    a(s1);
                else
                    a(s1.substring(0, i), s1.substring(i + 1));
            }

    }

    public static void a(String s1) {
        if (a == null)
            a = new HashMap();
        a.put(s1.toLowerCase(), "true");
    }

    public static void a(String s1, String s2) {
        if (a == null)
            a = new HashMap();
        a.put(s1.toLowerCase(), s2.toLowerCase());
    }

    public static boolean b(String s1) {
        boolean flag;
        flag = false;
        break MISSING_BLOCK_LABEL_2;
        if (a != null && a.get(s1.toLowerCase()) != null)
            flag = true;
        return flag;
    }

    public static String c(String s1) {
        if (a == null)
            s1 = null;
        else
            s1 = (String)a.get(s1.toLowerCase());
        return s1;
    }

    public static int d(String s1) {
        s1 = c(s1);
        if (s1 == null) goto _L2; else goto _L1
_L1:
        int i = Integer.parseInt(s1);
        if (i <= 0) goto _L2; else goto _L3
_L3:
        return i;
        s1;
_L2:
        i = -1;
        if (true) goto _L3; else goto _L4
_L4:
    }

    static  {
        a();
_L2:
        return;
        SecurityException securityexception;
        securityexception;
        if (true) goto _L2; else goto _L1
_L1:
    }
}
