// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.security.PublicKey;
import org.xbill.DNS.a.d;

// Referenced classes of package org.xbill.DNS:
//            Record, f, g, s, 
//            d

abstract class KEYBase extends Record {

    protected int a;
    protected int b;
    protected int c;
    protected byte d[];
    protected int e;
    protected PublicKey f;

    protected KEYBase() {
        e = -1;
        f = null;
    }

    void a(f f1) {
        a = f1.h();
        b = f1.g();
        c = f1.g();
        if (f1.b() > 0)
            d = f1.j();
    }

    void a(g g1, org.xbill.DNS.d d1, boolean flag) {
        g1.c(a);
        g1.b(b);
        g1.b(c);
        if (d != null)
            g1.a(d);
    }

    String b() {
        StringBuffer stringbuffer = new StringBuffer();
        stringbuffer.append(a);
        stringbuffer.append(" ");
        stringbuffer.append(b);
        stringbuffer.append(" ");
        stringbuffer.append(c);
        if (d != null)
            if (s.b("multiline")) {
                stringbuffer.append(" (\n");
                stringbuffer.append(org.xbill.DNS.a.d.a(d, 64, "\t", true));
                stringbuffer.append(" ; key_tag = ");
                stringbuffer.append(m_());
            } else {
                stringbuffer.append(" ");
                stringbuffer.append(org.xbill.DNS.a.d.a(d));
            }
        return stringbuffer.toString();
    }

    public int m_() {
        int j = 0;
        if (e < 0) goto _L2; else goto _L1
_L1:
        int i = e;
_L4:
        return i;
_L2:
        byte abyte0[];
        g g1 = new g();
        a(g1, null, false);
        abyte0 = g1.b();
        if (c != 1)
            break; /* Loop/switch isn't completed */
        i = ((abyte0[abyte0.length - 3] & 0xff) << 8) + (abyte0[abyte0.length - 2] & 0xff);
_L5:
        e = i & 0xffff;
        i = e;
        if (true) goto _L4; else goto _L3
_L3:
        i = 0;
        for (; j < abyte0.length - 1; j += 2)
            i += ((abyte0[j] & 0xff) << 8) + (abyte0[j + 1] & 0xff);

        int k = i;
        if (j < abyte0.length)
            k = i + ((abyte0[j] & 0xff) << 8);
        i = (k >> 16 & 0xffff) + k;
          goto _L5
        if (true) goto _L4; else goto _L6
_L6:
    }
}
