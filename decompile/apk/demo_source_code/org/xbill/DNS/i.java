// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.io.*;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.List;

// Referenced classes of package org.xbill.DNS:
//            w, x, ac, o, 
//            y, s

public class i
    implements w {
    private static class a
        implements y {

        w a[];
        int b[];
        Object c[];
        int d;
        int e;
        boolean f;
        o g;
        o h;
        Throwable i;
        y j;

        public o a() {
            int ai[] = b;
            ai[0] = ai[0] + 1;
            Object obj;
            Object aobj[];
            e = e + 1;
            aobj = c;
            obj = JVM INSTR new #4   <Class Object>;
            obj.Object();
            aobj[0] = obj;
            obj = a[0].a(g);
_L4:
            return ((o) (obj));
            Object obj1;
            obj1;
            a(c[0], ((Exception) (obj1)));
            this;
            JVM INSTR monitorenter ;
_L2:
            boolean flag = f;
            if (flag)
                break; /* Loop/switch isn't completed */
            try {
                wait();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj1) { }
            if (true) goto _L2; else goto _L1
_L1:
            this;
            JVM INSTR monitorexit ;
            if (h == null)
                break; /* Loop/switch isn't completed */
            obj1 = h;
            if (true) goto _L4; else goto _L3
            obj1;
            this;
            JVM INSTR monitorexit ;
            throw obj1;
_L3:
            if (i instanceof IOException)
                throw (IOException)i;
            if (i instanceof RuntimeException)
                throw (RuntimeException)i;
            if (i instanceof Error)
                throw (Error)i;
            else
                throw new IllegalStateException("ExtendedResolver failure");
        }

        public void a(int k) {
            int ai[] = b;
            ai[k] = ai[k] + 1;
            e = e + 1;
            c[k] = a[k].a(g, this);
_L1:
            return;
            Object obj;
            obj;
            this;
            JVM INSTR monitorenter ;
            i = ((Throwable) (obj));
            f = true;
            if (j != null)
                break MISSING_BLOCK_LABEL_80;
            notifyAll();
            this;
            JVM INSTR monitorexit ;
              goto _L1
            obj;
            this;
            JVM INSTR monitorexit ;
            throw obj;
            this;
            JVM INSTR monitorexit ;
              goto _L1
        }

        public void a(Object obj, Exception exception) {
            boolean flag;
            flag = true;
            if (s.b("verbose"))
                System.err.println("ExtendedResolver: got " + exception);
            this;
            JVM INSTR monitorenter ;
            e = e - 1;
            if (!f) goto _L2; else goto _L1
_L1:
            this;
            JVM INSTR monitorexit ;
_L3:
            return;
_L2:
            int k = 0;
_L4:
            if (k < c.length && c[k] != obj)
                break MISSING_BLOCK_LABEL_98;
            if (k != c.length)
                break MISSING_BLOCK_LABEL_104;
            this;
            JVM INSTR monitorexit ;
              goto _L3
            obj;
            this;
            JVM INSTR monitorexit ;
            throw obj;
            k++;
              goto _L4
            if (b[k] != 1 || k >= a.length - 1)
                flag = false;
            if (!(exception instanceof InterruptedIOException)) goto _L6; else goto _L5
_L5:
            if (b[k] < d)
                a(k);
            if (i == null)
                i = exception;
_L7:
            if (!f)
                break MISSING_BLOCK_LABEL_214;
            this;
            JVM INSTR monitorexit ;
              goto _L3
_L6:
label0:
            {
                if (!(exception instanceof SocketException))
                    break label0;
                if (i == null || (i instanceof InterruptedIOException))
                    i = exception;
            }
              goto _L7
            i = exception;
              goto _L7
            if (!flag)
                break MISSING_BLOCK_LABEL_226;
            a(k + 1);
            if (!f) goto _L9; else goto _L8
_L8:
            this;
            JVM INSTR monitorexit ;
              goto _L3
_L9:
            if (e != 0) goto _L11; else goto _L10
_L10:
            f = true;
            if (j != null) goto _L11; else goto _L12
_L12:
            notifyAll();
            this;
            JVM INSTR monitorexit ;
              goto _L3
_L11:
            if (f) goto _L14; else goto _L13
_L13:
            this;
            JVM INSTR monitorexit ;
              goto _L3
_L14:
            this;
            JVM INSTR monitorexit ;
            if (!(i instanceof Exception))
                i = new RuntimeException(i.getMessage());
            j.a(this, (Exception)i);
              goto _L3
        }

        public void a(Object obj, o o) {
            if (s.b("verbose"))
                System.err.println("ExtendedResolver: received message");
            this;
            JVM INSTR monitorenter ;
            if (!f) goto _L2; else goto _L1
_L1:
            this;
            JVM INSTR monitorexit ;
_L3:
            return;
_L2:
            h = o;
            f = true;
            if (j != null)
                break MISSING_BLOCK_LABEL_59;
            notifyAll();
            this;
            JVM INSTR monitorexit ;
              goto _L3
            obj;
            this;
            JVM INSTR monitorexit ;
            throw obj;
            this;
            JVM INSTR monitorexit ;
            j.a(this, h);
              goto _L3
        }

        public void a(y y1) {
            j = y1;
            a(0);
        }

        public a(i k, o o) {
            List list = i.a(k);
            a = (w[])(w[])list.toArray(new w[list.size()]);
            if (i.b(k)) {
                int i1 = a.length;
                int j1 = i.c(k) % i1;
                if (i.d(k) > i1)
                    i.a(k, i1);
                if (j1 > 0) {
                    w aw[] = new w[i1];
                    for (int l = 0; l < i1; l++)
                        aw[l] = a[(l + j1) % i1];

                    a = aw;
                }
            }
            b = new int[a.length];
            c = new Object[a.length];
            d = i.e(k);
            g = o;
        }
    }


    private List a;
    private boolean b;
    private int c;
    private int d;

    public i() {
        int j = 0;
        super();
        b = false;
        c = 0;
        d = 3;
        a();
        String as[] = x.e().a();
        if (as != null)
            for (; j < as.length; j++) {
                ac ac1 = new ac(as[j]);
                ac1.a(5);
                a.add(ac1);
            }

        else
            a.add(new ac());
    }

    static int a(i j, int k) {
        k = j.c % k;
        j.c = k;
        return k;
    }

    static List a(i j) {
        return j.a;
    }

    private void a() {
        a = new ArrayList();
    }

    static boolean b(i j) {
        return j.b;
    }

    static int c(i j) {
        int k = j.c;
        j.c = k + 1;
        return k;
    }

    static int d(i j) {
        return j.c;
    }

    static int e(i j) {
        return j.d;
    }

    public Object a(o o, y y) {
        o = new a(this, o);
        o.a(y);
        return o;
    }

    public o a(o o) {
        return (new a(this, o)).a();
    }

    public void a(int j) {
        a(j, 0);
    }

    public void a(int j, int k) {
        for (int l = 0; l < a.size(); l++)
            ((w)a.get(l)).a(j, k);

    }
}
