// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.util.ArrayList;
import java.util.List;

// Referenced classes of package org.xbill.DNS:
//            RRset, CNAMERecord, DNAMERecord

public class ab {

    private static final ab a = new ab(0);
    private static final ab b = new ab(1);
    private static final ab c = new ab(2);
    private int d;
    private Object e;

    private ab() {
    }

    ab(int j) {
        if (j < 0 || j > 6) {
            throw new IllegalArgumentException("invalid type");
        } else {
            d = j;
            e = null;
            return;
        }
    }

    ab(int j, RRset rrset) {
        if (j < 0 || j > 6) {
            throw new IllegalArgumentException("invalid type");
        } else {
            d = j;
            e = rrset;
            return;
        }
    }

    static ab a(int j) {
        j;
        JVM INSTR tableswitch 0 6: default 44
    //                   0 54
    //                   1 60
    //                   2 67
    //                   3 74
    //                   4 74
    //                   5 74
    //                   6 74;
           goto _L1 _L2 _L3 _L4 _L5 _L5 _L5 _L5
_L1:
        throw new IllegalArgumentException("invalid type");
_L2:
        ab ab1 = a;
_L7:
        return ab1;
_L3:
        ab1 = b;
        continue; /* Loop/switch isn't completed */
_L4:
        ab1 = c;
        continue; /* Loop/switch isn't completed */
_L5:
        ab1 = new ab();
        ab1.d = j;
        ab1.e = null;
        if (true) goto _L7; else goto _L6
_L6:
    }

    void a(RRset rrset) {
        if (e == null)
            e = new ArrayList();
        ((List)e).add(rrset);
    }

    public boolean a() {
        boolean flag = true;
        if (d != 1)
            flag = false;
        return flag;
    }

    public boolean b() {
        boolean flag;
        if (d == 2)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean c() {
        boolean flag;
        if (d == 3)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean d() {
        boolean flag;
        if (d == 4)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean e() {
        boolean flag;
        if (d == 5)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean f() {
        boolean flag;
        if (d == 6)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public RRset[] g() {
        Object obj;
        if (d != 6) {
            obj = null;
        } else {
            obj = (List)e;
            obj = (RRset[])(RRset[])((List) (obj)).toArray(new RRset[((List) (obj)).size()]);
        }
        return ((RRset []) (obj));
    }

    public CNAMERecord h() {
        return (CNAMERecord)((RRset)e).g();
    }

    public DNAMERecord i() {
        return (DNAMERecord)((RRset)e).g();
    }

    public String toString() {
        d;
        JVM INSTR tableswitch 0 6: default 48
    //                   0 56
    //                   1 61
    //                   2 67
    //                   3 73
    //                   4 99
    //                   5 125
    //                   6 151;
           goto _L1 _L2 _L3 _L4 _L5 _L6 _L7 _L8
_L1:
        throw new IllegalStateException();
_L2:
        String s = "unknown";
_L10:
        return s;
_L3:
        s = "NXDOMAIN";
        continue; /* Loop/switch isn't completed */
_L4:
        s = "NXRRSET";
        continue; /* Loop/switch isn't completed */
_L5:
        s = "delegation: " + e;
        continue; /* Loop/switch isn't completed */
_L6:
        s = "CNAME: " + e;
        continue; /* Loop/switch isn't completed */
_L7:
        s = "DNAME: " + e;
        continue; /* Loop/switch isn't completed */
_L8:
        s = "successful";
        if (true) goto _L10; else goto _L9
_L9:
    }

}
