// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.util.Date;
import org.xbill.DNS.a.d;

// Referenced classes of package org.xbill.DNS:
//            Record, f, Name, g, 
//            ag, s, k, d

abstract class SIGBase extends Record {

    protected int a;
    protected int b;
    protected int c;
    protected long d;
    protected Date e;
    protected Date f;
    protected int k;
    protected Name l;
    protected byte m[];

    protected SIGBase() {
    }

    void a(f f1) {
        a = f1.h();
        b = f1.g();
        c = f1.g();
        d = f1.i();
        e = new Date(f1.i() * 1000L);
        f = new Date(f1.i() * 1000L);
        k = f1.h();
        l = new Name(f1);
        m = f1.j();
    }

    void a(g g1, org.xbill.DNS.d d1, boolean flag) {
        g1.c(a);
        g1.b(b);
        g1.b(c);
        g1.a(d);
        g1.a(e.getTime() / 1000L);
        g1.a(f.getTime() / 1000L);
        g1.c(k);
        l.a(g1, null, flag);
        g1.a(m);
    }

    String b() {
        StringBuffer stringbuffer = new StringBuffer();
        stringbuffer.append(ag.b(a));
        stringbuffer.append(" ");
        stringbuffer.append(b);
        stringbuffer.append(" ");
        stringbuffer.append(c);
        stringbuffer.append(" ");
        stringbuffer.append(d);
        stringbuffer.append(" ");
        if (s.b("multiline"))
            stringbuffer.append("(\n\t");
        stringbuffer.append(org.xbill.DNS.k.a(e));
        stringbuffer.append(" ");
        stringbuffer.append(org.xbill.DNS.k.a(f));
        stringbuffer.append(" ");
        stringbuffer.append(k);
        stringbuffer.append(" ");
        stringbuffer.append(l);
        if (s.b("multiline")) {
            stringbuffer.append("\n");
            stringbuffer.append(org.xbill.DNS.a.d.a(m, 64, "\t", true));
        } else {
            stringbuffer.append(" ");
            stringbuffer.append(org.xbill.DNS.a.d.a(m));
        }
        return stringbuffer.toString();
    }

    public int d() {
        return a;
    }
}
