// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.util.ArrayList;
import java.util.List;

// Referenced classes of package org.xbill.DNS:
//            Record, f, g, a, 
//            d

public class WKSRecord extends Record {

    private byte a[];
    private int b;
    private int c[];

    WKSRecord() {
    }

    Record a() {
        return new WKSRecord();
    }

    void a(f f1) {
        boolean flag = false;
        a = f1.d(4);
        b = f1.g();
        byte abyte0[] = f1.j();
        f1 = new ArrayList();
        for (int i = 0; i < abyte0.length; i++) {
            for (int k = 0; k < 8; k++)
                if ((abyte0[i] & 0xff & 1 << 7 - k) != 0)
                    f1.add(new Integer(i * 8 + k));

        }

        c = new int[f1.size()];
        for (int j = ((flag) ? 1 : 0); j < f1.size(); j++)
            c[j] = ((Integer)f1.get(j)).intValue();

    }

    void a(g g1, d d, boolean flag) {
        g1.a(a);
        g1.b(b);
        d = new byte[c[c.length - 1] / 8 + 1];
        for (int i = 0; i < c.length; i++) {
            int j = c[i];
            int k = j / 8;
            d[k] = (byte)(1 << 7 - j % 8 | d[k]);
        }

        g1.a(d);
    }

    String b() {
        StringBuffer stringbuffer = new StringBuffer();
        stringbuffer.append(org.xbill.DNS.a.a(a));
        stringbuffer.append(" ");
        stringbuffer.append(b);
        for (int i = 0; i < c.length; i++)
            stringbuffer.append(" " + c[i]);

        return stringbuffer.toString();
    }
}
