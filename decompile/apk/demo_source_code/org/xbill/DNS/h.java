// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.util.Arrays;

// Referenced classes of package org.xbill.DNS:
//            Record, f, WireParseException, l, 
//            q, c, g, p

public abstract class h {
    public static class a {

        private static p a;

        public static String a(int i) {
            return a.d(i);
        }

        static  {
            a = new p("EDNS Option Codes", 2);
            a.b(65535);
            a.a("CODE");
            a.a(true);
            a.a(3, "NSID");
            a.a(8, "CLIENT_SUBNET");
        }
    }


    private final int a;

    public h(int i) {
        a = Record.a("code", i);
    }

    static h b(f f1) {
        int i;
        int j;
        i = f1.h();
        int k = f1.h();
        if (f1.b() < k)
            throw new WireParseException("truncated option");
        j = f1.d();
        f1.a(k);
        i;
        JVM INSTR lookupswitch 2: default 64
    //                   3: 88
    //                   8: 100;
           goto _L1 _L2 _L3
_L1:
        Object obj = new l(i);
_L5:
        ((h) (obj)).a(f1);
        f1.b(j);
        return ((h) (obj));
_L2:
        obj = new q();
        continue; /* Loop/switch isn't completed */
_L3:
        obj = new c();
        if (true) goto _L5; else goto _L4
_L4:
    }

    abstract String a();

    abstract void a(f f1);

    abstract void a(g g1);

    void b(g g1) {
        g1.c(a);
        int i = g1.a();
        g1.c(0);
        a(g1);
        g1.a(g1.a() - i - 2, i);
    }

    byte[] b() {
        g g1 = new g();
        a(g1);
        return g1.b();
    }

    public boolean equals(Object obj) {
        boolean flag;
        boolean flag1;
        flag1 = false;
        flag = flag1;
        if (obj == null) goto _L2; else goto _L1
_L1:
        if (obj instanceof h) goto _L4; else goto _L3
_L3:
        flag = flag1;
_L2:
        return flag;
_L4:
        obj = (h)obj;
        flag = flag1;
        if (a == ((h) (obj)).a)
            flag = Arrays.equals(b(), ((h) (obj)).b());
        if (true) goto _L2; else goto _L5
_L5:
    }

    public int hashCode() {
        int i = 0;
        byte abyte0[] = b();
        int j = 0;
        for (; i < abyte0.length; i++)
            j += (j << 3) + (abyte0[i] & 0xff);

        return j;
    }

    public String toString() {
        StringBuffer stringbuffer = new StringBuffer();
        stringbuffer.append("{");
        stringbuffer.append(a.a(a));
        stringbuffer.append(": ");
        stringbuffer.append(a());
        stringbuffer.append("}");
        return stringbuffer.toString();
    }
}
