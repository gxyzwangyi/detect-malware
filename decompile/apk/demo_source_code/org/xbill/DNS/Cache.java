// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.io.PrintStream;
import java.util.*;

// Referenced classes of package org.xbill.DNS:
//            RRset, Record, Name, ab, 
//            NameTooLongException, o, m, s, 
//            CNAMERecord, DNAMERecord, SOARecord, ag

public class Cache {
    private static class CacheMap extends LinkedHashMap {

        private int a;

        protected boolean removeEldestEntry(java.util.Map.Entry entry) {
            boolean flag;
            if (a >= 0 && size() > a)
                flag = true;
            else
                flag = false;
            return flag;
        }

        CacheMap(int i) {
            super(16, 0.75F, true);
            a = -1;
            a = i;
        }
    }

    private static class CacheRRset extends RRset
        implements a {

        int a;
        int b;

        public final int a(int i) {
            return a - i;
        }

        public final boolean a() {
            boolean flag;
            if ((int)(System.currentTimeMillis() / 1000L) >= b)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public String toString() {
            StringBuffer stringbuffer = new StringBuffer();
            stringbuffer.append(super.toString());
            stringbuffer.append(" cl = ");
            stringbuffer.append(a);
            return stringbuffer.toString();
        }

        public CacheRRset(RRset rrset, int i, long l) {
            super(rrset);
            a = i;
            b = Cache.a(rrset.f(), l);
        }
    }

    private static interface a {

        public abstract int a(int i);

        public abstract boolean a();

        public abstract int b();
    }

    private static class b
        implements a {

        int a;
        Name b;
        int c;
        int d;

        public final int a(int i) {
            return c - i;
        }

        public final boolean a() {
            boolean flag;
            if ((int)(System.currentTimeMillis() / 1000L) >= d)
                flag = true;
            else
                flag = false;
            return flag;
        }

        public int b() {
            return a;
        }

        public String toString() {
            StringBuffer stringbuffer = new StringBuffer();
            if (a == 0)
                stringbuffer.append("NXDOMAIN " + b);
            else
                stringbuffer.append("NXRRSET " + b + " " + ag.b(a));
            stringbuffer.append(" cl = ");
            stringbuffer.append(c);
            return stringbuffer.toString();
        }

        public b(Name name, int i, SOARecord soarecord, int j, long l) {
            b = name;
            a = i;
            long l1 = 0L;
            if (soarecord != null)
                l1 = soarecord.e();
            c = j;
            d = Cache.a(l1, l);
        }
    }


    private CacheMap a;
    private int b;
    private int c;
    private int d;

    public Cache() {
        this(1);
    }

    public Cache(int i) {
        b = -1;
        c = -1;
        d = i;
        a = new CacheMap(50000);
    }

    private final int a(int i, boolean flag) {
        byte byte0 = 4;
        if (i != 1) goto _L2; else goto _L1
_L1:
        if (flag)
            i = byte0;
        else
            i = 3;
_L4:
        return i;
_L2:
        if (i == 2) {
            i = byte0;
            if (!flag)
                i = 3;
        } else
        if (i == 3)
            i = 1;
        else
            throw new IllegalArgumentException("getCred: invalid section");
        if (true) goto _L4; else goto _L3
_L3:
    }

    static int a(long l, long l1) {
        return b(l, l1);
    }

    private Object a(Name name) {
        this;
        JVM INSTR monitorenter ;
        name = ((Name) (a.get(name)));
        this;
        JVM INSTR monitorexit ;
        return name;
        name;
        throw name;
    }

    private a a(Name name, Object obj, int i, int j) {
        Object obj1 = null;
        this;
        JVM INSTR monitorenter ;
        if (i != 255)
            break MISSING_BLOCK_LABEL_29;
        name = JVM INSTR new #41  <Class IllegalArgumentException>;
        name.IllegalArgumentException("oneElement(ANY)");
        throw name;
        name;
        this;
        JVM INSTR monitorexit ;
        throw name;
        if (!(obj instanceof List)) goto _L2; else goto _L1
_L1:
        List list = (List)obj;
        int k = 0;
_L7:
        int l;
        if (k >= list.size())
            break MISSING_BLOCK_LABEL_161;
        obj = (a)list.get(k);
        l = ((a) (obj)).b();
        if (l != i) goto _L4; else goto _L3
_L3:
        if (obj != null) goto _L6; else goto _L5
_L5:
        name = obj1;
_L9:
        this;
        JVM INSTR monitorexit ;
        return name;
_L4:
        k++;
          goto _L7
_L2:
        obj = (a)obj;
        if (((a) (obj)).b() != i) goto _L8; else goto _L3
_L8:
        break MISSING_BLOCK_LABEL_161;
_L6:
        if (!((a) (obj)).a())
            break MISSING_BLOCK_LABEL_140;
        a(name, i);
        name = obj1;
          goto _L9
        i = ((a) (obj)).a(j);
        name = obj1;
        if (i >= 0)
            name = ((Name) (obj));
          goto _L9
        obj = null;
          goto _L3
    }

    private void a(Name name, int i) {
        this;
        JVM INSTR monitorenter ;
        Object obj = a.get(name);
        if (obj != null) goto _L2; else goto _L1
_L1:
        this;
        JVM INSTR monitorexit ;
        return;
_L2:
        if (!(obj instanceof List)) goto _L4; else goto _L3
_L3:
        obj = (List)obj;
        int j = 0;
_L6:
        if (j >= ((List) (obj)).size()) goto _L1; else goto _L5
_L5:
        if (((a)((List) (obj)).get(j)).b() != i)
            break MISSING_BLOCK_LABEL_104;
        ((List) (obj)).remove(j);
        if (((List) (obj)).size() == 0)
            a.remove(name);
          goto _L1
        name;
        throw name;
        j++;
          goto _L6
_L4:
        if (((a)obj).b() != i) goto _L1; else goto _L7
_L7:
        a.remove(name);
          goto _L1
    }

    private void a(Name name, a a1) {
        this;
        JVM INSTR monitorenter ;
        Object obj = a.get(name);
        if (obj != null) goto _L2; else goto _L1
_L1:
        a.put(name, a1);
_L3:
        this;
        JVM INSTR monitorexit ;
        return;
_L2:
        int j;
        j = a1.b();
        if (!(obj instanceof List))
            break MISSING_BLOCK_LABEL_118;
        name = (List)obj;
        int i = 0;
_L4:
        if (i >= name.size())
            break MISSING_BLOCK_LABEL_107;
        if (((a)name.get(i)).b() != j)
            break MISSING_BLOCK_LABEL_101;
        name.set(i, a1);
          goto _L3
        name;
        throw name;
        i++;
          goto _L4
        name.add(a1);
          goto _L3
        a a2;
label0:
        {
            a2 = (a)obj;
            if (a2.b() != j)
                break label0;
            a.put(name, a1);
        }
          goto _L3
        LinkedList linkedlist = JVM INSTR new #97  <Class LinkedList>;
        linkedlist.LinkedList();
        linkedlist.add(a2);
        linkedlist.add(a1);
        a.put(name, linkedlist);
          goto _L3
    }

    private static void a(RRset rrset, Set set) {
        if (rrset.g().c() != null) {
            rrset = rrset.c();
            while (rrset.hasNext())  {
                Name name = ((Record)rrset.next()).c();
                if (name != null)
                    set.add(name);
            }
        }
    }

    private a[] a(Object obj) {
        this;
        JVM INSTR monitorenter ;
        if (!(obj instanceof List)) goto _L2; else goto _L1
_L1:
        obj = (List)obj;
        obj = (a[])(a[])((List) (obj)).toArray(new a[((List) (obj)).size()]);
_L3:
        this;
        JVM INSTR monitorexit ;
        return ((a []) (obj));
_L2:
        a a1;
        a1 = (a)obj;
        obj = new a[1];
        obj[0] = a1;
          goto _L3
        obj;
        throw obj;
    }

    private static int b(long l, long l1) {
        long l2 = l;
        if (l1 >= 0L) {
            l2 = l;
            if (l1 < l)
                l2 = l1;
        }
        l = System.currentTimeMillis() / 1000L + l2;
        int i;
        if (l < 0L || l > 0x7fffffffL)
            i = 0x7fffffff;
        else
            i = (int)l;
        return i;
    }

    private a c(Name name, int i, int j) {
        this;
        JVM INSTR monitorenter ;
        Object obj = a(name);
        if (obj != null) goto _L2; else goto _L1
_L1:
        name = null;
_L4:
        this;
        JVM INSTR monitorexit ;
        return name;
_L2:
        name = a(name, obj, i, j);
        if (true) goto _L4; else goto _L3
_L3:
        name;
        throw name;
    }

    protected ab a(Name name, int i, int j) {
        this;
        JVM INSTR monitorenter ;
        int j1 = name.c();
        int l = j1;
_L5:
        boolean flag1;
        Name name1;
        Object obj1;
        if (l < 1)
            break MISSING_BLOCK_LABEL_472;
        boolean flag;
        if (l == 1)
            flag = true;
        else
            flag = false;
        if (l == j1)
            flag1 = true;
        else
            flag1 = false;
        if (!flag) goto _L2; else goto _L1
_L1:
        name1 = Name.a;
_L6:
        obj1 = a.get(name1);
        if (obj1 != null) goto _L4; else goto _L3
_L3:
        l--;
          goto _L5
_L2:
label0:
        {
            if (!flag1)
                break label0;
            name1 = name;
        }
          goto _L6
        name1 = new Name(name, j1 - l);
          goto _L6
_L4:
        if (!flag1 || i != 255) goto _L8; else goto _L7
_L7:
        Object obj;
        a aa[];
        obj = JVM INSTR new #161 <Class ab>;
        ((ab) (obj)).ab(6);
        aa = a(obj1);
        int k;
        int i1;
        k = 0;
        i1 = 0;
_L10:
        if (i1 >= aa.length)
            break MISSING_BLOCK_LABEL_233;
        a a1 = aa[i1];
        if (!a1.a())
            break; /* Loop/switch isn't completed */
        a(name1, a1.b());
_L11:
        i1++;
        if (true) goto _L10; else goto _L9
_L9:
        if (a1 instanceof CacheRRset) goto _L12; else goto _L11
_L12:
        if (a1.a(j) >= 0) goto _L13; else goto _L11
_L13:
        ((ab) (obj)).a((CacheRRset)a1);
        k++;
          goto _L11
        if (k <= 0) goto _L15; else goto _L14
_L14:
        name = ((Name) (obj));
_L18:
        this;
        JVM INSTR monitorexit ;
        return name;
_L8:
        if (!flag1) goto _L17; else goto _L16
_L16:
        obj = a(name1, obj1, i, j);
        if (obj == null)
            break MISSING_BLOCK_LABEL_297;
        if (!(obj instanceof CacheRRset))
            break MISSING_BLOCK_LABEL_297;
        name = JVM INSTR new #161 <Class ab>;
        name.ab(6);
        name.a((CacheRRset)obj);
          goto _L18
        if (obj == null)
            break MISSING_BLOCK_LABEL_319;
        name = new ab(2);
          goto _L18
        name;
        throw name;
        obj = a(name1, obj1, 5, j);
        if (obj == null) goto _L15; else goto _L19
_L19:
        if (!(obj instanceof CacheRRset)) goto _L15; else goto _L20
_L20:
        name = new ab(4, (CacheRRset)obj);
          goto _L18
_L17:
        obj = a(name1, obj1, 39, j);
        if (obj == null) goto _L15; else goto _L21
_L21:
        if (!(obj instanceof CacheRRset)) goto _L15; else goto _L22
_L22:
        name = new ab(5, (CacheRRset)obj);
          goto _L18
_L15:
        obj = a(name1, obj1, 2, j);
        if (obj == null)
            continue; /* Loop/switch isn't completed */
        if (!(obj instanceof CacheRRset))
            continue; /* Loop/switch isn't completed */
        name = new ab(3, (CacheRRset)obj);
          goto _L18
        if (!flag1) goto _L3; else goto _L23
_L23:
        if (a(name1, obj1, 0, j) == null) goto _L3; else goto _L24
_L24:
        name = ab.a(1);
          goto _L18
        name = ab.a(0);
          goto _L18
    }

    public ab a(o o1) {
        boolean flag;
        int l1;
        boolean flag1;
        boolean flag2;
        Object obj;
        flag2 = o1.a().b(5);
        obj = o1.b();
        l1 = o1.a().c();
        flag = false;
        flag1 = s.b("verbosecache");
        if ((l1 == 0 || l1 == 3) && obj != null) goto _L2; else goto _L1
_L1:
        o1 = null;
_L10:
        return o1;
_L2:
        int j;
        int k1;
        int i2;
        Name name;
        Name name1;
        RRset arrset[];
        HashSet hashset;
        name1 = ((Record) (obj)).j();
        k1 = ((Record) (obj)).k();
        i2 = ((Record) (obj)).m();
        hashset = new HashSet();
        arrset = o1.b(1);
        j = 0;
        name = name1;
        obj = null;
_L4:
        if (j >= arrset.length)
            break MISSING_BLOCK_LABEL_834;
        if (arrset[j].e() == i2)
            break; /* Loop/switch isn't completed */
_L5:
        j++;
        if (true) goto _L4; else goto _L3
_L3:
        int j2;
        int k2;
        Object obj1;
label0:
        {
            j2 = arrset[j].b();
            obj1 = arrset[j].d();
            k2 = a(1, flag2);
            if (j2 != k1 && k1 != 255 || !((Name) (obj1)).equals(name))
                break label0;
            a(arrset[j], k2);
            flag = true;
            obj1 = obj;
            if (name == name1) {
                obj1 = obj;
                if (obj == null)
                    obj1 = new ab(6);
                ((ab) (obj1)).a(arrset[j]);
            }
            a(arrset[j], ((Set) (hashset)));
            obj = obj1;
        }
          goto _L5
        if (j2 != 5 || !((Name) (obj1)).equals(name)) goto _L7; else goto _L6
_L6:
        a(arrset[j], k2);
        if (name == name1)
            obj = new ab(4, arrset[j]);
        name = ((CNAMERecord)arrset[j].g()).k_();
          goto _L5
_L7:
        if (j2 != 39 || !name.a(((Name) (obj1)))) goto _L5; else goto _L8
_L8:
        a(arrset[j], k2);
        if (name == name1)
            obj = new ab(5, arrset[j]);
        obj1 = (DNAMERecord)arrset[j].g();
        obj1 = name.a(((DNAMERecord) (obj1)));
        name = ((Name) (obj1));
          goto _L5
        NameTooLongException nametoolongexception;
        nametoolongexception;
        nametoolongexception = ((NameTooLongException) (obj));
_L11:
        RRset arrset1[] = o1.b(2);
        Object obj2 = null;
        obj = null;
        int k = 0;
        while (k < arrset1.length)  {
            Object obj3;
            Object obj4;
            if (arrset1[k].b() == 6 && name.a(arrset1[k].d())) {
                obj4 = arrset1[k];
                obj3 = obj2;
            } else {
                obj3 = obj2;
                obj4 = obj;
                if (arrset1[k].b() == 2) {
                    obj3 = obj2;
                    obj4 = obj;
                    if (name.a(arrset1[k].d())) {
                        obj3 = arrset1[k];
                        obj4 = obj;
                    }
                }
            }
            k++;
            obj2 = obj3;
            obj = obj4;
        }
        int i;
        if (!flag) {
            if (l1 == 3)
                i = 0;
            else
                i = k1;
            if (l1 == 3 || obj != null || obj2 == null) {
                int l = a(2, flag2);
                obj2 = null;
                if (obj != null)
                    obj2 = (SOARecord)((RRset) (obj)).g();
                a(name, i, ((SOARecord) (obj2)), l);
                obj = nametoolongexception;
                if (nametoolongexception == null) {
                    int i1;
                    if (l1 == 3)
                        i = 1;
                    else
                        i = 2;
                    obj = ab.a(i);
                }
            } else {
                a(((RRset) (obj2)), a(2, flag2));
                a(((RRset) (obj2)), ((Set) (hashset)));
                obj = nametoolongexception;
                if (nametoolongexception == null)
                    obj = new ab(3, ((RRset) (obj2)));
            }
        } else {
            obj = nametoolongexception;
            if (l1 == 0) {
                obj = nametoolongexception;
                if (obj2 != null) {
                    a(((RRset) (obj2)), a(2, flag2));
                    a(((RRset) (obj2)), ((Set) (hashset)));
                    obj = nametoolongexception;
                }
            }
        }
        o1 = o1.b(3);
        i = 0;
        do {
            if (i >= o1.length)
                break;
            i1 = o1[i].b();
            if ((i1 == 1 || i1 == 28 || i1 == 38) && hashset.contains(o1[i].d())) {
                int j1 = a(3, flag2);
                a(o1[i], j1);
            }
            i++;
        } while (true);
        o1 = ((o) (obj));
        if (flag1) {
            System.out.println("addMessage: " + obj);
            o1 = ((o) (obj));
        }
        if (true) goto _L10; else goto _L9
_L9:
        nametoolongexception = ((NameTooLongException) (obj));
          goto _L11
    }

    public void a() {
        this;
        JVM INSTR monitorenter ;
        a.clear();
        this;
        JVM INSTR monitorexit ;
        return;
        Exception exception;
        exception;
        throw exception;
    }

    public void a(int i) {
        b = i;
    }

    public void a(Name name, int i, SOARecord soarecord, int j) {
        this;
        JVM INSTR monitorenter ;
        if (soarecord == null)
            break MISSING_BLOCK_LABEL_122;
        long l = soarecord.n();
_L7:
        a a2 = c(name, i, 0);
        if (l != 0L) goto _L2; else goto _L1
_L1:
        if (a2 == null)
            break MISSING_BLOCK_LABEL_51;
        if (a2.a(j) <= 0)
            a(name, i);
_L6:
        this;
        JVM INSTR monitorexit ;
        return;
_L2:
        a a1 = a2;
        if (a2 == null) goto _L4; else goto _L3
_L3:
        a1 = a2;
        if (a2.a(j) <= 0)
            a1 = null;
_L4:
        if (a1 != null) goto _L6; else goto _L5
_L5:
        b b1 = JVM INSTR new #15  <Class Cache$b>;
        b1.b(name, i, soarecord, j, b);
        a(name, ((a) (b1)));
          goto _L6
        name;
        throw name;
        l = 0L;
          goto _L7
    }

    public void a(RRset rrset, int i) {
        this;
        JVM INSTR monitorenter ;
        int j;
        long l;
        a a2;
        Name name;
        l = rrset.f();
        name = rrset.d();
        j = rrset.b();
        a2 = c(name, j, 0);
        if (l != 0L) goto _L2; else goto _L1
_L1:
        if (a2 == null)
            break MISSING_BLOCK_LABEL_59;
        if (a2.a(i) <= 0)
            a(name, j);
_L6:
        this;
        JVM INSTR monitorexit ;
        return;
_L2:
        a a1 = a2;
        if (a2 == null) goto _L4; else goto _L3
_L3:
        a1 = a2;
        if (a2.a(i) <= 0)
            a1 = null;
_L4:
        if (a1 != null) goto _L6; else goto _L5
_L5:
        if (!(rrset instanceof CacheRRset))
            break MISSING_BLOCK_LABEL_121;
        rrset = (CacheRRset)rrset;
_L7:
        a(name, ((a) (rrset)));
          goto _L6
        rrset;
        throw rrset;
        rrset = new CacheRRset(rrset, i, c);
          goto _L7
    }

    public ab b(Name name, int i, int j) {
        return a(name, i, j);
    }

    public void b(int i) {
        c = i;
    }

    public String toString() {
        StringBuffer stringbuffer = new StringBuffer();
        this;
        JVM INSTR monitorenter ;
        Iterator iterator = a.values().iterator();
_L4:
        a aa[];
        if (!iterator.hasNext())
            break; /* Loop/switch isn't completed */
        aa = a(iterator.next());
        int i = 0;
_L2:
        if (i >= aa.length)
            break; /* Loop/switch isn't completed */
        stringbuffer.append(aa[i]);
        stringbuffer.append("\n");
        i++;
        if (true) goto _L2; else goto _L1
_L1:
        if (true) goto _L4; else goto _L3
_L3:
        this;
        JVM INSTR monitorexit ;
        return stringbuffer.toString();
        Exception exception;
        exception;
        this;
        JVM INSTR monitorexit ;
        throw exception;
    }
}
