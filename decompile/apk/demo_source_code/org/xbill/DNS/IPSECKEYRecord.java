// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.net.InetAddress;
import org.xbill.DNS.a.d;

// Referenced classes of package org.xbill.DNS:
//            Record, f, WireParseException, Name, 
//            g, d

public class IPSECKEYRecord extends Record {

    private int a;
    private int b;
    private int c;
    private Object d;
    private byte e[];

    IPSECKEYRecord() {
    }

    Record a() {
        return new IPSECKEYRecord();
    }

    void a(f f1) {
        a = f1.g();
        b = f1.g();
        c = f1.g();
        b;
        JVM INSTR tableswitch 0 3: default 60
    //                   0 70
    //                   1 91
    //                   2 106
    //                   3 122;
           goto _L1 _L2 _L3 _L4 _L5
_L1:
        throw new WireParseException("invalid gateway type");
_L2:
        d = null;
_L7:
        if (f1.b() > 0)
            e = f1.j();
        return;
_L3:
        d = InetAddress.getByAddress(f1.d(4));
        continue; /* Loop/switch isn't completed */
_L4:
        d = InetAddress.getByAddress(f1.d(16));
        continue; /* Loop/switch isn't completed */
_L5:
        d = new Name(f1);
        if (true) goto _L7; else goto _L6
_L6:
    }

    void a(g g1, org.xbill.DNS.d d1, boolean flag) {
        g1.b(a);
        g1.b(b);
        g1.b(c);
        b;
        JVM INSTR tableswitch 0 3: default 60
    //                   0 60
    //                   1 76
    //                   2 76
    //                   3 93;
           goto _L1 _L1 _L2 _L2 _L3
_L1:
        if (e != null)
            g1.a(e);
        return;
_L2:
        g1.a(((InetAddress)d).getAddress());
        continue; /* Loop/switch isn't completed */
_L3:
        ((Name)d).a(g1, null, flag);
        if (true) goto _L1; else goto _L4
_L4:
    }

    String b() {
        StringBuffer stringbuffer;
        stringbuffer = new StringBuffer();
        stringbuffer.append(a);
        stringbuffer.append(" ");
        stringbuffer.append(b);
        stringbuffer.append(" ");
        stringbuffer.append(c);
        stringbuffer.append(" ");
        b;
        JVM INSTR tableswitch 0 3: default 92
    //                   0 123
    //                   1 133
    //                   2 133
    //                   3 151;
           goto _L1 _L2 _L3 _L3 _L4
_L1:
        if (e != null) {
            stringbuffer.append(" ");
            stringbuffer.append(org.xbill.DNS.a.d.a(e));
        }
        return stringbuffer.toString();
_L2:
        stringbuffer.append(".");
        continue; /* Loop/switch isn't completed */
_L3:
        stringbuffer.append(((InetAddress)d).getHostAddress());
        continue; /* Loop/switch isn't completed */
_L4:
        stringbuffer.append(d);
        if (true) goto _L1; else goto _L5
_L5:
    }
}
