// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.util.*;

// Referenced classes of package org.xbill.DNS:
//            Record, f, h, g, 
//            d

public class OPTRecord extends Record {

    private List a;

    OPTRecord() {
    }

    Record a() {
        return new OPTRecord();
    }

    void a(f f1) {
        if (f1.b() > 0)
            a = new ArrayList();
        h h1;
        for (; f1.b() > 0; a.add(h1))
            h1 = h.b(f1);

    }

    void a(g g1, d d1, boolean flag) {
        if (a != null) {
            d1 = a.iterator();
            while (d1.hasNext()) 
                ((h)d1.next()).b(g1);
        }
    }

    String b() {
        StringBuffer stringbuffer = new StringBuffer();
        if (a != null) {
            stringbuffer.append(a);
            stringbuffer.append(" ");
        }
        stringbuffer.append(" ; payload ");
        stringbuffer.append(d());
        stringbuffer.append(", xrcode ");
        stringbuffer.append(e());
        stringbuffer.append(", version ");
        stringbuffer.append(f());
        stringbuffer.append(", flags ");
        stringbuffer.append(g());
        return stringbuffer.toString();
    }

    public int d() {
        return i;
    }

    public int e() {
        return (int)(j >>> 24);
    }

    public boolean equals(Object obj) {
        boolean flag;
        if (super.equals(obj) && j == ((OPTRecord)obj).j)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public int f() {
        return (int)(j >>> 16 & 255L);
    }

    public int g() {
        return (int)(j & 65535L);
    }
}
