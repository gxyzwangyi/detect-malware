// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.util.Date;
import org.xbill.DNS.a.d;

// Referenced classes of package org.xbill.DNS:
//            Record, Name, f, g, 
//            s, k, u, d

public class TKEYRecord extends Record {

    private Name a;
    private Date b;
    private Date c;
    private int d;
    private int e;
    private byte f[];
    private byte k[];

    TKEYRecord() {
    }

    Record a() {
        return new TKEYRecord();
    }

    void a(f f1) {
        a = new Name(f1);
        b = new Date(f1.i() * 1000L);
        c = new Date(f1.i() * 1000L);
        d = f1.h();
        e = f1.h();
        int i = f1.h();
        if (i > 0)
            f = f1.d(i);
        else
            f = null;
        i = f1.h();
        if (i > 0)
            k = f1.d(i);
        else
            k = null;
    }

    void a(g g1, org.xbill.DNS.d d1, boolean flag) {
        a.a(g1, null, flag);
        g1.a(b.getTime() / 1000L);
        g1.a(c.getTime() / 1000L);
        g1.c(d);
        g1.c(e);
        if (f != null) {
            g1.c(f.length);
            g1.a(f);
        } else {
            g1.c(0);
        }
        if (k != null) {
            g1.c(k.length);
            g1.a(k);
        } else {
            g1.c(0);
        }
    }

    String b() {
        StringBuffer stringbuffer;
        stringbuffer = new StringBuffer();
        stringbuffer.append(a);
        stringbuffer.append(" ");
        if (s.b("multiline"))
            stringbuffer.append("(\n\t");
        stringbuffer.append(org.xbill.DNS.k.a(b));
        stringbuffer.append(" ");
        stringbuffer.append(org.xbill.DNS.k.a(c));
        stringbuffer.append(" ");
        stringbuffer.append(d());
        stringbuffer.append(" ");
        stringbuffer.append(u.b(e));
        if (!s.b("multiline")) goto _L2; else goto _L1
_L1:
        stringbuffer.append("\n");
        if (f != null) {
            stringbuffer.append(org.xbill.DNS.a.d.a(f, 64, "\t", false));
            stringbuffer.append("\n");
        }
        if (k != null)
            stringbuffer.append(org.xbill.DNS.a.d.a(k, 64, "\t", false));
        stringbuffer.append(" )");
_L4:
        return stringbuffer.toString();
_L2:
        stringbuffer.append(" ");
        if (f != null) {
            stringbuffer.append(org.xbill.DNS.a.d.a(f));
            stringbuffer.append(" ");
        }
        if (k != null)
            stringbuffer.append(org.xbill.DNS.a.d.a(k));
        if (true) goto _L4; else goto _L3
_L3:
    }

    protected String d() {
        d;
        JVM INSTR tableswitch 1 5: default 40
    //                   1 50
    //                   2 56
    //                   3 62
    //                   4 68
    //                   5 74;
           goto _L1 _L2 _L3 _L4 _L5 _L6
_L1:
        String s1 = Integer.toString(d);
_L8:
        return s1;
_L2:
        s1 = "SERVERASSIGNED";
        continue; /* Loop/switch isn't completed */
_L3:
        s1 = "DIFFIEHELLMAN";
        continue; /* Loop/switch isn't completed */
_L4:
        s1 = "GSSAPI";
        continue; /* Loop/switch isn't completed */
_L5:
        s1 = "RESOLVERASSIGNED";
        continue; /* Loop/switch isn't completed */
_L6:
        s1 = "DELETE";
        if (true) goto _L8; else goto _L7
_L7:
    }
}
