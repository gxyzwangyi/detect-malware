// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.net.*;

public final class a {

    public static int a(int i) {
        if (i == 1)
            i = 4;
        else
        if (i == 2)
            i = 16;
        else
            throw new IllegalArgumentException("unknown address family");
        return i;
    }

    public static int a(InetAddress inetaddress) {
        int i;
        if (inetaddress instanceof Inet4Address)
            i = 1;
        else
        if (inetaddress instanceof Inet6Address)
            i = 2;
        else
            throw new IllegalArgumentException("unknown address family");
        return i;
    }

    public static String a(byte abyte0[]) {
        return (abyte0[0] & 0xff) + "." + (abyte0[1] & 0xff) + "." + (abyte0[2] & 0xff) + "." + (abyte0[3] & 0xff);
    }

    public static InetAddress a(InetAddress inetaddress, int i) {
        boolean flag = false;
        int j = a(a(inetaddress)) * 8;
        if (i < 0 || i > j)
            throw new IllegalArgumentException("invalid mask length");
        if (i != j) {
            inetaddress = inetaddress.getAddress();
            for (int k = i / 8 + 1; k < inetaddress.length; k++)
                inetaddress[k] = 0;

            boolean flag1 = false;
            int l = ((flag) ? 1 : 0);
            for (int i1 = ((flag1) ? 1 : 0); i1 < i % 8; i1++)
                l |= 1 << 7 - i1;

            i /= 8;
            inetaddress[i] = (byte)(l & inetaddress[i]);
            try {
                inetaddress = InetAddress.getByAddress(inetaddress);
            }
            // Misplaced declaration of an exception variable
            catch (InetAddress inetaddress) {
                throw new IllegalArgumentException("invalid address");
            }
        }
        return inetaddress;
    }
}
