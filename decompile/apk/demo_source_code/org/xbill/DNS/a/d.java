// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS.a;

import java.io.ByteArrayOutputStream;

public class d {

    public static String a(byte abyte0[]) {
        ByteArrayOutputStream bytearrayoutputstream = new ByteArrayOutputStream();
        short aword0[];
        short aword1[];
        for (int i = 0; i < (abyte0.length + 2) / 3; i++) {
            aword0 = new short[3];
            aword1 = new short[4];
            int j = 0;
            while (j < 3)  {
                if (i * 3 + j < abyte0.length)
                    aword0[j] = (short)(abyte0[i * 3 + j] & 0xff);
                else
                    aword0[j] = -1;
                j++;
            }
            aword1[0] = (short)(aword0[0] >> 2);
            if (aword0[1] == -1)
                aword1[1] = (short)((aword0[0] & 3) << 4);
            else
                aword1[1] = (short)(((aword0[0] & 3) << 4) + (aword0[1] >> 4));
            if (aword0[1] == -1) {
                aword1[3] = 64;
                aword1[2] = 64;
            } else
            if (aword0[2] == -1) {
                aword1[2] = (short)((aword0[1] & 0xf) << 2);
                aword1[3] = 64;
            } else {
                aword1[2] = (short)(((aword0[1] & 0xf) << 2) + (aword0[2] >> 6));
                aword1[3] = (short)(aword0[2] & 0x3f);
            }
            for (j = 0; j < 4; j++)
                bytearrayoutputstream.write("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(aword1[j]));

        }

        return new String(bytearrayoutputstream.toByteArray());
    }

    public static String a(byte abyte0[], int i, String s, boolean flag) {
        abyte0 = a(abyte0);
        StringBuffer stringbuffer = new StringBuffer();
        int j = 0;
        while (j < abyte0.length())  {
            stringbuffer.append(s);
            if (j + i >= abyte0.length()) {
                stringbuffer.append(abyte0.substring(j));
                if (flag)
                    stringbuffer.append(" )");
            } else {
                stringbuffer.append(abyte0.substring(j, j + i));
                stringbuffer.append("\n");
            }
            j += i;
        }
        return stringbuffer.toString();
    }
}
