// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;


// Referenced classes of package org.xbill.DNS:
//            WireParseException

public class f {

    private byte a[];
    private int b;
    private int c;
    private int d;
    private int e;

    public f(byte abyte0[]) {
        a = abyte0;
        b = 0;
        c = a.length;
        d = -1;
        e = -1;
    }

    private void e(int l) {
        if (l > b())
            throw new WireParseException("end of input");
        else
            return;
    }

    public int a() {
        return b;
    }

    public void a(int l) {
        if (l > a.length - b) {
            throw new IllegalArgumentException("cannot set active region past end of input");
        } else {
            c = b + l;
            return;
        }
    }

    public void a(byte abyte0[], int l, int i1) {
        e(i1);
        System.arraycopy(a, b, abyte0, l, i1);
        b = b + i1;
    }

    public int b() {
        return c - b;
    }

    public void b(int l) {
        if (l > a.length) {
            throw new IllegalArgumentException("cannot set active region past end of input");
        } else {
            c = l;
            return;
        }
    }

    public void c() {
        c = a.length;
    }

    public void c(int l) {
        if (l >= a.length) {
            throw new IllegalArgumentException("cannot jump past end of input");
        } else {
            b = l;
            c = a.length;
            return;
        }
    }

    public int d() {
        return c;
    }

    public byte[] d(int l) {
        e(l);
        byte abyte0[] = new byte[l];
        System.arraycopy(a, b, abyte0, 0, l);
        b = b + l;
        return abyte0;
    }

    public void e() {
        d = b;
        e = c;
    }

    public void f() {
        if (d < 0) {
            throw new IllegalStateException("no previous state");
        } else {
            b = d;
            c = e;
            d = -1;
            e = -1;
            return;
        }
    }

    public int g() {
        e(1);
        byte abyte0[] = a;
        int l = b;
        b = l + 1;
        return abyte0[l] & 0xff;
    }

    public int h() {
        e(2);
        byte abyte0[] = a;
        int l = b;
        b = l + 1;
        l = abyte0[l];
        abyte0 = a;
        int i1 = b;
        b = i1 + 1;
        return ((l & 0xff) << 8) + (abyte0[i1] & 0xff);
    }

    public long i() {
        e(4);
        byte abyte0[] = a;
        int l = b;
        b = l + 1;
        l = abyte0[l];
        abyte0 = a;
        int i1 = b;
        b = i1 + 1;
        i1 = abyte0[i1];
        abyte0 = a;
        int j1 = b;
        b = j1 + 1;
        j1 = abyte0[j1];
        abyte0 = a;
        int k1 = b;
        b = k1 + 1;
        k1 = abyte0[k1];
        long l1 = l & 0xff;
        return (long)((i1 & 0xff) << 16) + (l1 << 24) + (long)((j1 & 0xff) << 8) + (long)(k1 & 0xff);
    }

    public byte[] j() {
        int l = b();
        byte abyte0[] = new byte[l];
        System.arraycopy(a, b, abyte0, 0, l);
        b = l + b;
        return abyte0;
    }

    public byte[] k() {
        e(1);
        byte abyte0[] = a;
        int l = b;
        b = l + 1;
        return d(abyte0[l] & 0xff);
    }
}
