// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;

import java.net.InetAddress;
import java.net.UnknownHostException;

// Referenced classes of package org.xbill.DNS:
//            Record, f, g, a, 
//            Name, d

public class ARecord extends Record {

    private int a;

    ARecord() {
    }

    private static final int b(byte abyte0[]) {
        return (abyte0[0] & 0xff) << 24 | (abyte0[1] & 0xff) << 16 | (abyte0[2] & 0xff) << 8 | abyte0[3] & 0xff;
    }

    private static final byte[] b(int i) {
        return (new byte[] {
            (byte)(i >>> 24 & 0xff), (byte)(i >>> 16 & 0xff), (byte)(i >>> 8 & 0xff), (byte)(i & 0xff)
        });
    }

    Record a() {
        return new ARecord();
    }

    void a(f f1) {
        a = b(f1.d(4));
    }

    void a(g g1, d d, boolean flag) {
        g1.a((long)a & 0xffffffffL);
    }

    String b() {
        return org.xbill.DNS.a.a(b(a));
    }

    public InetAddress j_() {
        if (g != null) goto _L2; else goto _L1
_L1:
        Object obj = InetAddress.getByAddress(b(a));
_L4:
        return ((InetAddress) (obj));
_L2:
        try {
            obj = InetAddress.getByAddress(g.toString(), b(a));
        }
        catch (UnknownHostException unknownhostexception) {
            unknownhostexception = null;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }
}
