// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.xbill.DNS;


// Referenced classes of package org.xbill.DNS:
//            Record, Name, f, g, 
//            s, d

public class SOARecord extends Record {

    private Name a;
    private Name b;
    private long c;
    private long d;
    private long e;
    private long f;
    private long k;

    SOARecord() {
    }

    public SOARecord(Name name, int i, long l, Name name1, Name name2, long l1, long l2, long l3, long l4, 
            long l5) {
        super(name, 6, i, l);
        a = a("host", name1);
        b = a("admin", name2);
        c = a("serial", l1);
        d = a("refresh", l2);
        e = a("retry", l3);
        f = a("expire", l4);
        k = a("minimum", l5);
    }

    Record a() {
        return new SOARecord();
    }

    void a(f f1) {
        a = new Name(f1);
        b = new Name(f1);
        c = f1.i();
        d = f1.i();
        e = f1.i();
        f = f1.i();
        k = f1.i();
    }

    void a(g g1, d d1, boolean flag) {
        a.a(g1, d1, flag);
        b.a(g1, d1, flag);
        g1.a(c);
        g1.a(d);
        g1.a(e);
        g1.a(f);
        g1.a(k);
    }

    String b() {
        StringBuffer stringbuffer = new StringBuffer();
        stringbuffer.append(a);
        stringbuffer.append(" ");
        stringbuffer.append(b);
        if (s.b("multiline")) {
            stringbuffer.append(" (\n\t\t\t\t\t");
            stringbuffer.append(c);
            stringbuffer.append("\t; serial\n\t\t\t\t\t");
            stringbuffer.append(d);
            stringbuffer.append("\t; refresh\n\t\t\t\t\t");
            stringbuffer.append(e);
            stringbuffer.append("\t; retry\n\t\t\t\t\t");
            stringbuffer.append(f);
            stringbuffer.append("\t; expire\n\t\t\t\t\t");
            stringbuffer.append(k);
            stringbuffer.append(" )\t; minimum");
        } else {
            stringbuffer.append(" ");
            stringbuffer.append(c);
            stringbuffer.append(" ");
            stringbuffer.append(d);
            stringbuffer.append(" ");
            stringbuffer.append(e);
            stringbuffer.append(" ");
            stringbuffer.append(f);
            stringbuffer.append(" ");
            stringbuffer.append(k);
        }
        return stringbuffer.toString();
    }

    public long d() {
        return c;
    }

    public long e() {
        return k;
    }
}
