// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.operator;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import org.bouncycastle.asn1.ax;
import org.bouncycastle.asn1.c.a;
import org.bouncycastle.asn1.k;
import org.bouncycastle.asn1.k.e;
import org.bouncycastle.asn1.k.i;
import org.bouncycastle.asn1.n;
import org.bouncycastle.asn1.p.g;
import org.bouncycastle.util.f;

public class b {

    private static Map a;
    private static Set b;
    private static Map c;
    private static Set d;
    private static Map e;
    private static final n f;
    private static final n g;
    private static final n h;
    private static final n i;
    private static final n j;
    private static final n k;

    public b() {
    }

    private static i a(org.bouncycastle.asn1.o.a a1, int l) {
        return new i(a1, new org.bouncycastle.asn1.o.a(e.i, a1), new k(l), new k(1L));
    }

    private static org.bouncycastle.asn1.o.a b(String s) {
        s = org.bouncycastle.util.f.b(s);
        n n1 = (n)a.get(s);
        if (n1 == null)
            throw new IllegalArgumentException((new StringBuilder()).append("Unknown signature type requested: ").append(s).toString());
        if (b.contains(n1))
            s = new org.bouncycastle.asn1.o.a(n1);
        else
        if (c.containsKey(s))
            s = new org.bouncycastle.asn1.o.a(n1, (org.bouncycastle.asn1.f)c.get(s));
        else
            s = new org.bouncycastle.asn1.o.a(n1, ax.a);
        if (d.contains(n1))
            new org.bouncycastle.asn1.o.a(e.b, ax.a);
        if (s.a().equals(e.k))
            ((i)s.b()).a();
        else
            new org.bouncycastle.asn1.o.a((n)e.get(n1), ax.a);
        return s;
    }

    public org.bouncycastle.asn1.o.a a(String s) {
        return b(s);
    }

    static  {
        a = new HashMap();
        b = new HashSet();
        c = new HashMap();
        d = new HashSet();
        e = new HashMap();
        f = e.b;
        g = g.V;
        h = g.i;
        i = e.k;
        j = a.i;
        k = a.j;
        a.put("MD2WITHRSAENCRYPTION", e.c);
        a.put("MD2WITHRSA", e.c);
        a.put("MD5WITHRSAENCRYPTION", e.e);
        a.put("MD5WITHRSA", e.e);
        a.put("SHA1WITHRSAENCRYPTION", e.f);
        a.put("SHA1WITHRSA", e.f);
        a.put("SHA224WITHRSAENCRYPTION", e.o);
        a.put("SHA224WITHRSA", e.o);
        a.put("SHA256WITHRSAENCRYPTION", e.l);
        a.put("SHA256WITHRSA", e.l);
        a.put("SHA384WITHRSAENCRYPTION", e.m);
        a.put("SHA384WITHRSA", e.m);
        a.put("SHA512WITHRSAENCRYPTION", e.n);
        a.put("SHA512WITHRSA", e.n);
        a.put("SHA1WITHRSAANDMGF1", e.k);
        a.put("SHA224WITHRSAANDMGF1", e.k);
        a.put("SHA256WITHRSAANDMGF1", e.k);
        a.put("SHA384WITHRSAANDMGF1", e.k);
        a.put("SHA512WITHRSAANDMGF1", e.k);
        a.put("RIPEMD160WITHRSAENCRYPTION", org.bouncycastle.asn1.m.a.f);
        a.put("RIPEMD160WITHRSA", org.bouncycastle.asn1.m.a.f);
        a.put("RIPEMD128WITHRSAENCRYPTION", org.bouncycastle.asn1.m.a.g);
        a.put("RIPEMD128WITHRSA", org.bouncycastle.asn1.m.a.g);
        a.put("RIPEMD256WITHRSAENCRYPTION", org.bouncycastle.asn1.m.a.h);
        a.put("RIPEMD256WITHRSA", org.bouncycastle.asn1.m.a.h);
        a.put("SHA1WITHDSA", g.V);
        a.put("DSAWITHSHA1", g.V);
        a.put("SHA224WITHDSA", org.bouncycastle.asn1.h.a.L);
        a.put("SHA256WITHDSA", org.bouncycastle.asn1.h.a.M);
        a.put("SHA384WITHDSA", org.bouncycastle.asn1.h.a.N);
        a.put("SHA512WITHDSA", org.bouncycastle.asn1.h.a.O);
        a.put("SHA1WITHECDSA", g.i);
        a.put("ECDSAWITHSHA1", g.i);
        a.put("SHA224WITHECDSA", g.m);
        a.put("SHA256WITHECDSA", g.n);
        a.put("SHA384WITHECDSA", g.o);
        a.put("SHA512WITHECDSA", g.p);
        a.put("GOST3411WITHGOST3410", a.k);
        a.put("GOST3411WITHGOST3410-94", a.k);
        a.put("GOST3411WITHECGOST3410", a.l);
        a.put("GOST3411WITHECGOST3410-2001", a.l);
        a.put("GOST3411WITHGOST3410-2001", a.l);
        a.put("SHA1WITHPLAIN-ECDSA", org.bouncycastle.asn1.a.a.d);
        a.put("SHA224WITHPLAIN-ECDSA", org.bouncycastle.asn1.a.a.e);
        a.put("SHA256WITHPLAIN-ECDSA", org.bouncycastle.asn1.a.a.f);
        a.put("SHA384WITHPLAIN-ECDSA", org.bouncycastle.asn1.a.a.g);
        a.put("SHA512WITHPLAIN-ECDSA", org.bouncycastle.asn1.a.a.h);
        a.put("RIPEMD160WITHPLAIN-ECDSA", org.bouncycastle.asn1.a.a.i);
        a.put("SHA1WITHCVC-ECDSA", org.bouncycastle.asn1.d.a.s);
        a.put("SHA224WITHCVC-ECDSA", org.bouncycastle.asn1.d.a.t);
        a.put("SHA256WITHCVC-ECDSA", org.bouncycastle.asn1.d.a.u);
        a.put("SHA384WITHCVC-ECDSA", org.bouncycastle.asn1.d.a.v);
        a.put("SHA512WITHCVC-ECDSA", org.bouncycastle.asn1.d.a.w);
        b.add(g.i);
        b.add(g.m);
        b.add(g.n);
        b.add(g.o);
        b.add(g.p);
        b.add(g.V);
        b.add(org.bouncycastle.asn1.h.a.L);
        b.add(org.bouncycastle.asn1.h.a.M);
        b.add(org.bouncycastle.asn1.h.a.N);
        b.add(org.bouncycastle.asn1.h.a.O);
        b.add(a.k);
        b.add(a.l);
        d.add(e.f);
        d.add(e.o);
        d.add(e.l);
        d.add(e.m);
        d.add(e.n);
        d.add(org.bouncycastle.asn1.m.a.g);
        d.add(org.bouncycastle.asn1.m.a.f);
        d.add(org.bouncycastle.asn1.m.a.h);
        org.bouncycastle.asn1.o.a a1 = new org.bouncycastle.asn1.o.a(org.bouncycastle.asn1.j.a.i, ax.a);
        c.put("SHA1WITHRSAANDMGF1", a(a1, 20));
        a1 = new org.bouncycastle.asn1.o.a(org.bouncycastle.asn1.h.a.f, ax.a);
        c.put("SHA224WITHRSAANDMGF1", a(a1, 28));
        a1 = new org.bouncycastle.asn1.o.a(org.bouncycastle.asn1.h.a.c, ax.a);
        c.put("SHA256WITHRSAANDMGF1", a(a1, 32));
        a1 = new org.bouncycastle.asn1.o.a(org.bouncycastle.asn1.h.a.d, ax.a);
        c.put("SHA384WITHRSAANDMGF1", a(a1, 48));
        a1 = new org.bouncycastle.asn1.o.a(org.bouncycastle.asn1.h.a.e, ax.a);
        c.put("SHA512WITHRSAANDMGF1", a(a1, 64));
        e.put(e.o, org.bouncycastle.asn1.h.a.f);
        e.put(e.l, org.bouncycastle.asn1.h.a.c);
        e.put(e.m, org.bouncycastle.asn1.h.a.d);
        e.put(e.n, org.bouncycastle.asn1.h.a.e);
        e.put(e.c, e.F);
        e.put(e.d, e.G);
        e.put(e.e, e.H);
        e.put(e.f, org.bouncycastle.asn1.j.a.i);
        e.put(org.bouncycastle.asn1.m.a.g, org.bouncycastle.asn1.m.a.c);
        e.put(org.bouncycastle.asn1.m.a.f, org.bouncycastle.asn1.m.a.b);
        e.put(org.bouncycastle.asn1.m.a.h, org.bouncycastle.asn1.m.a.d);
        e.put(a.k, a.b);
        e.put(a.l, a.b);
    }
}
