// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.b.a;

import java.math.BigInteger;
import org.bouncycastle.b.a.a.a;
import org.bouncycastle.b.b.b;

// Referenced classes of package org.bouncycastle.b.a:
//            f, d, a, e

public abstract class org.bouncycastle.b.a.c {
    public static abstract class a extends org.bouncycastle.b.a.c {

        private BigInteger i[];

        private static org.bouncycastle.b.b.b a(int j, int k, int l, int i1) {
            if (k == 0)
                throw new IllegalArgumentException("k1 must be > 0");
            org.bouncycastle.b.b.g g1;
            if (l == 0) {
                if (i1 != 0)
                    throw new IllegalArgumentException("k3 must be 0 if k2 == 0");
                g1 = org.bouncycastle.b.b.c.a(new int[] {
                    0, k, j
                });
            } else {
                if (l <= k)
                    throw new IllegalArgumentException("k2 must be > k1");
                if (i1 <= l)
                    throw new IllegalArgumentException("k3 must be > k2");
                g1 = org.bouncycastle.b.b.c.a(new int[] {
                    0, k, l, i1, j
                });
            }
            return g1;
        }

        public f b(BigInteger biginteger, BigInteger biginteger1, boolean flag) {
            org.bouncycastle.b.a.d d1;
            d1 = a(biginteger);
            biginteger1 = a(biginteger1);
            g();
            JVM INSTR tableswitch 5 6: default 40
        //                       5 51
        //                       6 51;
               goto _L1 _L2 _L2
_L1:
            biginteger = biginteger1;
_L4:
            return a(d1, biginteger, flag);
_L2:
            if (d1.j()) {
                biginteger = biginteger1;
                if (!biginteger1.e().equals(e()))
                    throw new IllegalArgumentException();
            } else {
                biginteger = biginteger1.d(d1).a(d1);
            }
            if (true) goto _L4; else goto _L3
_L3:
        }

        protected a(int j, int k, int l, int i1) {
            super(a(j, k, l, i1));
            i = null;
        }
    }

    public static abstract class b extends org.bouncycastle.b.a.c {

        protected b(BigInteger biginteger) {
            super(org.bouncycastle.b.b.c.a(biginteger));
        }
    }

    public static class c extends a {

        private int i;
        private int j;
        private int k;
        private int l;
        private f.c m;

        public int a() {
            return i;
        }

        public org.bouncycastle.b.a.d a(BigInteger biginteger) {
            return new d.a(i, j, k, l, biginteger);
        }

        protected f a(org.bouncycastle.b.a.d d1, org.bouncycastle.b.a.d d2, boolean flag) {
            return new f.c(this, d1, d2, flag);
        }

        public f b() {
            return m;
        }

        public c(int i1, int j1, int k1, int l1, BigInteger biginteger, BigInteger biginteger1) {
            this(i1, j1, k1, l1, biginteger, biginteger1, null, null);
        }

        public c(int i1, int j1, int k1, int l1, BigInteger biginteger, BigInteger biginteger1, BigInteger biginteger2, 
                BigInteger biginteger3) {
            super(i1, j1, k1, l1);
            i = i1;
            j = j1;
            k = k1;
            l = l1;
            d = biginteger2;
            e = biginteger3;
            m = new f.c(this, null, null);
            b = a(biginteger);
            c = a(biginteger1);
            f = 6;
        }
    }

    public static class d extends b {

        BigInteger i;
        BigInteger j;
        f.d k;

        public int a() {
            return i.bitLength();
        }

        public org.bouncycastle.b.a.d a(BigInteger biginteger) {
            return new d.b(i, j, biginteger);
        }

        protected f a(org.bouncycastle.b.a.d d1, org.bouncycastle.b.a.d d2, boolean flag) {
            return new f.d(this, d1, d2, flag);
        }

        public f a(f f1) {
            if (this == f1.c() || g() != 2 || f1.k()) goto _L2; else goto _L1
_L1:
            f1.c().g();
            JVM INSTR tableswitch 2 4: default 56
        //                       2 64
        //                       3 64
        //                       4 64;
               goto _L2 _L3 _L3 _L3
_L2:
            f1 = super.a(f1);
_L5:
            return f1;
_L3:
            org.bouncycastle.b.a.d d2 = a(f1.c.a());
            org.bouncycastle.b.a.d d1 = a(f1.d.a());
            org.bouncycastle.b.a.d d3 = a(f1.e[0].a());
            boolean flag = f1.f;
            f1 = new f.d(this, d2, d1, new org.bouncycastle.b.a.d[] {
                d3
            }, flag);
            if (true) goto _L5; else goto _L4
_L4:
        }

        public f b() {
            return k;
        }

        public d(BigInteger biginteger, BigInteger biginteger1, BigInteger biginteger2) {
            this(biginteger, biginteger1, biginteger2, null, null);
        }

        public d(BigInteger biginteger, BigInteger biginteger1, BigInteger biginteger2, BigInteger biginteger3, BigInteger biginteger4) {
            super(biginteger);
            i = biginteger;
            j = org.bouncycastle.b.a.d.b.a(biginteger);
            k = new f.d(this, null, null);
            b = a(biginteger1);
            c = a(biginteger2);
            d = biginteger3;
            e = biginteger4;
            f = 4;
        }
    }


    protected org.bouncycastle.b.b.b a;
    protected org.bouncycastle.b.a.d b;
    protected org.bouncycastle.b.a.d c;
    protected BigInteger d;
    protected BigInteger e;
    protected int f;
    protected org.bouncycastle.b.a.a.a g;
    protected e h;

    protected org.bouncycastle.b.a.c(org.bouncycastle.b.b.b b1) {
        f = 0;
        g = null;
        h = null;
        a = b1;
    }

    public abstract int a();

    public abstract org.bouncycastle.b.a.d a(BigInteger biginteger);

    public f a(BigInteger biginteger, BigInteger biginteger1, boolean flag) {
        biginteger = b(biginteger, biginteger1, flag);
        if (!biginteger.l())
            throw new IllegalArgumentException("Invalid point coordinates");
        else
            return biginteger;
    }

    protected abstract f a(org.bouncycastle.b.a.d d1, org.bouncycastle.b.a.d d2, boolean flag);

    public f a(f f1) {
        if (this != f1.c())
            if (f1.k()) {
                f1 = b();
            } else {
                f1 = f1.j();
                f1 = a(f1.e().a(), f1.f().a(), f1.f);
            }
        return f1;
    }

    public void a(f af[]) {
        a(af, 0, af.length, null);
    }

    protected void a(f af[], int i, int j) {
        if (af == null)
            throw new IllegalArgumentException("'points' cannot be null");
        if (i < 0 || j < 0 || i > af.length - j)
            throw new IllegalArgumentException("invalid range specified for 'points'");
        for (int k = 0; k < j; k++) {
            f f1 = af[i + k];
            if (f1 != null && this != f1.c())
                throw new IllegalArgumentException("'points' entries must be null or on this curve");
        }

    }

    public void a(f af[], int i, int j, org.bouncycastle.b.a.d d1) {
        a(af, i, j);
        switch (g()) {
        default:
            org.bouncycastle.b.a.d ad[] = new org.bouncycastle.b.a.d[j];
            int ai[] = new int[j];
            int l = 0;
            int k = 0;
label0:
            do {
                int i1;
label1:
                {
                    if (l >= j)
                        break label0;
                    f f1 = af[i + l];
                    i1 = k;
                    if (f1 == null)
                        break label1;
                    if (d1 == null) {
                        i1 = k;
                        if (f1.i())
                            break label1;
                    }
                    ad[k] = f1.a(0);
                    ai[k] = i + l;
                    i1 = k + 1;
                }
                l++;
                k = i1;
            } while (true);
            if (k != 0) {
                org.bouncycastle.b.a.a.a(ad, 0, k, d1);
                i = 0;
                while (i < k)  {
                    j = ai[i];
                    af[j] = af[j].a(ad[i]);
                    i++;
                }
            }
            break;

        case 0: // '\0'
        case 5: // '\005'
            if (d1 != null)
                throw new IllegalArgumentException("'iso' not valid for affine coordinates");
            break;
        }
    }

    public boolean a(org.bouncycastle.b.a.c c1) {
        boolean flag;
        if (this == c1 || c1 != null && c().equals(c1.c()) && d().a().equals(c1.d().a()) && e().a().equals(c1.e().a()))
            flag = true;
        else
            flag = false;
        return flag;
    }

    public abstract f b();

    public f b(BigInteger biginteger, BigInteger biginteger1, boolean flag) {
        return a(a(biginteger), a(biginteger1), flag);
    }

    public org.bouncycastle.b.b.b c() {
        return a;
    }

    public org.bouncycastle.b.a.d d() {
        return b;
    }

    public org.bouncycastle.b.a.d e() {
        return c;
    }

    public boolean equals(Object obj) {
        boolean flag;
        if (this == obj || (obj instanceof org.bouncycastle.b.a.c) && a((org.bouncycastle.b.a.c)obj))
            flag = true;
        else
            flag = false;
        return flag;
    }

    public BigInteger f() {
        return e;
    }

    public int g() {
        return f;
    }

    public int hashCode() {
        return c().hashCode() ^ org.bouncycastle.util.c.a(d().a().hashCode(), 8) ^ org.bouncycastle.util.c.a(e().a().hashCode(), 16);
    }
}
