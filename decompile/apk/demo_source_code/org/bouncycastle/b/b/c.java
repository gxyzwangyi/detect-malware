// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.b.b;

import java.math.BigInteger;

// Referenced classes of package org.bouncycastle.b.b:
//            h, e, d, b, 
//            g

public abstract class c {

    static final b a = new h(BigInteger.valueOf(2L));
    static final b b = new h(BigInteger.valueOf(3L));

    public static b a(BigInteger biginteger) {
        int i;
        i = biginteger.bitLength();
        if (biginteger.signum() <= 0 || i < 2)
            throw new IllegalArgumentException("'characteristic' must be >= 2");
        if (i >= 3) goto _L2; else goto _L1
_L1:
        biginteger.intValue();
        JVM INSTR tableswitch 2 3: default 60
    //                   2 71
    //                   3 78;
           goto _L2 _L3 _L4
_L2:
        biginteger = new h(biginteger);
_L6:
        return biginteger;
_L3:
        biginteger = a;
        continue; /* Loop/switch isn't completed */
_L4:
        biginteger = b;
        if (true) goto _L6; else goto _L5
_L5:
    }

    public static g a(int ai[]) {
        if (ai[0] != 0)
            throw new IllegalArgumentException("Irreducible polynomials in GF(2) must have constant term");
        for (int i = 1; i < ai.length; i++)
            if (ai[i] <= ai[i - 1])
                throw new IllegalArgumentException("Polynomial exponents must be montonically increasing");

        return new e(a, new d(ai));
    }

}
