// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1;

import java.io.*;
import org.bouncycastle.util.io.a;

// Referenced classes of package org.bouncycastle.asn1:
//            ca, bt, c, ao, 
//            d, h, i, at, 
//            aw, k, ax, ay, 
//            n, az, bc, bh, 
//            bl, aa, bk, bn, 
//            av, bm, an, w, 
//            g, o, ae, bx, 
//            as, aq, bv, ac, 
//            al, af, ah, aj, 
//            ar, ASN1Exception, r

public class j extends FilterInputStream {

    private final int a;
    private final boolean b;
    private final byte c[][];

    public j(InputStream inputstream) {
        this(inputstream, org.bouncycastle.asn1.ca.a(inputstream));
    }

    public j(InputStream inputstream, int l) {
        this(inputstream, l, false);
    }

    public j(InputStream inputstream, int l, boolean flag) {
        super(inputstream);
        a = l;
        b = flag;
        c = new byte[11][];
    }

    public j(InputStream inputstream, boolean flag) {
        this(inputstream, org.bouncycastle.asn1.ca.a(inputstream), flag);
    }

    public j(byte abyte0[]) {
        this(((InputStream) (new ByteArrayInputStream(abyte0))), abyte0.length);
    }

    public j(byte abyte0[], boolean flag) {
        this(((InputStream) (new ByteArrayInputStream(abyte0))), abyte0.length, flag);
    }

    static int a(InputStream inputstream, int l) {
        int i1 = l & 0x1f;
        l = i1;
        if (i1 == 31) {
            int j1 = 0;
            int k1 = inputstream.read();
            l = k1;
            if ((k1 & 0x7f) == 0)
                throw new IOException("corrupted stream - invalid high tag number found");
            for (; l >= 0 && (l & 0x80) != 0; l = inputstream.read())
                j1 = (l & 0x7f | j1) << 7;

            if (l < 0)
                throw new EOFException("EOF found inside tag value.");
            l = l & 0x7f | j1;
        }
        return l;
    }

    static r a(int l, bt bt1, byte abyte0[][]) {
        l;
        JVM INSTR tableswitch 1 30: default 136
    //                   1 194
    //                   2 263
    //                   3 168
    //                   4 313
    //                   5 279
    //                   6 301
    //                   7 136
    //                   8 136
    //                   9 136
    //                   10 206
    //                   11 136
    //                   12 388
    //                   13 136
    //                   14 136
    //                   15 136
    //                   16 136
    //                   17 136
    //                   18 286
    //                   19 328
    //                   20 343
    //                   21 433
    //                   22 248
    //                   23 373
    //                   24 218
    //                   25 418
    //                   26 403
    //                   27 233
    //                   28 358
    //                   29 136
    //                   30 179;
           goto _L1 _L2 _L3 _L4 _L5 _L6 _L7 _L1 _L1 _L1 _L8 _L1 _L9 _L1 _L1 _L1 _L1 _L1 _L10 _L11 _L12 _L13 _L14 _L15 _L16 _L17 _L18 _L19 _L20 _L1 _L21
_L1:
        throw new IOException((new StringBuilder()).append("unknown tag ").append(l).append(" encountered").toString());
_L4:
        bt1 = org.bouncycastle.asn1.c.a(bt1.a(), bt1);
_L23:
        return bt1;
_L21:
        bt1 = new ao(b(bt1));
        continue; /* Loop/switch isn't completed */
_L2:
        bt1 = org.bouncycastle.asn1.d.a(a(bt1, abyte0));
        continue; /* Loop/switch isn't completed */
_L8:
        bt1 = org.bouncycastle.asn1.h.a(a(bt1, abyte0));
        continue; /* Loop/switch isn't completed */
_L16:
        bt1 = new i(bt1.b());
        continue; /* Loop/switch isn't completed */
_L19:
        bt1 = new at(bt1.b());
        continue; /* Loop/switch isn't completed */
_L14:
        bt1 = new aw(bt1.b());
        continue; /* Loop/switch isn't completed */
_L3:
        bt1 = new k(bt1.b(), false);
        continue; /* Loop/switch isn't completed */
_L6:
        bt1 = org.bouncycastle.asn1.ax.a;
        continue; /* Loop/switch isn't completed */
_L10:
        bt1 = new ay(bt1.b());
        continue; /* Loop/switch isn't completed */
_L7:
        bt1 = org.bouncycastle.asn1.n.a(a(bt1, abyte0));
        continue; /* Loop/switch isn't completed */
_L5:
        bt1 = new az(bt1.b());
        continue; /* Loop/switch isn't completed */
_L11:
        bt1 = new bc(bt1.b());
        continue; /* Loop/switch isn't completed */
_L12:
        bt1 = new bh(bt1.b());
        continue; /* Loop/switch isn't completed */
_L20:
        bt1 = new bl(bt1.b());
        continue; /* Loop/switch isn't completed */
_L15:
        bt1 = new aa(bt1.b());
        continue; /* Loop/switch isn't completed */
_L9:
        bt1 = new bk(bt1.b());
        continue; /* Loop/switch isn't completed */
_L18:
        bt1 = new bn(bt1.b());
        continue; /* Loop/switch isn't completed */
_L17:
        bt1 = new av(bt1.b());
        continue; /* Loop/switch isn't completed */
_L13:
        bt1 = new bm(bt1.b());
        if (true) goto _L23; else goto _L22
_L22:
    }

    private static byte[] a(bt bt1, byte abyte0[][]) {
        int l = bt1.a();
        byte abyte1[];
        if (bt1.a() < abyte0.length) {
            byte abyte2[] = abyte0[l];
            abyte1 = abyte2;
            if (abyte2 == null) {
                abyte1 = new byte[l];
                abyte0[l] = abyte1;
            }
            org.bouncycastle.util.io.a.a(bt1, abyte1);
        } else {
            abyte1 = bt1.b();
        }
        return abyte1;
    }

    static int b(InputStream inputstream, int l) {
        int i1 = 0;
        int k1 = inputstream.read();
        if (k1 < 0)
            throw new EOFException("EOF found when length expected");
        int j1;
        if (k1 == 128) {
            j1 = -1;
        } else {
            j1 = k1;
            if (k1 > 127) {
                int l1 = k1 & 0x7f;
                if (l1 > 4)
                    throw new IOException((new StringBuilder()).append("DER length more than 4 bytes: ").append(l1).toString());
                k1 = 0;
                j1 = i1;
                for (i1 = k1; j1 < l1; i1 = k1 + (i1 << 8)) {
                    k1 = inputstream.read();
                    if (k1 < 0)
                        throw new EOFException("EOF found reading length");
                    j1++;
                }

                if (i1 < 0)
                    throw new IOException("corrupted stream - negative length found");
                j1 = i1;
                if (i1 >= l)
                    throw new IOException("corrupted stream - out of bounds length found");
            }
        }
        return j1;
    }

    private static char[] b(bt bt1) {
        int l;
        int i1;
        char ac1[];
        i1 = bt1.a() / 2;
        ac1 = new char[i1];
        l = 0;
_L6:
        if (l >= i1) goto _L2; else goto _L1
_L1:
        int j1 = bt1.read();
        if (j1 >= 0) goto _L3; else goto _L2
_L2:
        int k1;
        return ac1;
_L3:
        if ((k1 = bt1.read()) < 0) goto _L2; else goto _L4
_L4:
        ac1[l] = (char)(j1 << 8 | k1 & 0xff);
        l++;
        if (true) goto _L6; else goto _L5
_L5:
    }

    int a() {
        return a;
    }

    g a(bt bt1) {
        return (new j(bt1)).c();
    }

    protected r a(int l, int i1, int j1) {
        boolean flag;
        boolean flag1;
        Object obj;
        flag = false;
        if ((l & 0x20) != 0)
            flag1 = true;
        else
            flag1 = false;
        obj = new bt(this, j1);
        if ((l & 0x40) == 0) goto _L2; else goto _L1
_L1:
        obj = new an(flag1, i1, ((bt) (obj)).b());
_L4:
        return ((r) (obj));
_L2:
        if ((l & 0x80) == 0)
            break; /* Loop/switch isn't completed */
        obj = (new w(((InputStream) (obj)))).a(flag1, i1);
        if (true) goto _L4; else goto _L3
_L3:
        if (flag1)
            switch (i1) {
            default:
                throw new IOException((new StringBuilder()).append("unknown tag ").append(i1).append(" encountered").toString());

            case 4: // '\004'
                obj = a(((bt) (obj)));
                o ao1[] = new o[((g) (obj)).a()];
                for (l = ((flag) ? 1 : 0); l != ao1.length; l++)
                    ao1[l] = (o)((g) (obj)).a(l);

                obj = new ae(ao1);
                break;

            case 16: // '\020'
                if (b)
                    obj = new bx(((bt) (obj)).b());
                else
                    obj = org.bouncycastle.asn1.as.a(a(((bt) (obj))));
                break;

            case 17: // '\021'
                obj = as.b(a(((bt) (obj))));
                break;

            case 8: // '\b'
                obj = new aq(a(((bt) (obj))));
                break;
            }
        else
            obj = a(i1, ((bt) (obj)), c);
        if (true) goto _L4; else goto _L5
_L5:
    }

    protected int b() {
        return b(((InputStream) (this)), a);
    }

    g c() {
        g g1 = new g();
        do {
            r r = d();
            if (r != null)
                g1.a(r);
            else
                return g1;
        } while (true);
    }

    public r d() {
        int l = read();
        if (l > 0) goto _L2; else goto _L1
_L1:
        Object obj;
        if (l == 0)
            throw new IOException("unexpected end-of-contents marker");
        obj = null;
_L4:
        return ((r) (obj));
_L2:
        int i1 = a(this, l);
        boolean flag;
        int j1;
        if ((l & 0x20) != 0)
            flag = true;
        else
            flag = false;
        j1 = b();
        if (j1 < 0) {
            if (!flag)
                throw new IOException("indefinite-length primitive encoding encountered");
            obj = new w(new bv(this, a), a);
            if ((l & 0x40) != 0)
                obj = (new ac(i1, ((w) (obj)))).e();
            else
            if ((l & 0x80) != 0) {
                obj = (new al(true, i1, ((w) (obj)))).e();
            } else {
                switch (i1) {
                default:
                    throw new IOException("unknown BER object encountered");

                case 4: // '\004'
                    obj = (new af(((w) (obj)))).e();
                    break;

                case 16: // '\020'
                    obj = (new ah(((w) (obj)))).e();
                    break;

                case 17: // '\021'
                    obj = (new aj(((w) (obj)))).e();
                    break;

                case 8: // '\b'
                    obj = (new ar(((w) (obj)))).e();
                    break;
                }
                if (false)
                    ;
            }
        } else {
            try {
                obj = a(l, i1, j1);
            }
            catch (IllegalArgumentException illegalargumentexception) {
                throw new ASN1Exception("corrupted stream detected", illegalargumentexception);
            }
        }
        if (true) goto _L4; else goto _L3
_L3:
    }
}
