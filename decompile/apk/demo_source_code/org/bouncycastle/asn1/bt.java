// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1;

import java.io.EOFException;
import java.io.InputStream;
import org.bouncycastle.util.io.a;

// Referenced classes of package org.bouncycastle.asn1:
//            by

class bt extends by {

    private static final byte b[] = new byte[0];
    private final int c;
    private int d;

    bt(InputStream inputstream, int i) {
        super(inputstream, i);
        if (i < 0)
            throw new IllegalArgumentException("negative lengths not allowed");
        c = i;
        d = i;
        if (i == 0)
            b(true);
    }

    int a() {
        return d;
    }

    byte[] b() {
        byte abyte0[];
        if (d == 0) {
            abyte0 = b;
        } else {
            abyte0 = new byte[d];
            int i = d - org.bouncycastle.util.io.a.a(a, abyte0);
            d = i;
            if (i != 0)
                throw new EOFException((new StringBuilder()).append("DEF length ").append(c).append(" object truncated by ").append(d).toString());
            b(true);
        }
        return abyte0;
    }

    public int read() {
        if (d != 0) goto _L2; else goto _L1
_L1:
        int i = -1;
_L4:
        return i;
_L2:
        int j = a.read();
        if (j < 0)
            throw new EOFException((new StringBuilder()).append("DEF length ").append(c).append(" object truncated by ").append(d).toString());
        int k = d - 1;
        d = k;
        i = j;
        if (k == 0) {
            b(true);
            i = j;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public int read(byte abyte0[], int i, int j) {
        if (d != 0) goto _L2; else goto _L1
_L1:
        i = -1;
_L4:
        return i;
_L2:
        j = Math.min(j, d);
        j = a.read(abyte0, i, j);
        if (j < 0)
            throw new EOFException((new StringBuilder()).append("DEF length ").append(c).append(" object truncated by ").append(d).toString());
        int k = d - j;
        d = k;
        i = j;
        if (k == 0) {
            b(true);
            i = j;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

}
