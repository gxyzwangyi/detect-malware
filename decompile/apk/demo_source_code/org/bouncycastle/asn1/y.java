// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1;

import java.io.IOException;

// Referenced classes of package org.bouncycastle.asn1:
//            r, z, e, f, 
//            u, bi, bs, q

public abstract class y extends r
    implements z {

    int a;
    boolean b;
    boolean c;
    f d;

    public y(boolean flag, int i, f f1) {
        b = false;
        c = true;
        d = null;
        if (f1 instanceof e)
            c = true;
        else
            c = flag;
        a = i;
        if (c) {
            d = f1;
        } else {
            if (!(f1.h() instanceof u));
            d = f1;
        }
    }

    public static y a(Object obj) {
        if (obj == null || (obj instanceof y))
            obj = (y)obj;
        else
        if (obj instanceof byte[])
            try {
                obj = a(b((byte[])(byte[])obj));
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                throw new IllegalArgumentException((new StringBuilder()).append("failed to construct tagged object from byte[]: ").append(((IOException) (obj)).getMessage()).toString());
            }
        else
            throw new IllegalArgumentException((new StringBuilder()).append("unknown object in getInstance: ").append(obj.getClass().getName()).toString());
        return ((y) (obj));
    }

    public static y a(y y1, boolean flag) {
        if (flag)
            return (y)y1.j();
        else
            throw new IllegalArgumentException("implicitly tagged tagged object");
    }

    abstract void a(q q);

    boolean a(r r1) {
        boolean flag1 = false;
        if (r1 instanceof y) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L8:
        return flag;
_L2:
        r1 = (y)r1;
        flag = flag1;
        if (a != ((y) (r1)).a)
            continue; /* Loop/switch isn't completed */
        flag = flag1;
        if (b != ((y) (r1)).b)
            continue; /* Loop/switch isn't completed */
        flag = flag1;
        if (c != ((y) (r1)).c)
            continue; /* Loop/switch isn't completed */
        if (d != null) goto _L4; else goto _L3
_L3:
        flag = flag1;
        if (((y) (r1)).d != null)
            continue; /* Loop/switch isn't completed */
_L6:
        flag = true;
        continue; /* Loop/switch isn't completed */
_L4:
        if (d.h().equals(((y) (r1)).d.h())) goto _L6; else goto _L5
_L5:
        flag = flag1;
        if (true) goto _L8; else goto _L7
_L7:
    }

    public int c() {
        return a;
    }

    public boolean d() {
        return c;
    }

    public r e() {
        return h();
    }

    r f() {
        return new bi(c, a, d);
    }

    r g() {
        return new bs(c, a, d);
    }

    public int hashCode() {
        int k = a;
        int i = k;
        if (d != null)
            i = k ^ d.hashCode();
        return i;
    }

    public r j() {
        r r1;
        if (d != null)
            r1 = d.h();
        else
            r1 = null;
        return r1;
    }

    public String toString() {
        return (new StringBuilder()).append("[").append(a).append("]").append(d).toString();
    }
}
