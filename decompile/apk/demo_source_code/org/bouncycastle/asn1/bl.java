// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import org.bouncycastle.util.a;

// Referenced classes of package org.bouncycastle.asn1:
//            r, x, q, ca

public class bl extends r
    implements x {

    private static final char a[] = {
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 
        'A', 'B', 'C', 'D', 'E', 'F'
    };
    private final byte b[];

    public bl(byte abyte0[]) {
        b = abyte0;
    }

    void a(q q1) {
        q1.a(28, d());
    }

    boolean a() {
        return false;
    }

    boolean a(r r1) {
        boolean flag;
        if (!(r1 instanceof bl))
            flag = false;
        else
            flag = org.bouncycastle.util.a.a(b, ((bl)r1).b);
        return flag;
    }

    int b() {
        return org.bouncycastle.asn1.ca.a(b.length) + 1 + b.length;
    }

    public String c() {
        Object obj = new StringBuffer("#");
        ByteArrayOutputStream bytearrayoutputstream = new ByteArrayOutputStream();
        q q1 = new q(bytearrayoutputstream);
        byte abyte0[];
        try {
            q1.a(this);
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            throw new RuntimeException("internal error encoding BitString");
        }
        abyte0 = bytearrayoutputstream.toByteArray();
        for (int i = 0; i != abyte0.length; i++) {
            ((StringBuffer) (obj)).append(a[abyte0[i] >>> 4 & 0xf]);
            ((StringBuffer) (obj)).append(a[abyte0[i] & 0xf]);
        }

        return ((StringBuffer) (obj)).toString();
    }

    public byte[] d() {
        return b;
    }

    public int hashCode() {
        return org.bouncycastle.util.a.a(b);
    }

    public String toString() {
        return c();
    }

}
