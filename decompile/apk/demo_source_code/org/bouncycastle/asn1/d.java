// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1;

import java.io.IOException;
import org.bouncycastle.util.a;

// Referenced classes of package org.bouncycastle.asn1:
//            r, y, o, q

public class d extends r {

    public static final d a = new d(false);
    public static final d b = new d(true);
    private static final byte c[] = {
        -1
    };
    private static final byte d[] = {
        0
    };
    private final byte e[];

    public d(boolean flag) {
        byte abyte0[];
        if (flag)
            abyte0 = c;
        else
            abyte0 = d;
        e = abyte0;
    }

    d(byte abyte0[]) {
        if (abyte0.length != 1)
            throw new IllegalArgumentException("byte value should have 1 byte in it");
        if (abyte0[0] == 0)
            e = d;
        else
        if ((abyte0[0] & 0xff) == 255)
            e = c;
        else
            e = org.bouncycastle.util.a.b(abyte0);
    }

    public static d a(Object obj) {
        if (obj == null || (obj instanceof d))
            obj = (d)obj;
        else
        if (obj instanceof byte[]) {
            obj = (byte[])(byte[])obj;
            try {
                obj = (d)b(((byte []) (obj)));
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                throw new IllegalArgumentException((new StringBuilder()).append("failed to construct boolean from byte[]: ").append(((IOException) (obj)).getMessage()).toString());
            }
        } else {
            throw new IllegalArgumentException((new StringBuilder()).append("illegal object in getInstance: ").append(obj.getClass().getName()).toString());
        }
        return ((d) (obj));
    }

    public static d a(y y1, boolean flag) {
        y1 = y1.j();
        if (flag || (y1 instanceof d))
            y1 = a(y1);
        else
            y1 = a(((o)y1).d());
        return y1;
    }

    public static d a(boolean flag) {
        d d1;
        if (flag)
            d1 = b;
        else
            d1 = a;
        return d1;
    }

    static d a(byte abyte0[]) {
        if (abyte0.length != 1)
            throw new IllegalArgumentException("BOOLEAN value should have 1 byte in it");
        if (abyte0[0] == 0)
            abyte0 = a;
        else
        if ((abyte0[0] & 0xff) == 255)
            abyte0 = b;
        else
            abyte0 = new d(abyte0);
        return abyte0;
    }

    void a(q q1) {
        q1.a(1, e);
    }

    boolean a() {
        return false;
    }

    protected boolean a(r r1) {
        boolean flag1 = false;
        boolean flag = flag1;
        if (r1 instanceof d) {
            flag = flag1;
            if (e[0] == ((d)r1).e[0])
                flag = true;
        }
        return flag;
    }

    int b() {
        return 3;
    }

    public boolean c() {
        boolean flag = false;
        if (e[0] != 0)
            flag = true;
        return flag;
    }

    public int hashCode() {
        return e[0];
    }

    public String toString() {
        String s;
        if (e[0] != 0)
            s = "TRUE";
        else
            s = "FALSE";
        return s;
    }

}
