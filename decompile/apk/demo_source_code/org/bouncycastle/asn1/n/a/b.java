// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1.n.a;

import java.util.Hashtable;
import org.bouncycastle.asn1.aw;
import org.bouncycastle.asn1.bc;
import org.bouncycastle.asn1.f;
import org.bouncycastle.asn1.i;
import org.bouncycastle.asn1.k.e;
import org.bouncycastle.asn1.n;
import org.bouncycastle.asn1.n.c;
import org.bouncycastle.asn1.o.ae;

// Referenced classes of package org.bouncycastle.asn1.n.a:
//            a, c

public class b extends a {

    public static final n A = (new n("2.5.4.54")).d();
    public static final n B;
    public static final n C;
    public static final n D;
    public static final n E;
    public static final n F;
    public static final n G;
    public static final n H;
    public static final n I;
    public static final org.bouncycastle.asn1.n.e J = new b();
    private static final Hashtable M;
    private static final Hashtable N;
    public static final n a;
    public static final n b;
    public static final n c;
    public static final n d;
    public static final n e;
    public static final n f;
    public static final n g;
    public static final n h;
    public static final n i;
    public static final n j;
    public static final n k;
    public static final n l;
    public static final n m;
    public static final n n;
    public static final n o;
    public static final n p;
    public static final n q;
    public static final n r;
    public static final n s;
    public static final n t;
    public static final n u;
    public static final n v;
    public static final n w;
    public static final n x;
    public static final n y;
    public static final n z;
    protected final Hashtable K;
    protected final Hashtable L;

    protected b() {
        L = a(M);
        K = a(N);
    }

    public n a(String s1) {
        return org.bouncycastle.asn1.n.a.c.a(s1, K);
    }

    public String b(c c1) {
        StringBuffer stringbuffer = new StringBuffer();
        c1 = c1.a();
        boolean flag = true;
        int i1 = 0;
        while (i1 < c1.length)  {
            if (flag)
                flag = false;
            else
                stringbuffer.append(',');
            org.bouncycastle.asn1.n.a.c.a(stringbuffer, c1[i1], L);
            i1++;
        }
        return stringbuffer.toString();
    }

    protected f b(n n1, String s1) {
        if (n1.equals(D) || n1.equals(H))
            n1 = new aw(s1);
        else
        if (n1.equals(t))
            n1 = new i(s1);
        else
        if (n1.equals(a) || n1.equals(f) || n1.equals(r) || n1.equals(B))
            n1 = new bc(s1);
        else
            n1 = super.b(n1, s1);
        return n1;
    }

    public org.bouncycastle.asn1.n.b[] b(String s1) {
        return org.bouncycastle.asn1.n.a.c.a(s1, this);
    }

    static  {
        a = (new n("2.5.4.6")).d();
        b = (new n("2.5.4.10")).d();
        c = (new n("2.5.4.11")).d();
        d = (new n("2.5.4.12")).d();
        e = (new n("2.5.4.3")).d();
        f = (new n("2.5.4.5")).d();
        g = (new n("2.5.4.9")).d();
        h = f;
        i = (new n("2.5.4.7")).d();
        j = (new n("2.5.4.8")).d();
        k = (new n("2.5.4.4")).d();
        l = (new n("2.5.4.42")).d();
        m = (new n("2.5.4.43")).d();
        n = (new n("2.5.4.44")).d();
        o = (new n("2.5.4.45")).d();
        p = (new n("2.5.4.15")).d();
        q = (new n("2.5.4.17")).d();
        r = (new n("2.5.4.46")).d();
        s = (new n("2.5.4.65")).d();
        t = (new n("1.3.6.1.5.5.7.9.1")).d();
        u = (new n("1.3.6.1.5.5.7.9.2")).d();
        v = (new n("1.3.6.1.5.5.7.9.3")).d();
        w = (new n("1.3.6.1.5.5.7.9.4")).d();
        x = (new n("1.3.6.1.5.5.7.9.5")).d();
        y = (new n("1.3.36.8.3.14")).d();
        z = (new n("2.5.4.16")).d();
        B = ae.g;
        C = ae.h;
        D = e.V;
        E = e.W;
        F = e.ac;
        G = D;
        H = new n("0.9.2342.19200300.100.1.25");
        I = new n("0.9.2342.19200300.100.1.1");
        M = new Hashtable();
        N = new Hashtable();
        M.put(a, "C");
        M.put(b, "O");
        M.put(d, "T");
        M.put(c, "OU");
        M.put(e, "CN");
        M.put(i, "L");
        M.put(j, "ST");
        M.put(f, "SERIALNUMBER");
        M.put(D, "E");
        M.put(H, "DC");
        M.put(I, "UID");
        M.put(g, "STREET");
        M.put(k, "SURNAME");
        M.put(l, "GIVENNAME");
        M.put(m, "INITIALS");
        M.put(n, "GENERATION");
        M.put(F, "unstructuredAddress");
        M.put(E, "unstructuredName");
        M.put(o, "UniqueIdentifier");
        M.put(r, "DN");
        M.put(s, "Pseudonym");
        M.put(z, "PostalAddress");
        M.put(y, "NameAtBirth");
        M.put(w, "CountryOfCitizenship");
        M.put(x, "CountryOfResidence");
        M.put(v, "Gender");
        M.put(u, "PlaceOfBirth");
        M.put(t, "DateOfBirth");
        M.put(q, "PostalCode");
        M.put(p, "BusinessCategory");
        M.put(B, "TelephoneNumber");
        M.put(C, "Name");
        N.put("c", a);
        N.put("o", b);
        N.put("t", d);
        N.put("ou", c);
        N.put("cn", e);
        N.put("l", i);
        N.put("st", j);
        N.put("sn", f);
        N.put("serialnumber", f);
        N.put("street", g);
        N.put("emailaddress", G);
        N.put("dc", H);
        N.put("e", G);
        N.put("uid", I);
        N.put("surname", k);
        N.put("givenname", l);
        N.put("initials", m);
        N.put("generation", n);
        N.put("unstructuredaddress", F);
        N.put("unstructuredname", E);
        N.put("uniqueidentifier", o);
        N.put("dn", r);
        N.put("pseudonym", s);
        N.put("postaladdress", z);
        N.put("nameofbirth", y);
        N.put("countryofcitizenship", w);
        N.put("countryofresidence", x);
        N.put("gender", v);
        N.put("placeofbirth", u);
        N.put("dateofbirth", t);
        N.put("postalcode", q);
        N.put("businesscategory", p);
        N.put("telephonenumber", B);
        N.put("name", C);
    }
}
