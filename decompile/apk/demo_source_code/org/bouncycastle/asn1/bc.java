// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1;

import org.bouncycastle.util.a;
import org.bouncycastle.util.f;

// Referenced classes of package org.bouncycastle.asn1:
//            r, x, q, ca

public class bc extends r
    implements x {

    private final byte a[];

    public bc(String s) {
        this(s, false);
    }

    public bc(String s, boolean flag) {
        if (flag && !b(s)) {
            throw new IllegalArgumentException("string contains illegal characters");
        } else {
            a = f.d(s);
            return;
        }
    }

    bc(byte abyte0[]) {
        a = abyte0;
    }

    public static boolean b(String s) {
        int i;
        boolean flag;
        flag = false;
        i = s.length() - 1;
_L5:
        if (i < 0) goto _L2; else goto _L1
_L1:
        char c1 = s.charAt(i);
        if (c1 <= '\177') goto _L4; else goto _L3
_L3:
        return flag;
_L7:
        i--;
          goto _L5
_L4:
        if ('a' <= c1 && c1 <= 'z' || 'A' <= c1 && c1 <= 'Z' || '0' <= c1 && c1 <= '9') goto _L7; else goto _L6
_L6:
        c1;
        JVM INSTR lookupswitch 12: default 176
    //                   32: 39
    //                   39: 39
    //                   40: 39
    //                   41: 39
    //                   43: 39
    //                   44: 39
    //                   45: 39
    //                   46: 39
    //                   47: 39
    //                   58: 39
    //                   61: 39
    //                   63: 39;
           goto _L3 _L7 _L7 _L7 _L7 _L7 _L7 _L7 _L7 _L7 _L7 _L7 _L7
_L2:
        flag = true;
          goto _L3
    }

    void a(q q1) {
        q1.a(19, a);
    }

    boolean a() {
        return false;
    }

    boolean a(r r1) {
        boolean flag;
        if (!(r1 instanceof bc)) {
            flag = false;
        } else {
            r1 = (bc)r1;
            flag = org.bouncycastle.util.a.a(a, ((bc) (r1)).a);
        }
        return flag;
    }

    int b() {
        return org.bouncycastle.asn1.ca.a(a.length) + 1 + a.length;
    }

    public String c() {
        return f.b(a);
    }

    public int hashCode() {
        return org.bouncycastle.util.a.a(a);
    }

    public String toString() {
        return c();
    }
}
