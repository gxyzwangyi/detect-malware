// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1.o;

import java.io.IOException;
import java.util.StringTokenizer;
import org.bouncycastle.asn1.aw;
import org.bouncycastle.asn1.az;
import org.bouncycastle.asn1.bi;
import org.bouncycastle.asn1.e;
import org.bouncycastle.asn1.f;
import org.bouncycastle.asn1.m;
import org.bouncycastle.asn1.n;
import org.bouncycastle.asn1.n.c;
import org.bouncycastle.asn1.r;
import org.bouncycastle.asn1.s;
import org.bouncycastle.asn1.y;
import org.bouncycastle.util.b;

public class o extends m
    implements e {

    private f a;
    private int b;

    public o(int i, String s1) {
        b = i;
        if (i == 1 || i == 2 || i == 6)
            a = new aw(s1);
        else
        if (i == 8)
            a = new n(s1);
        else
        if (i == 4)
            a = new c(s1);
        else
        if (i == 7) {
            s1 = b(s1);
            if (s1 != null)
                a = new az(s1);
            else
                throw new IllegalArgumentException("IP Address is invalid");
        } else {
            throw new IllegalArgumentException((new StringBuilder()).append("can't process String for tag: ").append(i).toString());
        }
    }

    public o(int i, f f) {
        a = f;
        b = i;
    }

    public o(c c1) {
        a = c1;
        b = 4;
    }

    public static o a(Object obj) {
        if (obj != null && !(obj instanceof o)) goto _L2; else goto _L1
_L1:
        obj = (o)obj;
_L15:
        return ((o) (obj));
_L2:
        if (!(obj instanceof y)) goto _L4; else goto _L3
_L3:
        int i;
        y y1;
        y1 = (y)obj;
        i = y1.c();
        i;
        JVM INSTR tableswitch 0 8: default 88
    //                   0 112
    //                   1 129
    //                   2 146
    //                   3 163
    //                   4 190
    //                   5 207
    //                   6 224
    //                   7 241
    //                   8 258;
           goto _L4 _L5 _L6 _L7 _L8 _L9 _L10 _L11 _L12 _L13
_L4:
        if (obj instanceof byte[])
            try {
                obj = a(r.b((byte[])(byte[])obj));
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                throw new IllegalArgumentException("unable to parse encoded general name");
            }
        else
            throw new IllegalArgumentException((new StringBuilder()).append("unknown object in getInstance: ").append(obj.getClass().getName()).toString());
        continue; /* Loop/switch isn't completed */
_L5:
        obj = new o(i, s.a(y1, false));
        continue; /* Loop/switch isn't completed */
_L6:
        obj = new o(i, aw.a(y1, false));
        continue; /* Loop/switch isn't completed */
_L7:
        obj = new o(i, aw.a(y1, false));
        continue; /* Loop/switch isn't completed */
_L8:
        throw new IllegalArgumentException((new StringBuilder()).append("unknown tag: ").append(i).toString());
_L9:
        obj = new o(i, org.bouncycastle.asn1.n.c.a(y1, true));
        continue; /* Loop/switch isn't completed */
_L10:
        obj = new o(i, s.a(y1, false));
        continue; /* Loop/switch isn't completed */
_L11:
        obj = new o(i, aw.a(y1, false));
        continue; /* Loop/switch isn't completed */
_L12:
        obj = new o(i, org.bouncycastle.asn1.o.a(y1, false));
        continue; /* Loop/switch isn't completed */
_L13:
        obj = new o(i, n.a(y1, false));
        if (true) goto _L15; else goto _L14
_L14:
    }

    private void a(String s1, byte abyte0[], int i) {
        int k = Integer.parseInt(s1);
        for (int j = 0; j != k; j++) {
            int l = j / 8 + i;
            abyte0[l] = (byte)(abyte0[l] | 1 << 7 - j % 8);
        }

    }

    private void a(int ai[], byte abyte0[], int i) {
        for (int j = 0; j != ai.length; j++) {
            abyte0[j * 2 + i] = (byte)(ai[j] >> 8);
            abyte0[j * 2 + 1 + i] = (byte)ai[j];
        }

    }

    private void b(String s1, byte abyte0[], int i) {
        s1 = new StringTokenizer(s1, "./");
        for (int j = 0; s1.hasMoreTokens(); j++)
            abyte0[j + i] = (byte)Integer.parseInt(s1.nextToken());

    }

    private byte[] b(String s1) {
        if (org.bouncycastle.util.b.c(s1) || org.bouncycastle.util.b.d(s1)) {
            int i = s1.indexOf('/');
            if (i < 0) {
                byte abyte0[] = new byte[16];
                a(d(s1), abyte0, 0);
                s1 = abyte0;
            } else {
                byte abyte1[] = new byte[32];
                a(d(s1.substring(0, i)), abyte1, 0);
                s1 = s1.substring(i + 1);
                if (s1.indexOf(':') > 0)
                    s1 = d(s1);
                else
                    s1 = c(s1);
                a(s1, abyte1, 16);
                s1 = abyte1;
            }
        } else
        if (org.bouncycastle.util.b.b(s1) || org.bouncycastle.util.b.a(s1)) {
            int j = s1.indexOf('/');
            if (j < 0) {
                byte abyte2[] = new byte[4];
                b(s1, abyte2, 0);
                s1 = abyte2;
            } else {
                byte abyte3[] = new byte[8];
                b(s1.substring(0, j), abyte3, 0);
                s1 = s1.substring(j + 1);
                if (s1.indexOf('.') > 0) {
                    b(s1, abyte3, 4);
                    s1 = abyte3;
                } else {
                    a(s1, abyte3, 4);
                    s1 = abyte3;
                }
            }
        } else {
            s1 = null;
        }
        return s1;
    }

    private int[] c(String s1) {
        int ai[] = new int[8];
        int j = Integer.parseInt(s1);
        for (int i = 0; i != j; i++) {
            int k = i / 16;
            ai[k] = ai[k] | 1 << 15 - i % 16;
        }

        return ai;
    }

    private int[] d(String s1) {
        StringTokenizer stringtokenizer = new StringTokenizer(s1, ":", true);
        int ai[] = new int[8];
        if (s1.charAt(0) == ':' && s1.charAt(1) == ':')
            stringtokenizer.nextToken();
        int j = -1;
        int i = 0;
        while (stringtokenizer.hasMoreTokens())  {
            s1 = stringtokenizer.nextToken();
            if (s1.equals(":")) {
                ai[i] = 0;
                int k = i + 1;
                j = i;
                i = k;
            } else
            if (s1.indexOf('.') < 0) {
                int l = i + 1;
                ai[i] = Integer.parseInt(s1, 16);
                int i1;
                if (stringtokenizer.hasMoreTokens()) {
                    stringtokenizer.nextToken();
                    i = l;
                } else {
                    i = l;
                }
            } else {
                s1 = new StringTokenizer(s1, ".");
                l = i + 1;
                ai[i] = Integer.parseInt(s1.nextToken()) << 8 | Integer.parseInt(s1.nextToken());
                i = l + 1;
                i1 = Integer.parseInt(s1.nextToken());
                ai[l] = Integer.parseInt(s1.nextToken()) | i1 << 8;
            }
        }
        if (i != ai.length) {
            System.arraycopy(ai, j, ai, ai.length - (i - j), i - j);
            for (l = j; l != ai.length - (i - j); l++)
                ai[l] = 0;

        }
        return ai;
    }

    public r h() {
        bi bi1;
        if (b == 4)
            bi1 = new bi(true, b, a);
        else
            bi1 = new bi(false, b, a);
        return bi1;
    }

    public String toString() {
        StringBuffer stringbuffer;
        stringbuffer = new StringBuffer();
        stringbuffer.append(b);
        stringbuffer.append(": ");
        b;
        JVM INSTR tableswitch 1 6: default 68
    //                   1 85
    //                   2 85
    //                   3 68
    //                   4 103
    //                   5 68
    //                   6 85;
           goto _L1 _L2 _L2 _L1 _L3 _L1 _L2
_L1:
        stringbuffer.append(a.toString());
_L5:
        return stringbuffer.toString();
_L2:
        stringbuffer.append(aw.a(a).c());
        continue; /* Loop/switch isn't completed */
_L3:
        stringbuffer.append(org.bouncycastle.asn1.n.c.a(a).toString());
        if (true) goto _L5; else goto _L4
_L4:
    }
}
