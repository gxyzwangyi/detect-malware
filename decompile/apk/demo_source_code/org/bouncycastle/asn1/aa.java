// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.bouncycastle.util.a;
import org.bouncycastle.util.f;

// Referenced classes of package org.bouncycastle.asn1:
//            r, q, ca

public class aa extends r {

    private byte a[];

    public aa(String s) {
        a = f.d(s);
        try {
            c();
            return;
        }
        // Misplaced declaration of an exception variable
        catch (String s) {
            throw new IllegalArgumentException((new StringBuilder()).append("invalid date string: ").append(s.getMessage()).toString());
        }
    }

    aa(byte abyte0[]) {
        a = abyte0;
    }

    void a(q q1) {
        q1.b(23);
        int j = a.length;
        q1.a(j);
        for (int i = 0; i != j; i++)
            q1.b(a[i]);

    }

    boolean a() {
        return false;
    }

    boolean a(r r1) {
        boolean flag;
        if (!(r1 instanceof aa))
            flag = false;
        else
            flag = org.bouncycastle.util.a.a(a, ((aa)r1).a);
        return flag;
    }

    int b() {
        int i = a.length;
        return i + (org.bouncycastle.asn1.ca.a(i) + 1);
    }

    public Date c() {
        return (new SimpleDateFormat("yyMMddHHmmssz")).parse(d());
    }

    public String d() {
        String s1 = f.b(a);
        String s;
        if (s1.indexOf('-') < 0 && s1.indexOf('+') < 0) {
            if (s1.length() == 11)
                s = (new StringBuilder()).append(s1.substring(0, 10)).append("00GMT+00:00").toString();
            else
                s = (new StringBuilder()).append(s1.substring(0, 12)).append("GMT+00:00").toString();
        } else {
            int j = s1.indexOf('-');
            int i = j;
            if (j < 0)
                i = s1.indexOf('+');
            s = s1;
            if (i == s1.length() - 3)
                s = (new StringBuilder()).append(s1).append("00").toString();
            if (i == 10)
                s = (new StringBuilder()).append(s.substring(0, 10)).append("00GMT").append(s.substring(10, 13)).append(":").append(s.substring(13, 15)).toString();
            else
                s = (new StringBuilder()).append(s.substring(0, 12)).append("GMT").append(s.substring(12, 15)).append(":").append(s.substring(15, 17)).toString();
        }
        return s;
    }

    public String e() {
        String s = d();
        if (s.charAt(0) < '5')
            s = (new StringBuilder()).append("20").append(s).toString();
        else
            s = (new StringBuilder()).append("19").append(s).toString();
        return s;
    }

    public int hashCode() {
        return org.bouncycastle.util.a.a(a);
    }

    public String toString() {
        return f.b(a);
    }
}
