// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import org.bouncycastle.util.a;
import org.bouncycastle.util.f;

// Referenced classes of package org.bouncycastle.asn1:
//            r, q, ca

public class i extends r {

    private byte a[];

    public i(String s) {
        a = f.d(s);
        try {
            d();
            return;
        }
        // Misplaced declaration of an exception variable
        catch (String s) {
            throw new IllegalArgumentException((new StringBuilder()).append("invalid date string: ").append(s.getMessage()).toString());
        }
    }

    i(byte abyte0[]) {
        a = abyte0;
    }

    private String a(int k) {
        String s;
        if (k < 10)
            s = (new StringBuilder()).append("0").append(k).toString();
        else
            s = Integer.toString(k);
        return s;
    }

    public static i a(Object obj) {
        if (obj == null || (obj instanceof i))
            obj = (i)obj;
        else
        if (obj instanceof byte[])
            try {
                obj = (i)b((byte[])(byte[])obj);
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                throw new IllegalArgumentException((new StringBuilder()).append("encoding error in getInstance: ").append(((Exception) (obj)).toString()).toString());
            }
        else
            throw new IllegalArgumentException((new StringBuilder()).append("illegal object in getInstance: ").append(obj.getClass().getName()).toString());
        return ((i) (obj));
    }

    private String e() {
        int k;
        int j1;
        String s;
        TimeZone timezone;
        s = "+";
        timezone = TimeZone.getDefault();
        k = timezone.getRawOffset();
        int l = k;
        if (k < 0) {
            s = "-";
            l = -k;
        }
        k = l / 0x36ee80;
        j1 = (l - k * 60 * 60 * 1000) / 60000;
        boolean flag;
        if (!timezone.useDaylightTime() || !timezone.inDaylightTime(d()))
            break MISSING_BLOCK_LABEL_90;
        flag = s.equals("+");
        int i1;
        if (flag)
            i1 = 1;
        else
            i1 = -1;
        k = i1 + k;
_L2:
        return (new StringBuilder()).append("GMT").append(s).append(a(k)).append(":").append(a(j1)).toString();
        ParseException parseexception;
        parseexception;
        if (true) goto _L2; else goto _L1
_L1:
    }

    private boolean j() {
        boolean flag1 = false;
        int k = 0;
        do {
label0:
            {
                boolean flag = flag1;
                if (k != a.length) {
                    if (a[k] != 46 || k != 14)
                        break label0;
                    flag = true;
                }
                return flag;
            }
            k++;
        } while (true);
    }

    void a(q q1) {
        q1.a(24, a);
    }

    boolean a() {
        return false;
    }

    boolean a(r r1) {
        boolean flag;
        if (!(r1 instanceof i))
            flag = false;
        else
            flag = org.bouncycastle.util.a.a(a, ((i)r1).a);
        return flag;
    }

    int b() {
        int k = a.length;
        return k + (org.bouncycastle.asn1.ca.a(k) + 1);
    }

    public String c() {
        String s = f.b(a);
        if (s.charAt(s.length() - 1) == 'Z') {
            s = (new StringBuilder()).append(s.substring(0, s.length() - 1)).append("GMT+00:00").toString();
        } else {
            int k = s.length() - 5;
            char c2 = s.charAt(k);
            if (c2 == '-' || c2 == '+') {
                s = (new StringBuilder()).append(s.substring(0, k)).append("GMT").append(s.substring(k, k + 3)).append(":").append(s.substring(k + 3)).toString();
            } else {
                int l = s.length() - 3;
                char c1 = s.charAt(l);
                if (c1 == '-' || c1 == '+')
                    s = (new StringBuilder()).append(s.substring(0, l)).append("GMT").append(s.substring(l)).append(":00").toString();
                else
                    s = (new StringBuilder()).append(s).append(e()).toString();
            }
        }
        return s;
    }

    public Date d() {
        int k;
        Object obj;
        Object obj1;
        String s;
        obj1 = f.b(a);
        Object obj2;
        if (((String) (obj1)).endsWith("Z")) {
            char c1;
            if (j())
                obj = new SimpleDateFormat("yyyyMMddHHmmss.SSS'Z'");
            else
                obj = new SimpleDateFormat("yyyyMMddHHmmss'Z'");
            ((SimpleDateFormat) (obj)).setTimeZone(new SimpleTimeZone(0, "Z"));
            obj2 = obj;
            obj = obj1;
        } else
        if (((String) (obj1)).indexOf('-') > 0 || ((String) (obj1)).indexOf('+') > 0) {
            obj1 = c();
            if (j())
                obj = new SimpleDateFormat("yyyyMMddHHmmss.SSSz");
            else
                obj = new SimpleDateFormat("yyyyMMddHHmmssz");
            ((SimpleDateFormat) (obj)).setTimeZone(new SimpleTimeZone(0, "Z"));
            obj2 = obj;
            obj = obj1;
        } else {
            if (j())
                obj = new SimpleDateFormat("yyyyMMddHHmmss.SSS");
            else
                obj = new SimpleDateFormat("yyyyMMddHHmmss");
            ((SimpleDateFormat) (obj)).setTimeZone(new SimpleTimeZone(0, TimeZone.getDefault().getID()));
            obj2 = obj;
            obj = obj1;
        }
        obj1 = obj;
        if (!j()) goto _L2; else goto _L1
_L1:
        s = ((String) (obj)).substring(14);
        k = 1;
_L7:
        if (k >= s.length()) goto _L4; else goto _L3
_L3:
        c1 = s.charAt(k);
        if ('0' <= c1 && c1 <= '9') goto _L5; else goto _L4
_L4:
        if (k - 1 > 3) {
            obj1 = (new StringBuilder()).append(s.substring(0, 4)).append(s.substring(k)).toString();
            obj1 = (new StringBuilder()).append(((String) (obj)).substring(0, 14)).append(((String) (obj1))).toString();
        } else
        if (k - 1 == 1) {
            obj1 = (new StringBuilder()).append(s.substring(0, k)).append("00").append(s.substring(k)).toString();
            obj1 = (new StringBuilder()).append(((String) (obj)).substring(0, 14)).append(((String) (obj1))).toString();
        } else {
            obj1 = obj;
            if (k - 1 == 2) {
                obj1 = (new StringBuilder()).append(s.substring(0, k)).append("0").append(s.substring(k)).toString();
                obj1 = (new StringBuilder()).append(((String) (obj)).substring(0, 14)).append(((String) (obj1))).toString();
            }
        }
_L2:
        return ((SimpleDateFormat) (obj2)).parse(((String) (obj1)));
_L5:
        k++;
        if (true) goto _L7; else goto _L6
_L6:
    }

    public int hashCode() {
        return org.bouncycastle.util.a.a(a);
    }
}
