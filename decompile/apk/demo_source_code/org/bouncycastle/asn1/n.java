// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.asn1;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.math.BigInteger;
import java.util.HashMap;
import java.util.Map;
import org.bouncycastle.util.a;

// Referenced classes of package org.bouncycastle.asn1:
//            r, f, y, o, 
//            bz, q, ca

public class n extends r {
    private static class a {

        private int a;
        private final byte b[];

        public boolean equals(Object obj) {
            boolean flag;
            if (obj instanceof a)
                flag = org.bouncycastle.util.a.a(b, ((a)obj).b);
            else
                flag = false;
            return flag;
        }

        public int hashCode() {
            return a;
        }

        a(byte abyte0[]) {
            a = org.bouncycastle.util.a.a(abyte0);
            b = abyte0;
        }
    }


    private static final Map c = new HashMap();
    private final String a;
    private byte b[];

    public n(String s) {
        if (s == null)
            throw new IllegalArgumentException("'identifier' cannot be null");
        if (!c(s)) {
            throw new IllegalArgumentException((new StringBuilder()).append("string ").append(s).append(" not an OID").toString());
        } else {
            a = s;
            return;
        }
    }

    n(n n1, String s) {
        if (!a(s, 0)) {
            throw new IllegalArgumentException((new StringBuilder()).append("string ").append(s).append(" not a valid OID branch").toString());
        } else {
            a = (new StringBuilder()).append(n1.c()).append(".").append(s).toString();
            return;
        }
    }

    n(byte abyte0[]) {
        StringBuffer stringbuffer = new StringBuffer();
        int i = 1;
        BigInteger biginteger = null;
        long l = 0L;
        int k = 0;
        do {
            while (k != abyte0.length)  {
                int j = abyte0[k] & 0xff;
                if (l <= 0xffffff80L) {
                    l += j & 0x7f;
                    if ((j & 0x80) == 0) {
                        j = i;
                        long l1 = l;
                        if (i != 0) {
                            if (l < 40L)
                                stringbuffer.append('0');
                            else
                            if (l < 80L) {
                                stringbuffer.append('1');
                                l -= 40L;
                            } else {
                                stringbuffer.append('2');
                                l -= 80L;
                            }
                            j = 0;
                            l1 = l;
                        }
                        stringbuffer.append('.');
                        stringbuffer.append(l1);
                        l = 0L;
                        i = j;
                    } else {
                        l <<= 7;
                    }
                } else {
                    BigInteger biginteger1 = biginteger;
                    if (biginteger == null)
                        biginteger1 = BigInteger.valueOf(l);
                    biginteger = biginteger1.or(BigInteger.valueOf(j & 0x7f));
                    if ((j & 0x80) == 0) {
                        if (i != 0) {
                            stringbuffer.append('2');
                            biginteger = biginteger.subtract(BigInteger.valueOf(80L));
                            i = 0;
                        }
                        stringbuffer.append('.');
                        stringbuffer.append(biginteger);
                        l = 0L;
                        biginteger = null;
                    } else {
                        biginteger = biginteger.shiftLeft(7);
                    }
                }
                k++;
            }
            a = stringbuffer.toString();
            b = org.bouncycastle.util.a.b(abyte0);
            return;
        } while (true);
    }

    public static n a(Object obj) {
        if (obj == null || (obj instanceof n))
            obj = (n)obj;
        else
        if ((obj instanceof f) && (((f)obj).h() instanceof n))
            obj = (n)((f)obj).h();
        else
        if (obj instanceof byte[]) {
            obj = (byte[])(byte[])obj;
            try {
                obj = (n)b(((byte []) (obj)));
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                throw new IllegalArgumentException((new StringBuilder()).append("failed to construct object identifier from byte[]: ").append(((IOException) (obj)).getMessage()).toString());
            }
        } else {
            throw new IllegalArgumentException((new StringBuilder()).append("illegal object in getInstance: ").append(obj.getClass().getName()).toString());
        }
        return ((n) (obj));
    }

    public static n a(y y1, boolean flag) {
        r r1 = y1.j();
        if (flag || (r1 instanceof n))
            y1 = a(r1);
        else
            y1 = a(org.bouncycastle.asn1.o.a(y1.j()).d());
        return y1;
    }

    static n a(byte abyte0[]) {
        Object obj = new a(abyte0);
        Map map = c;
        map;
        JVM INSTR monitorenter ;
        obj = (n)c.get(obj);
        if (obj == null) goto _L2; else goto _L1
_L1:
        map;
        JVM INSTR monitorexit ;
        abyte0 = ((byte []) (obj));
_L4:
        return abyte0;
_L2:
        map;
        JVM INSTR monitorexit ;
        abyte0 = new n(abyte0);
        if (true) goto _L4; else goto _L3
_L3:
        abyte0;
        map;
        JVM INSTR monitorexit ;
        throw abyte0;
    }

    private void a(ByteArrayOutputStream bytearrayoutputstream) {
        bz bz1 = new bz(a);
        int i = Integer.parseInt(bz1.b()) * 40;
        String s = bz1.b();
        if (s.length() <= 18) {
            long l = i;
            a(bytearrayoutputstream, Long.parseLong(s) + l);
        } else {
            a(bytearrayoutputstream, (new BigInteger(s)).add(BigInteger.valueOf(i)));
        }
        while (bz1.a())  {
            s = bz1.b();
            if (s.length() <= 18)
                a(bytearrayoutputstream, Long.parseLong(s));
            else
                a(bytearrayoutputstream, new BigInteger(s));
        }
    }

    private void a(ByteArrayOutputStream bytearrayoutputstream, long l) {
        byte abyte0[] = new byte[9];
        int i = 8;
        for (abyte0[8] = (byte)((int)l & 0x7f); l >= 128L; abyte0[i] = (byte)((int)l & 0x7f | 0x80)) {
            l >>= 7;
            i--;
        }

        bytearrayoutputstream.write(abyte0, i, 9 - i);
    }

    private void a(ByteArrayOutputStream bytearrayoutputstream, BigInteger biginteger) {
        int k = (biginteger.bitLength() + 6) / 7;
        if (k == 0) {
            bytearrayoutputstream.write(0);
        } else {
            byte abyte0[] = new byte[k];
            for (int i = k - 1; i >= 0; i--) {
                abyte0[i] = (byte)(biginteger.intValue() & 0x7f | 0x80);
                biginteger = biginteger.shiftRight(7);
            }

            int j = k - 1;
            abyte0[j] = (byte)(abyte0[j] & 0x7f);
            bytearrayoutputstream.write(abyte0, 0, abyte0.length);
        }
    }

    private static boolean a(String s, int i) {
        int j;
        boolean flag;
        boolean flag2;
        flag2 = false;
        j = s.length();
        flag = false;
_L5:
        char c1;
        do {
label0:
            {
                if (--j < i)
                    break MISSING_BLOCK_LABEL_71;
                c1 = s.charAt(j);
                if ('0' > c1 || c1 > '9')
                    break label0;
                flag = true;
            }
        } while (true);
        boolean flag1 = flag2;
        if (c1 != '.') goto _L2; else goto _L1
_L1:
        if (flag) goto _L4; else goto _L3
_L3:
        flag1 = flag2;
_L2:
        return flag1;
_L4:
        flag = false;
          goto _L5
        flag1 = flag;
          goto _L2
    }

    private static boolean c(String s) {
        boolean flag;
        boolean flag1;
        flag1 = false;
        flag = flag1;
        if (s.length() < 3) goto _L2; else goto _L1
_L1:
        if (s.charAt(1) == '.') goto _L4; else goto _L3
_L3:
        flag = flag1;
_L2:
        return flag;
_L4:
        char c1 = s.charAt(0);
        flag = flag1;
        if (c1 >= '0') {
            flag = flag1;
            if (c1 <= '2')
                flag = a(s, 2);
        }
        if (true) goto _L2; else goto _L5
_L5:
    }

    private byte[] e() {
        this;
        JVM INSTR monitorenter ;
        byte abyte0[];
        if (b == null) {
            ByteArrayOutputStream bytearrayoutputstream = JVM INSTR new #205 <Class ByteArrayOutputStream>;
            bytearrayoutputstream.ByteArrayOutputStream();
            a(bytearrayoutputstream);
            b = bytearrayoutputstream.toByteArray();
        }
        abyte0 = b;
        this;
        JVM INSTR monitorexit ;
        return abyte0;
        Exception exception;
        exception;
        throw exception;
    }

    void a(q q1) {
        byte abyte0[] = e();
        q1.b(6);
        q1.a(abyte0.length);
        q1.a(abyte0);
    }

    boolean a() {
        return false;
    }

    boolean a(r r1) {
        boolean flag;
        if (r1 == this)
            flag = true;
        else
        if (!(r1 instanceof n))
            flag = false;
        else
            flag = a.equals(((n)r1).a);
        return flag;
    }

    int b() {
        int i = e().length;
        return i + (org.bouncycastle.asn1.ca.a(i) + 1);
    }

    public n b(String s) {
        return new n(this, s);
    }

    public String c() {
        return a;
    }

    public n d() {
        Map map = c;
        map;
        JVM INSTR monitorenter ;
        n n1;
        a a1;
        a1 = JVM INSTR new #6   <Class n$a>;
        a1.a(e());
        n1 = (n)c.get(a1);
        if (n1 == null) goto _L2; else goto _L1
_L1:
        map;
        JVM INSTR monitorexit ;
_L4:
        return n1;
_L2:
        c.put(a1, this);
        map;
        JVM INSTR monitorexit ;
        n1 = this;
        if (true) goto _L4; else goto _L3
_L3:
        Exception exception;
        exception;
        map;
        JVM INSTR monitorexit ;
        throw exception;
    }

    public int hashCode() {
        return a.hashCode();
    }

    public String toString() {
        return c();
    }

}
