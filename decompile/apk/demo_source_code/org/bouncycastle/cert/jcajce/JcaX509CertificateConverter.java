// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.cert.jcajce;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.cert.*;
import org.bouncycastle.cert.d;

// Referenced classes of package org.bouncycastle.cert.jcajce:
//            b, a, f

public class JcaX509CertificateConverter {
    private class ExCertificateException extends CertificateException {

        final JcaX509CertificateConverter a;
        private Throwable b;

        public Throwable getCause() {
            return b;
        }

        public ExCertificateException(String s, Throwable throwable) {
            a = JcaX509CertificateConverter.this;
            super(s);
            b = throwable;
        }
    }

    private class ExCertificateParsingException extends CertificateParsingException {

        final JcaX509CertificateConverter a;
        private Throwable b;

        public Throwable getCause() {
            return b;
        }

        public ExCertificateParsingException(String s, Throwable throwable) {
            a = JcaX509CertificateConverter.this;
            super(s);
            b = throwable;
        }
    }


    private a a;

    public JcaX509CertificateConverter() {
        a = new b();
        a = new b();
    }

    public X509Certificate a(d d1) {
        try {
            CertificateFactory certificatefactory = a.a("X.509");
            ByteArrayInputStream bytearrayinputstream = JVM INSTR new #36  <Class ByteArrayInputStream>;
            bytearrayinputstream.ByteArrayInputStream(d1.a());
            d1 = (X509Certificate)certificatefactory.generateCertificate(bytearrayinputstream);
        }
        // Misplaced declaration of an exception variable
        catch (d d1) {
            throw new ExCertificateParsingException((new StringBuilder()).append("exception parsing certificate: ").append(d1.getMessage()).toString(), d1);
        }
        // Misplaced declaration of an exception variable
        catch (d d1) {
            throw new ExCertificateException((new StringBuilder()).append("cannot find required provider:").append(d1.getMessage()).toString(), d1);
        }
        return d1;
    }

    public JcaX509CertificateConverter a(Provider provider) {
        a = new f(provider);
        return this;
    }
}
