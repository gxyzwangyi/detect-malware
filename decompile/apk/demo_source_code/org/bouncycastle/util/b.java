// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.util;


public class b {

    public static boolean a(String s) {
        boolean flag1 = false;
        if (s.length() != 0) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L6:
        return flag;
_L2:
        int i;
        int j;
        s = (new StringBuilder()).append(s).append(".").toString();
        j = 0;
        i = 0;
_L4:
        int k;
        if (j >= s.length())
            break; /* Loop/switch isn't completed */
        k = s.indexOf('.', j);
        if (k <= j)
            break; /* Loop/switch isn't completed */
        flag = flag1;
        if (i == 4)
            continue; /* Loop/switch isn't completed */
        j = Integer.parseInt(s.substring(j, k));
        flag = flag1;
        if (j < 0)
            continue; /* Loop/switch isn't completed */
        flag = flag1;
        if (j > 255)
            continue; /* Loop/switch isn't completed */
        j = k + 1;
        i++;
        if (true) goto _L4; else goto _L3
_L3:
        flag = flag1;
        if (i == 4)
            flag = true;
        continue; /* Loop/switch isn't completed */
        s;
        flag = flag1;
        if (true) goto _L6; else goto _L5
_L5:
    }

    private static boolean a(String s, int i) {
        boolean flag1 = false;
        int j = Integer.parseInt(s);
        boolean flag;
        flag = flag1;
        if (j >= 0) {
            flag = flag1;
            if (j <= i)
                flag = true;
        }
_L2:
        return flag;
        s;
        flag = flag1;
        if (true) goto _L2; else goto _L1
_L1:
    }

    public static boolean b(String s) {
        boolean flag;
label0:
        {
            boolean flag1 = false;
            int i = s.indexOf("/");
            String s1 = s.substring(i + 1);
            flag = flag1;
            if (i <= 0)
                break label0;
            flag = flag1;
            if (!a(s.substring(0, i)))
                break label0;
            if (!a(s1)) {
                flag = flag1;
                if (!a(s1, 32))
                    break label0;
            }
            flag = true;
        }
        return flag;
    }

    public static boolean c(String s) {
        boolean flag;
label0:
        {
            boolean flag1 = false;
            int i = s.indexOf("/");
            String s1 = s.substring(i + 1);
            flag = flag1;
            if (i <= 0)
                break label0;
            flag = flag1;
            if (!d(s.substring(0, i)))
                break label0;
            if (!d(s1)) {
                flag = flag1;
                if (!a(s1, 128))
                    break label0;
            }
            flag = true;
        }
        return flag;
    }

    public static boolean d(String s) {
        boolean flag2 = false;
        if (s.length() != 0) goto _L2; else goto _L1
_L1:
        boolean flag1 = flag2;
_L8:
        return flag1;
_L2:
        int i;
        boolean flag;
        int j;
        String s1;
        s1 = (new StringBuilder()).append(s).append(":").toString();
        j = 0;
        flag = false;
        i = 0;
_L4:
        int k;
        if (j >= s1.length())
            break MISSING_BLOCK_LABEL_206;
        k = s1.indexOf(':', j);
        if (k < j)
            break MISSING_BLOCK_LABEL_206;
        flag1 = flag2;
        if (i == 8)
            continue; /* Loop/switch isn't completed */
        if (j == k)
            break MISSING_BLOCK_LABEL_175;
        s = s1.substring(j, k);
        if (k != s1.length() - 1 || s.indexOf('.') <= 0)
            break; /* Loop/switch isn't completed */
        flag1 = flag2;
        if (!a(s))
            continue; /* Loop/switch isn't completed */
        i++;
_L6:
        j = k + 1;
        i++;
        if (true) goto _L4; else goto _L3
_L3:
        j = Integer.parseInt(s1.substring(j, k), 16);
        flag1 = flag2;
        if (j < 0)
            continue; /* Loop/switch isn't completed */
        if (j <= 65535) goto _L6; else goto _L5
_L5:
        flag1 = flag2;
        continue; /* Loop/switch isn't completed */
        if (k != 1 && k != s1.length() - 1) {
            flag1 = flag2;
            if (flag)
                continue; /* Loop/switch isn't completed */
        }
        flag = true;
          goto _L6
        if (i != 8) {
            flag1 = flag2;
            if (!flag)
                continue; /* Loop/switch isn't completed */
        }
        flag1 = true;
        continue; /* Loop/switch isn't completed */
        s;
        flag1 = flag2;
        if (true) goto _L8; else goto _L7
_L7:
    }
}
