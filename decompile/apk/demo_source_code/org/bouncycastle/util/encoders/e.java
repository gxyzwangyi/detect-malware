// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.util.encoders;

import java.io.IOException;
import java.io.OutputStream;

// Referenced classes of package org.bouncycastle.util.encoders:
//            c

public class e
    implements c {

    protected final byte a[] = {
        48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 
        97, 98, 99, 100, 101, 102
    };
    protected final byte b[] = new byte[128];

    public e() {
        a();
    }

    private static boolean a(char c1) {
        boolean flag;
        if (c1 == '\n' || c1 == '\r' || c1 == '\t' || c1 == ' ')
            flag = true;
        else
            flag = false;
        return flag;
    }

    public int a(String s, OutputStream outputstream) {
        int i;
        int j;
        i = 0;
        j = s.length();
_L6:
        if (j > 0 && a(s.charAt(j - 1))) goto _L2; else goto _L1
_L1:
        int k = 0;
_L4:
        if (i >= j)
            break; /* Loop/switch isn't completed */
        for (; i < j && a(s.charAt(i)); i++);
        byte abyte0[] = b;
        int l = i + 1;
        byte byte0 = abyte0[s.charAt(i)];
        for (i = l; i < j && a(s.charAt(i)); i++);
        l = b[s.charAt(i)];
        if ((byte0 | l) < 0)
            throw new IOException("invalid characters encountered in Hex string");
        outputstream.write(l | byte0 << 4);
        k++;
        i++;
        continue; /* Loop/switch isn't completed */
_L2:
        j--;
        continue; /* Loop/switch isn't completed */
        if (true) goto _L4; else goto _L3
_L3:
        return k;
        if (true) goto _L6; else goto _L5
_L5:
    }

    public int a(byte abyte0[], int i, int j, OutputStream outputstream) {
        for (int k = i; k < i + j; k++) {
            int l = abyte0[k] & 0xff;
            outputstream.write(a[l >>> 4]);
            outputstream.write(a[l & 0xf]);
        }

        return j * 2;
    }

    protected void a() {
        boolean flag = false;
        int j = 0;
        int i;
        do {
            i = ((flag) ? 1 : 0);
            if (j >= b.length)
                break;
            b[j] = -1;
            j++;
        } while (true);
        for (; i < a.length; i++)
            b[a[i]] = (byte)i;

        b[65] = b[97];
        b[66] = b[98];
        b[67] = b[99];
        b[68] = b[100];
        b[69] = b[101];
        b[70] = b[102];
    }
}
