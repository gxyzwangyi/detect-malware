// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.util.io.pem;

import java.io.BufferedWriter;
import java.io.Writer;
import java.util.Iterator;
import java.util.List;
import org.bouncycastle.util.encoders.a;

// Referenced classes of package org.bouncycastle.util.io.pem:
//            c, b, a

public class f extends BufferedWriter {

    private final int a;
    private char b[];

    public f(Writer writer) {
        super(writer);
        b = new char[64];
        writer = org.bouncycastle.util.f.a();
        if (writer != null)
            a = writer.length();
        else
            a = 2;
    }

    private void a(String s) {
        write((new StringBuilder()).append("-----BEGIN ").append(s).append("-----").toString());
        newLine();
    }

    private void a(byte abyte0[]) {
        abyte0 = org.bouncycastle.util.encoders.a.a(abyte0);
        int i = 0;
label0:
        do {
            if (i < abyte0.length) {
                int j = 0;
                do {
                    if (j == b.length || i + j >= abyte0.length) {
                        write(b, 0, j);
                        newLine();
                        i += b.length;
                        continue label0;
                    }
                    b[j] = (char)abyte0[i + j];
                    j++;
                } while (true);
            }
            return;
        } while (true);
    }

    private void b(String s) {
        write((new StringBuilder()).append("-----END ").append(s).append("-----").toString());
        newLine();
    }

    public void a(c c1) {
        b b1 = c1.a();
        a(b1.b());
        if (!b1.c().isEmpty()) {
            for (Iterator iterator = b1.c().iterator(); iterator.hasNext(); newLine()) {
                c1 = (org.bouncycastle.util.io.pem.a)iterator.next();
                write(c1.a());
                write(": ");
                write(c1.b());
            }

            newLine();
        }
        a(b1.d());
        b(b1.b());
    }
}
