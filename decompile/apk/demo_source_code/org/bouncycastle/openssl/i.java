// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package org.bouncycastle.openssl;

import java.io.IOException;
import java.io.Reader;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.StringTokenizer;
import org.bouncycastle.asn1.ap;
import org.bouncycastle.asn1.ax;
import org.bouncycastle.asn1.o.y;
import org.bouncycastle.asn1.r;
import org.bouncycastle.asn1.s;
import org.bouncycastle.util.io.pem.b;
import org.bouncycastle.util.io.pem.d;
import org.bouncycastle.util.io.pem.e;

// Referenced classes of package org.bouncycastle.openssl:
//            h, PEMException, g, e, 
//            j

public class org.bouncycastle.openssl.i extends org.bouncycastle.util.io.pem.e {
    private class a
        implements org.bouncycastle.openssl.h {

        final org.bouncycastle.openssl.i a;

        public org.bouncycastle.openssl.g a(byte abyte0[]) {
            org.bouncycastle.asn1.k k1;
            org.bouncycastle.asn1.k k2;
            Object obj;
            y y1;
            Object obj1;
            Object obj2;
            Object obj3;
            org.bouncycastle.asn1.n n1;
            try {
                obj = s.a(abyte0);
                if (((s) (obj)).e() != 6) {
                    abyte0 = JVM INSTR new #37  <Class PEMException>;
                    abyte0.PEMException("malformed sequence in DSA private key");
                    throw abyte0;
                }
            }
            // Misplaced declaration of an exception variable
            catch (byte abyte0[]) {
                throw abyte0;
            }
            // Misplaced declaration of an exception variable
            catch (byte abyte0[]) {
                throw new PEMException((new StringBuilder()).append("problem creating DSA private key: ").append(abyte0.toString()).toString(), abyte0);
            }
            k1 = org.bouncycastle.asn1.k.a(((s) (obj)).a(1));
            k2 = org.bouncycastle.asn1.k.a(((s) (obj)).a(2));
            abyte0 = org.bouncycastle.asn1.k.a(((s) (obj)).a(3));
            obj1 = org.bouncycastle.asn1.k.a(((s) (obj)).a(4));
            obj = org.bouncycastle.asn1.k.a(((s) (obj)).a(5));
            y1 = JVM INSTR new #52  <Class y>;
            obj2 = JVM INSTR new #54  <Class org.bouncycastle.asn1.o.a>;
            n1 = org.bouncycastle.asn1.p.g.U;
            obj3 = JVM INSTR new #62  <Class org.bouncycastle.asn1.o.j>;
            ((org.bouncycastle.asn1.o.j) (obj3)).org.bouncycastle.asn1.o.j(k1.c(), k2.c(), abyte0.c());
            ((org.bouncycastle.asn1.o.a) (obj2)).org.bouncycastle.asn1.o.a(n1, ((org.bouncycastle.asn1.f) (obj3)));
            y1.y(((org.bouncycastle.asn1.o.a) (obj2)), ((org.bouncycastle.asn1.f) (obj1)));
            obj1 = JVM INSTR new #77  <Class org.bouncycastle.asn1.k.f>;
            obj3 = JVM INSTR new #54  <Class org.bouncycastle.asn1.o.a>;
            n1 = org.bouncycastle.asn1.p.g.U;
            obj2 = JVM INSTR new #62  <Class org.bouncycastle.asn1.o.j>;
            ((org.bouncycastle.asn1.o.j) (obj2)).org.bouncycastle.asn1.o.j(k1.c(), k2.c(), abyte0.c());
            ((org.bouncycastle.asn1.o.a) (obj3)).org.bouncycastle.asn1.o.a(n1, ((org.bouncycastle.asn1.f) (obj2)));
            ((org.bouncycastle.asn1.k.f) (obj1)).org.bouncycastle.asn1.k.f(((org.bouncycastle.asn1.o.a) (obj3)), ((org.bouncycastle.asn1.f) (obj)));
            abyte0 = new org.bouncycastle.openssl.g(y1, ((org.bouncycastle.asn1.k.f) (obj1)));
            return abyte0;
        }

        private a() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }

    }

    private class b
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            r r1 = r.b(b1.d());
            if (!(r1 instanceof org.bouncycastle.asn1.n)) goto _L2; else goto _L1
_L1:
            b1 = r.b(b1.d());
_L4:
            return b1;
_L2:
            if (r1 instanceof s) {
                b1 = org.bouncycastle.asn1.p.b.a(r1);
                continue; /* Loop/switch isn't completed */
            }
            b1 = null;
            if (true) goto _L4; else goto _L3
_L3:
            b1;
            throw b1;
            b1;
            throw new PEMException((new StringBuilder()).append("exception extracting EC named curve: ").append(b1.toString()).toString());
        }

        private b() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }

    }

    private class c
        implements org.bouncycastle.openssl.h {

        final org.bouncycastle.openssl.i a;

        public org.bouncycastle.openssl.g a(byte abyte0[]) {
            try {
                org.bouncycastle.asn1.l.a a1 = org.bouncycastle.asn1.l.a.a(s.a(abyte0));
                abyte0 = JVM INSTR new #39  <Class org.bouncycastle.asn1.o.a>;
                abyte0.org.bouncycastle.asn1.o.a(org.bouncycastle.asn1.p.g.k, a1.b());
                org.bouncycastle.asn1.k.f f1 = JVM INSTR new #54  <Class org.bouncycastle.asn1.k.f>;
                f1.org.bouncycastle.asn1.k.f(abyte0, a1);
                y y1 = JVM INSTR new #59  <Class y>;
                y1.y(abyte0, a1.a().d());
                abyte0 = new org.bouncycastle.openssl.g(y1, f1);
            }
            // Misplaced declaration of an exception variable
            catch (byte abyte0[]) {
                throw abyte0;
            }
            // Misplaced declaration of an exception variable
            catch (byte abyte0[]) {
                throw new PEMException((new StringBuilder()).append("problem creating EC private key: ").append(abyte0.toString()).toString(), abyte0);
            }
            return abyte0;
        }

        private c() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }

    }

    private class d
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            try {
                b1 = new org.bouncycastle.pkcs.b(org.bouncycastle.asn1.k.d.a(b1.d()));
            }
            // Misplaced declaration of an exception variable
            catch (org.bouncycastle.util.io.pem.b b1) {
                throw new PEMException((new StringBuilder()).append("problem parsing ENCRYPTED PRIVATE KEY: ").append(b1.toString()).toString(), b1);
            }
            return b1;
        }

        public d() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }
    }

    private class e
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;
        private final org.bouncycastle.openssl.h b;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
label0:
            {
                {
                    boolean flag = false;
                    String s = null;
                    Iterator iterator = b1.c().iterator();
                    do {
                        if (!iterator.hasNext())
                            break;
                        org.bouncycastle.util.io.pem.a a1 = (org.bouncycastle.util.io.pem.a)iterator.next();
                        if (a1.a().equals("Proc-Type") && a1.b().equals("4,ENCRYPTED"))
                            flag = true;
                        else
                        if (a1.a().equals("DEK-Info"))
                            s = a1.b();
                    } while (true);
                    b1 = b1.d();
                    if (!flag)
                        break label0;
                    try {
                        StringTokenizer stringtokenizer = JVM INSTR new #75  <Class StringTokenizer>;
                        stringtokenizer.StringTokenizer(s, ",");
                        b1 = new org.bouncycastle.openssl.e(stringtokenizer.nextToken(), org.bouncycastle.util.encoders.d.a(stringtokenizer.nextToken()), b1, b);
                    }
                    // Misplaced declaration of an exception variable
                    catch (org.bouncycastle.util.io.pem.b b1) {
                        if (flag)
                            throw new PEMException("exception decoding - please check password and data.", b1);
                        else
                            throw new PEMException(b1.getMessage(), b1);
                    }
                    // Misplaced declaration of an exception variable
                    catch (org.bouncycastle.util.io.pem.b b1) {
                        if (flag)
                            throw new PEMException("exception decoding - please check password and data.", b1);
                        else
                            throw new PEMException(b1.getMessage(), b1);
                    }
                }
                return b1;
            }
            b1 = b.a(b1);
            if (false)
                ;
            else
                break MISSING_BLOCK_LABEL_138;
        }

        public e(org.bouncycastle.openssl.h h1) {
            a = org.bouncycastle.openssl.i.this;
            super();
            b = h1;
        }
    }

    private class f
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            try {
                b1 = new org.bouncycastle.pkcs.a(b1.d());
            }
            // Misplaced declaration of an exception variable
            catch (org.bouncycastle.util.io.pem.b b1) {
                throw new PEMException((new StringBuilder()).append("problem parsing certrequest: ").append(b1.toString()).toString(), b1);
            }
            return b1;
        }

        private f() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }

    }

    private class g
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            try {
                org.bouncycastle.asn1.j j1 = JVM INSTR new #27  <Class org.bouncycastle.asn1.j>;
                j1.org.bouncycastle.asn1.j(b1.d());
                b1 = org.bouncycastle.asn1.b.a.a(j1.d());
            }
            // Misplaced declaration of an exception variable
            catch (org.bouncycastle.util.io.pem.b b1) {
                throw new PEMException((new StringBuilder()).append("problem parsing PKCS7 object: ").append(b1.toString()).toString(), b1);
            }
            return b1;
        }

        private g() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }

    }

    private class h
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            try {
                b1 = org.bouncycastle.asn1.k.f.a(b1.d());
            }
            // Misplaced declaration of an exception variable
            catch (org.bouncycastle.util.io.pem.b b1) {
                throw new PEMException((new StringBuilder()).append("problem parsing PRIVATE KEY: ").append(b1.toString()).toString(), b1);
            }
            return b1;
        }

        public h() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }
    }

    private class i
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            return y.a(b1.d());
        }

        public i() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }
    }

    private class j
        implements org.bouncycastle.openssl.h {

        final org.bouncycastle.openssl.i a;

        public org.bouncycastle.openssl.g a(byte abyte0[]) {
            org.bouncycastle.asn1.o.a a1;
            y y1;
            Object obj;
            try {
                abyte0 = s.a(abyte0);
                if (abyte0.e() != 9) {
                    abyte0 = JVM INSTR new #38  <Class PEMException>;
                    abyte0.PEMException("malformed sequence in RSA private key");
                    throw abyte0;
                }
            }
            // Misplaced declaration of an exception variable
            catch (byte abyte0[]) {
                throw abyte0;
            }
            // Misplaced declaration of an exception variable
            catch (byte abyte0[]) {
                throw new PEMException((new StringBuilder()).append("problem creating RSA private key: ").append(abyte0.toString()).toString(), abyte0);
            }
            abyte0 = org.bouncycastle.asn1.k.g.a(abyte0);
            obj = JVM INSTR new #50  <Class org.bouncycastle.asn1.k.h>;
            ((org.bouncycastle.asn1.k.h) (obj)).org.bouncycastle.asn1.k.h(abyte0.a(), abyte0.b());
            a1 = JVM INSTR new #61  <Class org.bouncycastle.asn1.o.a>;
            a1.org.bouncycastle.asn1.o.a(org.bouncycastle.asn1.k.e.b, ax.a);
            y1 = JVM INSTR new #76  <Class y>;
            y1.y(a1, ((org.bouncycastle.asn1.f) (obj)));
            obj = JVM INSTR new #81  <Class org.bouncycastle.asn1.k.f>;
            ((org.bouncycastle.asn1.k.f) (obj)).org.bouncycastle.asn1.k.f(a1, abyte0);
            abyte0 = new org.bouncycastle.openssl.g(y1, ((org.bouncycastle.asn1.k.f) (obj)));
            return abyte0;
        }

        private j() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }

    }

    private class k
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            try {
                org.bouncycastle.asn1.k.h h1 = org.bouncycastle.asn1.k.h.a(b1.d());
                b1 = JVM INSTR new #37  <Class org.bouncycastle.asn1.o.a>;
                b1.org.bouncycastle.asn1.o.a(org.bouncycastle.asn1.k.e.b, ax.a);
                b1 = new y(b1, h1);
            }
            // Misplaced declaration of an exception variable
            catch (org.bouncycastle.util.io.pem.b b1) {
                throw b1;
            }
            // Misplaced declaration of an exception variable
            catch (org.bouncycastle.util.io.pem.b b1) {
                throw new PEMException((new StringBuilder()).append("problem extracting key: ").append(b1.toString()).toString(), b1);
            }
            return b1;
        }

        public k() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }
    }

    private class l
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            return new org.bouncycastle.cert.b(b1.d());
        }

        private l() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }

    }

    private class m
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            try {
                b1 = new org.bouncycastle.cert.c(b1.d());
            }
            // Misplaced declaration of an exception variable
            catch (org.bouncycastle.util.io.pem.b b1) {
                throw new PEMException((new StringBuilder()).append("problem parsing cert: ").append(b1.toString()).toString(), b1);
            }
            return b1;
        }

        private m() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }

    }

    private class n
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            try {
                b1 = new org.bouncycastle.cert.d(b1.d());
            }
            // Misplaced declaration of an exception variable
            catch (org.bouncycastle.util.io.pem.b b1) {
                throw new PEMException((new StringBuilder()).append("problem parsing cert: ").append(b1.toString()).toString(), b1);
            }
            return b1;
        }

        private n() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }

    }

    private class o
        implements org.bouncycastle.util.io.pem.d {

        final org.bouncycastle.openssl.i a;

        public Object a(org.bouncycastle.util.io.pem.b b1) {
            try {
                b1 = new org.bouncycastle.openssl.j(b1.d());
            }
            // Misplaced declaration of an exception variable
            catch (org.bouncycastle.util.io.pem.b b1) {
                throw new PEMException((new StringBuilder()).append("problem parsing cert: ").append(b1.toString()).toString(), b1);
            }
            return b1;
        }

        private o() {
            a = org.bouncycastle.openssl.i.this;
            super();
        }

    }


    private final Map a = new HashMap();

    public org.bouncycastle.openssl.i(Reader reader) {
        super(reader);
        a.put("CERTIFICATE REQUEST", new f());
        a.put("NEW CERTIFICATE REQUEST", new f());
        a.put("CERTIFICATE", new n());
        a.put("TRUSTED CERTIFICATE", new o());
        a.put("X509 CERTIFICATE", new n());
        a.put("X509 CRL", new m());
        a.put("PKCS7", new g());
        a.put("CMS", new g());
        a.put("ATTRIBUTE CERTIFICATE", new l());
        a.put("EC PARAMETERS", new b());
        a.put("PUBLIC KEY", new i());
        a.put("RSA PUBLIC KEY", new k());
        a.put("RSA PRIVATE KEY", new e(new j()));
        a.put("DSA PRIVATE KEY", new e(new a()));
        a.put("EC PRIVATE KEY", new e(new c()));
        a.put("ENCRYPTED PRIVATE KEY", new d());
        a.put("PRIVATE KEY", new h());
    }

    public Object a() {
        Object obj = b();
        if (obj == null) goto _L2; else goto _L1
_L1:
        String s = ((org.bouncycastle.util.io.pem.b) (obj)).b();
        if (!a.containsKey(s)) goto _L4; else goto _L3
_L3:
        obj = ((org.bouncycastle.util.io.pem.d)a.get(s)).a(((org.bouncycastle.util.io.pem.b) (obj)));
_L6:
        return obj;
_L4:
        throw new IOException((new StringBuilder()).append("unrecognised object: ").append(s).toString());
_L2:
        obj = null;
        if (true) goto _L6; else goto _L5
_L5:
    }
}
