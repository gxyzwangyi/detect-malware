// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.node;

import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.databind.SerializerProvider;

// Referenced classes of package com.fasterxml.jackson.databind.node:
//            ValueNode, JsonNodeType

public class BooleanNode extends ValueNode {

    public static final BooleanNode FALSE = new BooleanNode(false);
    public static final BooleanNode TRUE = new BooleanNode(true);
    private final boolean _value;

    private BooleanNode(boolean flag) {
        _value = flag;
    }

    public static BooleanNode getFalse() {
        return FALSE;
    }

    public static BooleanNode getTrue() {
        return TRUE;
    }

    public static BooleanNode valueOf(boolean flag) {
        BooleanNode booleannode;
        if (flag)
            booleannode = TRUE;
        else
            booleannode = FALSE;
        return booleannode;
    }

    public boolean asBoolean() {
        return _value;
    }

    public boolean asBoolean(boolean flag) {
        return _value;
    }

    public double asDouble(double d) {
        if (_value)
            d = 1.0D;
        else
            d = 0.0D;
        return d;
    }

    public int asInt(int i) {
        if (_value)
            i = 1;
        else
            i = 0;
        return i;
    }

    public long asLong(long l) {
        if (_value)
            l = 1L;
        else
            l = 0L;
        return l;
    }

    public String asText() {
        String s;
        if (_value)
            s = "true";
        else
            s = "false";
        return s;
    }

    public JsonToken asToken() {
        JsonToken jsontoken;
        if (_value)
            jsontoken = JsonToken.VALUE_TRUE;
        else
            jsontoken = JsonToken.VALUE_FALSE;
        return jsontoken;
    }

    public boolean booleanValue() {
        return _value;
    }

    public boolean equals(Object obj) {
        boolean flag = true;
        if (obj != this) goto _L2; else goto _L1
_L1:
        return flag;
_L2:
        if (obj == null)
            flag = false;
        else
        if (!(obj instanceof BooleanNode))
            flag = false;
        else
        if (_value != ((BooleanNode)obj)._value)
            flag = false;
        if (true) goto _L1; else goto _L3
_L3:
    }

    public JsonNodeType getNodeType() {
        return JsonNodeType.BOOLEAN;
    }

    public int hashCode() {
        byte byte0;
        if (_value)
            byte0 = 3;
        else
            byte0 = 1;
        return byte0;
    }

    public final void serialize(JsonGenerator jsongenerator, SerializerProvider serializerprovider) {
        jsongenerator.writeBoolean(_value);
    }

}
