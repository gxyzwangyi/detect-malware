// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.jsonFormatVisitors;

import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.SerializerProvider;

// Referenced classes of package com.fasterxml.jackson.databind.jsonFormatVisitors:
//            JsonFormatVisitorWithSerializerProvider, JsonAnyFormatVisitor, JsonArrayFormatVisitor, JsonBooleanFormatVisitor, 
//            JsonIntegerFormatVisitor, JsonMapFormatVisitor, JsonNullFormatVisitor, JsonNumberFormatVisitor, 
//            JsonObjectFormatVisitor, JsonStringFormatVisitor

public interface JsonFormatVisitorWrapper
    extends JsonFormatVisitorWithSerializerProvider {
    public static class Base
        implements JsonFormatVisitorWrapper {

        protected SerializerProvider _provider;

        public JsonAnyFormatVisitor expectAnyFormat(JavaType javatype) {
            return null;
        }

        public JsonArrayFormatVisitor expectArrayFormat(JavaType javatype) {
            return null;
        }

        public JsonBooleanFormatVisitor expectBooleanFormat(JavaType javatype) {
            return null;
        }

        public JsonIntegerFormatVisitor expectIntegerFormat(JavaType javatype) {
            return null;
        }

        public JsonMapFormatVisitor expectMapFormat(JavaType javatype) {
            return null;
        }

        public JsonNullFormatVisitor expectNullFormat(JavaType javatype) {
            return null;
        }

        public JsonNumberFormatVisitor expectNumberFormat(JavaType javatype) {
            return null;
        }

        public JsonObjectFormatVisitor expectObjectFormat(JavaType javatype) {
            return null;
        }

        public JsonStringFormatVisitor expectStringFormat(JavaType javatype) {
            return null;
        }

        public SerializerProvider getProvider() {
            return _provider;
        }

        public void setProvider(SerializerProvider serializerprovider) {
            _provider = serializerprovider;
        }

        public Base() {
        }

        public Base(SerializerProvider serializerprovider) {
            _provider = serializerprovider;
        }
    }


    public abstract JsonAnyFormatVisitor expectAnyFormat(JavaType javatype);

    public abstract JsonArrayFormatVisitor expectArrayFormat(JavaType javatype);

    public abstract JsonBooleanFormatVisitor expectBooleanFormat(JavaType javatype);

    public abstract JsonIntegerFormatVisitor expectIntegerFormat(JavaType javatype);

    public abstract JsonMapFormatVisitor expectMapFormat(JavaType javatype);

    public abstract JsonNullFormatVisitor expectNullFormat(JavaType javatype);

    public abstract JsonNumberFormatVisitor expectNumberFormat(JavaType javatype);

    public abstract JsonObjectFormatVisitor expectObjectFormat(JavaType javatype);

    public abstract JsonStringFormatVisitor expectStringFormat(JavaType javatype);
}
