// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.ser;

import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.introspect.AnnotatedClass;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;
import java.util.List;

// Referenced classes of package com.fasterxml.jackson.databind.ser:
//            BeanPropertyWriter, BeanSerializer, AnyGetterWriter

public class BeanSerializerBuilder {

    private static final BeanPropertyWriter NO_PROPERTIES[] = new BeanPropertyWriter[0];
    protected AnyGetterWriter _anyGetter;
    protected final BeanDescription _beanDesc;
    protected SerializationConfig _config;
    protected Object _filterId;
    protected BeanPropertyWriter _filteredProperties[];
    protected ObjectIdWriter _objectIdWriter;
    protected List _properties;
    protected AnnotatedMember _typeId;

    public BeanSerializerBuilder(BeanDescription beandescription) {
        _beanDesc = beandescription;
    }

    protected BeanSerializerBuilder(BeanSerializerBuilder beanserializerbuilder) {
        _beanDesc = beanserializerbuilder._beanDesc;
        _properties = beanserializerbuilder._properties;
        _filteredProperties = beanserializerbuilder._filteredProperties;
        _anyGetter = beanserializerbuilder._anyGetter;
        _filterId = beanserializerbuilder._filterId;
    }

    public JsonSerializer build() {
        if (_properties != null && !_properties.isEmpty()) goto _L2; else goto _L1
_L1:
        if (_anyGetter != null || _objectIdWriter != null) goto _L4; else goto _L3
_L3:
        Object obj = null;
_L5:
        return ((JsonSerializer) (obj));
_L4:
        obj = NO_PROPERTIES;
_L6:
        obj = new BeanSerializer(_beanDesc.getType(), this, ((BeanPropertyWriter []) (obj)), _filteredProperties);
        if (true) goto _L5; else goto _L2
_L2:
        obj = (BeanPropertyWriter[])_properties.toArray(new BeanPropertyWriter[_properties.size()]);
          goto _L6
    }

    public BeanSerializer createDummy() {
        return BeanSerializer.createDummy(_beanDesc.getType());
    }

    public AnyGetterWriter getAnyGetter() {
        return _anyGetter;
    }

    public BeanDescription getBeanDescription() {
        return _beanDesc;
    }

    public AnnotatedClass getClassInfo() {
        return _beanDesc.getClassInfo();
    }

    public Object getFilterId() {
        return _filterId;
    }

    public BeanPropertyWriter[] getFilteredProperties() {
        return _filteredProperties;
    }

    public ObjectIdWriter getObjectIdWriter() {
        return _objectIdWriter;
    }

    public List getProperties() {
        return _properties;
    }

    public AnnotatedMember getTypeId() {
        return _typeId;
    }

    public boolean hasProperties() {
        boolean flag;
        if (_properties != null && _properties.size() > 0)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public void setAnyGetter(AnyGetterWriter anygetterwriter) {
        _anyGetter = anygetterwriter;
    }

    protected void setConfig(SerializationConfig serializationconfig) {
        _config = serializationconfig;
    }

    public void setFilterId(Object obj) {
        _filterId = obj;
    }

    public void setFilteredProperties(BeanPropertyWriter abeanpropertywriter[]) {
        _filteredProperties = abeanpropertywriter;
    }

    public void setObjectIdWriter(ObjectIdWriter objectidwriter) {
        _objectIdWriter = objectidwriter;
    }

    public void setProperties(List list) {
        _properties = list;
    }

    public void setTypeId(AnnotatedMember annotatedmember) {
        if (_typeId != null) {
            throw new IllegalArgumentException((new StringBuilder()).append("Multiple type ids specified with ").append(_typeId).append(" and ").append(annotatedmember).toString());
        } else {
            _typeId = annotatedmember;
            return;
        }
    }

}
