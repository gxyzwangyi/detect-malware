// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.ser.impl;

import com.fasterxml.jackson.annotation.ObjectIdGenerator;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.JsonSerializer;
import com.fasterxml.jackson.databind.SerializerProvider;

// Referenced classes of package com.fasterxml.jackson.databind.ser.impl:
//            ObjectIdWriter

public final class WritableObjectId {

    public final ObjectIdGenerator generator;
    public Object id;
    protected boolean idWritten;

    public WritableObjectId(ObjectIdGenerator objectidgenerator) {
        idWritten = false;
        generator = objectidgenerator;
    }

    public Object generateId(Object obj) {
        if (id == null)
            id = generator.generateId(obj);
        return id;
    }

    public void writeAsField(JsonGenerator jsongenerator, SerializerProvider serializerprovider, ObjectIdWriter objectidwriter) {
        idWritten = true;
        if (!jsongenerator.canWriteObjectId()) goto _L2; else goto _L1
_L1:
        jsongenerator.writeObjectId(String.valueOf(id));
_L4:
        return;
_L2:
        com.fasterxml.jackson.core.SerializableString serializablestring = objectidwriter.propertyName;
        if (serializablestring != null) {
            jsongenerator.writeFieldName(serializablestring);
            objectidwriter.serializer.serialize(id, jsongenerator, serializerprovider);
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public boolean writeAsId(JsonGenerator jsongenerator, SerializerProvider serializerprovider, ObjectIdWriter objectidwriter) {
        boolean flag;
        if (id != null && (idWritten || objectidwriter.alwaysAsId)) {
            if (jsongenerator.canWriteObjectId())
                jsongenerator.writeObjectRef(String.valueOf(id));
            else
                objectidwriter.serializer.serialize(id, jsongenerator, serializerprovider);
            flag = true;
        } else {
            flag = false;
        }
        return flag;
    }
}
