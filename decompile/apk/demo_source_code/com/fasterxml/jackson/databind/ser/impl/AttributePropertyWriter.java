// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.ser.impl;

import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.cfg.MapperConfig;
import com.fasterxml.jackson.databind.introspect.AnnotatedClass;
import com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
import com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter;
import com.fasterxml.jackson.databind.util.Annotations;

public class AttributePropertyWriter extends VirtualBeanPropertyWriter {

    private static final long serialVersionUID = 1L;
    protected final String _attrName;

    protected AttributePropertyWriter(AttributePropertyWriter attributepropertywriter) {
        super(attributepropertywriter);
        _attrName = attributepropertywriter._attrName;
    }

    protected AttributePropertyWriter(String s, BeanPropertyDefinition beanpropertydefinition, Annotations annotations, JavaType javatype) {
        this(s, beanpropertydefinition, annotations, javatype, beanpropertydefinition.findInclusion());
    }

    protected AttributePropertyWriter(String s, BeanPropertyDefinition beanpropertydefinition, Annotations annotations, JavaType javatype, com.fasterxml.jackson.annotation.JsonInclude.Value value1) {
        super(beanpropertydefinition, annotations, javatype, null, null, null, value1);
        _attrName = s;
    }

    public static AttributePropertyWriter construct(String s, BeanPropertyDefinition beanpropertydefinition, Annotations annotations, JavaType javatype) {
        return new AttributePropertyWriter(s, beanpropertydefinition, annotations, javatype);
    }

    protected Object value(Object obj, JsonGenerator jsongenerator, SerializerProvider serializerprovider) {
        return serializerprovider.getAttribute(_attrName);
    }

    public VirtualBeanPropertyWriter withConfig(MapperConfig mapperconfig, AnnotatedClass annotatedclass, BeanPropertyDefinition beanpropertydefinition, JavaType javatype) {
        throw new IllegalStateException("Should not be called on this type");
    }
}
