// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.ser;

import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
import com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase;
import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;
import com.fasterxml.jackson.databind.node.ObjectNode;
import java.io.Serializable;
import java.lang.annotation.Annotation;

public abstract class PropertyWriter extends ConcreteBeanPropertyBase
    implements Serializable {

    private static final long serialVersionUID = 1L;

    protected PropertyWriter(PropertyMetadata propertymetadata) {
        super(propertymetadata);
    }

    protected PropertyWriter(BeanPropertyDefinition beanpropertydefinition) {
        super(beanpropertydefinition.getMetadata());
    }

    protected PropertyWriter(PropertyWriter propertywriter) {
        super(propertywriter);
    }

    public abstract void depositSchemaProperty(JsonObjectFormatVisitor jsonobjectformatvisitor, SerializerProvider serializerprovider);

    public abstract void depositSchemaProperty(ObjectNode objectnode, SerializerProvider serializerprovider);

    public Annotation findAnnotation(Class class1) {
        Annotation annotation1 = getAnnotation(class1);
        Annotation annotation = annotation1;
        if (annotation1 == null)
            annotation = getContextAnnotation(class1);
        return annotation;
    }

    public abstract Annotation getAnnotation(Class class1);

    public abstract Annotation getContextAnnotation(Class class1);

    public abstract PropertyName getFullName();

    public abstract String getName();

    public abstract void serializeAsElement(Object obj, JsonGenerator jsongenerator, SerializerProvider serializerprovider);

    public abstract void serializeAsField(Object obj, JsonGenerator jsongenerator, SerializerProvider serializerprovider);

    public abstract void serializeAsOmittedField(Object obj, JsonGenerator jsongenerator, SerializerProvider serializerprovider);

    public abstract void serializeAsPlaceholder(Object obj, JsonGenerator jsongenerator, SerializerProvider serializerprovider);
}
