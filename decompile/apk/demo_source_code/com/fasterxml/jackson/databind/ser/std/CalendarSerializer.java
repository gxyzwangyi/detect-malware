// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.ser.std;

import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.SerializerProvider;
import java.text.DateFormat;
import java.util.Calendar;

// Referenced classes of package com.fasterxml.jackson.databind.ser.std:
//            DateTimeSerializerBase

public class CalendarSerializer extends DateTimeSerializerBase {

    public static final CalendarSerializer instance = new CalendarSerializer();

    public CalendarSerializer() {
        this(null, null);
    }

    public CalendarSerializer(Boolean boolean1, DateFormat dateformat) {
        super(java/util/Calendar, boolean1, dateformat);
    }

    protected volatile long _timestamp(Object obj) {
        return _timestamp((Calendar)obj);
    }

    protected long _timestamp(Calendar calendar) {
        long l;
        if (calendar == null)
            l = 0L;
        else
            l = calendar.getTimeInMillis();
        return l;
    }

    public volatile void serialize(Object obj, JsonGenerator jsongenerator, SerializerProvider serializerprovider) {
        serialize((Calendar)obj, jsongenerator, serializerprovider);
    }

    public void serialize(Calendar calendar, JsonGenerator jsongenerator, SerializerProvider serializerprovider) {
        if (_asTimestamp(serializerprovider))
            jsongenerator.writeNumber(_timestamp(calendar));
        else
        if (_customFormat != null)
            synchronized (_customFormat) {
                jsongenerator.writeString(_customFormat.format(calendar.getTime()));
            }
        else
            serializerprovider.defaultSerializeDateValue(calendar.getTime(), jsongenerator);
        return;
        calendar;
        serializerprovider;
        JVM INSTR monitorexit ;
        throw calendar;
    }

    public CalendarSerializer withFormat(Boolean boolean1, DateFormat dateformat) {
        return new CalendarSerializer(boolean1, dateformat);
    }

    public volatile DateTimeSerializerBase withFormat(Boolean boolean1, DateFormat dateformat) {
        return withFormat(boolean1, dateformat);
    }

}
