// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.ser.std;

import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
import java.lang.reflect.Type;
import java.util.Date;

// Referenced classes of package com.fasterxml.jackson.databind.ser.std:
//            StdSerializer

public class StdKeySerializer extends StdSerializer {

    public StdKeySerializer() {
        super(java/lang/Object);
    }

    public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper jsonformatvisitorwrapper, JavaType javatype) {
        visitStringFormat(jsonformatvisitorwrapper, javatype);
    }

    public JsonNode getSchema(SerializerProvider serializerprovider, Type type) {
        return createSchemaNode("string");
    }

    public void serialize(Object obj, JsonGenerator jsongenerator, SerializerProvider serializerprovider) {
        Class class1 = obj.getClass();
        if (class1 != java/lang/String) goto _L2; else goto _L1
_L1:
        obj = (String)obj;
_L6:
        jsongenerator.writeFieldName(((String) (obj)));
_L4:
        return;
_L2:
        if (class1.isEnum()) {
            obj = (Enum)obj;
            if (serializerprovider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING))
                obj = ((Enum) (obj)).toString();
            else
                obj = ((Enum) (obj)).name();
            continue; /* Loop/switch isn't completed */
        }
        if (!(obj instanceof Date))
            break; /* Loop/switch isn't completed */
        serializerprovider.defaultSerializeDateKey((Date)obj, jsongenerator);
        if (true) goto _L4; else goto _L3
_L3:
        if (class1 == java/lang/Class)
            obj = ((Class)obj).getName();
        else
            obj = obj.toString();
        if (true) goto _L6; else goto _L5
_L5:
    }
}
