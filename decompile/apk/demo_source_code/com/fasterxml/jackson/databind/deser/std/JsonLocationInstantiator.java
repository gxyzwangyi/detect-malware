// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.deser.std;

import com.fasterxml.jackson.core.JsonLocation;
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.deser.*;

public class JsonLocationInstantiator extends ValueInstantiator {

    public JsonLocationInstantiator() {
    }

    private static final int _int(Object obj) {
        int i;
        if (obj == null)
            i = 0;
        else
            i = ((Number)obj).intValue();
        return i;
    }

    private static final long _long(Object obj) {
        long l;
        if (obj == null)
            l = 0L;
        else
            l = ((Number)obj).longValue();
        return l;
    }

    private static CreatorProperty creatorProp(String s, JavaType javatype, int i) {
        return new CreatorProperty(PropertyName.construct(s), javatype, null, null, null, null, i, null, PropertyMetadata.STD_REQUIRED);
    }

    public boolean canCreateFromObjectWith() {
        return true;
    }

    public Object createFromObjectWith(DeserializationContext deserializationcontext, Object aobj[]) {
        return new JsonLocation(aobj[0], _long(aobj[1]), _long(aobj[2]), _int(aobj[3]), _int(aobj[4]));
    }

    public SettableBeanProperty[] getFromObjectArguments(DeserializationConfig deserializationconfig) {
        JavaType javatype1 = deserializationconfig.constructType(Integer.TYPE);
        JavaType javatype = deserializationconfig.constructType(Long.TYPE);
        return (new SettableBeanProperty[] {
            creatorProp("sourceRef", deserializationconfig.constructType(java/lang/Object), 0), creatorProp("byteOffset", javatype, 1), creatorProp("charOffset", javatype, 2), creatorProp("lineNr", javatype1, 3), creatorProp("columnNr", javatype1, 4)
        });
    }

    public String getValueTypeDesc() {
        return com/fasterxml/jackson/core/JsonLocation.getName();
    }
}
