// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.deser.impl;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import java.io.Serializable;
import java.util.Collection;

public final class TypeWrappedDeserializer extends JsonDeserializer
    implements Serializable {

    private static final long serialVersionUID = 1L;
    protected final JsonDeserializer _deserializer;
    protected final TypeDeserializer _typeDeserializer;

    public TypeWrappedDeserializer(TypeDeserializer typedeserializer, JsonDeserializer jsondeserializer) {
        _typeDeserializer = typedeserializer;
        _deserializer = jsondeserializer;
    }

    public Object deserialize(JsonParser jsonparser, DeserializationContext deserializationcontext) {
        return _deserializer.deserializeWithType(jsonparser, deserializationcontext, _typeDeserializer);
    }

    public Object deserialize(JsonParser jsonparser, DeserializationContext deserializationcontext, Object obj) {
        return _deserializer.deserialize(jsonparser, deserializationcontext, obj);
    }

    public Object deserializeWithType(JsonParser jsonparser, DeserializationContext deserializationcontext, TypeDeserializer typedeserializer) {
        throw new IllegalStateException("Type-wrapped deserializer's deserializeWithType should never get called");
    }

    public JsonDeserializer getDelegatee() {
        return _deserializer.getDelegatee();
    }

    public Object getEmptyValue(DeserializationContext deserializationcontext) {
        return _deserializer.getEmptyValue(deserializationcontext);
    }

    public Collection getKnownPropertyNames() {
        return _deserializer.getKnownPropertyNames();
    }

    public Object getNullValue(DeserializationContext deserializationcontext) {
        return _deserializer.getNullValue(deserializationcontext);
    }

    public Class handledType() {
        return _deserializer.handledType();
    }
}
