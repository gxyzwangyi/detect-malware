// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.deser.impl;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.introspect.*;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.util.Annotations;
import java.lang.annotation.Annotation;
import java.lang.reflect.Method;

public final class MethodProperty extends SettableBeanProperty {

    private static final long serialVersionUID = 1L;
    protected final AnnotatedMethod _annotated;
    protected final transient Method _setter;

    protected MethodProperty(MethodProperty methodproperty, JsonDeserializer jsondeserializer) {
        super(methodproperty, jsondeserializer);
        _annotated = methodproperty._annotated;
        _setter = methodproperty._setter;
    }

    protected MethodProperty(MethodProperty methodproperty, PropertyName propertyname) {
        super(methodproperty, propertyname);
        _annotated = methodproperty._annotated;
        _setter = methodproperty._setter;
    }

    protected MethodProperty(MethodProperty methodproperty, Method method) {
        super(methodproperty);
        _annotated = methodproperty._annotated;
        _setter = method;
    }

    public MethodProperty(BeanPropertyDefinition beanpropertydefinition, JavaType javatype, TypeDeserializer typedeserializer, Annotations annotations, AnnotatedMethod annotatedmethod) {
        super(beanpropertydefinition, javatype, typedeserializer, annotations);
        _annotated = annotatedmethod;
        _setter = annotatedmethod.getAnnotated();
    }

    public void deserializeAndSet(JsonParser jsonparser, DeserializationContext deserializationcontext, Object obj) {
        deserializationcontext = ((DeserializationContext) (deserialize(jsonparser, deserializationcontext)));
        _setter.invoke(obj, new Object[] {
            deserializationcontext
        });
_L1:
        return;
        obj;
        _throwAsIOE(jsonparser, ((Exception) (obj)), deserializationcontext);
          goto _L1
    }

    public Object deserializeSetAndReturn(JsonParser jsonparser, DeserializationContext deserializationcontext, Object obj) {
        Object obj1 = deserialize(jsonparser, deserializationcontext);
        deserializationcontext = ((DeserializationContext) (_setter.invoke(obj, new Object[] {
            obj1
        })));
        if (deserializationcontext != null)
            obj = deserializationcontext;
_L2:
        return obj;
        deserializationcontext;
        _throwAsIOE(jsonparser, deserializationcontext, obj1);
        obj = null;
        if (true) goto _L2; else goto _L1
_L1:
    }

    public Annotation getAnnotation(Class class1) {
        if (_annotated == null)
            class1 = null;
        else
            class1 = _annotated.getAnnotation(class1);
        return class1;
    }

    public AnnotatedMember getMember() {
        return _annotated;
    }

    Object readResolve() {
        return new MethodProperty(this, _annotated.getAnnotated());
    }

    public final void set(Object obj, Object obj1) {
        _setter.invoke(obj, new Object[] {
            obj1
        });
_L1:
        return;
        obj;
        _throwAsIOE(((Exception) (obj)), obj1);
          goto _L1
    }

    public Object setAndReturn(Object obj, Object obj1) {
        Object obj2 = _setter.invoke(obj, new Object[] {
            obj1
        });
        if (obj2 != null)
            obj = obj2;
_L2:
        return obj;
        obj;
        _throwAsIOE(((Exception) (obj)), obj1);
        obj = null;
        if (true) goto _L2; else goto _L1
_L1:
    }

    public volatile SettableBeanProperty withName(PropertyName propertyname) {
        return withName(propertyname);
    }

    public MethodProperty withName(PropertyName propertyname) {
        return new MethodProperty(this, propertyname);
    }

    public volatile SettableBeanProperty withValueDeserializer(JsonDeserializer jsondeserializer) {
        return withValueDeserializer(jsondeserializer);
    }

    public MethodProperty withValueDeserializer(JsonDeserializer jsondeserializer) {
        return new MethodProperty(this, jsondeserializer);
    }
}
