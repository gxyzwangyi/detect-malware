// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.deser.std;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.deser.ResolvableDeserializer;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;

// Referenced classes of package com.fasterxml.jackson.databind.deser.std:
//            StdDeserializer

public abstract class StdNodeBasedDeserializer extends StdDeserializer
    implements ResolvableDeserializer {

    private static final long serialVersionUID = 1L;
    protected JsonDeserializer _treeDeserializer;

    protected StdNodeBasedDeserializer(JavaType javatype) {
        super(javatype);
    }

    protected StdNodeBasedDeserializer(StdNodeBasedDeserializer stdnodebaseddeserializer) {
        super(stdnodebaseddeserializer);
        _treeDeserializer = stdnodebaseddeserializer._treeDeserializer;
    }

    protected StdNodeBasedDeserializer(Class class1) {
        super(class1);
    }

    public abstract Object convert(JsonNode jsonnode, DeserializationContext deserializationcontext);

    public Object deserialize(JsonParser jsonparser, DeserializationContext deserializationcontext) {
        return convert((JsonNode)_treeDeserializer.deserialize(jsonparser, deserializationcontext), deserializationcontext);
    }

    public Object deserializeWithType(JsonParser jsonparser, DeserializationContext deserializationcontext, TypeDeserializer typedeserializer) {
        return convert((JsonNode)_treeDeserializer.deserializeWithType(jsonparser, deserializationcontext, typedeserializer), deserializationcontext);
    }

    public void resolve(DeserializationContext deserializationcontext) {
        _treeDeserializer = deserializationcontext.findRootValueDeserializer(deserializationcontext.constructType(com/fasterxml/jackson/databind/JsonNode));
    }
}
