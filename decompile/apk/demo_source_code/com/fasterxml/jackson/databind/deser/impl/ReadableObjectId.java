// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.deser.impl;

import com.fasterxml.jackson.annotation.ObjectIdResolver;
import com.fasterxml.jackson.core.JsonLocation;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
import java.util.*;

public class ReadableObjectId {
    public static abstract class Referring {

        private final Class _beanType;
        private final UnresolvedForwardReference _reference;

        public Class getBeanType() {
            return _beanType;
        }

        public JsonLocation getLocation() {
            return _reference.getLocation();
        }

        public abstract void handleResolvedForwardReference(Object obj, Object obj1);

        public boolean hasId(Object obj) {
            return obj.equals(_reference.getUnresolvedId());
        }

        public Referring(UnresolvedForwardReference unresolvedforwardreference, Class class1) {
            _reference = unresolvedforwardreference;
            _beanType = class1;
        }
    }


    protected final com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey _key;
    protected LinkedList _referringProperties;
    protected ObjectIdResolver _resolver;
    public final Object id;
    public Object item;

    public ReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey idkey) {
        _key = idkey;
        id = idkey.key;
    }

    public ReadableObjectId(Object obj) {
        id = obj;
        _key = null;
    }

    public void appendReferring(Referring referring) {
        if (_referringProperties == null)
            _referringProperties = new LinkedList();
        _referringProperties.add(referring);
    }

    public void bindItem(Object obj) {
        _resolver.bindItem(_key, obj);
        item = obj;
        if (_referringProperties != null) {
            Iterator iterator = _referringProperties.iterator();
            _referringProperties = null;
            for (; iterator.hasNext(); ((Referring)iterator.next()).handleResolvedForwardReference(id, obj));
        }
    }

    public com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey getKey() {
        return _key;
    }

    public ObjectIdResolver getResolver() {
        return _resolver;
    }

    public boolean hasReferringProperties() {
        boolean flag;
        if (_referringProperties != null && !_referringProperties.isEmpty())
            flag = true;
        else
            flag = false;
        return flag;
    }

    public Iterator referringProperties() {
        Iterator iterator;
        if (_referringProperties == null)
            iterator = Collections.emptyList().iterator();
        else
            iterator = _referringProperties.iterator();
        return iterator;
    }

    public Object resolve() {
        Object obj = _resolver.resolveId(_key);
        item = obj;
        return obj;
    }

    public void setResolver(ObjectIdResolver objectidresolver) {
        _resolver = objectidresolver;
    }

    public String toString() {
        return String.valueOf(_key);
    }

    public boolean tryToResolveUnresolved(DeserializationContext deserializationcontext) {
        return false;
    }
}
