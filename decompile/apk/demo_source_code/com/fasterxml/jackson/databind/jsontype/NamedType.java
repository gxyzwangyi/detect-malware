// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.jsontype;

import java.io.Serializable;

public final class NamedType
    implements Serializable {

    private static final long serialVersionUID = 1L;
    protected final Class _class;
    protected final int _hashCode;
    protected String _name;

    public NamedType(Class class1) {
        this(class1, null);
    }

    public NamedType(Class class1, String s) {
        _class = class1;
        _hashCode = class1.getName().hashCode();
        setName(s);
    }

    public boolean equals(Object obj) {
        boolean flag = true;
        if (obj != this) goto _L2; else goto _L1
_L1:
        return flag;
_L2:
        if (obj == null)
            flag = false;
        else
        if (obj.getClass() != getClass())
            flag = false;
        else
        if (_class != ((NamedType)obj)._class)
            flag = false;
        if (true) goto _L1; else goto _L3
_L3:
    }

    public String getName() {
        return _name;
    }

    public Class getType() {
        return _class;
    }

    public boolean hasName() {
        boolean flag;
        if (_name != null)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public int hashCode() {
        return _hashCode;
    }

    public void setName(String s) {
        String s1;
label0:
        {
            if (s != null) {
                s1 = s;
                if (s.length() != 0)
                    break label0;
            }
            s1 = null;
        }
        _name = s1;
    }

    public String toString() {
        StringBuilder stringbuilder = (new StringBuilder()).append("[NamedType, class ").append(_class.getName()).append(", name: ");
        String s;
        if (_name == null)
            s = "null";
        else
            s = (new StringBuilder()).append("'").append(_name).append("'").toString();
        return stringbuilder.append(s).append("]").toString();
    }
}
