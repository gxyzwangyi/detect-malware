// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind;

import java.io.Serializable;

public class PropertyMetadata
    implements Serializable {

    public static final PropertyMetadata STD_OPTIONAL;
    public static final PropertyMetadata STD_REQUIRED;
    public static final PropertyMetadata STD_REQUIRED_OR_OPTIONAL = new PropertyMetadata(null, null, null, null);
    private static final long serialVersionUID = -1L;
    protected final String _defaultValue;
    protected final String _description;
    protected final Integer _index;
    protected final Boolean _required;

    protected PropertyMetadata(Boolean boolean1, String s) {
        this(boolean1, s, null, null);
    }

    protected PropertyMetadata(Boolean boolean1, String s, Integer integer, String s1) {
label0:
        {
            super();
            _required = boolean1;
            _description = s;
            _index = integer;
            if (s1 != null) {
                boolean1 = s1;
                if (!s1.isEmpty())
                    break label0;
            }
            boolean1 = null;
        }
        _defaultValue = boolean1;
    }

    public static PropertyMetadata construct(boolean flag, String s) {
        return construct(flag, s, null, null);
    }

    public static PropertyMetadata construct(boolean flag, String s, Integer integer, String s1) {
        if (s != null || integer != null || s1 != null)
            s = new PropertyMetadata(Boolean.valueOf(flag), s, integer, s1);
        else
        if (flag)
            s = STD_REQUIRED;
        else
            s = STD_OPTIONAL;
        return s;
    }

    public String getDefaultValue() {
        return _defaultValue;
    }

    public String getDescription() {
        return _description;
    }

    public Integer getIndex() {
        return _index;
    }

    public Boolean getRequired() {
        return _required;
    }

    public boolean hasDefaultValue() {
        boolean flag;
        if (_defaultValue != null)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean hasDefuaultValue() {
        return hasDefaultValue();
    }

    public boolean hasIndex() {
        boolean flag;
        if (_index != null)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean isRequired() {
        boolean flag;
        if (_required != null && _required.booleanValue())
            flag = true;
        else
            flag = false;
        return flag;
    }

    protected Object readResolve() {
        PropertyMetadata propertymetadata;
        if (_description == null && _index == null && _defaultValue == null) {
            if (_required == null)
                propertymetadata = STD_REQUIRED_OR_OPTIONAL;
            else
            if (_required.booleanValue())
                propertymetadata = STD_REQUIRED;
            else
                propertymetadata = STD_OPTIONAL;
        } else {
            propertymetadata = this;
        }
        return propertymetadata;
    }

    public PropertyMetadata withDefaultValue(String s) {
        if (s != null && !s.isEmpty()) goto _L2; else goto _L1
_L1:
        if (_defaultValue != null) goto _L4; else goto _L3
_L3:
        s = this;
_L8:
        return s;
_L4:
        String s1 = null;
_L6:
        s = new PropertyMetadata(_required, _description, _index, s1);
        continue; /* Loop/switch isn't completed */
_L2:
        s1 = s;
        if (!_defaultValue.equals(s)) goto _L6; else goto _L5
_L5:
        s = this;
        if (true) goto _L8; else goto _L7
_L7:
    }

    public PropertyMetadata withDescription(String s) {
        return new PropertyMetadata(_required, s, _index, _defaultValue);
    }

    public PropertyMetadata withIndex(Integer integer) {
        return new PropertyMetadata(_required, _description, integer, _defaultValue);
    }

    public PropertyMetadata withRequired(Boolean boolean1) {
        if (boolean1 != null) goto _L2; else goto _L1
_L1:
        if (_required != null) goto _L4; else goto _L3
_L3:
        PropertyMetadata propertymetadata = this;
_L6:
        return propertymetadata;
_L2:
        if (_required != null) {
            propertymetadata = this;
            if (_required.booleanValue() == boolean1.booleanValue())
                continue; /* Loop/switch isn't completed */
        }
_L4:
        propertymetadata = new PropertyMetadata(boolean1, _description, _index, _defaultValue);
        if (true) goto _L6; else goto _L5
_L5:
    }

    static  {
        STD_REQUIRED = new PropertyMetadata(Boolean.TRUE, null, null, null);
        STD_OPTIONAL = new PropertyMetadata(Boolean.FALSE, null, null, null);
    }
}
