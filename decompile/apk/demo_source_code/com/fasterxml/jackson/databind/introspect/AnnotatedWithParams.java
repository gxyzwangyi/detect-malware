// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.introspect;

import com.fasterxml.jackson.databind.JavaType;
import java.lang.annotation.Annotation;
import java.lang.reflect.Type;

// Referenced classes of package com.fasterxml.jackson.databind.introspect:
//            AnnotatedMember, AnnotationMap, AnnotatedParameter, TypeResolutionContext

public abstract class AnnotatedWithParams extends AnnotatedMember {

    private static final long serialVersionUID = 1L;
    protected final AnnotationMap _paramAnnotations[];

    protected AnnotatedWithParams(TypeResolutionContext typeresolutioncontext, AnnotationMap annotationmap, AnnotationMap aannotationmap[]) {
        super(typeresolutioncontext, annotationmap);
        _paramAnnotations = aannotationmap;
    }

    public final void addOrOverrideParam(int i, Annotation annotation) {
        AnnotationMap annotationmap1 = _paramAnnotations[i];
        AnnotationMap annotationmap = annotationmap1;
        if (annotationmap1 == null) {
            annotationmap = new AnnotationMap();
            _paramAnnotations[i] = annotationmap;
        }
        annotationmap.add(annotation);
    }

    public abstract Object call();

    public abstract Object call(Object aobj[]);

    public abstract Object call1(Object obj);

    public final int getAnnotationCount() {
        return _annotations.size();
    }

    public abstract Type getGenericParameterType(int i);

    public final AnnotatedParameter getParameter(int i) {
        return new AnnotatedParameter(this, getParameterType(i), getParameterAnnotations(i), i);
    }

    public final AnnotationMap getParameterAnnotations(int i) {
        AnnotationMap annotationmap;
        if (_paramAnnotations != null && i >= 0 && i < _paramAnnotations.length)
            annotationmap = _paramAnnotations[i];
        else
            annotationmap = null;
        return annotationmap;
    }

    public abstract int getParameterCount();

    public abstract JavaType getParameterType(int i);

    public abstract Class getRawParameterType(int i);

    protected AnnotatedParameter replaceParameterAnnotations(int i, AnnotationMap annotationmap) {
        _paramAnnotations[i] = annotationmap;
        return getParameter(i);
    }
}
