// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.introspect;

import com.fasterxml.jackson.databind.JavaType;
import java.io.Serializable;
import java.lang.reflect.*;

// Referenced classes of package com.fasterxml.jackson.databind.introspect:
//            AnnotatedMember, TypeResolutionContext, AnnotationMap, Annotated

public class VirtualAnnotatedMember extends AnnotatedMember
    implements Serializable {

    private static final long serialVersionUID = 1L;
    protected final Class _declaringClass;
    protected final String _name;
    protected final Class _rawType;

    public VirtualAnnotatedMember(TypeResolutionContext typeresolutioncontext, Class class1, String s, Class class2) {
        super(typeresolutioncontext, null);
        _declaringClass = class1;
        _rawType = class2;
        _name = s;
    }

    public boolean equals(Object obj) {
        boolean flag = true;
        if (obj != this) goto _L2; else goto _L1
_L1:
        return flag;
_L2:
        if (obj == null || obj.getClass() != getClass()) {
            flag = false;
        } else {
            obj = (VirtualAnnotatedMember)obj;
            if (((VirtualAnnotatedMember) (obj))._declaringClass != _declaringClass || !((VirtualAnnotatedMember) (obj))._name.equals(_name))
                flag = false;
        }
        if (true) goto _L1; else goto _L3
_L3:
    }

    public volatile AnnotatedElement getAnnotated() {
        return getAnnotated();
    }

    public Field getAnnotated() {
        return null;
    }

    public int getAnnotationCount() {
        return 0;
    }

    public Class getDeclaringClass() {
        return _declaringClass;
    }

    public String getFullName() {
        return (new StringBuilder()).append(getDeclaringClass().getName()).append("#").append(getName()).toString();
    }

    public Member getMember() {
        return null;
    }

    public int getModifiers() {
        return 0;
    }

    public String getName() {
        return _name;
    }

    public Class getRawType() {
        return _rawType;
    }

    public JavaType getType() {
        return _typeContext.resolveType(_rawType);
    }

    public Object getValue(Object obj) {
        throw new IllegalArgumentException((new StringBuilder()).append("Can not get virtual property '").append(_name).append("'").toString());
    }

    public int hashCode() {
        return _name.hashCode();
    }

    public void setValue(Object obj, Object obj1) {
        throw new IllegalArgumentException((new StringBuilder()).append("Can not set virtual property '").append(_name).append("'").toString());
    }

    public String toString() {
        return (new StringBuilder()).append("[field ").append(getFullName()).append("]").toString();
    }

    public Annotated withAnnotations(AnnotationMap annotationmap) {
        return this;
    }
}
