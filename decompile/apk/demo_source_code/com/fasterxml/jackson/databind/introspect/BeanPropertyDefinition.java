// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.introspect;

import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.util.ClassUtil;
import com.fasterxml.jackson.databind.util.Named;
import java.util.Iterator;

// Referenced classes of package com.fasterxml.jackson.databind.introspect:
//            ObjectIdInfo, AnnotatedMember, AnnotatedParameter, AnnotatedField, 
//            AnnotatedMethod

public abstract class BeanPropertyDefinition
    implements Named {

    protected static final com.fasterxml.jackson.annotation.JsonInclude.Value EMPTY_INCLUDE = com.fasterxml.jackson.annotation.JsonInclude.Value.empty();

    public BeanPropertyDefinition() {
    }

    public boolean couldDeserialize() {
        boolean flag;
        if (getMutator() != null)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean couldSerialize() {
        boolean flag;
        if (getAccessor() != null)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public com.fasterxml.jackson.annotation.JsonInclude.Value findInclusion() {
        return EMPTY_INCLUDE;
    }

    public ObjectIdInfo findObjectIdInfo() {
        return null;
    }

    public com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty findReferenceType() {
        return null;
    }

    public Class[] findViews() {
        return null;
    }

    public abstract AnnotatedMember getAccessor();

    public abstract AnnotatedParameter getConstructorParameter();

    public Iterator getConstructorParameters() {
        return ClassUtil.emptyIterator();
    }

    public abstract AnnotatedField getField();

    public abstract PropertyName getFullName();

    public abstract AnnotatedMethod getGetter();

    public abstract String getInternalName();

    public abstract PropertyMetadata getMetadata();

    public abstract AnnotatedMember getMutator();

    public abstract String getName();

    public abstract AnnotatedMember getNonConstructorMutator();

    public abstract AnnotatedMember getPrimaryMember();

    public abstract AnnotatedMethod getSetter();

    public abstract PropertyName getWrapperName();

    public abstract boolean hasConstructorParameter();

    public abstract boolean hasField();

    public abstract boolean hasGetter();

    public boolean hasName(PropertyName propertyname) {
        return getFullName().equals(propertyname);
    }

    public abstract boolean hasSetter();

    public abstract boolean isExplicitlyIncluded();

    public boolean isExplicitlyNamed() {
        return isExplicitlyIncluded();
    }

    public boolean isRequired() {
        PropertyMetadata propertymetadata = getMetadata();
        boolean flag;
        if (propertymetadata != null && propertymetadata.isRequired())
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean isTypeId() {
        return false;
    }

    public abstract BeanPropertyDefinition withName(PropertyName propertyname);

    public abstract BeanPropertyDefinition withSimpleName(String s);

}
