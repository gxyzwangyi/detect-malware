// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.introspect;

import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.cfg.MapperConfig;
import java.io.Serializable;

public abstract class ConcreteBeanPropertyBase
    implements BeanProperty, Serializable {

    private static final long serialVersionUID = 1L;
    protected transient com.fasterxml.jackson.annotation.JsonFormat.Value _format;
    protected final PropertyMetadata _metadata;

    protected ConcreteBeanPropertyBase(PropertyMetadata propertymetadata) {
        PropertyMetadata propertymetadata1 = propertymetadata;
        if (propertymetadata == null)
            propertymetadata1 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        _metadata = propertymetadata1;
    }

    protected ConcreteBeanPropertyBase(ConcreteBeanPropertyBase concretebeanpropertybase) {
        _metadata = concretebeanpropertybase._metadata;
        _format = concretebeanpropertybase._format;
    }

    public final com.fasterxml.jackson.annotation.JsonFormat.Value findFormatOverrides(AnnotationIntrospector annotationintrospector) {
        com.fasterxml.jackson.annotation.JsonFormat.Value value1 = _format;
        Object obj = value1;
        if (value1 == null) {
            com.fasterxml.jackson.annotation.JsonFormat.Value value = value1;
            if (annotationintrospector != null) {
                obj = getMember();
                value = value1;
                if (obj != null)
                    value = annotationintrospector.findFormat(((Annotated) (obj)));
            }
            obj = value;
            if (value == null)
                obj = EMPTY_FORMAT;
        }
        return ((com.fasterxml.jackson.annotation.JsonFormat.Value) (obj));
    }

    public com.fasterxml.jackson.annotation.JsonFormat.Value findPropertyFormat(MapperConfig mapperconfig, Class class1) {
        Object obj;
        AnnotationIntrospector annotationintrospector;
        class1 = mapperconfig.getDefaultPropertyFormat(class1);
        annotationintrospector = mapperconfig.getAnnotationIntrospector();
        obj = getMember();
        mapperconfig = class1;
        if (annotationintrospector == null) goto _L2; else goto _L1
_L1:
        if (obj != null) goto _L4; else goto _L3
_L3:
        mapperconfig = class1;
_L2:
        return mapperconfig;
_L4:
        obj = annotationintrospector.findFormat(((Annotated) (obj)));
        mapperconfig = class1;
        if (obj != null)
            mapperconfig = class1.withOverrides(((com.fasterxml.jackson.annotation.JsonFormat.Value) (obj)));
        if (true) goto _L2; else goto _L5
_L5:
    }

    public com.fasterxml.jackson.annotation.JsonInclude.Value findPropertyInclusion(MapperConfig mapperconfig, Class class1) {
        Object obj;
        AnnotationIntrospector annotationintrospector;
        class1 = mapperconfig.getDefaultPropertyInclusion(class1);
        annotationintrospector = mapperconfig.getAnnotationIntrospector();
        obj = getMember();
        mapperconfig = class1;
        if (annotationintrospector == null) goto _L2; else goto _L1
_L1:
        if (obj != null) goto _L4; else goto _L3
_L3:
        mapperconfig = class1;
_L2:
        return mapperconfig;
_L4:
        obj = annotationintrospector.findPropertyInclusion(((Annotated) (obj)));
        mapperconfig = class1;
        if (obj != null)
            mapperconfig = class1.withOverrides(((com.fasterxml.jackson.annotation.JsonInclude.Value) (obj)));
        if (true) goto _L2; else goto _L5
_L5:
    }

    public PropertyMetadata getMetadata() {
        return _metadata;
    }

    public boolean isRequired() {
        return _metadata.isRequired();
    }

    public boolean isVirtual() {
        return false;
    }
}
