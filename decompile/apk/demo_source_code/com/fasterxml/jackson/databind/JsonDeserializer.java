// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.deser.impl.ObjectIdReader;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.util.NameTransformer;
import java.util.Collection;

// Referenced classes of package com.fasterxml.jackson.databind:
//            DeserializationContext

public abstract class JsonDeserializer {
    public static abstract class None extends JsonDeserializer {

        private None() {
        }
    }


    public JsonDeserializer() {
    }

    public abstract Object deserialize(JsonParser jsonparser, DeserializationContext deserializationcontext);

    public Object deserialize(JsonParser jsonparser, DeserializationContext deserializationcontext, Object obj) {
        throw new UnsupportedOperationException((new StringBuilder()).append("Can not update object of type ").append(obj.getClass().getName()).append(" (by deserializer of type ").append(getClass().getName()).append(")").toString());
    }

    public Object deserializeWithType(JsonParser jsonparser, DeserializationContext deserializationcontext, TypeDeserializer typedeserializer) {
        return typedeserializer.deserializeTypedFromAny(jsonparser, deserializationcontext);
    }

    public SettableBeanProperty findBackReference(String s) {
        throw new IllegalArgumentException((new StringBuilder()).append("Can not handle managed/back reference '").append(s).append("': type: value deserializer of type ").append(getClass().getName()).append(" does not support them").toString());
    }

    public JsonDeserializer getDelegatee() {
        return null;
    }

    public Object getEmptyValue() {
        return getNullValue();
    }

    public Object getEmptyValue(DeserializationContext deserializationcontext) {
        return getEmptyValue();
    }

    public Collection getKnownPropertyNames() {
        return null;
    }

    public Object getNullValue() {
        return null;
    }

    public Object getNullValue(DeserializationContext deserializationcontext) {
        return getNullValue();
    }

    public ObjectIdReader getObjectIdReader() {
        return null;
    }

    public Class handledType() {
        return null;
    }

    public boolean isCachable() {
        return false;
    }

    public JsonDeserializer replaceDelegatee(JsonDeserializer jsondeserializer) {
        throw new UnsupportedOperationException();
    }

    public JsonDeserializer unwrappingDeserializer(NameTransformer nametransformer) {
        return this;
    }
}
