// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.util;

import com.fasterxml.jackson.databind.JavaType;

public class TypeKey {

    protected Class _class;
    protected int _hashCode;
    protected boolean _isTyped;
    protected JavaType _type;

    public TypeKey() {
    }

    public TypeKey(JavaType javatype, boolean flag) {
        _type = javatype;
        _class = null;
        _isTyped = flag;
        int i;
        if (flag)
            i = typedHash(javatype);
        else
            i = untypedHash(javatype);
        _hashCode = i;
    }

    public TypeKey(TypeKey typekey) {
        _hashCode = typekey._hashCode;
        _class = typekey._class;
        _type = typekey._type;
        _isTyped = typekey._isTyped;
    }

    public TypeKey(Class class1, boolean flag) {
        _class = class1;
        _type = null;
        _isTyped = flag;
        int i;
        if (flag)
            i = typedHash(class1);
        else
            i = untypedHash(class1);
        _hashCode = i;
    }

    public static final int typedHash(JavaType javatype) {
        return javatype.hashCode() - 2;
    }

    public static final int typedHash(Class class1) {
        return class1.getName().hashCode() + 1;
    }

    public static final int untypedHash(JavaType javatype) {
        return javatype.hashCode() - 1;
    }

    public static final int untypedHash(Class class1) {
        return class1.getName().hashCode();
    }

    public final boolean equals(Object obj) {
        boolean flag1;
        boolean flag2;
        flag2 = true;
        flag1 = false;
        if (obj != null) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L4:
        return flag;
_L2:
        if (obj == this) {
            flag = true;
        } else {
            flag = flag1;
            if (obj.getClass() == getClass()) {
                obj = (TypeKey)obj;
                flag = flag1;
                if (((TypeKey) (obj))._isTyped == _isTyped)
                    if (_class != null) {
                        if (((TypeKey) (obj))._class == _class)
                            flag = flag2;
                        else
                            flag = false;
                    } else {
                        flag = _type.equals(((TypeKey) (obj))._type);
                    }
            }
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public Class getRawType() {
        return _class;
    }

    public JavaType getType() {
        return _type;
    }

    public final int hashCode() {
        return _hashCode;
    }

    public boolean isTyped() {
        return _isTyped;
    }

    public final void resetTyped(JavaType javatype) {
        _type = javatype;
        _class = null;
        _isTyped = true;
        _hashCode = typedHash(javatype);
    }

    public final void resetTyped(Class class1) {
        _type = null;
        _class = class1;
        _isTyped = true;
        _hashCode = typedHash(class1);
    }

    public final void resetUntyped(JavaType javatype) {
        _type = javatype;
        _class = null;
        _isTyped = false;
        _hashCode = untypedHash(javatype);
    }

    public final void resetUntyped(Class class1) {
        _type = null;
        _class = class1;
        _isTyped = false;
        _hashCode = untypedHash(class1);
    }

    public final String toString() {
        String s;
        if (_class != null)
            s = (new StringBuilder()).append("{class: ").append(_class.getName()).append(", typed? ").append(_isTyped).append("}").toString();
        else
            s = (new StringBuilder()).append("{type: ").append(_type).append(", typed? ").append(_isTyped).append("}").toString();
        return s;
    }
}
