// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.databind.util;

import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.SerializableString;
import com.fasterxml.jackson.databind.JsonSerializable;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.jsontype.TypeSerializer;

public class RawValue
    implements JsonSerializable {

    protected Object _value;

    public RawValue(SerializableString serializablestring) {
        _value = serializablestring;
    }

    public RawValue(JsonSerializable jsonserializable) {
        _value = jsonserializable;
    }

    protected RawValue(Object obj, boolean flag) {
        _value = obj;
    }

    public RawValue(String s) {
        _value = s;
    }

    protected void _serialize(JsonGenerator jsongenerator) {
        if (_value instanceof SerializableString)
            jsongenerator.writeRawValue((SerializableString)_value);
        else
            jsongenerator.writeRawValue(String.valueOf(_value));
    }

    public boolean equals(Object obj) {
        boolean flag1 = true;
        if (obj != this) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L4:
        return flag;
_L2:
        if (!(obj instanceof RawValue)) {
            flag = false;
            continue; /* Loop/switch isn't completed */
        }
        obj = (RawValue)obj;
        flag = flag1;
        if (_value == ((RawValue) (obj))._value)
            continue; /* Loop/switch isn't completed */
        if (_value != null) {
            flag = flag1;
            if (_value.equals(((RawValue) (obj))._value))
                continue; /* Loop/switch isn't completed */
        }
        flag = false;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public int hashCode() {
        int i;
        if (_value == null)
            i = 0;
        else
            i = _value.hashCode();
        return i;
    }

    public Object rawValue() {
        return _value;
    }

    public void serialize(JsonGenerator jsongenerator) {
        if (_value instanceof JsonSerializable)
            jsongenerator.writeObject(_value);
        else
            _serialize(jsongenerator);
    }

    public void serialize(JsonGenerator jsongenerator, SerializerProvider serializerprovider) {
        if (_value instanceof JsonSerializable)
            ((JsonSerializable)_value).serialize(jsongenerator, serializerprovider);
        else
            _serialize(jsongenerator);
    }

    public void serializeWithType(JsonGenerator jsongenerator, SerializerProvider serializerprovider, TypeSerializer typeserializer) {
        if (!(_value instanceof JsonSerializable)) goto _L2; else goto _L1
_L1:
        ((JsonSerializable)_value).serializeWithType(jsongenerator, serializerprovider, typeserializer);
_L4:
        return;
_L2:
        if (_value instanceof SerializableString)
            serialize(jsongenerator, serializerprovider);
        if (true) goto _L4; else goto _L3
_L3:
    }

    public String toString() {
        String s;
        if (_value == null)
            s = "NULL";
        else
            s = _value.getClass().getName();
        return String.format("[RawValue of type %s]", new Object[] {
            s
        });
    }
}
