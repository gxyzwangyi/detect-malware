// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.core.util;

import com.fasterxml.jackson.core.*;
import java.io.OutputStream;
import java.math.BigDecimal;
import java.math.BigInteger;

public class JsonParserDelegate extends JsonParser {

    protected JsonParser _flddelegate;

    public JsonParserDelegate(JsonParser jsonparser) {
        _flddelegate = jsonparser;
    }

    public boolean canReadObjectId() {
        return _flddelegate.canReadObjectId();
    }

    public boolean canReadTypeId() {
        return _flddelegate.canReadTypeId();
    }

    public boolean canUseSchema(FormatSchema formatschema) {
        return _flddelegate.canUseSchema(formatschema);
    }

    public void clearCurrentToken() {
        _flddelegate.clearCurrentToken();
    }

    public void close() {
        _flddelegate.close();
    }

    public JsonParser disable(com.fasterxml.jackson.core.JsonParser.Feature feature) {
        _flddelegate.disable(feature);
        return this;
    }

    public JsonParser enable(com.fasterxml.jackson.core.JsonParser.Feature feature) {
        _flddelegate.enable(feature);
        return this;
    }

    public BigInteger getBigIntegerValue() {
        return _flddelegate.getBigIntegerValue();
    }

    public byte[] getBinaryValue(Base64Variant base64variant) {
        return _flddelegate.getBinaryValue(base64variant);
    }

    public boolean getBooleanValue() {
        return _flddelegate.getBooleanValue();
    }

    public byte getByteValue() {
        return _flddelegate.getByteValue();
    }

    public ObjectCodec getCodec() {
        return _flddelegate.getCodec();
    }

    public JsonLocation getCurrentLocation() {
        return _flddelegate.getCurrentLocation();
    }

    public String getCurrentName() {
        return _flddelegate.getCurrentName();
    }

    public JsonToken getCurrentToken() {
        return _flddelegate.getCurrentToken();
    }

    public int getCurrentTokenId() {
        return _flddelegate.getCurrentTokenId();
    }

    public Object getCurrentValue() {
        return _flddelegate.getCurrentValue();
    }

    public BigDecimal getDecimalValue() {
        return _flddelegate.getDecimalValue();
    }

    public double getDoubleValue() {
        return _flddelegate.getDoubleValue();
    }

    public Object getEmbeddedObject() {
        return _flddelegate.getEmbeddedObject();
    }

    public int getFeatureMask() {
        return _flddelegate.getFeatureMask();
    }

    public float getFloatValue() {
        return _flddelegate.getFloatValue();
    }

    public Object getInputSource() {
        return _flddelegate.getInputSource();
    }

    public int getIntValue() {
        return _flddelegate.getIntValue();
    }

    public JsonToken getLastClearedToken() {
        return _flddelegate.getLastClearedToken();
    }

    public long getLongValue() {
        return _flddelegate.getLongValue();
    }

    public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() {
        return _flddelegate.getNumberType();
    }

    public Number getNumberValue() {
        return _flddelegate.getNumberValue();
    }

    public Object getObjectId() {
        return _flddelegate.getObjectId();
    }

    public JsonStreamContext getParsingContext() {
        return _flddelegate.getParsingContext();
    }

    public FormatSchema getSchema() {
        return _flddelegate.getSchema();
    }

    public short getShortValue() {
        return _flddelegate.getShortValue();
    }

    public String getText() {
        return _flddelegate.getText();
    }

    public char[] getTextCharacters() {
        return _flddelegate.getTextCharacters();
    }

    public int getTextLength() {
        return _flddelegate.getTextLength();
    }

    public int getTextOffset() {
        return _flddelegate.getTextOffset();
    }

    public JsonLocation getTokenLocation() {
        return _flddelegate.getTokenLocation();
    }

    public Object getTypeId() {
        return _flddelegate.getTypeId();
    }

    public boolean getValueAsBoolean() {
        return _flddelegate.getValueAsBoolean();
    }

    public boolean getValueAsBoolean(boolean flag) {
        return _flddelegate.getValueAsBoolean(flag);
    }

    public double getValueAsDouble() {
        return _flddelegate.getValueAsDouble();
    }

    public double getValueAsDouble(double d) {
        return _flddelegate.getValueAsDouble(d);
    }

    public int getValueAsInt() {
        return _flddelegate.getValueAsInt();
    }

    public int getValueAsInt(int i) {
        return _flddelegate.getValueAsInt(i);
    }

    public long getValueAsLong() {
        return _flddelegate.getValueAsLong();
    }

    public long getValueAsLong(long l) {
        return _flddelegate.getValueAsLong(l);
    }

    public String getValueAsString() {
        return _flddelegate.getValueAsString();
    }

    public String getValueAsString(String s) {
        return _flddelegate.getValueAsString(s);
    }

    public boolean hasCurrentToken() {
        return _flddelegate.hasCurrentToken();
    }

    public boolean hasTextCharacters() {
        return _flddelegate.hasTextCharacters();
    }

    public boolean hasToken(JsonToken jsontoken) {
        return _flddelegate.hasToken(jsontoken);
    }

    public boolean hasTokenId(int i) {
        return _flddelegate.hasTokenId(i);
    }

    public boolean isClosed() {
        return _flddelegate.isClosed();
    }

    public boolean isEnabled(com.fasterxml.jackson.core.JsonParser.Feature feature) {
        return _flddelegate.isEnabled(feature);
    }

    public boolean isExpectedStartArrayToken() {
        return _flddelegate.isExpectedStartArrayToken();
    }

    public boolean isExpectedStartObjectToken() {
        return _flddelegate.isExpectedStartObjectToken();
    }

    public JsonToken nextToken() {
        return _flddelegate.nextToken();
    }

    public JsonToken nextValue() {
        return _flddelegate.nextValue();
    }

    public void overrideCurrentName(String s) {
        _flddelegate.overrideCurrentName(s);
    }

    public JsonParser overrideFormatFeatures(int i, int j) {
        _flddelegate.overrideFormatFeatures(i, j);
        return this;
    }

    public JsonParser overrideStdFeatures(int i, int j) {
        _flddelegate.overrideStdFeatures(i, j);
        return this;
    }

    public int readBinaryValue(Base64Variant base64variant, OutputStream outputstream) {
        return _flddelegate.readBinaryValue(base64variant, outputstream);
    }

    public boolean requiresCustomCodec() {
        return _flddelegate.requiresCustomCodec();
    }

    public void setCodec(ObjectCodec objectcodec) {
        _flddelegate.setCodec(objectcodec);
    }

    public void setCurrentValue(Object obj) {
        _flddelegate.setCurrentValue(obj);
    }

    public JsonParser setFeatureMask(int i) {
        _flddelegate.setFeatureMask(i);
        return this;
    }

    public void setSchema(FormatSchema formatschema) {
        _flddelegate.setSchema(formatschema);
    }

    public JsonParser skipChildren() {
        _flddelegate.skipChildren();
        return this;
    }

    public Version version() {
        return _flddelegate.version();
    }
}
