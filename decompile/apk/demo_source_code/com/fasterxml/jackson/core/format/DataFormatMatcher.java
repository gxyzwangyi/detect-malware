// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.core.format;

import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.io.MergedStream;
import java.io.ByteArrayInputStream;
import java.io.InputStream;

// Referenced classes of package com.fasterxml.jackson.core.format:
//            MatchStrength

public class DataFormatMatcher {

    protected final byte _bufferedData[];
    protected final int _bufferedLength;
    protected final int _bufferedStart;
    protected final JsonFactory _match;
    protected final MatchStrength _matchStrength;
    protected final InputStream _originalStream;

    protected DataFormatMatcher(InputStream inputstream, byte abyte0[], int i, int j, JsonFactory jsonfactory, MatchStrength matchstrength) {
        _originalStream = inputstream;
        _bufferedData = abyte0;
        _bufferedStart = i;
        _bufferedLength = j;
        _match = jsonfactory;
        _matchStrength = matchstrength;
    }

    public JsonParser createParserWithMatch() {
        JsonParser jsonparser;
        if (_match == null)
            jsonparser = null;
        else
        if (_originalStream == null)
            jsonparser = _match.createParser(_bufferedData, _bufferedStart, _bufferedLength);
        else
            jsonparser = _match.createParser(getDataStream());
        return jsonparser;
    }

    public InputStream getDataStream() {
        Object obj;
        if (_originalStream == null)
            obj = new ByteArrayInputStream(_bufferedData, _bufferedStart, _bufferedLength);
        else
            obj = new MergedStream(null, _originalStream, _bufferedData, _bufferedStart, _bufferedLength);
        return ((InputStream) (obj));
    }

    public JsonFactory getMatch() {
        return _match;
    }

    public MatchStrength getMatchStrength() {
        MatchStrength matchstrength;
        if (_matchStrength == null)
            matchstrength = MatchStrength.INCONCLUSIVE;
        else
            matchstrength = _matchStrength;
        return matchstrength;
    }

    public String getMatchedFormatName() {
        return _match.getFormatName();
    }

    public boolean hasMatch() {
        boolean flag;
        if (_match != null)
            flag = true;
        else
            flag = false;
        return flag;
    }
}
