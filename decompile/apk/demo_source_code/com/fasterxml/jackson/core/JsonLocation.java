// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.core;

import java.io.Serializable;

public class JsonLocation
    implements Serializable {

    public static final JsonLocation NA = new JsonLocation("N/A", -1L, -1L, -1, -1);
    private static final long serialVersionUID = 1L;
    final int _columnNr;
    final int _lineNr;
    final transient Object _sourceRef;
    final long _totalBytes;
    final long _totalChars;

    public JsonLocation(Object obj, long l, int i, int j) {
        this(obj, -1L, l, i, j);
    }

    public JsonLocation(Object obj, long l, long l1, int i, int j) {
        _sourceRef = obj;
        _totalBytes = l;
        _totalChars = l1;
        _lineNr = i;
        _columnNr = j;
    }

    public boolean equals(Object obj) {
        boolean flag1;
        boolean flag2;
        flag1 = true;
        flag2 = false;
        if (obj != this) goto _L2; else goto _L1
_L1:
        boolean flag = true;
_L8:
        return flag;
_L2:
        flag = flag2;
        if (obj == null)
            continue; /* Loop/switch isn't completed */
        flag = flag2;
        if (!(obj instanceof JsonLocation))
            continue; /* Loop/switch isn't completed */
        obj = (JsonLocation)obj;
        if (_sourceRef != null) goto _L4; else goto _L3
_L3:
        flag = flag2;
        if (((JsonLocation) (obj))._sourceRef != null)
            continue; /* Loop/switch isn't completed */
_L6:
        if (_lineNr == ((JsonLocation) (obj))._lineNr && _columnNr == ((JsonLocation) (obj))._columnNr && _totalChars == ((JsonLocation) (obj))._totalChars && getByteOffset() == ((JsonLocation) (obj)).getByteOffset())
            flag = flag1;
        else
            flag = false;
        continue; /* Loop/switch isn't completed */
_L4:
        if (_sourceRef.equals(((JsonLocation) (obj))._sourceRef)) goto _L6; else goto _L5
_L5:
        flag = flag2;
        if (true) goto _L8; else goto _L7
_L7:
    }

    public long getByteOffset() {
        return _totalBytes;
    }

    public long getCharOffset() {
        return _totalChars;
    }

    public int getColumnNr() {
        return _columnNr;
    }

    public int getLineNr() {
        return _lineNr;
    }

    public Object getSourceRef() {
        return _sourceRef;
    }

    public int hashCode() {
        int i;
        if (_sourceRef == null)
            i = 1;
        else
            i = _sourceRef.hashCode();
        return ((i ^ _lineNr) + _columnNr ^ (int)_totalChars) + (int)_totalBytes;
    }

    public String toString() {
        StringBuilder stringbuilder = new StringBuilder(80);
        stringbuilder.append("[Source: ");
        if (_sourceRef == null)
            stringbuilder.append("UNKNOWN");
        else
            stringbuilder.append(_sourceRef.toString());
        stringbuilder.append("; line: ");
        stringbuilder.append(_lineNr);
        stringbuilder.append(", column: ");
        stringbuilder.append(_columnNr);
        stringbuilder.append(']');
        return stringbuilder.toString();
    }

}
