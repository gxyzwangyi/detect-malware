// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.core.filter;

import com.fasterxml.jackson.core.JsonPointer;

// Referenced classes of package com.fasterxml.jackson.core.filter:
//            TokenFilter

public class JsonPointerBasedFilter extends TokenFilter {

    protected final JsonPointer _pathToMatch;

    public JsonPointerBasedFilter(JsonPointer jsonpointer) {
        _pathToMatch = jsonpointer;
    }

    public JsonPointerBasedFilter(String s) {
        this(JsonPointer.compile(s));
    }

    protected boolean _includeScalar() {
        return _pathToMatch.matches();
    }

    public TokenFilter filterStartArray() {
        return this;
    }

    public TokenFilter filterStartObject() {
        return this;
    }

    public TokenFilter includeElement(int i) {
        Object obj = _pathToMatch.matchElement(i);
        if (obj == null)
            obj = null;
        else
        if (((JsonPointer) (obj)).matches())
            obj = TokenFilter.INCLUDE_ALL;
        else
            obj = new JsonPointerBasedFilter(((JsonPointer) (obj)));
        return ((TokenFilter) (obj));
    }

    public TokenFilter includeProperty(String s) {
        s = _pathToMatch.matchProperty(s);
        if (s == null)
            s = null;
        else
        if (s.matches())
            s = TokenFilter.INCLUDE_ALL;
        else
            s = new JsonPointerBasedFilter(s);
        return s;
    }

    public String toString() {
        return (new StringBuilder()).append("[JsonPointerFilter at: ").append(_pathToMatch).append("]").toString();
    }
}
