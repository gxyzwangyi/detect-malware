// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.core.filter;

import com.fasterxml.jackson.core.*;
import com.fasterxml.jackson.core.util.JsonParserDelegate;
import java.io.OutputStream;
import java.math.BigDecimal;
import java.math.BigInteger;

// Referenced classes of package com.fasterxml.jackson.core.filter:
//            TokenFilterContext, TokenFilter

public class FilteringParserDelegate extends JsonParserDelegate {

    protected boolean _allowMultipleMatches;
    protected JsonToken _currToken;
    protected TokenFilterContext _exposedContext;
    protected TokenFilterContext _headContext;
    protected boolean _includeImmediateParent;
    protected boolean _includePath;
    protected TokenFilter _itemFilter;
    protected JsonToken _lastClearedToken;
    protected int _matchCount;
    protected TokenFilter rootFilter;

    public FilteringParserDelegate(JsonParser jsonparser, TokenFilter tokenfilter, boolean flag, boolean flag1) {
        super(jsonparser);
        rootFilter = tokenfilter;
        _itemFilter = tokenfilter;
        _headContext = TokenFilterContext.createRootContext(tokenfilter);
        _includePath = flag;
        _allowMultipleMatches = flag1;
    }

    private JsonToken _nextBuffered(TokenFilterContext tokenfiltercontext) {
        _exposedContext = tokenfiltercontext;
        JsonToken jsontoken = tokenfiltercontext.nextTokenToRead();
        if (jsontoken != null) {
            tokenfiltercontext = jsontoken;
        } else {
            JsonToken jsontoken1;
            do {
                if (tokenfiltercontext == _headContext)
                    throw _constructError("Internal error: failed to locate expected buffered tokens");
                tokenfiltercontext = _exposedContext.findChildOf(tokenfiltercontext);
                _exposedContext = tokenfiltercontext;
                if (tokenfiltercontext == null)
                    throw _constructError("Unexpected problem: chain of filtered context broken");
                jsontoken1 = _exposedContext.nextTokenToRead();
            } while (jsontoken1 == null);
            tokenfiltercontext = jsontoken1;
        }
        return tokenfiltercontext;
    }

    protected JsonStreamContext _filterContext() {
        TokenFilterContext tokenfiltercontext;
        if (_exposedContext != null)
            tokenfiltercontext = _exposedContext;
        else
            tokenfiltercontext = _headContext;
        return tokenfiltercontext;
    }

    protected final JsonToken _nextToken2() {
_L13:
        JsonToken jsontoken = _flddelegate.nextToken();
        if (jsontoken != null) goto _L2; else goto _L1
_L1:
        _currToken = jsontoken;
_L8:
        return jsontoken;
_L2:
        jsontoken.id();
        JVM INSTR tableswitch 1 5: default 56
    //                   1 241
    //                   2 406
    //                   3 76
    //                   4 406
    //                   5 471;
           goto _L3 _L4 _L5 _L6 _L5 _L7
_L3:
        TokenFilter tokenfilter;
        tokenfilter = _itemFilter;
        if (tokenfilter != TokenFilter.INCLUDE_ALL)
            continue; /* Loop/switch isn't completed */
        _currToken = jsontoken;
          goto _L8
_L6:
        tokenfilter = _itemFilter;
        if (tokenfilter != TokenFilter.INCLUDE_ALL) goto _L10; else goto _L9
_L9:
        _headContext = _headContext.createChildArrayContext(tokenfilter, true);
        _currToken = jsontoken;
          goto _L8
_L10:
        if (tokenfilter != null) goto _L12; else goto _L11
_L11:
        _flddelegate.skipChildren();
          goto _L13
_L12:
        Object obj = _headContext.checkValue(tokenfilter);
        if (obj != null) goto _L15; else goto _L14
_L14:
        _flddelegate.skipChildren();
          goto _L13
_L15:
        tokenfilter = ((TokenFilter) (obj));
        if (obj != TokenFilter.INCLUDE_ALL)
            tokenfilter = ((TokenFilter) (obj)).filterStartArray();
        _itemFilter = tokenfilter;
        if (tokenfilter != TokenFilter.INCLUDE_ALL) goto _L17; else goto _L16
_L16:
        _headContext = _headContext.createChildArrayContext(tokenfilter, true);
        _currToken = jsontoken;
          goto _L8
_L17:
        _headContext = _headContext.createChildArrayContext(tokenfilter, false);
        if (!_includePath) goto _L13; else goto _L18
_L18:
        jsontoken = _nextTokenWithBuffering(_headContext);
        if (jsontoken == null) goto _L13; else goto _L19
_L19:
        _currToken = jsontoken;
          goto _L8
_L4:
        tokenfilter = _itemFilter;
        if (tokenfilter != TokenFilter.INCLUDE_ALL) goto _L21; else goto _L20
_L20:
        _headContext = _headContext.createChildObjectContext(tokenfilter, true);
        _currToken = jsontoken;
          goto _L8
_L21:
        if (tokenfilter != null) goto _L23; else goto _L22
_L22:
        _flddelegate.skipChildren();
          goto _L13
_L23:
        obj = _headContext.checkValue(tokenfilter);
        if (obj != null) goto _L25; else goto _L24
_L24:
        _flddelegate.skipChildren();
          goto _L13
_L25:
        tokenfilter = ((TokenFilter) (obj));
        if (obj != TokenFilter.INCLUDE_ALL)
            tokenfilter = ((TokenFilter) (obj)).filterStartObject();
        _itemFilter = tokenfilter;
        if (tokenfilter != TokenFilter.INCLUDE_ALL) goto _L27; else goto _L26
_L26:
        _headContext = _headContext.createChildObjectContext(tokenfilter, true);
        _currToken = jsontoken;
          goto _L8
_L27:
        _headContext = _headContext.createChildObjectContext(tokenfilter, false);
        if (!_includePath) goto _L13; else goto _L28
_L28:
        jsontoken = _nextTokenWithBuffering(_headContext);
        if (jsontoken == null) goto _L13; else goto _L29
_L29:
        _currToken = jsontoken;
          goto _L8
_L5:
        boolean flag;
        flag = _headContext.isStartHandled();
        tokenfilter = _headContext.getFilter();
        if (tokenfilter != null && tokenfilter != TokenFilter.INCLUDE_ALL)
            tokenfilter.filterFinishArray();
        _headContext = _headContext.getParent();
        _itemFilter = _headContext.getFilter();
        if (!flag) goto _L13; else goto _L30
_L30:
        _currToken = jsontoken;
          goto _L8
_L7:
        obj = _flddelegate.getCurrentName();
        tokenfilter = _headContext.setFieldName(((String) (obj)));
        if (tokenfilter != TokenFilter.INCLUDE_ALL) goto _L32; else goto _L31
_L31:
        _itemFilter = tokenfilter;
        _currToken = jsontoken;
          goto _L8
_L32:
        if (tokenfilter != null) goto _L34; else goto _L33
_L33:
        _flddelegate.nextToken();
        _flddelegate.skipChildren();
          goto _L13
_L34:
        tokenfilter = tokenfilter.includeProperty(((String) (obj)));
        if (tokenfilter != null) goto _L36; else goto _L35
_L35:
        _flddelegate.nextToken();
        _flddelegate.skipChildren();
          goto _L13
_L36:
        _itemFilter = tokenfilter;
        if (tokenfilter != TokenFilter.INCLUDE_ALL)
            continue; /* Loop/switch isn't completed */
        if (!_includePath) goto _L13; else goto _L37
_L37:
        _currToken = jsontoken;
          goto _L8
        if (!_includePath) goto _L13; else goto _L38
_L38:
        jsontoken = _nextTokenWithBuffering(_headContext);
        if (jsontoken == null) goto _L13; else goto _L39
_L39:
        _currToken = jsontoken;
          goto _L8
        if (tokenfilter == null) goto _L13; else goto _L40
_L40:
        tokenfilter = _headContext.checkValue(tokenfilter);
        if (tokenfilter != TokenFilter.INCLUDE_ALL && (tokenfilter == null || !tokenfilter.includeValue(_flddelegate))) goto _L13; else goto _L41
_L41:
        _currToken = jsontoken;
          goto _L8
    }

    protected final JsonToken _nextTokenWithBuffering(TokenFilterContext tokenfiltercontext) {
_L11:
        Object obj = _flddelegate.nextToken();
        if (obj != null) goto _L2; else goto _L1
_L1:
        tokenfiltercontext = ((TokenFilterContext) (obj));
_L8:
        return tokenfiltercontext;
_L2:
        ((JsonToken) (obj)).id();
        JVM INSTR tableswitch 1 5: default 60
    //                   1 185
    //                   2 335
    //                   3 83
    //                   4 335
    //                   5 447;
           goto _L3 _L4 _L5 _L6 _L5 _L7
_L3:
        obj = _itemFilter;
        if (obj != TokenFilter.INCLUDE_ALL)
            continue; /* Loop/switch isn't completed */
        tokenfiltercontext = _nextBuffered(tokenfiltercontext);
          goto _L8
_L6:
        TokenFilter tokenfilter = _headContext.checkValue(_itemFilter);
        if (tokenfilter != null) goto _L10; else goto _L9
_L9:
        _flddelegate.skipChildren();
          goto _L11
_L10:
        obj = tokenfilter;
        if (tokenfilter != TokenFilter.INCLUDE_ALL)
            obj = tokenfilter.filterStartArray();
        _itemFilter = ((TokenFilter) (obj));
        if (obj != TokenFilter.INCLUDE_ALL) goto _L13; else goto _L12
_L12:
        _headContext = _headContext.createChildArrayContext(((TokenFilter) (obj)), true);
        tokenfiltercontext = _nextBuffered(tokenfiltercontext);
          goto _L8
_L13:
        _headContext = _headContext.createChildArrayContext(((TokenFilter) (obj)), false);
          goto _L11
_L4:
        tokenfilter = _itemFilter;
        if (tokenfilter != TokenFilter.INCLUDE_ALL) goto _L15; else goto _L14
_L14:
        _headContext = _headContext.createChildObjectContext(tokenfilter, true);
        tokenfiltercontext = ((TokenFilterContext) (obj));
          goto _L8
_L15:
        if (tokenfilter != null) goto _L17; else goto _L16
_L16:
        _flddelegate.skipChildren();
          goto _L11
_L17:
        tokenfilter = _headContext.checkValue(tokenfilter);
        if (tokenfilter != null) goto _L19; else goto _L18
_L18:
        _flddelegate.skipChildren();
          goto _L11
_L19:
        obj = tokenfilter;
        if (tokenfilter != TokenFilter.INCLUDE_ALL)
            obj = tokenfilter.filterStartObject();
        _itemFilter = ((TokenFilter) (obj));
        if (obj != TokenFilter.INCLUDE_ALL) goto _L21; else goto _L20
_L20:
        _headContext = _headContext.createChildObjectContext(((TokenFilter) (obj)), true);
        tokenfiltercontext = _nextBuffered(tokenfiltercontext);
          goto _L8
_L21:
        _headContext = _headContext.createChildObjectContext(((TokenFilter) (obj)), false);
          goto _L11
_L5:
        boolean flag;
        tokenfilter = _headContext.getFilter();
        if (tokenfilter != null && tokenfilter != TokenFilter.INCLUDE_ALL)
            tokenfilter.filterFinishArray();
        boolean flag1;
        if (_headContext == tokenfiltercontext)
            flag = true;
        else
            flag = false;
        if (flag && _headContext.isStartHandled())
            flag1 = true;
        else
            flag1 = false;
        _headContext = _headContext.getParent();
        _itemFilter = _headContext.getFilter();
        if (!flag1) goto _L23; else goto _L22
_L22:
        tokenfiltercontext = ((TokenFilterContext) (obj));
          goto _L8
_L23:
        if (!flag && _headContext != tokenfiltercontext) goto _L11; else goto _L24
_L24:
        tokenfiltercontext = null;
          goto _L8
_L7:
        obj = _flddelegate.getCurrentName();
        tokenfilter = _headContext.setFieldName(((String) (obj)));
        if (tokenfilter != TokenFilter.INCLUDE_ALL) goto _L26; else goto _L25
_L25:
        _itemFilter = tokenfilter;
        tokenfiltercontext = _nextBuffered(tokenfiltercontext);
          goto _L8
_L26:
        if (tokenfilter != null) goto _L28; else goto _L27
_L27:
        _flddelegate.nextToken();
        _flddelegate.skipChildren();
          goto _L11
_L28:
        obj = tokenfilter.includeProperty(((String) (obj)));
        if (obj != null) goto _L30; else goto _L29
_L29:
        _flddelegate.nextToken();
        _flddelegate.skipChildren();
          goto _L11
_L30:
        _itemFilter = ((TokenFilter) (obj));
        if (obj != TokenFilter.INCLUDE_ALL) goto _L11; else goto _L31
_L31:
        tokenfiltercontext = _nextBuffered(tokenfiltercontext);
          goto _L8
        if (obj == null) goto _L11; else goto _L32
_L32:
        obj = _headContext.checkValue(((TokenFilter) (obj)));
        if (obj != TokenFilter.INCLUDE_ALL && (obj == null || !((TokenFilter) (obj)).includeValue(_flddelegate))) goto _L11; else goto _L33
_L33:
        tokenfiltercontext = _nextBuffered(tokenfiltercontext);
          goto _L8
    }

    public void clearCurrentToken() {
        if (_currToken != null) {
            _lastClearedToken = _currToken;
            _currToken = null;
        }
    }

    public BigInteger getBigIntegerValue() {
        return _flddelegate.getBigIntegerValue();
    }

    public byte[] getBinaryValue(Base64Variant base64variant) {
        return _flddelegate.getBinaryValue(base64variant);
    }

    public boolean getBooleanValue() {
        return _flddelegate.getBooleanValue();
    }

    public byte getByteValue() {
        return _flddelegate.getByteValue();
    }

    public JsonLocation getCurrentLocation() {
        return _flddelegate.getCurrentLocation();
    }

    public String getCurrentName() {
        Object obj = _filterContext();
        if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY) {
            obj = ((JsonStreamContext) (obj)).getParent();
            if (obj == null)
                obj = null;
            else
                obj = ((JsonStreamContext) (obj)).getCurrentName();
        } else {
            obj = ((JsonStreamContext) (obj)).getCurrentName();
        }
        return ((String) (obj));
    }

    public JsonToken getCurrentToken() {
        return _currToken;
    }

    public final int getCurrentTokenId() {
        JsonToken jsontoken = _currToken;
        int i;
        if (jsontoken == null)
            i = 0;
        else
            i = jsontoken.id();
        return i;
    }

    public BigDecimal getDecimalValue() {
        return _flddelegate.getDecimalValue();
    }

    public double getDoubleValue() {
        return _flddelegate.getDoubleValue();
    }

    public Object getEmbeddedObject() {
        return _flddelegate.getEmbeddedObject();
    }

    public TokenFilter getFilter() {
        return rootFilter;
    }

    public float getFloatValue() {
        return _flddelegate.getFloatValue();
    }

    public int getIntValue() {
        return _flddelegate.getIntValue();
    }

    public JsonToken getLastClearedToken() {
        return _lastClearedToken;
    }

    public long getLongValue() {
        return _flddelegate.getLongValue();
    }

    public int getMatchCount() {
        return _matchCount;
    }

    public com.fasterxml.jackson.core.JsonParser.NumberType getNumberType() {
        return _flddelegate.getNumberType();
    }

    public Number getNumberValue() {
        return _flddelegate.getNumberValue();
    }

    public JsonStreamContext getParsingContext() {
        return _filterContext();
    }

    public short getShortValue() {
        return _flddelegate.getShortValue();
    }

    public String getText() {
        return _flddelegate.getText();
    }

    public char[] getTextCharacters() {
        return _flddelegate.getTextCharacters();
    }

    public int getTextLength() {
        return _flddelegate.getTextLength();
    }

    public int getTextOffset() {
        return _flddelegate.getTextOffset();
    }

    public JsonLocation getTokenLocation() {
        return _flddelegate.getTokenLocation();
    }

    public boolean getValueAsBoolean() {
        return _flddelegate.getValueAsBoolean();
    }

    public boolean getValueAsBoolean(boolean flag) {
        return _flddelegate.getValueAsBoolean(flag);
    }

    public double getValueAsDouble() {
        return _flddelegate.getValueAsDouble();
    }

    public double getValueAsDouble(double d) {
        return _flddelegate.getValueAsDouble(d);
    }

    public int getValueAsInt() {
        return _flddelegate.getValueAsInt();
    }

    public int getValueAsInt(int i) {
        return _flddelegate.getValueAsInt(i);
    }

    public long getValueAsLong() {
        return _flddelegate.getValueAsLong();
    }

    public long getValueAsLong(long l) {
        return _flddelegate.getValueAsLong(l);
    }

    public String getValueAsString() {
        return _flddelegate.getValueAsString();
    }

    public String getValueAsString(String s) {
        return _flddelegate.getValueAsString(s);
    }

    public boolean hasCurrentToken() {
        boolean flag;
        if (_currToken != null)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean hasTextCharacters() {
        return _flddelegate.hasTextCharacters();
    }

    public final boolean hasToken(JsonToken jsontoken) {
        boolean flag;
        if (_currToken == jsontoken)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean hasTokenId(int i) {
        boolean flag;
        JsonToken jsontoken;
        flag = true;
        jsontoken = _currToken;
        if (jsontoken != null) goto _L2; else goto _L1
_L1:
        if (i != 0)
            flag = false;
_L4:
        return flag;
_L2:
        if (jsontoken.id() != i)
            flag = false;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public boolean isExpectedStartArrayToken() {
        boolean flag;
        if (_currToken == JsonToken.START_ARRAY)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean isExpectedStartObjectToken() {
        boolean flag;
        if (_currToken == JsonToken.START_OBJECT)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public JsonToken nextToken() {
        Object obj = null;
        if (_allowMultipleMatches || _currToken == null || _exposedContext != null) goto _L2; else goto _L1
_L1:
        if (!_currToken.isStructEnd() || !_headContext.isStartHandled()) goto _L4; else goto _L3
_L3:
        _currToken = null;
_L20:
        return ((JsonToken) (obj));
_L4:
        if (_currToken.isScalarValue() && !_headContext.isStartHandled() && !_includePath && _itemFilter == TokenFilter.INCLUDE_ALL) {
            _currToken = null;
            continue; /* Loop/switch isn't completed */
        }
_L2:
        obj = _exposedContext;
        Object obj1;
        if (obj != null)
            do {
                obj1 = ((TokenFilterContext) (obj)).nextTokenToRead();
                if (obj1 != null) {
                    _currToken = ((JsonToken) (obj1));
                    obj = obj1;
                    continue; /* Loop/switch isn't completed */
                }
                if (obj == _headContext) {
                    _exposedContext = null;
                    if (((TokenFilterContext) (obj)).inArray()) {
                        obj = _flddelegate.getCurrentToken();
                        _currToken = ((JsonToken) (obj));
                        continue; /* Loop/switch isn't completed */
                    }
                    break;
                }
                obj1 = _headContext.findChildOf(((TokenFilterContext) (obj)));
                _exposedContext = ((TokenFilterContext) (obj1));
                obj = obj1;
                if (obj1 == null)
                    throw _constructError("Unexpected problem: chain of filtered context broken");
            } while (true);
        obj = _flddelegate.nextToken();
        if (obj == null) {
            _currToken = ((JsonToken) (obj));
            continue; /* Loop/switch isn't completed */
        }
        ((JsonToken) (obj)).id();
        JVM INSTR tableswitch 1 5: default 244
    //                   1 434
    //                   2 599
    //                   3 264
    //                   4 599
    //                   5 664;
           goto _L5 _L6 _L7 _L8 _L7 _L9
_L5:
        TokenFilter tokenfilter;
        tokenfilter = _itemFilter;
        if (tokenfilter == TokenFilter.INCLUDE_ALL) {
            _currToken = ((JsonToken) (obj));
            break; /* Loop/switch isn't completed */
        }
          goto _L10
_L8:
        tokenfilter = _itemFilter;
        if (tokenfilter == TokenFilter.INCLUDE_ALL) {
            _headContext = _headContext.createChildArrayContext(tokenfilter, true);
            _currToken = ((JsonToken) (obj));
            break; /* Loop/switch isn't completed */
        }
        if (tokenfilter != null) goto _L12; else goto _L11
_L11:
        _flddelegate.skipChildren();
_L14:
        obj = _nextToken2();
        break; /* Loop/switch isn't completed */
_L12:
        TokenFilter tokenfilter1 = _headContext.checkValue(tokenfilter);
        if (tokenfilter1 == null) {
            _flddelegate.skipChildren();
            continue; /* Loop/switch isn't completed */
        }
        tokenfilter = tokenfilter1;
        if (tokenfilter1 != TokenFilter.INCLUDE_ALL)
            tokenfilter = tokenfilter1.filterStartArray();
        _itemFilter = tokenfilter;
        if (tokenfilter == TokenFilter.INCLUDE_ALL) {
            _headContext = _headContext.createChildArrayContext(tokenfilter, true);
            _currToken = ((JsonToken) (obj));
        } else {
            _headContext = _headContext.createChildArrayContext(tokenfilter, false);
            if (!_includePath)
                continue; /* Loop/switch isn't completed */
            obj = _nextTokenWithBuffering(_headContext);
            if (obj == null)
                continue; /* Loop/switch isn't completed */
            _currToken = ((JsonToken) (obj));
        }
        break; /* Loop/switch isn't completed */
_L6:
        tokenfilter = _itemFilter;
        if (tokenfilter == TokenFilter.INCLUDE_ALL) {
            _headContext = _headContext.createChildObjectContext(tokenfilter, true);
            _currToken = ((JsonToken) (obj));
        } else {
            if (tokenfilter == null) {
                _flddelegate.skipChildren();
                continue; /* Loop/switch isn't completed */
            }
            TokenFilter tokenfilter2 = _headContext.checkValue(tokenfilter);
            if (tokenfilter2 == null) {
                _flddelegate.skipChildren();
                continue; /* Loop/switch isn't completed */
            }
            tokenfilter = tokenfilter2;
            if (tokenfilter2 != TokenFilter.INCLUDE_ALL)
                tokenfilter = tokenfilter2.filterStartObject();
            _itemFilter = tokenfilter;
            if (tokenfilter == TokenFilter.INCLUDE_ALL) {
                _headContext = _headContext.createChildObjectContext(tokenfilter, true);
                _currToken = ((JsonToken) (obj));
            } else {
                _headContext = _headContext.createChildObjectContext(tokenfilter, false);
                if (!_includePath)
                    continue; /* Loop/switch isn't completed */
                obj = _nextTokenWithBuffering(_headContext);
                if (obj == null)
                    continue; /* Loop/switch isn't completed */
                _currToken = ((JsonToken) (obj));
            }
        }
        break; /* Loop/switch isn't completed */
_L7:
        boolean flag = _headContext.isStartHandled();
        tokenfilter = _headContext.getFilter();
        if (tokenfilter != null && tokenfilter != TokenFilter.INCLUDE_ALL)
            tokenfilter.filterFinishArray();
        _headContext = _headContext.getParent();
        _itemFilter = _headContext.getFilter();
        if (!flag)
            continue; /* Loop/switch isn't completed */
        _currToken = ((JsonToken) (obj));
        break; /* Loop/switch isn't completed */
_L9:
        String s = _flddelegate.getCurrentName();
        tokenfilter = _headContext.setFieldName(s);
        if (tokenfilter == TokenFilter.INCLUDE_ALL) {
            _itemFilter = tokenfilter;
            if (!_includePath && _includeImmediateParent && !_headContext.isStartHandled()) {
                obj = _headContext.nextTokenToRead();
                _exposedContext = _headContext;
            }
            _currToken = ((JsonToken) (obj));
            break; /* Loop/switch isn't completed */
        }
        if (tokenfilter == null) {
            _flddelegate.nextToken();
            _flddelegate.skipChildren();
            continue; /* Loop/switch isn't completed */
        }
        tokenfilter = tokenfilter.includeProperty(s);
        if (tokenfilter != null)
            break; /* Loop/switch isn't completed */
        _flddelegate.nextToken();
        _flddelegate.skipChildren();
        if (true) goto _L14; else goto _L13
_L13:
        _itemFilter = tokenfilter;
        if (tokenfilter != TokenFilter.INCLUDE_ALL || !_includePath)
            continue; /* Loop/switch isn't completed */
        _currToken = ((JsonToken) (obj));
        break; /* Loop/switch isn't completed */
        if (!_includePath) goto _L14; else goto _L15
_L15:
        obj = _nextTokenWithBuffering(_headContext);
        if (obj == null) goto _L14; else goto _L16
_L16:
        _currToken = ((JsonToken) (obj));
        break; /* Loop/switch isn't completed */
_L10:
        if (tokenfilter == null) goto _L14; else goto _L17
_L17:
        tokenfilter = _headContext.checkValue(tokenfilter);
        if (tokenfilter != TokenFilter.INCLUDE_ALL && (tokenfilter == null || !tokenfilter.includeValue(_flddelegate))) goto _L14; else goto _L18
_L18:
        _currToken = ((JsonToken) (obj));
        if (true) goto _L20; else goto _L19
_L19:
    }

    public JsonToken nextValue() {
        JsonToken jsontoken1 = nextToken();
        JsonToken jsontoken = jsontoken1;
        if (jsontoken1 == JsonToken.FIELD_NAME)
            jsontoken = nextToken();
        return jsontoken;
    }

    public void overrideCurrentName(String s) {
        throw new UnsupportedOperationException("Can not currently override name during filtering read");
    }

    public int readBinaryValue(Base64Variant base64variant, OutputStream outputstream) {
        return _flddelegate.readBinaryValue(base64variant, outputstream);
    }

    public JsonParser skipChildren() {
        if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY) {
            int i = 1;
            int j;
label0:
            do {
                JsonToken jsontoken;
label1:
                do
                    do {
                        jsontoken = nextToken();
                        if (jsontoken == null)
                            break label0;
                        if (!jsontoken.isStructStart())
                            continue label1;
                        i++;
                    } while (true);
                while (!jsontoken.isStructEnd());
                j = i - 1;
                i = j;
            } while (j != 0);
        }
        return this;
    }
}
