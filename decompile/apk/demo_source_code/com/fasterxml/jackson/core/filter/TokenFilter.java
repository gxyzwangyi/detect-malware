// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.core.filter;

import com.fasterxml.jackson.core.JsonParser;
import java.math.BigDecimal;
import java.math.BigInteger;

public class TokenFilter {

    public static final TokenFilter INCLUDE_ALL = new TokenFilter();

    protected TokenFilter() {
    }

    protected boolean _includeScalar() {
        return true;
    }

    public void filterFinishArray() {
    }

    public void filterFinishObject() {
    }

    public TokenFilter filterStartArray() {
        return this;
    }

    public TokenFilter filterStartObject() {
        return this;
    }

    public boolean includeBinary() {
        return _includeScalar();
    }

    public boolean includeBoolean(boolean flag) {
        return _includeScalar();
    }

    public TokenFilter includeElement(int i) {
        return this;
    }

    public boolean includeEmbeddedValue(Object obj) {
        return _includeScalar();
    }

    public boolean includeNull() {
        return _includeScalar();
    }

    public boolean includeNumber(double d) {
        return _includeScalar();
    }

    public boolean includeNumber(float f) {
        return _includeScalar();
    }

    public boolean includeNumber(int i) {
        return _includeScalar();
    }

    public boolean includeNumber(long l) {
        return _includeScalar();
    }

    public boolean includeNumber(BigDecimal bigdecimal) {
        return _includeScalar();
    }

    public boolean includeNumber(BigInteger biginteger) {
        return _includeScalar();
    }

    public TokenFilter includeProperty(String s) {
        return this;
    }

    public boolean includeRawValue() {
        return _includeScalar();
    }

    public TokenFilter includeRootValue(int i) {
        return this;
    }

    public boolean includeString(String s) {
        return _includeScalar();
    }

    public boolean includeValue(JsonParser jsonparser) {
        return _includeScalar();
    }

    public String toString() {
        String s;
        if (this == INCLUDE_ALL)
            s = "TokenFilter.INCLUDE_ALL";
        else
            s = super.toString();
        return s;
    }

}
