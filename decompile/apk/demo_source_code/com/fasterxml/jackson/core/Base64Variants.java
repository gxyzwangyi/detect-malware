// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.fasterxml.jackson.core;


// Referenced classes of package com.fasterxml.jackson.core:
//            Base64Variant

public final class Base64Variants {

    public static final Base64Variant MIME;
    public static final Base64Variant MIME_NO_LINEFEEDS;
    public static final Base64Variant MODIFIED_FOR_URL;
    public static final Base64Variant PEM;
    static final String STD_BASE64_ALPHABET = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

    public Base64Variants() {
    }

    public static Base64Variant getDefaultVariant() {
        return MIME_NO_LINEFEEDS;
    }

    public static Base64Variant valueOf(String s) {
        if (!MIME._name.equals(s)) goto _L2; else goto _L1
_L1:
        s = MIME;
_L4:
        return s;
_L2:
        if (MIME_NO_LINEFEEDS._name.equals(s)) {
            s = MIME_NO_LINEFEEDS;
            continue; /* Loop/switch isn't completed */
        }
        if (PEM._name.equals(s)) {
            s = PEM;
            continue; /* Loop/switch isn't completed */
        }
        if (!MODIFIED_FOR_URL._name.equals(s))
            break; /* Loop/switch isn't completed */
        s = MODIFIED_FOR_URL;
        if (true) goto _L4; else goto _L3
_L3:
        if (s == null)
            s = "<null>";
        else
            s = (new StringBuilder()).append("'").append(s).append("'").toString();
        throw new IllegalArgumentException((new StringBuilder()).append("No Base64Variant with name ").append(s).toString());
    }

    static  {
        MIME = new Base64Variant("MIME", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", true, '=', 76);
        MIME_NO_LINEFEEDS = new Base64Variant(MIME, "MIME-NO-LINEFEEDS", 0x7fffffff);
        PEM = new Base64Variant(MIME, "PEM", true, '=', 64);
        StringBuilder stringbuilder = new StringBuilder("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
        stringbuilder.setCharAt(stringbuilder.indexOf("+"), '-');
        stringbuilder.setCharAt(stringbuilder.indexOf("/"), '_');
        MODIFIED_FOR_URL = new Base64Variant("MODIFIED-FOR-URL", stringbuilder.toString(), false, '\0', 0x7fffffff);
    }
}
