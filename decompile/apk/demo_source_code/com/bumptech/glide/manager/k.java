// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide.manager;

import android.app.Activity;
import android.app.Application;
import android.content.Context;
import android.content.ContextWrapper;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import com.bumptech.glide.g;
import com.bumptech.glide.g.h;
import java.util.HashMap;
import java.util.Map;

// Referenced classes of package com.bumptech.glide.manager:
//            b, f, j, SupportRequestManagerFragment

public class k
    implements android.os.Handler.Callback {

    private static final k c = new k();
    final Map a = new HashMap();
    final Map b = new HashMap();
    private volatile g d;
    private final Handler e = new Handler(Looper.getMainLooper(), this);

    k() {
    }

    public static k a() {
        return c;
    }

    private g b(Context context) {
        if (d != null) goto _L2; else goto _L1
_L1:
        this;
        JVM INSTR monitorenter ;
        if (d == null) {
            g g1 = JVM INSTR new #52  <Class g>;
            Context context1 = context.getApplicationContext();
            b b1 = JVM INSTR new #60  <Class b>;
            b1.b();
            context = JVM INSTR new #63  <Class f>;
            context.f();
            g1.g(context1, b1, context);
            d = g1;
        }
        this;
        JVM INSTR monitorexit ;
_L2:
        return d;
        context;
        this;
        JVM INSTR monitorexit ;
        throw context;
    }

    private static void b(Activity activity) {
        if (android.os.Build.VERSION.SDK_INT >= 17 && activity.isDestroyed())
            throw new IllegalArgumentException("You cannot start a load for a destroyed activity");
        else
            return;
    }

    public g a(Activity activity) {
        if (h.c() || android.os.Build.VERSION.SDK_INT < 11) {
            activity = a(activity.getApplicationContext());
        } else {
            b(activity);
            activity = a(((Context) (activity)), activity.getFragmentManager());
        }
        return activity;
    }

    public g a(Context context) {
        if (context == null)
            throw new IllegalArgumentException("You cannot start a load on a null Context");
        if (!h.b() || (context instanceof Application)) goto _L2; else goto _L1
_L1:
        if (!(context instanceof FragmentActivity)) goto _L4; else goto _L3
_L3:
        context = a((FragmentActivity)context);
_L6:
        return context;
_L4:
        if (context instanceof Activity) {
            context = a((Activity)context);
            continue; /* Loop/switch isn't completed */
        }
        if (context instanceof ContextWrapper) {
            context = a(((ContextWrapper)context).getBaseContext());
            continue; /* Loop/switch isn't completed */
        }
_L2:
        context = b(context);
        if (true) goto _L6; else goto _L5
_L5:
    }

    g a(Context context, android.app.FragmentManager fragmentmanager) {
        j j1 = a(fragmentmanager);
        g g1 = j1.b();
        fragmentmanager = g1;
        if (g1 == null) {
            fragmentmanager = new g(context, j1.a(), j1.c());
            j1.a(fragmentmanager);
        }
        return fragmentmanager;
    }

    g a(Context context, FragmentManager fragmentmanager) {
        SupportRequestManagerFragment supportrequestmanagerfragment = a(fragmentmanager);
        g g1 = supportrequestmanagerfragment.b();
        fragmentmanager = g1;
        if (g1 == null) {
            fragmentmanager = new g(context, supportrequestmanagerfragment.a(), supportrequestmanagerfragment.c());
            supportrequestmanagerfragment.a(fragmentmanager);
        }
        return fragmentmanager;
    }

    public g a(FragmentActivity fragmentactivity) {
        if (h.c()) {
            fragmentactivity = a(fragmentactivity.getApplicationContext());
        } else {
            b(fragmentactivity);
            fragmentactivity = a(((Context) (fragmentactivity)), fragmentactivity.getSupportFragmentManager());
        }
        return fragmentactivity;
    }

    SupportRequestManagerFragment a(FragmentManager fragmentmanager) {
        SupportRequestManagerFragment supportrequestmanagerfragment1 = (SupportRequestManagerFragment)fragmentmanager.findFragmentByTag("com.bumptech.glide.manager");
        SupportRequestManagerFragment supportrequestmanagerfragment = supportrequestmanagerfragment1;
        if (supportrequestmanagerfragment1 == null) {
            SupportRequestManagerFragment supportrequestmanagerfragment2 = (SupportRequestManagerFragment)b.get(fragmentmanager);
            supportrequestmanagerfragment = supportrequestmanagerfragment2;
            if (supportrequestmanagerfragment2 == null) {
                supportrequestmanagerfragment = new SupportRequestManagerFragment();
                b.put(fragmentmanager, supportrequestmanagerfragment);
                fragmentmanager.beginTransaction().add(supportrequestmanagerfragment, "com.bumptech.glide.manager").commitAllowingStateLoss();
                e.obtainMessage(2, fragmentmanager).sendToTarget();
            }
        }
        return supportrequestmanagerfragment;
    }

    j a(android.app.FragmentManager fragmentmanager) {
        j j2 = (j)fragmentmanager.findFragmentByTag("com.bumptech.glide.manager");
        j j1 = j2;
        if (j2 == null) {
            j j3 = (j)a.get(fragmentmanager);
            j1 = j3;
            if (j3 == null) {
                j1 = new j();
                a.put(fragmentmanager, j1);
                fragmentmanager.beginTransaction().add(j1, "com.bumptech.glide.manager").commitAllowingStateLoss();
                e.obtainMessage(1, fragmentmanager).sendToTarget();
            }
        }
        return j1;
    }

    public boolean handleMessage(Message message) {
        boolean flag;
        Object obj1;
        obj1 = null;
        flag = true;
        message.what;
        JVM INSTR tableswitch 1 2: default 32
    //                   1 83
    //                   2 105;
           goto _L1 _L2 _L3
_L1:
        Object obj;
        flag = false;
        obj = null;
        message = obj1;
_L5:
        if (flag && obj == null && Log.isLoggable("RMRetriever", 5))
            Log.w("RMRetriever", (new StringBuilder()).append("Failed to remove expected request manager fragment, manager: ").append(message).toString());
        return flag;
_L2:
        message = (android.app.FragmentManager)message.obj;
        obj = a.remove(message);
        continue; /* Loop/switch isn't completed */
_L3:
        message = (FragmentManager)message.obj;
        obj = b.remove(message);
        if (true) goto _L5; else goto _L4
_L4:
    }

}
