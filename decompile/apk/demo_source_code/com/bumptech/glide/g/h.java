// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide.g;

import android.graphics.Bitmap;
import android.os.Looper;
import java.util.*;

public final class h {

    private static final char a[] = "0123456789abcdef".toCharArray();
    private static final char b[] = new char[64];
    private static final char c[] = new char[40];

    public static int a(int i, int j, android.graphics.Bitmap.Config config) {
        return i * j * a(config);
    }

    private static int a(android.graphics.Bitmap.Config config) {
        android.graphics.Bitmap.Config config1;
        config1 = config;
        if (config == null)
            config1 = android.graphics.Bitmap.Config.ARGB_8888;
        static class _cls1 {

            static final int a[];

            static  {
                a = new int[android.graphics.Bitmap.Config.values().length];
                NoSuchFieldError nosuchfielderror;
                try {
                    a[android.graphics.Bitmap.Config.ALPHA_8.ordinal()] = 1;
                }
                catch (NoSuchFieldError nosuchfielderror3) { }
                try {
                    a[android.graphics.Bitmap.Config.RGB_565.ordinal()] = 2;
                }
                catch (NoSuchFieldError nosuchfielderror2) { }
                try {
                    a[android.graphics.Bitmap.Config.ARGB_4444.ordinal()] = 3;
                }
                catch (NoSuchFieldError nosuchfielderror1) { }
                a[android.graphics.Bitmap.Config.ARGB_8888.ordinal()] = 4;
_L2:
                return;
                nosuchfielderror;
                if (true) goto _L2; else goto _L1
_L1:
            }
        }

        _cls1.a[config1.ordinal()];
        JVM INSTR tableswitch 1 3: default 44
    //                   1 48
    //                   2 53
    //                   3 53;
           goto _L1 _L2 _L3 _L3
_L1:
        byte byte0 = 4;
_L5:
        return byte0;
_L2:
        byte0 = 1;
        continue; /* Loop/switch isn't completed */
_L3:
        byte0 = 2;
        if (true) goto _L5; else goto _L4
_L4:
    }

    public static int a(Bitmap bitmap) {
        if (android.os.Build.VERSION.SDK_INT < 19) goto _L2; else goto _L1
_L1:
        int i = bitmap.getAllocationByteCount();
_L4:
        return i;
        NullPointerException nullpointerexception;
        nullpointerexception;
_L2:
        i = bitmap.getHeight() * bitmap.getRowBytes();
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static String a(byte abyte0[]) {
        synchronized (b) {
            abyte0 = a(abyte0, b);
        }
        return abyte0;
        abyte0;
        ac;
        JVM INSTR monitorexit ;
        throw abyte0;
    }

    private static String a(byte abyte0[], char ac[]) {
        for (int i = 0; i < abyte0.length; i++) {
            int j = abyte0[i] & 0xff;
            ac[i * 2] = a[j >>> 4];
            ac[i * 2 + 1] = a[j & 0xf];
        }

        return new String(ac);
    }

    public static List a(Collection collection) {
        ArrayList arraylist = new ArrayList(collection.size());
        for (collection = collection.iterator(); collection.hasNext(); arraylist.add(collection.next()));
        return arraylist;
    }

    public static Queue a(int i) {
        return new ArrayDeque(i);
    }

    public static void a() {
        if (!b())
            throw new IllegalArgumentException("You must call this method on the main thread");
        else
            return;
    }

    public static boolean a(int i, int j) {
        boolean flag;
        if (b(i) && b(j))
            flag = true;
        else
            flag = false;
        return flag;
    }

    public static boolean b() {
        boolean flag;
        if (Looper.myLooper() == Looper.getMainLooper())
            flag = true;
        else
            flag = false;
        return flag;
    }

    private static boolean b(int i) {
        boolean flag;
        if (i > 0 || i == 0x80000000)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public static boolean c() {
        boolean flag;
        if (!b())
            flag = true;
        else
            flag = false;
        return flag;
    }

}
