// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide.g;

import java.io.FilterInputStream;
import java.io.InputStream;

public class f extends FilterInputStream {

    private int a;

    public f(InputStream inputstream) {
        super(inputstream);
        a = 0x80000000;
    }

    private long a(long l) {
        if (a != 0) goto _L2; else goto _L1
_L1:
        long l1 = -1L;
_L4:
        return l1;
_L2:
        l1 = l;
        if (a != 0x80000000) {
            l1 = l;
            if (l > (long)a)
                l1 = a;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    private void b(long l) {
        if (a != 0x80000000 && l != -1L)
            a = (int)((long)a - l);
    }

    public int available() {
        int i;
        if (a == 0x80000000)
            i = super.available();
        else
            i = Math.min(a, super.available());
        return i;
    }

    public void mark(int i) {
        super.mark(i);
        a = i;
    }

    public int read() {
        int i;
        if (a(1L) == -1L) {
            i = -1;
        } else {
            i = super.read();
            b(1L);
        }
        return i;
    }

    public int read(byte abyte0[], int i, int j) {
        byte byte0 = -1;
        j = (int)a(j);
        if (j == -1) {
            i = byte0;
        } else {
            i = super.read(abyte0, i, j);
            b(i);
        }
        return i;
    }

    public void reset() {
        super.reset();
        a = 0x80000000;
    }

    public long skip(long l) {
        long l1 = -1L;
        l = a(l);
        if (l == -1L) {
            l = l1;
        } else {
            l = super.skip(l);
            b(l);
        }
        return l;
    }
}
