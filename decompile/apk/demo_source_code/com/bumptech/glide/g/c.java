// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide.g;

import java.io.IOException;
import java.io.InputStream;
import java.util.Queue;

// Referenced classes of package com.bumptech.glide.g:
//            h

public class c extends InputStream {

    private static final Queue a = h.a(0);
    private InputStream b;
    private IOException c;

    c() {
    }

    public static c a(InputStream inputstream) {
        c c1;
        synchronized (a) {
            c1 = (c)a.poll();
        }
        obj = c1;
        if (c1 == null)
            obj = new c();
        ((c) (obj)).b(inputstream);
        return ((c) (obj));
        inputstream;
        obj;
        JVM INSTR monitorexit ;
        throw inputstream;
    }

    public IOException a() {
        return c;
    }

    public int available() {
        return b.available();
    }

    public void b() {
        c = null;
        b = null;
        synchronized (a) {
            a.offer(this);
        }
        return;
        exception;
        queue;
        JVM INSTR monitorexit ;
        throw exception;
    }

    void b(InputStream inputstream) {
        b = inputstream;
    }

    public void close() {
        b.close();
    }

    public void mark(int i) {
        b.mark(i);
    }

    public boolean markSupported() {
        return b.markSupported();
    }

    public int read() {
        int i;
        try {
            i = b.read();
        }
        catch (IOException ioexception) {
            c = ioexception;
            i = -1;
        }
        return i;
    }

    public int read(byte abyte0[]) {
        int i;
        try {
            i = b.read(abyte0);
        }
        // Misplaced declaration of an exception variable
        catch (byte abyte0[]) {
            c = abyte0;
            i = -1;
        }
        return i;
    }

    public int read(byte abyte0[], int i, int j) {
        try {
            i = b.read(abyte0, i, j);
        }
        // Misplaced declaration of an exception variable
        catch (byte abyte0[]) {
            c = abyte0;
            i = -1;
        }
        return i;
    }

    public void reset() {
        this;
        JVM INSTR monitorenter ;
        b.reset();
        this;
        JVM INSTR monitorexit ;
        return;
        Exception exception;
        exception;
        throw exception;
    }

    public long skip(long l) {
        try {
            l = b.skip(l);
        }
        catch (IOException ioexception) {
            c = ioexception;
            l = 0L;
        }
        return l;
    }

}
