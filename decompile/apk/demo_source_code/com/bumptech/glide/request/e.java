// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide.request;


// Referenced classes of package com.bumptech.glide.request:
//            a, b

public class e
    implements a, b {

    private a a;
    private a b;
    private b c;

    public e() {
        this(null);
    }

    public e(b b1) {
        c = b1;
    }

    private boolean j() {
        boolean flag;
        if (c == null || c.a(this))
            flag = true;
        else
            flag = false;
        return flag;
    }

    private boolean k() {
        boolean flag;
        if (c == null || c.b(this))
            flag = true;
        else
            flag = false;
        return flag;
    }

    private boolean l() {
        boolean flag;
        if (c != null && c.c())
            flag = true;
        else
            flag = false;
        return flag;
    }

    public void a() {
        a.a();
        b.a();
    }

    public void a(a a1, a a2) {
        a = a1;
        b = a2;
    }

    public boolean a(a a1) {
        boolean flag;
        if (j() && (a1.equals(a) || !a.h()))
            flag = true;
        else
            flag = false;
        return flag;
    }

    public void b() {
        if (!b.f())
            b.b();
        if (!a.f())
            a.b();
    }

    public boolean b(a a1) {
        boolean flag;
        if (k() && a1.equals(a) && !c())
            flag = true;
        else
            flag = false;
        return flag;
    }

    public void c(a a1) {
        if (!a1.equals(b)) goto _L2; else goto _L1
_L1:
        return;
_L2:
        if (c != null)
            c.c(this);
        if (!b.g())
            b.d();
        if (true) goto _L1; else goto _L3
_L3:
    }

    public boolean c() {
        boolean flag;
        if (l() || h())
            flag = true;
        else
            flag = false;
        return flag;
    }

    public void d() {
        b.d();
        a.d();
    }

    public void e() {
        a.e();
        b.e();
    }

    public boolean f() {
        return a.f();
    }

    public boolean g() {
        boolean flag;
        if (a.g() || b.g())
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean h() {
        boolean flag;
        if (a.h() || b.h())
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean i() {
        return a.i();
    }
}
