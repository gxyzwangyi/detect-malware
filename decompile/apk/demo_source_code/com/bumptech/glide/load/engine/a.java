// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide.load.engine;

import android.util.Log;
import com.bumptech.glide.Priority;
import com.bumptech.glide.e.b;
import com.bumptech.glide.load.d;
import com.bumptech.glide.load.f;
import com.bumptech.glide.load.resource.e.c;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;

// Referenced classes of package com.bumptech.glide.load.engine:
//            DiskCacheStrategy, e, i

class com.bumptech.glide.load.engine.a {
    static interface a {

        public abstract com.bumptech.glide.load.engine.b.a a();
    }

    static class b {

        public OutputStream a(File file) {
            return new BufferedOutputStream(new FileOutputStream(file));
        }

        b() {
        }
    }

    class c
        implements com.bumptech.glide.load.engine.b.b {

        final com.bumptech.glide.load.engine.a a;
        private final com.bumptech.glide.load.a b;
        private final Object c;

        public boolean a(File file) {
            boolean flag1;
            File file1;
            File file2;
            flag1 = false;
            file1 = null;
            file2 = null;
            file = com.bumptech.glide.load.engine.a.a(a).a(file);
            file2 = file;
            file1 = file;
            boolean flag = b.a(c, file);
            flag1 = flag;
            flag = flag1;
            if (file == null)
                break MISSING_BLOCK_LABEL_55;
            file.close();
            flag = flag1;
_L2:
            return flag;
            file;
            file1 = file2;
            if (!Log.isLoggable("DecodeJob", 3))
                break MISSING_BLOCK_LABEL_84;
            file1 = file2;
            Log.d("DecodeJob", "Failed to find file to write to disk cache", file);
            flag = flag1;
            if (file2 == null)
                continue; /* Loop/switch isn't completed */
            try {
                file2.close();
            }
            // Misplaced declaration of an exception variable
            catch (File file) {
                flag = flag1;
                continue; /* Loop/switch isn't completed */
            }
            flag = flag1;
            continue; /* Loop/switch isn't completed */
            file;
            if (file1 != null)
                try {
                    file1.close();
                }
                catch (IOException ioexception) { }
            throw file;
            file;
            flag = flag1;
            if (true) goto _L2; else goto _L1
_L1:
        }

        public c(com.bumptech.glide.load.a a2, Object obj) {
            a = com.bumptech.glide.load.engine.a.this;
            super();
            b = a2;
            c = obj;
        }
    }


    private static final b a = new b();
    private final e b;
    private final int c;
    private final int d;
    private final com.bumptech.glide.load.a.c e;
    private final com.bumptech.glide.e.b f;
    private final f g;
    private final com.bumptech.glide.load.resource.e.c h;
    private final a i;
    private final DiskCacheStrategy j;
    private final Priority k;
    private final b l;
    private volatile boolean m;

    public com.bumptech.glide.load.engine.a(e e1, int i1, int j1, com.bumptech.glide.load.a.c c1, com.bumptech.glide.e.b b1, f f1, com.bumptech.glide.load.resource.e.c c2, 
            a a1, DiskCacheStrategy diskcachestrategy, Priority priority) {
        this(e1, i1, j1, c1, b1, f1, c2, a1, diskcachestrategy, priority, a);
    }

    com.bumptech.glide.load.engine.a(e e1, int i1, int j1, com.bumptech.glide.load.a.c c1, com.bumptech.glide.e.b b1, f f1, com.bumptech.glide.load.resource.e.c c2, 
            a a1, DiskCacheStrategy diskcachestrategy, Priority priority, b b2) {
        b = e1;
        c = i1;
        d = j1;
        e = c1;
        f = b1;
        g = f1;
        h = c2;
        i = a1;
        j = diskcachestrategy;
        k = priority;
        l = b2;
    }

    static b a(com.bumptech.glide.load.engine.a a1) {
        return a1.l;
    }

    private i a(com.bumptech.glide.load.b b1) {
        Object obj;
        i i1;
        i1 = null;
        obj = i.a().a(b1);
        if (obj != null) goto _L2; else goto _L1
_L1:
        return i1;
_L2:
        obj = f.a().a(obj, c, d);
        i1 = ((i) (obj));
        if (obj == null) {
            i.a().b(b1);
            i1 = ((i) (obj));
        }
        if (true) goto _L1; else goto _L3
_L3:
        Exception exception;
        exception;
        if (true)
            i.a().b(b1);
        throw exception;
    }

    private i a(i i1) {
        long l1 = com.bumptech.glide.g.d.a();
        i1 = c(i1);
        if (Log.isLoggable("DecodeJob", 2))
            a("Transformed resource from source", l1);
        b(i1);
        l1 = com.bumptech.glide.g.d.a();
        i1 = d(i1);
        if (Log.isLoggable("DecodeJob", 2))
            a("Transcoded transformed from source", l1);
        return i1;
    }

    private i a(Object obj) {
        if (!j.a()) goto _L2; else goto _L1
_L1:
        obj = b(obj);
_L4:
        return ((i) (obj));
_L2:
        long l1 = com.bumptech.glide.g.d.a();
        i i1 = f.b().a(obj, c, d);
        obj = i1;
        if (Log.isLoggable("DecodeJob", 2)) {
            a("Decoded from source", l1);
            obj = i1;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    private void a(String s, long l1) {
        Log.v("DecodeJob", (new StringBuilder()).append(s).append(" in ").append(com.bumptech.glide.g.d.a(l1)).append(", key: ").append(b).toString());
    }

    private i b(Object obj) {
        long l1 = com.bumptech.glide.g.d.a();
        obj = new c(f.c(), obj);
        i.a().a(b.a(), ((com.bumptech.glide.load.engine.b.b) (obj)));
        if (Log.isLoggable("DecodeJob", 2))
            a("Wrote source to cache", l1);
        l1 = com.bumptech.glide.g.d.a();
        obj = a(b.a());
        if (Log.isLoggable("DecodeJob", 2) && obj != null)
            a("Decoded source from cache", l1);
        return ((i) (obj));
    }

    private void b(i i1) {
        if (i1 != null && j.b()) goto _L2; else goto _L1
_L1:
        return;
_L2:
        long l1 = com.bumptech.glide.g.d.a();
        i1 = new c(f.d(), i1);
        i.a().a(b, i1);
        if (Log.isLoggable("DecodeJob", 2))
            a("Wrote transformed from source to cache", l1);
        if (true) goto _L1; else goto _L3
_L3:
    }

    private i c(i i1) {
        if (i1 != null) goto _L2; else goto _L1
_L1:
        i j1 = null;
_L4:
        return j1;
_L2:
        i k1 = g.a(i1, c, d);
        j1 = k1;
        if (!i1.equals(k1)) {
            i1.d();
            j1 = k1;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    private i d(i i1) {
        if (i1 == null)
            i1 = null;
        else
            i1 = h.a(i1);
        return i1;
    }

    private i e() {
        boolean flag;
        Object obj;
        long l1 = com.bumptech.glide.g.d.a();
        obj = e.a(k);
        if (Log.isLoggable("DecodeJob", 2))
            a("Fetched data", l1);
        flag = m;
        if (!flag) goto _L2; else goto _L1
_L1:
        obj = null;
        e.a();
_L4:
        return ((i) (obj));
_L2:
        obj = a(obj);
        e.a();
        if (true) goto _L4; else goto _L3
_L3:
        Exception exception;
        exception;
        e.a();
        throw exception;
    }

    public i a() {
        if (j.b()) goto _L2; else goto _L1
_L1:
        i i1 = null;
_L4:
        return i1;
_L2:
        long l1 = com.bumptech.glide.g.d.a();
        i1 = a(((com.bumptech.glide.load.b) (b)));
        if (Log.isLoggable("DecodeJob", 2))
            a("Decoded transformed from cache", l1);
        l1 = com.bumptech.glide.g.d.a();
        i j1 = d(i1);
        i1 = j1;
        if (Log.isLoggable("DecodeJob", 2)) {
            a("Transcoded transformed from cache", l1);
            i1 = j1;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public i b() {
        i i1;
        if (!j.a()) {
            i1 = null;
        } else {
            long l1 = com.bumptech.glide.g.d.a();
            i1 = a(b.a());
            if (Log.isLoggable("DecodeJob", 2))
                a("Decoded source from cache", l1);
            i1 = a(i1);
        }
        return i1;
    }

    public i c() {
        return a(e());
    }

    public void d() {
        m = true;
        e.c();
    }

}
