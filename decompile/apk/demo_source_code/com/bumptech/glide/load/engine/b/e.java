// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide.load.engine.b;

import android.util.Log;
import com.bumptech.glide.a.a;
import com.bumptech.glide.load.b;
import java.io.File;
import java.io.IOException;

// Referenced classes of package com.bumptech.glide.load.engine.b:
//            a, c, j

public class e
    implements com.bumptech.glide.load.engine.b.a {

    private static e a = null;
    private final c b = new c();
    private final j c = new j();
    private final File d;
    private final int e;
    private a f;

    protected e(File file, int i) {
        d = file;
        e = i;
    }

    private a a() {
        this;
        JVM INSTR monitorenter ;
        a a1;
        if (f == null)
            f = com.bumptech.glide.a.a.a(d, 1, 1, e);
        a1 = f;
        this;
        JVM INSTR monitorexit ;
        return a1;
        Exception exception;
        exception;
        throw exception;
    }

    public static com.bumptech.glide.load.engine.b.a a(File file, int i) {
        com/bumptech/glide/load/engine/b/e;
        JVM INSTR monitorenter ;
        if (a == null) {
            e e1 = JVM INSTR new #2   <Class e>;
            e1.e(file, i);
            a = e1;
        }
        file = a;
        com/bumptech/glide/load/engine/b/e;
        JVM INSTR monitorexit ;
        return file;
        file;
        throw file;
    }

    public File a(b b1) {
        Object obj;
        b1 = c.a(b1);
        obj = null;
        com.bumptech.glide.a.a.c c1 = a().a(b1);
        b1 = obj;
        if (c1 == null)
            break MISSING_BLOCK_LABEL_32;
        b1 = c1.a(0);
_L2:
        return b1;
        IOException ioexception;
        ioexception;
        b1 = obj;
        if (Log.isLoggable("DiskLruCacheWrapper", 5)) {
            Log.w("DiskLruCacheWrapper", "Unable to get from disk cache", ioexception);
            b1 = obj;
        }
        if (true) goto _L2; else goto _L1
_L1:
    }

    public void a(b b1, a.b b2) {
        Object obj;
        obj = c.a(b1);
        b.a(b1);
        obj = a().b(((String) (obj)));
        if (obj == null)
            break MISSING_BLOCK_LABEL_52;
        if (b2.a(((com.bumptech.glide.a.a.a) (obj)).a(0)))
            ((com.bumptech.glide.a.a.a) (obj)).a();
        ((com.bumptech.glide.a.a.a) (obj)).c();
        b.b(b1);
_L2:
        return;
        b2;
        try {
            ((com.bumptech.glide.a.a.a) (obj)).c();
            throw b2;
        }
        // Misplaced declaration of an exception variable
        catch (a.b b2) { }
        if (Log.isLoggable("DiskLruCacheWrapper", 5))
            Log.w("DiskLruCacheWrapper", "Unable to put to disk cache", b2);
        b.b(b1);
        if (true) goto _L2; else goto _L1
_L1:
        b2;
        b.b(b1);
        throw b2;
    }

    public void b(b b1) {
        b1 = c.a(b1);
        a().c(b1);
_L1:
        return;
        b1;
        if (Log.isLoggable("DiskLruCacheWrapper", 5))
            Log.w("DiskLruCacheWrapper", "Unable to delete from disk cache", b1);
          goto _L1
    }

}
