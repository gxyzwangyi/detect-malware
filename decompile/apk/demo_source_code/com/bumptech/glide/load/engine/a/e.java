// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide.load.engine.a;

import java.util.*;

// Referenced classes of package com.bumptech.glide.load.engine.a:
//            h

class e {
    private static class a {

        a a;
        a b;
        private final Object c;
        private List d;

        static Object a(a a1) {
            return a1.c;
        }

        public Object a() {
            int i = b();
            Object obj;
            if (i > 0)
                obj = d.remove(i - 1);
            else
                obj = null;
            return obj;
        }

        public void a(Object obj) {
            if (d == null)
                d = new ArrayList();
            d.add(obj);
        }

        public int b() {
            int i;
            if (d != null)
                i = d.size();
            else
                i = 0;
            return i;
        }

        public a() {
            this(null);
        }

        public a(Object obj) {
            b = this;
            a = this;
            c = obj;
        }
    }


    private final a a = new a();
    private final Map b = new HashMap();

    e() {
    }

    private void a(a a1) {
        d(a1);
        a1.b = a;
        a1.a = a.a;
        c(a1);
    }

    private void b(a a1) {
        d(a1);
        a1.b = a.b;
        a1.a = a;
        c(a1);
    }

    private static void c(a a1) {
        a1.a.b = a1;
        a1.b.a = a1;
    }

    private static void d(a a1) {
        a1.b.a = a1.a;
        a1.a.b = a1.b;
    }

    public Object a() {
        Object obj = a.b;
_L3:
        Object obj1;
        if (obj.equals(a))
            break MISSING_BLOCK_LABEL_70;
        obj1 = ((a) (obj)).a();
        if (obj1 == null) goto _L2; else goto _L1
_L1:
        obj = obj1;
_L4:
        return obj;
_L2:
        d(((a) (obj)));
        b.remove(a.a(((a) (obj))));
        ((h)a.a(((a) (obj)))).a();
        obj = ((a) (obj)).b;
          goto _L3
        obj = null;
          goto _L4
    }

    public Object a(h h1) {
        a a1 = (a)b.get(h1);
        if (a1 == null) {
            a1 = new a(h1);
            b.put(h1, a1);
            h1 = a1;
        } else {
            h1.a();
            h1 = a1;
        }
        a(((a) (h1)));
        return h1.a();
    }

    public void a(h h1, Object obj) {
        a a1 = (a)b.get(h1);
        if (a1 == null) {
            a1 = new a(h1);
            b(a1);
            b.put(h1, a1);
            h1 = a1;
        } else {
            h1.a();
            h1 = a1;
        }
        h1.a(obj);
    }

    public String toString() {
        StringBuilder stringbuilder = new StringBuilder("GroupedLinkedMap( ");
        a a1 = a.a;
        boolean flag = false;
        for (; !a1.equals(a); a1 = a1.a) {
            flag = true;
            stringbuilder.append('{').append(a.a(a1)).append(':').append(a1.b()).append("}, ");
        }

        if (flag)
            stringbuilder.delete(stringbuilder.length() - 2, stringbuilder.length());
        return stringbuilder.append(" )").toString();
    }
}
