// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide.load.resource.bitmap;

import android.graphics.Bitmap;
import android.util.Log;
import com.bumptech.glide.g.d;
import com.bumptech.glide.g.h;
import com.bumptech.glide.load.e;
import com.bumptech.glide.load.engine.i;
import java.io.OutputStream;

public class b
    implements e {

    private android.graphics.Bitmap.CompressFormat a;
    private int b;

    public b() {
        this(null, 90);
    }

    public b(android.graphics.Bitmap.CompressFormat compressformat, int j) {
        a = compressformat;
        b = j;
    }

    private android.graphics.Bitmap.CompressFormat a(Bitmap bitmap) {
        if (a != null)
            bitmap = a;
        else
        if (bitmap.hasAlpha())
            bitmap = android.graphics.Bitmap.CompressFormat.PNG;
        else
            bitmap = android.graphics.Bitmap.CompressFormat.JPEG;
        return bitmap;
    }

    public String a() {
        return "BitmapEncoder.com.bumptech.glide.load.resource.bitmap";
    }

    public boolean a(i j, OutputStream outputstream) {
        Bitmap bitmap = (Bitmap)j.b();
        long l = d.a();
        j = a(bitmap);
        bitmap.compress(j, b, outputstream);
        if (Log.isLoggable("BitmapEncoder", 2))
            Log.v("BitmapEncoder", (new StringBuilder()).append("Compressed with type: ").append(j).append(" of size ").append(h.a(bitmap)).append(" in ").append(d.a(l)).toString());
        return true;
    }

    public volatile boolean a(Object obj, OutputStream outputstream) {
        return a((i)obj, outputstream);
    }
}
