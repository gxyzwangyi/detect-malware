// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide;

import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import com.bumptech.glide.manager.d;
import com.bumptech.glide.manager.h;
import com.bumptech.glide.manager.l;
import com.bumptech.glide.manager.m;

// Referenced classes of package com.bumptech.glide:
//            e, b, c, d

public class g
    implements h {
    public static interface a {

        public abstract void a(com.bumptech.glide.c c1);
    }

    public final class b {

        final g a;
        private final com.bumptech.glide.load.b.l b;
        private final Class c;

        static com.bumptech.glide.load.b.l a(b b1) {
            return b1.b;
        }

        static Class b(b b1) {
            return b1.c;
        }

        public a a(Object obj) {
            return new a(this, obj);
        }

        b(com.bumptech.glide.load.b.l l, Class class1) {
            a = g.this;
            super();
            b = l;
            c = class1;
        }
    }

    public final class b.a {

        final b a;
        private final Object b;
        private final Class c;
        private final boolean d = true;

        public com.bumptech.glide.d a(Class class1) {
            class1 = (com.bumptech.glide.d)g.e(a.a).a(new com.bumptech.glide.d(g.a(a.a), g.b(a.a), c, b.a(a), b.b(a), class1, g.c(a.a), com.bumptech.glide.g.d(a.a), g.e(a.a)));
            if (d)
                class1.b(b);
            return class1;
        }

        b.a(b b1, Object obj) {
            a = b1;
            super();
            b = obj;
            c = g.a(obj);
        }
    }

    class c {

        final g a;

        public com.bumptech.glide.c a(com.bumptech.glide.c c1) {
            if (g.f(a) != null)
                g.f(a).a(c1);
            return c1;
        }

        c() {
            a = g.this;
            super();
        }
    }

    private static class d
        implements com.bumptech.glide.manager.c.a {

        private final m a;

        public void a(boolean flag) {
            if (flag)
                a.d();
        }

        public d(m m1) {
            a = m1;
        }
    }


    private final Context a;
    private final com.bumptech.glide.manager.g b;
    private final l c;
    private final m d;
    private final e e;
    private final c f;
    private a g;

    public g(Context context, com.bumptech.glide.manager.g g1, l l) {
        this(context, g1, l, new m(), new com.bumptech.glide.manager.d());
    }

    g(Context context, com.bumptech.glide.manager.g g1, l l, m m1, com.bumptech.glide.manager.d d1) {
        a = context.getApplicationContext();
        b = g1;
        c = l;
        d = m1;
        e = com.bumptech.glide.e.a(context);
        f = new c();
        context = d1.a(context, new d(m1));
        if (com.bumptech.glide.g.h.c())
            (new Handler(Looper.getMainLooper())).post(new Runnable(g1) {

                final com.bumptech.glide.manager.g a;
                final g b;

                public void run() {
                    a.a(b);
                }

             {
                b = g.this;
                a = g2;
                super();
            }
            }
);
        else
            g1.a(this);
        g1.a(context);
    }

    static Context a(g g1) {
        return g1.a;
    }

    private com.bumptech.glide.b a(Class class1) {
        com.bumptech.glide.load.b.l l1 = com.bumptech.glide.e.a(class1, a);
        com.bumptech.glide.load.b.l l = com.bumptech.glide.e.b(class1, a);
        if (class1 != null && l1 == null && l == null)
            throw new IllegalArgumentException((new StringBuilder()).append("Unknown type ").append(class1).append(". You must provide a Model of a type for").append(" which there is a registered ModelLoader, if you are using a custom model, you must first call").append(" Glide#register with a ModelLoaderFactory for your custom model class").toString());
        else
            return (com.bumptech.glide.b)f.a(new com.bumptech.glide.b(class1, l1, l, a, e, d, b, f));
    }

    static Class a(Object obj) {
        return b(obj);
    }

    static e b(g g1) {
        return g1.e;
    }

    private static Class b(Object obj) {
        if (obj != null)
            obj = obj.getClass();
        else
            obj = null;
        return ((Class) (obj));
    }

    static m c(g g1) {
        return g1.d;
    }

    static com.bumptech.glide.manager.g d(g g1) {
        return g1.b;
    }

    static c e(g g1) {
        return g1.f;
    }

    static a f(g g1) {
        return g1.g;
    }

    public com.bumptech.glide.b a(String s) {
        return (com.bumptech.glide.b)g().a(s);
    }

    public b a(com.bumptech.glide.load.b.l l, Class class1) {
        return new b(l, class1);
    }

    public void a() {
        e.e();
    }

    public void a(int i) {
        e.a(i);
    }

    public void b() {
        com.bumptech.glide.g.h.a();
        d.a();
    }

    public void c() {
        com.bumptech.glide.g.h.a();
        d.b();
    }

    public void d() {
        c();
    }

    public void e() {
        b();
    }

    public void f() {
        d.c();
    }

    public com.bumptech.glide.b g() {
        return a(java/lang/String);
    }
}
