// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide.a;

import java.io.*;
import java.nio.charset.Charset;

// Referenced classes of package com.bumptech.glide.a:
//            c

class b
    implements Closeable {

    private final InputStream a;
    private final Charset b;
    private byte c[];
    private int d;
    private int e;

    public b(InputStream inputstream, int i, Charset charset) {
        if (inputstream == null || charset == null)
            throw new NullPointerException();
        if (i < 0)
            throw new IllegalArgumentException("capacity <= 0");
        if (!charset.equals(c.a)) {
            throw new IllegalArgumentException("Unsupported encoding");
        } else {
            a = inputstream;
            b = charset;
            c = new byte[i];
            return;
        }
    }

    public b(InputStream inputstream, Charset charset) {
        this(inputstream, 8192, charset);
    }

    static Charset a(b b1) {
        return b1.b;
    }

    private void c() {
        int i = a.read(c, 0, c.length);
        if (i == -1) {
            throw new EOFException();
        } else {
            d = 0;
            e = i;
            return;
        }
    }

    public String a() {
        InputStream inputstream = a;
        inputstream;
        JVM INSTR monitorenter ;
        if (c == null) {
            IOException ioexception = JVM INSTR new #71  <Class IOException>;
            ioexception.IOException("LineReader is closed");
            throw ioexception;
        }
        break MISSING_BLOCK_LABEL_34;
        Exception exception;
        exception;
        inputstream;
        JVM INSTR monitorexit ;
        throw exception;
        int i;
        if (d >= e)
            c();
        i = d;
_L5:
        if (i == e) goto _L2; else goto _L1
_L1:
        if (c[i] != 10) goto _L4; else goto _L3
_L3:
        int j;
        Object obj;
        if (i != d && c[i - 1] == 13)
            j = i - 1;
        else
            j = i;
        obj = JVM INSTR new #78  <Class String>;
        ((String) (obj)).String(c, d, j - d, b.name());
        d = i + 1;
        inputstream;
        JVM INSTR monitorexit ;
_L10:
        return ((String) (obj));
_L4:
        i++;
          goto _L5
_L2:
        obj = JVM INSTR new #8   <Class b$1>;
        ((_cls1) (obj)).this. _cls1((e - d) + 80);
_L7:
        ((ByteArrayOutputStream) (obj)).write(c, d, e - d);
        e = -1;
        c();
        i = d;
_L11:
        if (i == e) goto _L7; else goto _L6
_L6:
        if (c[i] != 10) goto _L9; else goto _L8
_L8:
        if (i != d)
            ((ByteArrayOutputStream) (obj)).write(c, d, i - d);
        d = i + 1;
        obj = ((ByteArrayOutputStream) (obj)).toString();
        inputstream;
        JVM INSTR monitorexit ;
          goto _L10
_L9:
        i++;
          goto _L11
    }

    public boolean b() {
        boolean flag;
        if (e == -1)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public void close() {
        synchronized (a) {
            if (c != null) {
                c = null;
                a.close();
            }
        }
        return;
        exception;
        inputstream;
        JVM INSTR monitorexit ;
        throw exception;
    }

    // Unreferenced inner class com/bumptech/glide/a/b$1

/* anonymous class */
    class _cls1 extends ByteArrayOutputStream {

        final b a;

        public String toString() {
            int i;
            String s;
            if (count > 0 && buf[count - 1] == 13)
                i = count - 1;
            else
                i = count;
            try {
                s = new String(buf, 0, i, b.a(a).name());
            }
            catch (UnsupportedEncodingException unsupportedencodingexception) {
                throw new AssertionError(unsupportedencodingexception);
            }
            return s;
        }

             {
                a = b.this;
                super(i);
            }
    }

}
