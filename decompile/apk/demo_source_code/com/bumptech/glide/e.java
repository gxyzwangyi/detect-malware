// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.bumptech.glide;

import android.content.Context;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Handler;
import android.os.Looper;
import android.os.ParcelFileDescriptor;
import android.support.v4.app.FragmentActivity;
import android.util.Log;
import android.widget.ImageView;
import com.bumptech.glide.g.h;
import com.bumptech.glide.load.DecodeFormat;
import com.bumptech.glide.load.b.c;
import com.bumptech.glide.load.b.l;
import com.bumptech.glide.load.engine.c.a;
import com.bumptech.glide.load.resource.bitmap.g;
import com.bumptech.glide.load.resource.bitmap.i;
import com.bumptech.glide.load.resource.bitmap.j;
import com.bumptech.glide.load.resource.bitmap.m;
import com.bumptech.glide.load.resource.bitmap.n;
import com.bumptech.glide.load.resource.c.b;
import com.bumptech.glide.load.resource.e.d;
import com.bumptech.glide.manager.k;
import com.bumptech.glide.request.b.f;
import java.io.File;
import java.io.InputStream;
import java.net.URL;
import java.util.Iterator;
import java.util.List;

// Referenced classes of package com.bumptech.glide:
//            f, g

public class e {

    private static volatile e a;
    private final c b;
    private final com.bumptech.glide.load.engine.b c;
    private final com.bumptech.glide.load.engine.a.c d;
    private final com.bumptech.glide.load.engine.b.h e;
    private final DecodeFormat f;
    private final f g = new f();
    private final d h = new d();
    private final com.bumptech.glide.e.c i = new com.bumptech.glide.e.c();
    private final com.bumptech.glide.load.resource.bitmap.e j;
    private final com.bumptech.glide.load.resource.d.f k;
    private final i l;
    private final com.bumptech.glide.load.resource.d.f m;
    private final Handler n = new Handler(Looper.getMainLooper());
    private final a o;

    e(com.bumptech.glide.load.engine.b b1, com.bumptech.glide.load.engine.b.h h1, com.bumptech.glide.load.engine.a.c c1, Context context, DecodeFormat decodeformat) {
        c = b1;
        d = c1;
        e = h1;
        f = decodeformat;
        b = new c(context);
        o = new a(h1, c1, decodeformat);
        b1 = new n(c1, decodeformat);
        i.a(java/io/InputStream, android/graphics/Bitmap, b1);
        h1 = new g(c1, decodeformat);
        i.a(android/os/ParcelFileDescriptor, android/graphics/Bitmap, h1);
        b1 = new m(b1, h1);
        i.a(com/bumptech/glide/load/b/g, android/graphics/Bitmap, b1);
        h1 = new com.bumptech.glide.load.resource.c.c(context, c1);
        i.a(java/io/InputStream, com/bumptech/glide/load/resource/c/b, h1);
        i.a(com/bumptech/glide/load/b/g, com/bumptech/glide/load/resource/d/a, new com.bumptech.glide.load.resource.d.g(b1, h1, c1));
        i.a(java/io/InputStream, java/io/File, new com.bumptech.glide.load.resource.b.d());
        a(java/io/File, android/os/ParcelFileDescriptor, new com.bumptech.glide.load.b.a.a.a());
        a(java/io/File, java/io/InputStream, new com.bumptech.glide.load.b.b.c.a());
        a(Integer.TYPE, android/os/ParcelFileDescriptor, new com.bumptech.glide.load.b.a.c.a());
        a(Integer.TYPE, java/io/InputStream, new com.bumptech.glide.load.b.b.a());
        a(java/lang/Integer, android/os/ParcelFileDescriptor, new com.bumptech.glide.load.b.a.c.a());
        a(java/lang/Integer, java/io/InputStream, new com.bumptech.glide.load.b.b.a());
        a(java/lang/String, android/os/ParcelFileDescriptor, new com.bumptech.glide.load.b.a.d.a());
        a(java/lang/String, java/io/InputStream, new com.bumptech.glide.load.b.b.f.a());
        a(android/net/Uri, android/os/ParcelFileDescriptor, new com.bumptech.glide.load.b.a.a());
        a(android/net/Uri, java/io/InputStream, new com.bumptech.glide.load.b.b.g.a());
        a(java/net/URL, java/io/InputStream, new com.bumptech.glide.load.b.b.h.a());
        a(com/bumptech/glide/load/b/d, java/io/InputStream, new com.bumptech.glide.load.b.b.a.a());
        a([B, java/io/InputStream, new com.bumptech.glide.load.b.b.b.a());
        h.a(android/graphics/Bitmap, com/bumptech/glide/load/resource/bitmap/j, new com.bumptech.glide.load.resource.e.b(context.getResources(), c1));
        h.a(com/bumptech/glide/load/resource/d/a, com/bumptech/glide/load/resource/a/b, new com.bumptech.glide.load.resource.e.a(new com.bumptech.glide.load.resource.e.b(context.getResources(), c1)));
        j = new com.bumptech.glide.load.resource.bitmap.e(c1);
        k = new com.bumptech.glide.load.resource.d.f(c1, j);
        l = new i(c1);
        m = new com.bumptech.glide.load.resource.d.f(c1, l);
    }

    public static e a(Context context) {
        if (a != null) goto _L2; else goto _L1
_L1:
        com/bumptech/glide/e;
        JVM INSTR monitorenter ;
        com.bumptech.glide.f f1;
        List list;
        if (a != null)
            break MISSING_BLOCK_LABEL_128;
        context = context.getApplicationContext();
        com.bumptech.glide.d.b b1 = JVM INSTR new #237 <Class com.bumptech.glide.d.b>;
        b1.com.bumptech.glide.d.b(context);
        list = b1.a();
        f1 = JVM INSTR new #243 <Class com.bumptech.glide.f>;
        f1.com.bumptech.glide.f(context);
        for (Iterator iterator = list.iterator(); iterator.hasNext(); ((com.bumptech.glide.d.a)iterator.next()).a(context, f1));
        break MISSING_BLOCK_LABEL_84;
        context;
        com/bumptech/glide/e;
        JVM INSTR monitorexit ;
        throw context;
        a = f1.a();
        for (Iterator iterator1 = list.iterator(); iterator1.hasNext(); ((com.bumptech.glide.d.a)iterator1.next()).a(context, a));
        com/bumptech/glide/e;
        JVM INSTR monitorexit ;
_L2:
        return a;
    }

    public static com.bumptech.glide.g a(FragmentActivity fragmentactivity) {
        return com.bumptech.glide.manager.k.a().a(fragmentactivity);
    }

    public static l a(Class class1, Context context) {
        return a(class1, java/io/InputStream, context);
    }

    public static l a(Class class1, Class class2, Context context) {
        if (class1 == null) {
            if (Log.isLoggable("Glide", 3))
                Log.d("Glide", "Unable to load null model, setting placeholder only");
            class1 = null;
        } else {
            class1 = a(context).f().a(class1, class2);
        }
        return class1;
    }

    public static void a(com.bumptech.glide.request.b.j j1) {
        com.bumptech.glide.g.h.a();
        com.bumptech.glide.request.a a1 = j1.c();
        if (a1 != null) {
            a1.d();
            j1.a(null);
        }
    }

    public static com.bumptech.glide.g b(Context context) {
        return com.bumptech.glide.manager.k.a().a(context);
    }

    public static l b(Class class1, Context context) {
        return a(class1, android/os/ParcelFileDescriptor, context);
    }

    private c f() {
        return b;
    }

    public com.bumptech.glide.load.engine.a.c a() {
        return d;
    }

    com.bumptech.glide.load.resource.e.c a(Class class1, Class class2) {
        return h.a(class1, class2);
    }

    com.bumptech.glide.request.b.j a(ImageView imageview, Class class1) {
        return g.a(imageview, class1);
    }

    public void a(int i1) {
        com.bumptech.glide.g.h.a();
        e.a(i1);
        d.a(i1);
    }

    public void a(Class class1, Class class2, com.bumptech.glide.load.b.m m1) {
        class1 = b.a(class1, class2, m1);
        if (class1 != null)
            class1.a();
    }

    com.bumptech.glide.e.b b(Class class1, Class class2) {
        return i.a(class1, class2);
    }

    com.bumptech.glide.load.engine.b b() {
        return c;
    }

    com.bumptech.glide.load.resource.d.f c() {
        return k;
    }

    com.bumptech.glide.load.resource.d.f d() {
        return m;
    }

    public void e() {
        com.bumptech.glide.g.h.a();
        e.a();
        d.a();
    }
}
