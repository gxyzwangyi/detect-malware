// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.barchart.udt.nio;

import com.barchart.udt.*;
import java.nio.channels.*;
import org.slf4j.b;
import org.slf4j.c;

// Referenced classes of package com.barchart.udt.nio:
//            i, KindUDT, a

public class g extends SelectionKey
    implements Comparable {

    protected static final b a = org.slf4j.c.a(com/barchart/udt/nio/g);
    private final a b;
    private volatile com.barchart.udt.EpollUDT.Opt c;
    private volatile int d;
    private volatile boolean e;
    private volatile int f;
    private volatile int g;
    private final i h;

    protected g(i j, a a1, Object obj) {
        super.attach(obj);
        h = j;
        b = a1;
        a(true);
    }

    protected static com.barchart.udt.EpollUDT.Opt a(int j) {
        boolean flag1 = true;
        boolean flag;
        com.barchart.udt.EpollUDT.Opt opt;
        if ((j & 0x11) != 0)
            flag = true;
        else
            flag = false;
        if ((j & 0xc) != 0)
            j = ((flag1) ? 1 : 0);
        else
            j = 0;
        if (flag && j != 0)
            opt = com.barchart.udt.EpollUDT.Opt.h;
        else
        if (flag)
            opt = com.barchart.udt.EpollUDT.Opt.f;
        else
        if (j != 0)
            opt = com.barchart.udt.EpollUDT.Opt.g;
        else
            opt = com.barchart.udt.EpollUDT.Opt.d;
        return opt;
    }

    public static final String b(int j) {
        char c4 = '-';
        char c1;
        char c2;
        char c3;
        if ((j & 0x10) != 0)
            c1 = 'A';
        else
            c1 = '-';
        if ((j & 8) != 0)
            c2 = 'C';
        else
            c2 = '-';
        if ((j & 1) != 0)
            c3 = 'R';
        else
            c3 = '-';
        if ((j & 4) != 0)
            c4 = 'W';
        return String.format("%c%c%c%c", new Object[] {
            Character.valueOf(c1), Character.valueOf(c2), Character.valueOf(c3), Character.valueOf(c4)
        });
    }

    public int a(g g1) {
        int k = g();
        int j = g1.g();
        if (k > j)
            j = 1;
        else
        if (k < j)
            j = -1;
        else
            j = 0;
        return j;
    }

    protected void a() {
        if (isValid())
            return;
        else
            throw new CancelledKeyException();
    }

    protected void a(String s) {
        String s1 = (new StringBuilder()).append("logic error : \n\t").append(this).toString();
        a.c(s1, new Exception((new StringBuilder()).append("").append(s).toString()));
    }

    protected void a(boolean flag) {
        if (!flag) goto _L2; else goto _L1
_L1:
        c = com.barchart.udt.EpollUDT.Opt.d;
        c().a(h(), c);
_L6:
        e = flag;
_L4:
        return;
_L2:
        c().a(h());
        continue; /* Loop/switch isn't completed */
        Object obj;
        obj;
        a.d("Epoll failure.", ((Throwable) (obj)));
        e = flag;
        if (true) goto _L4; else goto _L3
_L3:
        obj;
        e = flag;
        throw obj;
        if (true) goto _L6; else goto _L5
_L5:
    }

    protected a b() {
        return b;
    }

    protected EpollUDT c() {
        return f().c();
    }

    protected void c(int j) {
        if ((~channel().validOps() & j) != 0)
            throw new IllegalArgumentException((new StringBuilder()).append("invalid interestOps=").append(j).toString());
        else
            return;
    }

    public void cancel() {
        if (isValid())
            f().a(this);
    }

    public SelectableChannel channel() {
        return (SelectableChannel)b;
    }

    public int compareTo(Object obj) {
        return a((g)obj);
    }

    protected boolean d() {
        boolean flag;
        boolean flag1;
        flag1 = true;
        flag = flag1;
        static class _cls1 {

            static final int a[];
            static final int b[];

            static  {
                b = new int[StatusUDT.values().length];
                NoSuchFieldError nosuchfielderror;
                try {
                    b[StatusUDT.a.ordinal()] = 1;
                }
                catch (NoSuchFieldError nosuchfielderror11) { }
                try {
                    b[StatusUDT.b.ordinal()] = 2;
                }
                catch (NoSuchFieldError nosuchfielderror10) { }
                try {
                    b[StatusUDT.c.ordinal()] = 3;
                }
                catch (NoSuchFieldError nosuchfielderror9) { }
                try {
                    b[StatusUDT.d.ordinal()] = 4;
                }
                catch (NoSuchFieldError nosuchfielderror8) { }
                try {
                    b[StatusUDT.e.ordinal()] = 5;
                }
                catch (NoSuchFieldError nosuchfielderror7) { }
                try {
                    b[StatusUDT.f.ordinal()] = 6;
                }
                catch (NoSuchFieldError nosuchfielderror6) { }
                try {
                    b[StatusUDT.g.ordinal()] = 7;
                }
                catch (NoSuchFieldError nosuchfielderror5) { }
                try {
                    b[StatusUDT.h.ordinal()] = 8;
                }
                catch (NoSuchFieldError nosuchfielderror4) { }
                try {
                    b[StatusUDT.i.ordinal()] = 9;
                }
                catch (NoSuchFieldError nosuchfielderror3) { }
                a = new int[KindUDT.values().length];
                try {
                    a[KindUDT.a.ordinal()] = 1;
                }
                catch (NoSuchFieldError nosuchfielderror2) { }
                try {
                    a[com.barchart.udt.nio.KindUDT.b.ordinal()] = 2;
                }
                catch (NoSuchFieldError nosuchfielderror1) { }
                a[com.barchart.udt.nio.KindUDT.c.ordinal()] = 3;
_L2:
                return;
                nosuchfielderror;
                if (true) goto _L2; else goto _L1
_L1:
            }
        }

        com.barchart.udt.nio._cls1.b[h().u().ordinal()];
        JVM INSTR tableswitch 1 9: default 68
    //                   1 78
    //                   2 78
    //                   3 78
    //                   4 78
    //                   5 78
    //                   6 76
    //                   7 76
    //                   8 76
    //                   9 76;
           goto _L1 _L2 _L2 _L2 _L2 _L2 _L3 _L3 _L3 _L3
_L3:
        break; /* Loop/switch isn't completed */
_L1:
        a("Unknown socket status.");
        flag = flag1;
_L5:
        return flag;
_L2:
        flag = false;
        if (true) goto _L5; else goto _L4
_L4:
    }

    protected boolean d(int j) {
        int k;
        boolean flag;
        flag = true;
        k = d;
        g = j;
        if (c.a()) goto _L2; else goto _L1
_L1:
        if (!d()) goto _L4; else goto _L3
_L3:
        j = channel().validOps();
        f = j;
_L5:
        return flag;
_L4:
        a("Unexpected error report.");
        f = 0;
        flag = false;
          goto _L5
_L2:
        _cls1.a[e().ordinal()];
        JVM INSTR tableswitch 1 3: default 96
    //                   1 112
    //                   2 144
    //                   3 144;
           goto _L6 _L7 _L8 _L8
_L6:
        a("Wrong kind.");
        f = 0;
        flag = false;
          goto _L5
_L7:
        if ((k & 0x10) == 0) goto _L10; else goto _L9
_L9:
        f = 16;
          goto _L5
_L10:
        a("Ready to ACCEPT while not interested.");
        f = 0;
        flag = false;
          goto _L5
_L8:
        if ((k & 1) == 0) goto _L12; else goto _L11
_L11:
        f = 1;
          goto _L5
_L12:
        a("Ready to READ while not interested.");
        f = 0;
        flag = false;
          goto _L5
        Exception exception;
        exception;
        f = 0;
        throw exception;
    }

    protected KindUDT e() {
        return b.b();
    }

    protected boolean e(int j) {
        int k;
        boolean flag;
        flag = false;
        k = d;
        if (g == j)
            j = 1;
        else
            j = 0;
        if (c.b()) goto _L2; else goto _L1
_L1:
        if (!d()) goto _L4; else goto _L3
_L3:
        k = channel().validOps();
        if (j != 0)
            f = f | k;
        else
            f = k;
        flag = true;
_L5:
        return flag;
_L4:
        a("Unexpected error report.");
        if (j != 0)
            f = f | 0;
        else
            f = 0;
          goto _L5
_L2:
        _cls1.a[e().ordinal()];
        JVM INSTR tableswitch 1 3: default 140
    //                   1 163
    //                   2 194
    //                   3 194;
           goto _L6 _L7 _L8 _L8
_L6:
        a("Wrong kind.");
        boolean flag1;
        if (j != 0)
            f = f | 0;
        else
            f = 0;
          goto _L5
_L7:
        a("Ready to WRITE for acceptor.");
        if (j != 0)
            f = f | 0;
        else
            f = 0;
          goto _L5
_L8:
        flag1 = b().a();
        if (!flag1) goto _L10; else goto _L9
_L9:
        if ((k & 4) == 0) goto _L12; else goto _L11
_L11:
        if (j != 0)
            f = f | 4;
        else
            f = 4;
        flag = true;
          goto _L5
_L12:
        a("Ready to WRITE when not insterested.");
        if (j != 0)
            f = f | 0;
        else
            f = 0;
          goto _L5
_L10:
        if ((k & 8) == 0) goto _L14; else goto _L13
_L13:
        if (j != 0)
            f = f | 8;
        else
            f = 8;
        flag = true;
          goto _L5
_L14:
        a("Ready to CONNECT when not interested.");
        if (j != 0)
            f = f | 0;
        else
            f = 0;
          goto _L5
        Exception exception;
        exception;
        if (j != 0)
            f = f | 0;
        else
            f = 0;
        throw exception;
    }

    public boolean equals(Object obj) {
        boolean flag1 = false;
        boolean flag = flag1;
        if (obj instanceof g) {
            flag = flag1;
            if (((g)obj).g() == g())
                flag = true;
        }
        return flag;
    }

    public i f() {
        return h;
    }

    protected int g() {
        return h().n();
    }

    protected SocketUDT h() {
        return b.c();
    }

    public int hashCode() {
        return g();
    }

    public int interestOps() {
        return d;
    }

    public SelectionKey interestOps(int j) {
        a();
        c(j);
        com.barchart.udt.EpollUDT.Opt opt = a(j);
        if (opt == c) goto _L2; else goto _L1
_L1:
        if (com.barchart.udt.EpollUDT.Opt.d != opt) goto _L4; else goto _L3
_L3:
        c().a(h());
_L5:
        c = opt;
_L2:
        d = j;
_L6:
        return this;
_L4:
        c().a(h());
        c().a(h(), opt);
          goto _L5
        Object obj;
        obj;
        a.d("epoll udpate failure", ((Throwable) (obj)));
        d = j;
          goto _L6
        obj;
        d = j;
        throw obj;
          goto _L5
    }

    public boolean isValid() {
        return e;
    }

    public int readyOps() {
        return f;
    }

    public Selector selector() {
        return f();
    }

    public String toString() {
        return String.format("[id: 0x%08x] poll=%s ready=%s inter=%s %s %s %s bind=%s:%s peer=%s:%s", new Object[] {
            Integer.valueOf(h().n()), c, b(f), b(d), b.d(), b.b(), h().u(), h().c(), Integer.valueOf(h().d()), h().g(), 
            Integer.valueOf(h().h())
        });
    }

}
