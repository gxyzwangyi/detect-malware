// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.barchart.udt.nio;

import com.barchart.udt.SocketUDT;
import com.barchart.udt.TypeUDT;
import java.net.ServerSocket;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import org.slf4j.b;
import org.slf4j.c;

// Referenced classes of package com.barchart.udt.nio:
//            a, KindUDT, h, k, 
//            d

public class j extends ServerSocketChannel
    implements a {

    protected static final b a = org.slf4j.c.a(com/barchart/udt/nio/j);
    protected d b;
    protected final SocketUDT c;

    protected j(h h1, SocketUDT socketudt) {
        super(h1);
        c = socketudt;
    }

    public boolean a() {
        return true;
    }

    public SocketChannel accept() {
        return e();
    }

    public KindUDT b() {
        return KindUDT.a;
    }

    public SocketUDT c() {
        return c;
    }

    public TypeUDT d() {
        return f().a();
    }

    public k e() {
        Object obj;
        begin();
        obj = c.a();
        if (obj != null) goto _L2; else goto _L1
_L1:
        obj = null;
        end(true);
_L4:
        return ((k) (obj));
_L2:
        obj = new k(f(), ((SocketUDT) (obj)), ((SocketUDT) (obj)).r());
        end(true);
        if (true) goto _L4; else goto _L3
_L3:
        Exception exception;
        exception;
        end(true);
        throw exception;
    }

    public h f() {
        return (h)super.provider();
    }

    public d g() {
        this;
        JVM INSTR monitorenter ;
        d d1 = b;
        if (d1 != null)
            break MISSING_BLOCK_LABEL_25;
        d1 = JVM INSTR new #84  <Class d>;
        d1.d(this);
        b = d1;
        d1 = b;
_L1:
        this;
        JVM INSTR monitorexit ;
        return d1;
        Object obj;
        obj;
        a.d("failed to make socket", ((Throwable) (obj)));
        obj = null;
          goto _L1
        obj;
        throw obj;
    }

    protected void implCloseSelectableChannel() {
        c.b();
    }

    protected void implConfigureBlocking(boolean flag) {
        c.a(flag);
    }

    public ServerSocket socket() {
        return g();
    }

    public String toString() {
        return c.toString();
    }

}
