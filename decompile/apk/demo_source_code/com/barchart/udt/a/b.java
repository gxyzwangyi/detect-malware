// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.barchart.udt.a;

import java.util.Iterator;
import java.util.List;
import org.slf4j.c;

// Referenced classes of package com.barchart.udt.a:
//            a, c, d, e

public class b
    implements a {

    private static final org.slf4j.b a = org.slf4j.c.a(com/barchart/udt/a/b);

    public b() {
    }

    public void a(String s) {
        if (com.barchart.udt.a.c.h()) {
            a.b("Platform supported.");
            if (s == null || s.length() == 0)
                throw new IllegalStateException("Invalid extract location.");
        } else {
            throw new IllegalStateException("Unsupported platform.");
        }
        a.b("Loading release libraries.");
        b(s);
        a.b("Release libraries loaded.");
_L1:
        return;
        Throwable throwable;
        throwable;
        a.d("Release libraries missing: {}", throwable.getMessage());
        try {
            a.b("Loading staging libraries.");
            c(s);
            a.b("Staging libraries loaded.");
        }
        catch (Throwable throwable1) {
            a.d("Staging libraries missing: {}", throwable1.getMessage());
            try {
                a.b("Loading testing libraries.");
                d(s);
                a.b("Testing libraries loaded.");
            }
            // Misplaced declaration of an exception variable
            catch (String s) {
                a.d("Testing libraries missing: {}", s.getMessage());
                throw new IllegalStateException("Fatal: library load failed.");
            }
        }
          goto _L1
    }

    protected void a(List list, String s) {
        String s1;
        for (Iterator iterator = list.iterator(); iterator.hasNext(); com.barchart.udt.a.d.a(s1, (new StringBuilder()).append(s).append(s1).toString()))
            s1 = (String)iterator.next();

        String s2;
        for (list = list.iterator(); list.hasNext(); com.barchart.udt.a.d.a((new StringBuilder()).append(s).append(s2).toString()))
            s2 = (String)list.next();

    }

    protected void b(String s) {
        a(com.barchart.udt.a.c.b(e.i), s);
    }

    protected void c(String s) {
        a(com.barchart.udt.a.c.c(e.i), s);
    }

    protected void d(String s) {
        a(com.barchart.udt.a.c.d((new StringBuilder()).append(e.k).append("-").append(com.barchart.udt.a.c.g()).toString()), s);
    }

}
