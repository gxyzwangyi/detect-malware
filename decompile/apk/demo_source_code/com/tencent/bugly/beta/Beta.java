// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.beta;

import android.content.ContentValues;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.res.Resources;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Handler;
import android.os.Looper;
import android.text.TextUtils;
import com.tencent.bugly.BuglyStrategy;
import com.tencent.bugly.a;
import com.tencent.bugly.beta.download.DownloadListener;
import com.tencent.bugly.beta.download.DownloadTask;
import com.tencent.bugly.beta.global.ResBean;
import com.tencent.bugly.beta.global.d;
import com.tencent.bugly.beta.ui.UILifecycleListener;
import com.tencent.bugly.beta.upgrade.BetaGrayStrategy;
import com.tencent.bugly.beta.upgrade.UpgradeListener;
import com.tencent.bugly.beta.upgrade.UpgradeStateListener;
import com.tencent.bugly.beta.upgrade.c;
import com.tencent.bugly.proguard.af;
import com.tencent.bugly.proguard.ag;
import com.tencent.bugly.proguard.m;
import com.tencent.bugly.proguard.w;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

// Referenced classes of package com.tencent.bugly.beta:
//            UpgradeInfo

public class Beta extends a {

    public static final String TAG_CANCEL_BUTTON = "beta_cancel_button";
    public static final String TAG_CONFIRM_BUTTON = "beta_confirm_button";
    public static final String TAG_IMG_BANNER = "beta_upgrade_banner";
    public static final String TAG_TIP_MESSAGE = "beta_tip_message";
    public static final String TAG_TITLE = "beta_title";
    public static final String TAG_UPGRADE_FEATURE = "beta_upgrade_feature";
    public static final String TAG_UPGRADE_INFO = "beta_upgrade_info";
    public static boolean autoCheckUpgrade = true;
    public static boolean autoInit = true;
    public static final List canNotShowUpgradeActs = Collections.synchronizedList(new ArrayList());
    public static final List canShowUpgradeActs = Collections.synchronizedList(new ArrayList());
    public static int defaultBannerId;
    public static long initDelay = 3000L;
    public static String initProcessName = null;
    public static final Beta instance = new Beta();
    public static int largeIconId;
    public static boolean showInterruptedStrategy = true;
    public static int smallIconId;
    public static File storageDir;
    public static String strNetworkTipsCancelBtn = "\u53D6\u6D88";
    public static String strNetworkTipsConfirmBtn = "\u7EE7\u7EED\u4E0B\u8F7D";
    public static String strNetworkTipsMessage = "\u4F60\u5DF2\u5207\u6362\u5230\u79FB\u52A8\u7F51\u7EDC\uFF0C\u662F\u5426\u7EE7\u7EED\u5F53\u524D\u4E0B\u8F7D\uFF1F";
    public static String strNetworkTipsTitle = "\u7F51\u7EDC\u63D0\u793A";
    public static String strNotificationClickToContinue = "\u7EE7\u7EED\u4E0B\u8F7D";
    public static String strNotificationClickToInstall = "\u70B9\u51FB\u5B89\u88C5";
    public static String strNotificationClickToRetry = "\u70B9\u51FB\u91CD\u8BD5";
    public static String strNotificationClickToView = "\u70B9\u51FB\u67E5\u770B";
    public static String strNotificationDownloadError = "\u4E0B\u8F7D\u5931\u8D25";
    public static String strNotificationDownloadSucc = "\u4E0B\u8F7D\u5B8C\u6210";
    public static String strNotificationDownloading = "\u6B63\u5728\u4E0B\u8F7D";
    public static String strNotificationHaveNewVersion = "\u6709\u65B0\u7248\u672C";
    public static String strToastCheckUpgradeError = "\u68C0\u67E5\u65B0\u7248\u672C\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5";
    public static String strToastCheckingUpgrade = "\u6B63\u5728\u68C0\u67E5\uFF0C\u8BF7\u7A0D\u5019...";
    public static String strToastYourAreTheLatestVersion = "\u4F60\u5DF2\u7ECF\u662F\u6700\u65B0\u7248\u4E86";
    public static String strUpgradeDialogCancelBtn = "\u4E0B\u6B21\u518D\u8BF4";
    public static String strUpgradeDialogContinueBtn = "\u7EE7\u7EED";
    public static String strUpgradeDialogFeatureLabel = "\u66F4\u65B0\u8BF4\u660E";
    public static String strUpgradeDialogFileSizeLabel = "\u5305\u5927\u5C0F";
    public static String strUpgradeDialogInstallBtn = "\u5B89\u88C5";
    public static String strUpgradeDialogRetryBtn = "\u91CD\u8BD5";
    public static String strUpgradeDialogUpdateTimeLabel = "\u66F4\u65B0\u65F6\u95F4";
    public static String strUpgradeDialogUpgradeBtn = "\u7ACB\u5373\u66F4\u65B0";
    public static String strUpgradeDialogVersionLabel = "\u7248\u672C";
    public static int tipsDialogLayoutId;
    public static long upgradeCheckPeriod = 0L;
    public static int upgradeDialogLayoutId;
    public static UILifecycleListener upgradeDialogLifecycleListener;
    public static UpgradeListener upgradeListener;
    public static UpgradeStateListener upgradeStateListener;

    public Beta() {
    }

    public static void cancelDownload() {
        if (c.a.h == null || c.a.h.a[0] != c.a.c || c.a.h.a[1] != c.a.b || ((Boolean)c.a.h.a[2]).booleanValue() != c.a.f)
            c.a.h = new com.tencent.bugly.beta.global.c(14, new Object[] {
                c.a.c, c.a.b, Boolean.valueOf(c.a.f)
            });
        c.a.h.run();
    }

    public static void checkUpgrade() {
        checkUpgrade(true, false);
    }

    public static void checkUpgrade(boolean flag, boolean flag1) {
        if (!TextUtils.isEmpty(d.D.u)) goto _L2; else goto _L1
_L1:
        if (Looper.myLooper() != Looper.getMainLooper()) goto _L4; else goto _L3
_L3:
        af af1 = af.a();
        com.tencent.bugly.beta.global.c c2 = JVM INSTR new #222 <Class com.tencent.bugly.beta.global.c>;
        c2.com.tencent.bugly.beta.global.c(19, new Object[] {
            Boolean.valueOf(flag), Boolean.valueOf(flag1)
        });
        af1.a(c2);
_L10:
        return;
_L4:
        if (TextUtils.isEmpty(d.D.u)) {
            File file = JVM INSTR new #294 <Class File>;
            file.File(d.D.y.applicationInfo.publicSourceDir);
            d.D.u = com.tencent.bugly.proguard.a.b(file, "MD5");
        }
_L2:
        if (flag) goto _L6; else goto _L5
_L5:
        Object obj = d.D;
        if (!TextUtils.isEmpty(d.D.u)) goto _L8; else goto _L7
_L7:
        ag.e("[beta] BetaModule is uninitialized", new Object[0]);
_L6:
        if (!flag) goto _L10; else goto _L9
_L9:
        Exception exception;
        obj = d.D;
        if (!TextUtils.isEmpty(d.D.u))
            break MISSING_BLOCK_LABEL_369;
        ag.e("[beta] BetaModule is uninitialized", new Object[0]);
        if (upgradeStateListener == null)
            break MISSING_BLOCK_LABEL_323;
        obj = JVM INSTR new #331 <Class Handler>;
        ((Handler) (obj)).Handler(Looper.getMainLooper());
        com.tencent.bugly.beta.global.c c3 = JVM INSTR new #222 <Class com.tencent.bugly.beta.global.c>;
        c3.com.tencent.bugly.beta.global.c(18, new Object[] {
            upgradeStateListener, Integer.valueOf(-1), Boolean.valueOf(flag)
        });
        ((Handler) (obj)).post(c3);
          goto _L10
        exception;
        ag.e("get source apk md5 failure!", new Object[0]);
        d.D.u = null;
          goto _L2
_L8:
        exception = (BetaGrayStrategy)com.tencent.bugly.proguard.a.a("st.bch", BetaGrayStrategy.CREATOR);
        if (exception == null)
            break MISSING_BLOCK_LABEL_299;
        if (System.currentTimeMillis() - ((BetaGrayStrategy) (exception)).e <= d.D.c)
            break MISSING_BLOCK_LABEL_310;
        c.a.a(flag, flag1);
          goto _L6
        c.a.a(flag, flag1, 0, null);
          goto _L6
        try {
            Handler handler2 = JVM INSTR new #331 <Class Handler>;
            handler2.Handler(Looper.getMainLooper());
            com.tencent.bugly.beta.global.c c1 = JVM INSTR new #222 <Class com.tencent.bugly.beta.global.c>;
            c1.com.tencent.bugly.beta.global.c(5, new Object[] {
                strToastCheckUpgradeError, Integer.valueOf(0)
            });
            handler2.post(c1);
        }
        // Misplaced declaration of an exception variable
        catch (Exception exception) {
            if (!ag.b(exception))
                exception.printStackTrace();
        }
          goto _L10
label0:
        {
            c.a.a(flag, flag1);
            if (upgradeStateListener == null)
                break label0;
            Handler handler = JVM INSTR new #331 <Class Handler>;
            handler.Handler(Looper.getMainLooper());
            com.tencent.bugly.beta.global.c c4 = JVM INSTR new #222 <Class com.tencent.bugly.beta.global.c>;
            c4.com.tencent.bugly.beta.global.c(18, new Object[] {
                upgradeStateListener, Integer.valueOf(2), Boolean.valueOf(flag)
            });
            handler.post(c4);
        }
          goto _L10
        Handler handler1 = JVM INSTR new #331 <Class Handler>;
        handler1.Handler(Looper.getMainLooper());
        com.tencent.bugly.beta.global.c c5 = JVM INSTR new #222 <Class com.tencent.bugly.beta.global.c>;
        c5.com.tencent.bugly.beta.global.c(5, new Object[] {
            strToastCheckingUpgrade, Integer.valueOf(0)
        });
        handler1.post(c5);
          goto _L10
    }

    public static Beta getInstance() {
        instance.id = 1002;
        return instance;
    }

    public static DownloadTask getStrategyTask() {
        return c.a.c;
    }

    public static UpgradeInfo getUpgradeInfo() {
        c.a.b = c.a.a(null);
        if (c.a.b == null) goto _L2; else goto _L1
_L1:
        Object obj;
        obj = JVM INSTR new #390 <Class UpgradeInfo>;
        ((UpgradeInfo) (obj)).UpgradeInfo(c.a.b.a);
_L4:
        return ((UpgradeInfo) (obj));
        obj;
_L2:
        obj = null;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static void init(Context context, boolean flag) {
        com/tencent/bugly/beta/Beta;
        JVM INSTR monitorenter ;
        boolean flag1;
        ag.a("Beta init start....", new Object[0]);
        Object obj = w.a();
        int l = instance.id;
        int i = d.a + 1;
        d.a = i;
        ((w) (obj)).a(l, i);
        if (TextUtils.isEmpty(initProcessName))
            initProcessName = context.getPackageName();
        ag.a("Beta will init at: %s", new Object[] {
            initProcessName
        });
        obj = com.tencent.bugly.crashreport.common.info.a.a().d;
        ag.a("current process: %s", new Object[] {
            obj
        });
        flag1 = TextUtils.equals(initProcessName, ((CharSequence) (obj)));
        if (flag1) goto _L2; else goto _L1
_L1:
        com/tencent/bugly/beta/Beta;
        JVM INSTR monitorexit ;
        return;
_L2:
        d d1;
        d1 = d.D;
        if (TextUtils.isEmpty(d1.u))
            break MISSING_BLOCK_LABEL_163;
        ag.d("Beta has been initialized [apkMD5 : %s]", new Object[] {
            d1.u
        });
          goto _L1
        context;
        throw context;
        d1.C = flag;
        if (upgradeCheckPeriod >= 0L) goto _L4; else goto _L3
_L3:
        ag.d("upgradeCheckPeriod cannot be negative", new Object[0]);
_L8:
        if (initDelay >= 0L) goto _L6; else goto _L5
_L5:
        ag.d("initDelay cannot be negative", new Object[0]);
_L9:
        int j = smallIconId;
        if (j == 0)
            break MISSING_BLOCK_LABEL_256;
        if (context.getResources().getDrawable(smallIconId) != null) {
            d1.f = smallIconId;
            ag.a("setted smallIconId: %d", new Object[] {
                Integer.valueOf(smallIconId)
            });
        }
_L10:
        j = largeIconId;
        if (j == 0)
            break MISSING_BLOCK_LABEL_305;
        if (context.getResources().getDrawable(largeIconId) != null) {
            d1.g = largeIconId;
            ag.a("setted largeIconId: %d", new Object[] {
                Integer.valueOf(largeIconId)
            });
        }
_L11:
        j = defaultBannerId;
        if (j == 0)
            break MISSING_BLOCK_LABEL_354;
        if (context.getResources().getDrawable(defaultBannerId) != null) {
            d1.h = defaultBannerId;
            ag.a("setted defaultBannerId: %d", new Object[] {
                Integer.valueOf(defaultBannerId)
            });
        }
_L12:
        j = upgradeDialogLayoutId;
        if (j == 0)
            break MISSING_BLOCK_LABEL_403;
        if (context.getResources().getLayout(upgradeDialogLayoutId) != null) {
            d1.i = upgradeDialogLayoutId;
            ag.a("setted upgradeDialogLayoutId: %d", new Object[] {
                Integer.valueOf(upgradeDialogLayoutId)
            });
        }
_L13:
        j = tipsDialogLayoutId;
        if (j == 0)
            break MISSING_BLOCK_LABEL_452;
        if (context.getResources().getLayout(tipsDialogLayoutId) != null) {
            d1.j = tipsDialogLayoutId;
            ag.a("setted tipsDialogLayoutId: %d", new Object[] {
                Integer.valueOf(tipsDialogLayoutId)
            });
        }
_L14:
        Object obj1 = upgradeDialogLifecycleListener;
        if (obj1 == null)
            break MISSING_BLOCK_LABEL_502;
        d1.k = upgradeDialogLifecycleListener;
        obj1 = JVM INSTR new #499 <Class StringBuilder>;
        ((StringBuilder) (obj1)).StringBuilder("setted upgradeDialogLifecycleListener:%s");
        ag.a(((StringBuilder) (obj1)).append(upgradeDialogLifecycleListener).toString(), new Object[0]);
_L15:
        Iterator iterator;
        if (canShowUpgradeActs == null || canShowUpgradeActs.isEmpty())
            break MISSING_BLOCK_LABEL_797;
        iterator = canShowUpgradeActs.iterator();
_L7:
        do {
            if (!iterator.hasNext())
                break MISSING_BLOCK_LABEL_778;
            obj1 = (Class)iterator.next();
        } while (obj1 == null);
        d1.m.add(obj1);
          goto _L7
_L4:
        d1.c = upgradeCheckPeriod;
        ag.a("setted upgradeCheckPeriod: %d", new Object[] {
            Long.valueOf(upgradeCheckPeriod)
        });
          goto _L8
_L6:
        d1.b = initDelay;
        ag.a("setted initDelay: %d", new Object[] {
            Long.valueOf(initDelay)
        });
          goto _L9
        Exception exception;
        exception;
        ag.e("smallIconId is not available:\n %s", new Object[] {
            exception.toString()
        });
          goto _L10
        exception;
        ag.e("largeIconId is not available:\n %s", new Object[] {
            exception.toString()
        });
          goto _L11
        exception;
        ag.e("defaultBannerId is not available:\n %s", new Object[] {
            exception.toString()
        });
          goto _L12
        exception;
        ag.e("upgradeDialogLayoutId is not available:\n %s", new Object[] {
            exception.toString()
        });
          goto _L13
        exception;
        ag.e("tipsDialogLayoutId is not available:\n %s", new Object[] {
            exception.toString()
        });
          goto _L14
        exception;
        ag.e("upgradeDialogLifecycleListener is not available:\n %", new Object[] {
            exception.toString()
        });
          goto _L15
        ag.a("setted canShowUpgradeActs: %s", new Object[] {
            d1.m
        });
        if (canNotShowUpgradeActs == null || canNotShowUpgradeActs.isEmpty())
            break MISSING_BLOCK_LABEL_886;
        iterator = canNotShowUpgradeActs.iterator();
_L16:
        do {
            if (!iterator.hasNext())
                break MISSING_BLOCK_LABEL_867;
            exception = (Class)iterator.next();
        } while (exception == null);
        d1.n.add(exception);
          goto _L16
        ag.a("setted canNotShowUpgradeActs: %s", new Object[] {
            d1.n
        });
        d1.d = autoCheckUpgrade;
        if (d1.d)
            exception = "is opened";
        else
            exception = "is closed";
        ag.a("autoCheckUpgrade %s", new Object[] {
            exception
        });
        d1.e = showInterruptedStrategy;
        if (d1.e)
            exception = "is opened";
        else
            exception = "is closed";
        ag.a("showInterruptedStrategy %s", new Object[] {
            exception
        });
        if (upgradeListener != null)
            exception = "is opened";
        else
            exception = "is closed";
        ag.a("isDIY %s", new Object[] {
            exception
        });
        if (storageDir != null) {
            if (storageDir.exists() || storageDir.mkdirs())
                break MISSING_BLOCK_LABEL_1222;
            ag.a("storageDir is not exists: %s", new Object[] {
                storageDir.getAbsolutePath()
            });
        }
_L17:
        if (d1.o == null)
            d1.o = m.a;
        if (TextUtils.isEmpty(d1.t))
            d1.t = com.tencent.bugly.crashreport.common.info.a.a().e();
        d1.a(context);
        context = (ResBean)com.tencent.bugly.proguard.a.a("rb.bch", ResBean.CREATOR);
        ResBean.a = context;
        if (context != null)
            break MISSING_BLOCK_LABEL_1108;
        context = JVM INSTR new #614 <Class ResBean>;
        context.ResBean();
        ResBean.a = context;
        c.a.d = upgradeListener;
        c.a.e = upgradeStateListener;
        context = af.a();
        exception = JVM INSTR new #222 <Class com.tencent.bugly.beta.global.c>;
        exception.com.tencent.bugly.beta.global.c(1, new Object[0]);
        context.a(exception, d1.b);
        context = w.a();
        int i1 = instance.id;
        int k = d.a - 1;
        d.a = k;
        context.a(i1, k);
        ag.a("Beta init finished...", new Object[0]);
          goto _L1
        d1.l = storageDir;
        ag.a("setted storageDir: %s", new Object[] {
            storageDir.getAbsolutePath()
        });
          goto _L17
    }

    public static void registerDownloadListener(DownloadListener downloadlistener) {
        d.D.p = downloadlistener;
        if (d.D.p != null && c.a.c != null)
            c.a.c.addListener(downloadlistener);
    }

    public static DownloadTask startDownload() {
        if (c.a.g == null || c.a.g.a[0] != c.a.c)
            c.a.g = new com.tencent.bugly.beta.global.c(13, new Object[] {
                c.a.c, c.a.b
            });
        c.a.g.run();
        return c.a.c;
    }

    public static void unregisterDownloadListener() {
        if (c.a.c != null)
            c.a.c.removeListener(d.D.p);
        d.D.p = null;
    }

    public String[] getTables() {
        return (new String[] {
            "dl_1002", "ge_1002", "st_1002"
        });
    }

    public void init(Context context, boolean flag, BuglyStrategy buglystrategy) {
        this;
        JVM INSTR monitorenter ;
        com.tencent.bugly.crashreport.common.info.a.a().c("G10", "1.1.7");
        if (autoInit)
            init(context, flag);
        this;
        JVM INSTR monitorexit ;
        return;
        context;
        throw context;
    }

    public void onDbDowngrade(SQLiteDatabase sqlitedatabase, int i, int j) {
    }

    public void onDbUpgrade(SQLiteDatabase sqlitedatabase, int i, int j) {
_L5:
        if (i >= j) goto _L2; else goto _L1
_L1:
        i;
        JVM INSTR tableswitch 10 10: default 24
    //                   10 30;
           goto _L3 _L4
_L3:
        i++;
          goto _L5
_L4:
        StringBuilder stringbuilder = JVM INSTR new #499 <Class StringBuilder>;
        stringbuilder.StringBuilder();
        stringbuilder.setLength(0);
        stringbuilder.append(" CREATE TABLE  IF NOT EXISTS st_1002").append(" ( _id").append(" integer").append(" , _tp").append(" text").append(" , _tm").append(" int").append(" , _dt").append(" blob").append(",primary key(_id").append(",_tp").append(" )) ");
        ag.c("create %s", new Object[] {
            stringbuilder.toString()
        });
        sqlitedatabase.execSQL(stringbuilder.toString());
_L7:
        Cursor cursor1 = sqlitedatabase.query("t_pf", null, "_id = 1002", null, null, null, null);
        if (cursor1 != null)
            break; /* Loop/switch isn't completed */
        if (cursor1 != null)
            cursor1.close();
_L2:
        return;
        Throwable throwable;
        throwable;
        if (!ag.b(throwable))
            throwable.printStackTrace();
        if (true) goto _L7; else goto _L6
_L6:
        Cursor cursor = cursor1;
        if (!cursor1.moveToNext()) goto _L9; else goto _L8
_L8:
        cursor = cursor1;
        ContentValues contentvalues = JVM INSTR new #739 <Class ContentValues>;
        cursor = cursor1;
        contentvalues.ContentValues();
        cursor = cursor1;
        if (cursor1.getLong(cursor1.getColumnIndex("_id")) <= 0L) goto _L11; else goto _L10
_L10:
        cursor = cursor1;
        contentvalues.put("_id", Long.valueOf(cursor1.getLong(cursor1.getColumnIndex("_id"))));
_L11:
        cursor = cursor1;
        contentvalues.put("_tm", Long.valueOf(cursor1.getLong(cursor1.getColumnIndex("_tm"))));
        cursor = cursor1;
        contentvalues.put("_tp", cursor1.getString(cursor1.getColumnIndex("_tp")));
        cursor = cursor1;
        contentvalues.put("_dt", cursor1.getBlob(cursor1.getColumnIndex("_dt")));
        cursor = cursor1;
        sqlitedatabase.replace("st_1002", null, contentvalues);
        if (true) goto _L6; else goto _L12
_L12:
        Throwable throwable1;
        throwable1;
_L17:
        cursor = cursor1;
        if (ag.b(throwable1)) goto _L14; else goto _L13
_L13:
        cursor = cursor1;
        throwable1.printStackTrace();
_L14:
        if (cursor1 != null)
            cursor1.close();
          goto _L3
_L9:
        if (cursor1 != null)
            cursor1.close();
          goto _L3
        sqlitedatabase;
        cursor = null;
_L16:
        if (cursor != null)
            cursor.close();
        throw sqlitedatabase;
        sqlitedatabase;
        if (true) goto _L16; else goto _L15
_L15:
        throwable1;
        cursor1 = null;
          goto _L17
    }

}
