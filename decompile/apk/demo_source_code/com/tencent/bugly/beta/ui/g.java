// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.beta.ui;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.util.DisplayMetrics;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.tencent.bugly.beta.Beta;
import com.tencent.bugly.beta.UpgradeInfo;
import com.tencent.bugly.beta.download.DownloadListener;
import com.tencent.bugly.beta.download.DownloadTask;
import com.tencent.bugly.beta.global.ResBean;
import com.tencent.bugly.beta.global.a;
import com.tencent.bugly.beta.global.c;
import com.tencent.bugly.beta.global.d;
import com.tencent.bugly.beta.global.e;
import com.tencent.bugly.proguard.ag;
import com.tencent.bugly.proguard.o;
import com.tencent.bugly.proguard.p;
import com.tencent.bugly.proguard.s;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

// Referenced classes of package com.tencent.bugly.beta.ui:
//            a, d, UILifecycleListener

public final class g extends com.tencent.bugly.beta.ui.a {

    public static final g p = new g();
    public s k;
    public DownloadTask l;
    public Runnable m;
    public Runnable n;
    public BitmapDrawable o;
    private TextView q;
    private TextView r;
    private com.tencent.bugly.beta.ui.d s;
    private Bitmap t;
    private UILifecycleListener u;
    private android.view.View.OnClickListener v;
    private android.view.View.OnClickListener w;
    private android.view.View.OnClickListener x;
    private DownloadListener y;

    public g() {
        s = null;
        t = null;
        v = new a(4, new Object[] {
            this
        });
        w = new a(5, new Object[] {
            this
        });
        x = new a(6, new Object[] {
            this
        });
        y = new com.tencent.bugly.beta.download.a(2, new Object[] {
            this
        });
    }

    public final void a(DownloadTask downloadtask) {
        String s1 = "";
        downloadtask.getStatus();
        JVM INSTR tableswitch 0 5: default 44
    //                   0 97
    //                   1 150
    //                   2 109
    //                   3 174
    //                   4 97
    //                   5 162;
           goto _L1 _L2 _L3 _L4 _L5 _L2 _L6
_L5:
        break MISSING_BLOCK_LABEL_174;
_L1:
        android.view.View.OnClickListener onclicklistener;
        onclicklistener = null;
        downloadtask = s1;
_L7:
        if (k.g != 2) {
            String s2 = Beta.strUpgradeDialogCancelBtn;
            android.view.View.OnClickListener onclicklistener1 = x;
            (new Handler(Looper.getMainLooper())).post(new a._cls1(this, s2, onclicklistener1, downloadtask, onclicklistener));
        } else {
            (new Handler(Looper.getMainLooper())).post(new a._cls1(this, null, null, downloadtask, onclicklistener));
        }
        return;
_L2:
        downloadtask = Beta.strUpgradeDialogUpgradeBtn;
        onclicklistener = v;
          goto _L7
_L4:
        downloadtask = String.format(Locale.getDefault(), "%.1f%%", new Object[] {
            Float.valueOf(((float)downloadtask.getSavedLength() / (float)downloadtask.getTotalLength()) * 100F)
        });
        onclicklistener = w;
          goto _L7
_L3:
        downloadtask = Beta.strUpgradeDialogInstallBtn;
        onclicklistener = v;
          goto _L7
_L6:
        downloadtask = Beta.strUpgradeDialogRetryBtn;
        onclicklistener = v;
          goto _L7
        downloadtask = Beta.strUpgradeDialogContinueBtn;
        onclicklistener = v;
          goto _L7
    }

    public final void a(s s1, DownloadTask downloadtask) {
        this;
        JVM INSTR monitorenter ;
        k = s1;
        l = downloadtask;
        l.addListener(y);
        s1 = JVM INSTR new #87  <Class Handler>;
        s1.Handler(Looper.getMainLooper());
        downloadtask = JVM INSTR new #154 <Class c>;
        downloadtask.c(7, new Object[] {
            this
        });
        s1.post(downloadtask);
        this;
        JVM INSTR monitorexit ;
        return;
        s1;
        throw s1;
    }

    public final boolean a(int i) {
        boolean flag;
        if (i == 4) {
            if (k.g != 2) {
                if (n != null)
                    n.run();
                a();
            }
            flag = true;
        } else {
            flag = false;
        }
        return flag;
    }

    public final void c() {
        Object obj1 = null;
        Object obj = null;
        this;
        JVM INSTR monitorenter ;
        if (b == null || k == null) goto _L2; else goto _L1
_L1:
        DownloadTask downloadtask = l;
        if (downloadtask != null) goto _L3; else goto _L2
_L2:
        this;
        JVM INSTR monitorexit ;
        return;
_L3:
        if (j != 0) goto _L5; else goto _L4
_L4:
        if (i == 0) goto _L7; else goto _L6
_L6:
        t = com.tencent.bugly.proguard.a.a(a, 0, new Object[] {
            h.a("IMG_title")
        });
        o = null;
        if (t == null) goto _L9; else goto _L8
_L8:
        obj = t;
_L15:
        d.getViewTreeObserver().removeOnPreDrawListener(s);
        obj1 = JVM INSTR new #217 <Class com.tencent.bugly.beta.ui.d>;
        ((com.tencent.bugly.beta.ui.d) (obj1)).com.tencent.bugly.beta.ui.d(1, new Object[] {
            this, d, obj, Integer.valueOf(i)
        });
        s = ((com.tencent.bugly.beta.ui.d) (obj1));
        d.getViewTreeObserver().addOnPreDrawListener(s);
_L16:
        obj1 = r;
        if (k.b.length() <= 500) goto _L11; else goto _L10
_L10:
        obj = k.b.substring(0, 500);
_L23:
        float f;
        ((TextView) (obj1)).setText(((CharSequence) (obj)));
        obj1 = JVM INSTR new #243 <Class StringBuilder>;
        ((StringBuilder) (obj1)).StringBuilder();
        ((StringBuilder) (obj1)).append(Beta.strUpgradeDialogVersionLabel).append(": ").append(k.e.b).append("\n");
        ((StringBuilder) (obj1)).append(Beta.strUpgradeDialogFileSizeLabel).append(": ");
        f = k.f.c;
        if (f < 1048576F) goto _L13; else goto _L12
_L12:
        ((StringBuilder) (obj1)).append(String.format(Locale.getDefault(), "%.1f", new Object[] {
            Float.valueOf(f / 1048576F)
        }));
        ((StringBuilder) (obj1)).append("M");
_L24:
        ((StringBuilder) (obj1)).append("\n");
        SimpleDateFormat simpledateformat = JVM INSTR new #281 <Class SimpleDateFormat>;
        simpledateformat.SimpleDateFormat("yyyy-MM-dd HH:mm", Locale.CHINA);
        StringBuilder stringbuilder = ((StringBuilder) (obj1)).append(Beta.strUpgradeDialogUpdateTimeLabel).append(": ");
        obj = JVM INSTR new #295 <Class Date>;
        ((Date) (obj)).Date(k.m);
        stringbuilder.append(simpledateformat.format(((Date) (obj))));
        q.setText(((CharSequence) (obj1)));
        a(l);
          goto _L2
        obj;
        if (j != 0)
            ag.e("please confirm your argument: [Beta.upgradeDialogLayoutId] is correct", new Object[0]);
        if (!ag.b(((Throwable) (obj))))
            ((Exception) (obj)).printStackTrace();
          goto _L2
        obj;
        throw obj;
_L9:
        if (d.D.h == 0) goto _L15; else goto _L14
_L14:
        obj = com.tencent.bugly.proguard.a.a(a, 1, new Object[] {
            Integer.valueOf(d.D.h)
        });
          goto _L15
_L7:
        d.setHeight((int)(a.getResources().getDisplayMetrics().density * 42F + 0.5F));
        d.setText(k.a);
          goto _L16
_L5:
        d.setText(k.a);
        if (c == null) goto _L16; else goto _L17
_L17:
        c.setAdjustViewBounds(true);
        if (i == 0) goto _L16; else goto _L18
_L18:
        t = com.tencent.bugly.proguard.a.a(a, 0, new Object[] {
            h.a("IMG_title")
        });
        o = null;
        if (t == null) goto _L20; else goto _L19
_L19:
        obj = t;
_L22:
        c.setImageBitmap(((Bitmap) (obj)));
          goto _L16
_L20:
        obj = obj1;
        if (d.D.h == 0) goto _L22; else goto _L21
_L21:
        obj = com.tencent.bugly.proguard.a.a(a, 1, new Object[] {
            Integer.valueOf(d.D.h)
        });
          goto _L22
_L11:
        obj = k.b;
          goto _L23
_L13:
        if (f < 1024F)
            break MISSING_BLOCK_LABEL_710;
        ((StringBuilder) (obj1)).append(String.format(Locale.getDefault(), "%.1f", new Object[] {
            Float.valueOf(f / 1024F)
        }));
        ((StringBuilder) (obj1)).append("K");
          goto _L24
        ((StringBuilder) (obj1)).append(String.format(Locale.getDefault(), "%.1f", new Object[] {
            Float.valueOf(f)
        }));
        ((StringBuilder) (obj1)).append("B");
          goto _L24
    }

    public final void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        j = d.D.i;
        u = d.D.k;
        i = Integer.parseInt(ResBean.a.a("VAL_style"));
_L1:
        return;
        bundle;
        ag.a(bundle.getMessage(), new Object[0]);
        i = 0;
          goto _L1
    }

    public final View onCreateView(LayoutInflater layoutinflater, ViewGroup viewgroup, Bundle bundle) {
        viewgroup = super.onCreateView(layoutinflater, viewgroup, bundle);
        if (j != 0) {
            q = (TextView)viewgroup.findViewWithTag("beta_upgrade_info");
            r = (TextView)viewgroup.findViewWithTag("beta_upgrade_feature");
        } else {
            bundle = ResBean.a;
            android.widget.LinearLayout.LayoutParams layoutparams = new android.widget.LinearLayout.LayoutParams(-1, -1);
            layoutinflater = new LinearLayout(a);
            layoutinflater.setLayoutParams(layoutparams);
            layoutinflater.setOrientation(1);
            layoutparams = new android.widget.LinearLayout.LayoutParams(-1, -2);
            q = new TextView(a);
            q.setLayoutParams(layoutparams);
            q.setTextColor(Color.parseColor(((ResBean) (bundle)).d));
            q.setTextSize(14F);
            q.setTag("beta_upgrade_info");
            q.setLineSpacing(15F, 1.0F);
            layoutinflater.addView(q);
            TextView textview = new TextView(a);
            textview.setLayoutParams(layoutparams);
            textview.setTextColor(Color.parseColor(((ResBean) (bundle)).c));
            textview.setTextSize(14F);
            textview.setSingleLine();
            textview.setEllipsize(android.text.TextUtils.TruncateAt.END);
            textview.setText(String.valueOf((new StringBuilder()).append(Beta.strUpgradeDialogFeatureLabel).append(": ").toString()));
            textview.setPadding(0, (int)(a.getResources().getDisplayMetrics().density * 8F + 0.5F), 0, 0);
            layoutinflater.addView(textview);
            r = new TextView(a);
            r.setLayoutParams(layoutparams);
            r.setTextColor(Color.parseColor(((ResBean) (bundle)).c));
            r.setTextSize(14F);
            r.setTag("beta_upgrade_feature");
            r.setMaxHeight((int)(a.getResources().getDisplayMetrics().density * 200F + 0.5F));
            r.setLineSpacing(15F, 1.0F);
            layoutinflater.addView(r);
            g.addView(layoutinflater);
        }
        if (u != null) {
            UILifecycleListener uilifecyclelistener = u;
            bundle = getActivity();
            if (k != null)
                layoutinflater = new UpgradeInfo(k);
            else
                layoutinflater = null;
            uilifecyclelistener.onCreate(bundle, viewgroup, layoutinflater);
        }
        return viewgroup;
    }

    public final void onDestroyView() {
        UpgradeInfo upgradeinfo = null;
        super.onDestroyView();
        q = null;
        r = null;
        this;
        JVM INSTR monitorenter ;
        s = null;
        this;
        JVM INSTR monitorexit ;
        if (o != null)
            o.setCallback(null);
        if (u != null) {
            UILifecycleListener uilifecyclelistener = u;
            Context context = a;
            View view = b;
            if (k != null) {
                upgradeinfo = JVM INSTR new #414 <Class UpgradeInfo>;
                upgradeinfo.UpgradeInfo(k);
            }
            uilifecyclelistener.onDestroy(context, view, upgradeinfo);
        }
_L2:
        return;
        Object obj;
        obj;
        this;
        JVM INSTR monitorexit ;
        throw obj;
        obj;
        if (true) goto _L2; else goto _L1
_L1:
    }

    public final void onPause() {
        super.onPause();
        if (y != null && l != null)
            l.removeListener(y);
        if (u != null) {
            UILifecycleListener uilifecyclelistener = u;
            Context context = a;
            View view = b;
            UpgradeInfo upgradeinfo;
            if (k != null)
                upgradeinfo = new UpgradeInfo(k);
            else
                upgradeinfo = null;
            uilifecyclelistener.onPause(context, view, upgradeinfo);
        }
    }

    public final void onResume() {
        super.onResume();
        if (y != null && l != null)
            l.addListener(y);
        c();
        if (i != 0 && t == null)
            e.a.a(new c(7, new Object[] {
                this
            }));
        if (u != null) {
            UILifecycleListener uilifecyclelistener = u;
            Context context = a;
            View view = b;
            UpgradeInfo upgradeinfo;
            if (k != null)
                upgradeinfo = new UpgradeInfo(k);
            else
                upgradeinfo = null;
            uilifecyclelistener.onResume(context, view, upgradeinfo);
        }
    }

    public final void onStart() {
        super.onStart();
        if (u != null) {
            UILifecycleListener uilifecyclelistener = u;
            Context context = a;
            View view = b;
            UpgradeInfo upgradeinfo;
            if (k != null)
                upgradeinfo = new UpgradeInfo(k);
            else
                upgradeinfo = null;
            uilifecyclelistener.onStart(context, view, upgradeinfo);
        }
    }

    public final void onStop() {
        super.onStop();
        if (u != null) {
            UILifecycleListener uilifecyclelistener = u;
            Context context = a;
            View view = b;
            UpgradeInfo upgradeinfo;
            if (k != null)
                upgradeinfo = new UpgradeInfo(k);
            else
                upgradeinfo = null;
            uilifecyclelistener.onStop(context, view, upgradeinfo);
        }
    }

}
