// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.beta.ui;

import android.app.ActivityManager;
import android.content.ComponentName;
import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.support.v4.app.FragmentActivity;
import android.text.TextUtils;
import com.tencent.bugly.beta.global.d;
import com.tencent.bugly.beta.upgrade.BetaGrayStrategy;
import com.tencent.bugly.beta.upgrade.c;
import com.tencent.bugly.crashreport.common.info.a;
import com.tencent.bugly.proguard.ag;
import com.tencent.bugly.proguard.s;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

// Referenced classes of package com.tencent.bugly.beta.ui:
//            c, b, g, BetaActivity

public final class f {

    public static final Map a = new ConcurrentHashMap();
    private static Map b = new ConcurrentHashMap();
    private static Map c = new ConcurrentHashMap();
    private static com.tencent.bugly.beta.global.c d;
    private static Handler e = null;

    public static String a() {
        if (android.os.Build.VERSION.SDK_INT < 14) goto _L2; else goto _L1
_L1:
        Object obj = com.tencent.bugly.crashreport.common.info.a.a().p;
_L3:
        return ((String) (obj));
_L2:
        obj = (ActivityManager)d.D.r.getSystemService("activity");
        if (obj == null)
            break MISSING_BLOCK_LABEL_86;
        obj = ((ActivityManager) (obj)).getRunningTasks(1);
        if (obj == null)
            break MISSING_BLOCK_LABEL_86;
        if (((List) (obj)).isEmpty())
            break MISSING_BLOCK_LABEL_86;
        obj = ((android.app.ActivityManager.RunningTaskInfo)((List) (obj)).get(0)).topActivity.getClassName();
          goto _L3
        obj;
        ag.e("\u65E0\u6CD5\u83B7\u53D6Activity\u4FE1\u606F\uFF0C\u8BF7\u5728AndroidManifest.xml\u4E2D\u6DFB\u52A0GET_TASKS\u6743\u9650\uFF1A\n<uses-permission android:name=\"android.permission.GET_TASKS\" />\n", new Object[0]);
_L4:
        obj = null;
          goto _L3
        Exception exception;
        exception;
        if (!ag.b(exception))
            exception.printStackTrace();
          goto _L4
    }

    public static void a(b b1, boolean flag) {
        com/tencent/bugly/beta/ui/f;
        JVM INSTR monitorenter ;
        if (android.os.Build.VERSION.SDK_INT < 14) goto _L2; else goto _L1
_L1:
        a(b1, flag, false, 5000L);
_L4:
        com/tencent/bugly/beta/ui/f;
        JVM INSTR monitorexit ;
        return;
_L2:
        ActivityManager activitymanager = (ActivityManager)d.D.r.getSystemService("activity");
        if (activitymanager == null) goto _L4; else goto _L3
_L3:
        activitymanager.getRunningTasks(1);
        a(b1, flag, false, 5000L);
          goto _L4
        SecurityException securityexception;
        securityexception;
        if (!flag)
            break MISSING_BLOCK_LABEL_82;
        a(b1, flag, true, 0L);
          goto _L4
        b1;
        throw b1;
        ag.e("\u65E0\u6CD5\u83B7\u53D6GET_TASK\u6743\u9650\uFF0C\u5C06\u5728\u901A\u77E5\u680F\u63D0\u9192\u5347\u7EA7\uFF0C\u5982\u9700\u5F39\u7A97\u63D0\u9192\uFF0C\u8BF7\u5728AndroidManifest.xml\u4E2D\u6DFB\u52A0GET_TASKS\u6743\u9650\uFF1A\n<uses-permission android:name=\"android.permission.GET_TASKS\" />\n", new Object[0]);
        if (c.a.b != null && c.a.b.a != null)
            com.tencent.bugly.beta.ui.c.a.a(c.a.b.a, b1);
          goto _L4
    }

    public static void a(b b1, boolean flag, boolean flag1, long l) {
        com/tencent/bugly/beta/ui/f;
        JVM INSTR monitorenter ;
        if (b1 == null) goto _L2; else goto _L1
_L1:
        boolean flag2 = b1.b();
        if (!flag2) goto _L3; else goto _L2
_L2:
        com/tencent/bugly/beta/ui/f;
        JVM INSTR monitorexit ;
        return;
_L3:
        int i;
        i = b1.hashCode();
        if (e == null) {
            Handler handler = JVM INSTR new #147 <Class Handler>;
            handler.Handler(Looper.getMainLooper());
            e = handler;
        }
        if (!(b1 instanceof g))
            break MISSING_BLOCK_LABEL_290;
        e.removeCallbacks(d);
        if (((g)b1).k.g == 2) {
            com.tencent.bugly.beta.global.c c1 = JVM INSTR new #175 <Class com.tencent.bugly.beta.global.c>;
            c1.com.tencent.bugly.beta.global.c(15, new Object[] {
                b1, Boolean.valueOf(flag), Boolean.valueOf(flag1), Long.valueOf(l), e
            });
            d = c1;
            e.postDelayed(d, 3000L);
        }
        if (flag)
            break MISSING_BLOCK_LABEL_268;
        com.tencent.bugly.beta.global.c c3;
        if (b())
            break MISSING_BLOCK_LABEL_268;
        c3 = (com.tencent.bugly.beta.global.c)b.get(Integer.valueOf(i));
        com.tencent.bugly.beta.global.c c2;
        c2 = c3;
        if (c3 != null)
            break MISSING_BLOCK_LABEL_241;
        c2 = JVM INSTR new #175 <Class com.tencent.bugly.beta.global.c>;
        c2.com.tencent.bugly.beta.global.c(11, new Object[] {
            b1, Boolean.valueOf(flag), Boolean.valueOf(flag1), Long.valueOf(l)
        });
        b.put(Integer.valueOf(i), c2);
        e.removeCallbacks(c2);
        e.postDelayed(c2, l);
          goto _L2
        b1;
        throw b1;
        e.removeCallbacks((Runnable)b.remove(Integer.valueOf(i)));
        if (flag1)
            break MISSING_BLOCK_LABEL_411;
        if (com.tencent.bugly.proguard.a.b(d.D.r))
            break MISSING_BLOCK_LABEL_411;
        c3 = (com.tencent.bugly.beta.global.c)c.get(Integer.valueOf(i));
        c2 = c3;
        if (c3 != null)
            break MISSING_BLOCK_LABEL_390;
        c2 = JVM INSTR new #175 <Class com.tencent.bugly.beta.global.c>;
        c2.com.tencent.bugly.beta.global.c(11, new Object[] {
            b1, Boolean.valueOf(flag), Boolean.valueOf(flag1), Long.valueOf(l)
        });
        c.put(Integer.valueOf(i), c2);
        e.removeCallbacks(c2);
        e.postDelayed(c2, l);
          goto _L2
        e.removeCallbacks((Runnable)c.remove(Integer.valueOf(i)));
        c2 = JVM INSTR new #175 <Class com.tencent.bugly.beta.global.c>;
        c2.com.tencent.bugly.beta.global.c(17, new Object[] {
            a, Integer.valueOf(i), b1
        });
        b1 = b1.getActivity();
        if (b1 == null)
            break MISSING_BLOCK_LABEL_514;
        if (!(b1 instanceof BetaActivity))
            break MISSING_BLOCK_LABEL_499;
        ((BetaActivity)b1).onDestroyRunnable = c2;
_L4:
        b1.finish();
          goto _L2
        e.postDelayed(c2, 400L);
          goto _L4
        c2.run();
          goto _L2
    }

    private static boolean b() {
        com/tencent/bugly/beta/ui/f;
        JVM INSTR monitorenter ;
        String s1 = a();
        Object obj = Class.forName(s1);
_L9:
        if (d.D.m.isEmpty()) goto _L2; else goto _L1
_L1:
        if (s1 == null) goto _L4; else goto _L3
_L3:
        Iterator iterator = d.D.m.iterator();
_L7:
        if (!iterator.hasNext()) goto _L4; else goto _L5
_L5:
        Class class1;
        class1 = (Class)iterator.next();
        if (TextUtils.equals(class1.getName(), s1))
            break; /* Loop/switch isn't completed */
        if (obj == null) goto _L7; else goto _L6
_L6:
        boolean flag = class1.isAssignableFrom(((Class) (obj)));
        if (!flag) goto _L7; else goto _L8
_L8:
        flag = true;
_L10:
        com/tencent/bugly/beta/ui/f;
        JVM INSTR monitorexit ;
        return flag;
        obj;
        ((ClassNotFoundException) (obj)).printStackTrace();
        obj = null;
          goto _L9
_L4:
        flag = false;
          goto _L10
_L2:
        if (d.D.n.isEmpty())
            break MISSING_BLOCK_LABEL_198;
        if (s1 == null)
            break MISSING_BLOCK_LABEL_193;
        iterator = d.D.n.iterator();
_L12:
        do {
            if (!iterator.hasNext())
                break MISSING_BLOCK_LABEL_193;
            class1 = (Class)iterator.next();
            if (TextUtils.equals(class1.getName(), s1))
                break; /* Loop/switch isn't completed */
        } while (obj == null);
        flag = class1.isAssignableFrom(((Class) (obj)));
        if (!flag) goto _L12; else goto _L11
_L11:
        flag = false;
          goto _L10
        flag = true;
          goto _L10
        flag = true;
          goto _L10
        Exception exception;
        exception;
        throw exception;
          goto _L9
    }

}
