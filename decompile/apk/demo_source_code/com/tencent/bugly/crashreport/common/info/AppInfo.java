// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.crashreport.common.info;

import android.app.ActivityManager;
import android.content.Context;
import android.content.pm.*;
import android.os.Bundle;
import android.os.Process;
import com.tencent.bugly.proguard.a;
import com.tencent.bugly.proguard.ag;
import java.io.ByteArrayInputStream;
import java.io.FileReader;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.Principal;
import java.security.cert.*;
import java.util.*;

public class AppInfo {

    private static ActivityManager a;

    public AppInfo() {
    }

    public static String a(int i) {
        int j = 0;
        FileReader filereader;
        filereader = JVM INSTR new #29  <Class FileReader>;
        StringBuilder stringbuilder = JVM INSTR new #31  <Class StringBuilder>;
        stringbuilder.StringBuilder("/proc/");
        filereader.FileReader(stringbuilder.append(i).append("/cmdline").toString());
        Object obj = filereader;
        char ac[] = new char[512];
        obj = filereader;
        filereader.read(ac);
_L2:
        obj = filereader;
        if (j >= ac.length || ac[j] == 0)
            break; /* Loop/switch isn't completed */
        j++;
        if (true) goto _L2; else goto _L1
_L1:
        obj = filereader;
        String s1 = JVM INSTR new #14  <Class String>;
        obj = filereader;
        s1.String(ac);
        obj = filereader;
        String s = s1.substring(0, j);
        Object obj1;
        Throwable throwable1;
        obj = s;
        try {
            filereader.close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj1) { }
        return ((String) (obj));
        throwable1;
        filereader = null;
_L6:
        obj = filereader;
        if (ag.a(throwable1))
            break MISSING_BLOCK_LABEL_130;
        obj = filereader;
        throwable1.printStackTrace();
        throwable1 = String.valueOf(i);
        obj = throwable1;
        if (filereader == null)
            break MISSING_BLOCK_LABEL_107;
        try {
            filereader.close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            obj = throwable1;
            break MISSING_BLOCK_LABEL_107;
        }
        obj = throwable1;
        break MISSING_BLOCK_LABEL_107;
        obj1;
        obj = null;
_L4:
        if (obj != null)
            try {
                ((FileReader) (obj)).close();
            }
            catch (Throwable throwable) { }
        throw obj1;
        obj1;
        if (true) goto _L4; else goto _L3
_L3:
        throwable1;
        if (true) goto _L6; else goto _L5
_L5:
    }

    public static String a(Context context) {
        if (context == null)
            context = null;
        else
            try {
                context = context.getPackageName();
            }
            // Misplaced declaration of an exception variable
            catch (Context context) {
                if (!ag.a(context))
                    context.printStackTrace();
                context = "fail";
            }
        return context;
    }

    public static String a(PackageInfo packageinfo) {
        if (packageinfo == null)
            packageinfo = null;
        else
            try {
                packageinfo = packageinfo.versionName;
            }
            // Misplaced declaration of an exception variable
            catch (PackageInfo packageinfo) {
                if (!ag.a(packageinfo))
                    packageinfo.printStackTrace();
                packageinfo = "fail";
            }
        return packageinfo;
    }

    private static String a(byte abyte0[]) {
        StringBuilder stringbuilder = new StringBuilder();
        if (abyte0 == null || abyte0.length <= 0) goto _L2; else goto _L1
_L1:
        Object obj1 = CertificateFactory.getInstance("X.509");
        if (obj1 != null) goto _L4; else goto _L3
_L3:
        abyte0 = null;
_L5:
        return abyte0;
_L4:
        ByteArrayInputStream bytearrayinputstream = JVM INSTR new #104 <Class ByteArrayInputStream>;
        bytearrayinputstream.ByteArrayInputStream(abyte0);
        abyte0 = (X509Certificate)((CertificateFactory) (obj1)).generateCertificate(bytearrayinputstream);
label0:
        {
            if (abyte0 != null)
                break label0;
            abyte0 = null;
        }
          goto _L5
        Object obj;
        stringbuilder.append("Issuer|");
        obj = abyte0.getIssuerDN();
        if (obj == null) goto _L7; else goto _L6
_L6:
        stringbuilder.append(((Principal) (obj)).toString());
_L17:
        stringbuilder.append("\n");
        stringbuilder.append("SerialNumber|");
        obj1 = abyte0.getSerialNumber();
        if (obj == null) goto _L9; else goto _L8
_L8:
        stringbuilder.append(((BigInteger) (obj1)).toString(16));
_L18:
        stringbuilder.append("\n");
        stringbuilder.append("NotBefore|");
        obj1 = abyte0.getNotBefore();
        if (obj == null) goto _L11; else goto _L10
_L10:
        stringbuilder.append(((Date) (obj1)).toString());
_L19:
        stringbuilder.append("\n");
        stringbuilder.append("NotAfter|");
        obj1 = abyte0.getNotAfter();
        if (obj == null) goto _L13; else goto _L12
_L12:
        stringbuilder.append(((Date) (obj1)).toString());
_L20:
        stringbuilder.append("\n");
        stringbuilder.append("SHA1|");
        obj = com.tencent.bugly.proguard.a.b(MessageDigest.getInstance("SHA1").digest(abyte0.getEncoded()));
        if (obj == null) goto _L15; else goto _L14
_L14:
        if (((String) (obj)).length() <= 0) goto _L15; else goto _L16
_L16:
        stringbuilder.append(((String) (obj)).toString());
_L21:
        stringbuilder.append("\n");
        stringbuilder.append("MD5|");
        abyte0 = com.tencent.bugly.proguard.a.b(MessageDigest.getInstance("MD5").digest(abyte0.getEncoded()));
        if (abyte0 == null)
            break MISSING_BLOCK_LABEL_376;
        if (abyte0.length() <= 0)
            break MISSING_BLOCK_LABEL_376;
        stringbuilder.append(abyte0.toString());
_L2:
        if (stringbuilder.length() == 0)
            abyte0 = "unknown";
        else
            abyte0 = stringbuilder.toString();
          goto _L5
_L7:
        stringbuilder.append("unknown");
          goto _L17
_L9:
        stringbuilder.append("unknown");
          goto _L18
_L11:
        stringbuilder.append("unknown");
          goto _L19
_L13:
        stringbuilder.append("unknown");
          goto _L20
_L15:
        stringbuilder.append("unknown");
          goto _L21
        try {
            stringbuilder.append("unknown");
        }
        // Misplaced declaration of an exception variable
        catch (byte abyte0[]) {
            if (!ag.a(abyte0))
                abyte0.printStackTrace();
        }
        // Misplaced declaration of an exception variable
        catch (byte abyte0[]) {
            if (!ag.a(abyte0))
                abyte0.printStackTrace();
        }
          goto _L2
    }

    public static List a(Map map) {
        if (map != null) goto _L2; else goto _L1
_L1:
        map = null;
_L6:
        return map;
_L2:
        map = (String)map.get("BUGLY_DISABLE");
        if (map == null)
            break MISSING_BLOCK_LABEL_31;
        if (map.length() != 0)
            break MISSING_BLOCK_LABEL_36;
        map = null;
        continue; /* Loop/switch isn't completed */
        map = map.split(",");
        int i = 0;
_L4:
        if (i >= map.length)
            break; /* Loop/switch isn't completed */
        map[i] = map[i].trim();
        i++;
        if (true) goto _L4; else goto _L3
_L3:
        try {
            map = Arrays.asList(map);
        }
        // Misplaced declaration of an exception variable
        catch (Map map) {
            if (!ag.a(map))
                map.printStackTrace();
            map = null;
        }
        if (true) goto _L6; else goto _L5
_L5:
    }

    public static boolean a(Context context, String s) {
        boolean flag;
        boolean flag1;
        flag1 = false;
        flag = flag1;
        if (context == null) goto _L2; else goto _L1
_L1:
        flag = flag1;
        if (s == null) goto _L2; else goto _L3
_L3:
        if (s.trim().length() > 0) goto _L5; else goto _L4
_L4:
        flag = flag1;
_L2:
        return flag;
_L5:
        context = context.getPackageManager().getPackageInfo(context.getPackageName(), 4096).requestedPermissions;
        flag = flag1;
        if (context == null)
            continue; /* Loop/switch isn't completed */
        int j = context.length;
        int i = 0;
_L7:
        flag = flag1;
        if (i >= j)
            continue; /* Loop/switch isn't completed */
        flag = s.equals(context[i]);
        if (flag) {
            flag = true;
            continue; /* Loop/switch isn't completed */
        }
        i++;
        if (true) goto _L7; else goto _L6
_L6:
        context;
        flag = flag1;
        if (!ag.a(context)) {
            context.printStackTrace();
            flag = flag1;
        }
        if (true) goto _L2; else goto _L8
_L8:
    }

    public static PackageInfo b(Context context) {
        try {
            String s = a(context);
            context = context.getPackageManager().getPackageInfo(s, 0);
        }
        // Misplaced declaration of an exception variable
        catch (Context context) {
            if (!ag.a(context))
                context.printStackTrace();
            context = null;
        }
        return context;
    }

    public static String b(PackageInfo packageinfo) {
        if (packageinfo == null)
            packageinfo = null;
        else
            try {
                packageinfo = Integer.toString(packageinfo.versionCode);
            }
            // Misplaced declaration of an exception variable
            catch (PackageInfo packageinfo) {
                if (!ag.a(packageinfo))
                    packageinfo.printStackTrace();
                packageinfo = "fail";
            }
        return packageinfo;
    }

    public static String c(Context context) {
        try {
            context = a(Process.myPid());
        }
        // Misplaced declaration of an exception variable
        catch (Context context) {
            context.printStackTrace();
            context = null;
        }
        return context;
    }

    public static Map d(Context context) {
        Object obj = null;
        if (context != null) goto _L2; else goto _L1
_L1:
        context = obj;
_L4:
        return context;
_L2:
        HashMap hashmap;
        Object obj1;
        context = context.getPackageManager().getApplicationInfo(context.getPackageName(), 128);
        if (((ApplicationInfo) (context)).metaData == null)
            break MISSING_BLOCK_LABEL_226;
        hashmap = JVM INSTR new #254 <Class HashMap>;
        hashmap.HashMap();
        obj1 = ((ApplicationInfo) (context)).metaData.get("BUGLY_DISABLE");
        if (obj1 == null)
            break MISSING_BLOCK_LABEL_65;
        hashmap.put("BUGLY_DISABLE", obj1.toString());
        obj1 = ((ApplicationInfo) (context)).metaData.get("BUGLY_APPID");
        if (obj1 == null)
            break MISSING_BLOCK_LABEL_92;
        hashmap.put("BUGLY_APPID", obj1.toString());
        obj1 = ((ApplicationInfo) (context)).metaData.get("BUGLY_APP_CHANNEL");
        if (obj1 == null)
            break MISSING_BLOCK_LABEL_119;
        hashmap.put("BUGLY_APP_CHANNEL", obj1.toString());
        obj1 = ((ApplicationInfo) (context)).metaData.get("BUGLY_APP_VERSION");
        if (obj1 == null)
            break MISSING_BLOCK_LABEL_146;
        hashmap.put("BUGLY_APP_VERSION", obj1.toString());
        obj1 = ((ApplicationInfo) (context)).metaData.get("BUGLY_ENABLE_DEBUG");
        if (obj1 == null)
            break MISSING_BLOCK_LABEL_173;
        hashmap.put("BUGLY_ENABLE_DEBUG", obj1.toString());
        obj1 = ((ApplicationInfo) (context)).metaData.get("com.tencent.rdm.uuid");
        context = hashmap;
        if (obj1 == null)
            continue; /* Loop/switch isn't completed */
        try {
            hashmap.put("com.tencent.rdm.uuid", obj1.toString());
        }
        catch (Throwable throwable) {
            context = obj;
            if (!ag.a(throwable)) {
                throwable.printStackTrace();
                context = obj;
            }
            continue; /* Loop/switch isn't completed */
        }
        context = hashmap;
        continue; /* Loop/switch isn't completed */
        context = null;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static String e(Context context) {
        Object obj;
        Object obj1;
        obj = null;
        obj1 = a(context);
        if (obj1 != null) goto _L2; else goto _L1
_L1:
        context = obj;
_L4:
        return context;
_L2:
        obj1 = context.getPackageManager().getPackageInfo(((String) (obj1)), 64);
        context = obj;
        if (obj1 != null) {
            Signature asignature[] = ((PackageInfo) (obj1)).signatures;
            context = obj;
            if (asignature != null) {
                context = obj;
                if (asignature.length != 0)
                    context = a(((PackageInfo) (obj1)).signatures[0].toByteArray());
            }
        }
        continue; /* Loop/switch isn't completed */
        context;
        context = obj;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static boolean f(Context context) {
        if (context != null) goto _L2; else goto _L1
_L1:
        boolean flag = false;
_L4:
        return flag;
_L2:
        if (a == null)
            a = (ActivityManager)context.getSystemService("activity");
        context = JVM INSTR new #303 <Class android.app.ActivityManager$MemoryInfo>;
        context.android.app.ActivityManager.MemoryInfo();
        a.getMemoryInfo(context);
        if (!((android.app.ActivityManager.MemoryInfo) (context)).lowMemory)
            break MISSING_BLOCK_LABEL_65;
        ag.c("Memory is low.", new Object[0]);
        flag = true;
        continue; /* Loop/switch isn't completed */
        flag = false;
        continue; /* Loop/switch isn't completed */
        context;
        if (!ag.a(context))
            context.printStackTrace();
        flag = false;
        if (true) goto _L4; else goto _L3
_L3:
    }

    static  {
        "@buglyAllChannel@".split(",");
        "@buglyAllChannelPriority@".split(",");
    }
}
