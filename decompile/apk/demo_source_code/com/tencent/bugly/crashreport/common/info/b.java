// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.crashreport.common.info;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.*;
import android.telephony.TelephonyManager;
import com.tencent.bugly.proguard.a;
import com.tencent.bugly.proguard.ag;
import java.io.*;
import java.util.*;

// Referenced classes of package com.tencent.bugly.crashreport.common.info:
//            AppInfo

public final class b {

    private static String a = null;
    private static String b = null;

    public static String a() {
        String s;
        try {
            s = Build.MODEL;
        }
        catch (Throwable throwable) {
            if (!ag.a(throwable))
                throwable.printStackTrace();
            throwable = "fail";
        }
        return s;
    }

    public static String a(Context context) {
        if (com.tencent.bugly.crashreport.common.info.AppInfo.a(context, "android.permission.READ_PHONE_STATE")) goto _L2; else goto _L1
_L1:
        ag.d("no READ_PHONE_STATE permission to get IMEI", new Object[0]);
        context = "null";
_L4:
        return context;
_L2:
        if (context == null) {
            context = null;
            continue; /* Loop/switch isn't completed */
        }
        String s = ((TelephonyManager)context.getSystemService("phone")).getDeviceId();
        context = s;
        if (s == null)
            continue; /* Loop/switch isn't completed */
        try {
            context = s.toLowerCase();
            continue; /* Loop/switch isn't completed */
        }
        // Misplaced declaration of an exception variable
        catch (Context context) {
            context = s;
        }
        break MISSING_BLOCK_LABEL_63;
        context;
        context = null;
        ag.a(ag.a, new Object[] {
            "failed to get IMEI"
        });
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static String b() {
        String s;
        try {
            s = android.os.Build.VERSION.RELEASE;
        }
        catch (Throwable throwable) {
            if (!ag.a(throwable))
                throwable.printStackTrace();
            throwable = "fail";
        }
        return s;
    }

    public static String b(Context context) {
        if (com.tencent.bugly.crashreport.common.info.AppInfo.a(context, "android.permission.READ_PHONE_STATE")) goto _L2; else goto _L1
_L1:
        ag.d("no READ_PHONE_STATE permission to get IMSI", new Object[0]);
        context = "null";
_L4:
        return context;
_L2:
        if (context == null) {
            context = null;
            continue; /* Loop/switch isn't completed */
        }
        String s = ((TelephonyManager)context.getSystemService("phone")).getSubscriberId();
        context = s;
        if (s == null)
            continue; /* Loop/switch isn't completed */
        try {
            context = s.toLowerCase();
            continue; /* Loop/switch isn't completed */
        }
        // Misplaced declaration of an exception variable
        catch (Context context) {
            context = s;
        }
        break MISSING_BLOCK_LABEL_63;
        context;
        context = null;
        ag.a(ag.a, new Object[] {
            "failed to get IMSI"
        });
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static int c() {
        int i1;
        try {
            i1 = android.os.Build.VERSION.SDK_INT;
        }
        catch (Throwable throwable) {
            if (!ag.a(throwable))
                throwable.printStackTrace();
            i1 = -1;
        }
        return i1;
    }

    public static String c(Context context) {
        Object obj = "fail";
        if (context != null) goto _L2; else goto _L1
_L1:
        context = ((Context) (obj));
_L4:
        return context;
_L2:
        context = android.provider.Settings.Secure.getString(context.getContentResolver(), "android_id");
        if (context == null) {
            context = "null";
            continue; /* Loop/switch isn't completed */
        }
        obj = context.toLowerCase();
        context = ((Context) (obj));
        continue; /* Loop/switch isn't completed */
        Throwable throwable;
        throwable;
_L5:
        context = ((Context) (obj));
        if (!ag.a(throwable)) {
            ag.a(ag.a, new Object[] {
                "failed to get Android ID"
            });
            context = ((Context) (obj));
        }
        if (true) goto _L4; else goto _L3
_L3:
        throwable;
        obj = context;
          goto _L5
    }

    public static String d() {
        String s = q();
        Object obj;
        obj = s;
        if (s != null)
            break MISSING_BLOCK_LABEL_16;
        obj = System.getProperty("os.arch");
        StringBuilder stringbuilder = JVM INSTR new #116 <Class StringBuilder>;
        stringbuilder.StringBuilder();
        obj = stringbuilder.append(((String) (obj))).toString();
_L2:
        return ((String) (obj));
        Throwable throwable;
        throwable;
        if (!ag.a(throwable))
            throwable.printStackTrace();
        throwable = "fail";
        if (true) goto _L2; else goto _L1
_L1:
    }

    public static String d(Context context) {
        String s = "fail";
        if (context != null) goto _L2; else goto _L1
_L1:
        context = s;
_L4:
        return context;
_L2:
        Object obj = s;
        context = (WifiManager)context.getSystemService("wifi");
        if (context == null)
            break MISSING_BLOCK_LABEL_84;
        obj = s;
        context = context.getConnectionInfo();
        if (context == null)
            break MISSING_BLOCK_LABEL_84;
        obj = s;
        context = context.getMacAddress();
        if (context == null) {
            context = "null";
        } else {
            obj = context;
            try {
                context = context.toLowerCase();
            }
            catch (Throwable throwable) {
                context = ((Context) (obj));
                if (!ag.a(throwable)) {
                    throwable.printStackTrace();
                    context = ((Context) (obj));
                }
            }
        }
        continue; /* Loop/switch isn't completed */
        context = "fail";
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static long e() {
        long l2 = -1L;
        int i1;
        long l1;
        File file = Environment.getDataDirectory();
        StatFs statfs = JVM INSTR new #151 <Class StatFs>;
        statfs.StatFs(file.getPath());
        l1 = statfs.getBlockSize();
        i1 = statfs.getBlockCount();
        l1 = (long)i1 * l1;
_L2:
        return l1;
        Throwable throwable;
        throwable;
        l1 = l2;
        if (!ag.a(throwable)) {
            throwable.printStackTrace();
            l1 = l2;
        }
        if (true) goto _L2; else goto _L1
_L1:
    }

    public static String e(Context context) {
        String s = "unknown";
        NetworkInfo networkinfo = ((ConnectivityManager)context.getSystemService("connectivity")).getActiveNetworkInfo();
        if (networkinfo != null) goto _L2; else goto _L1
_L1:
        context = null;
_L9:
        return context;
_L2:
        if (networkinfo.getType() != 1) goto _L4; else goto _L3
_L3:
        context = "WIFI";
          goto _L5
_L4:
        if (networkinfo.getType() != 0)
            break MISSING_BLOCK_LABEL_276;
        context = (TelephonyManager)context.getSystemService("phone");
        if (context == null)
            break MISSING_BLOCK_LABEL_276;
        int i1 = context.getNetworkType();
        switch (i1) {
        default:
            try {
                context = JVM INSTR new #116 <Class StringBuilder>;
                context.StringBuilder("MOBILE(");
                context = context.append(i1).append(")").toString();
            }
            catch (Exception exception) {
                context = s;
                if (!ag.a(exception)) {
                    exception.printStackTrace();
                    context = s;
                }
            }
            break;

        case 1: // '\001'
            context = "GPRS";
            break;

        case 2: // '\002'
            context = "EDGE";
            break;

        case 3: // '\003'
            context = "UMTS";
            break;

        case 8: // '\b'
            context = "HSDPA";
            break;

        case 9: // '\t'
            context = "HSUPA";
            break;

        case 10: // '\n'
            context = "HSPA";
            break;

        case 4: // '\004'
            context = "CDMA";
            break;

        case 5: // '\005'
            context = "EVDO_0";
            break;

        case 6: // '\006'
            context = "EVDO_A";
            break;

        case 7: // '\007'
            context = "1xRTT";
            break;

        case 11: // '\013'
            context = "iDen";
            break;

        case 12: // '\f'
            context = "EVDO_B";
            break;

        case 13: // '\r'
            context = "LTE";
            break;

        case 14: // '\016'
            context = "eHRPD";
            break;

        case 15: // '\017'
            context = "HSPA+";
            break;
        }
        continue; /* Loop/switch isn't completed */
        if (true) goto _L5; else goto _L6
_L5:
        if (true) goto _L7; else goto _L6
_L7:
        if (true)
            continue; /* Loop/switch isn't completed */
_L6:
        context = "unknown";
        if (true) goto _L9; else goto _L8
_L8:
    }

    public static long f() {
        long l2 = -1L;
        int i1;
        long l1;
        File file = Environment.getDataDirectory();
        StatFs statfs = JVM INSTR new #151 <Class StatFs>;
        statfs.StatFs(file.getPath());
        l1 = statfs.getBlockSize();
        i1 = statfs.getAvailableBlocks();
        l1 = (long)i1 * l1;
_L2:
        return l1;
        Throwable throwable;
        throwable;
        l1 = l2;
        if (!ag.a(throwable)) {
            throwable.printStackTrace();
            l1 = l2;
        }
        if (true) goto _L2; else goto _L1
_L1:
    }

    public static String f(Context context) {
        boolean flag11 = false;
        String s = com.tencent.bugly.proguard.a.a(context, "ro.miui.ui.version.name");
        boolean flag;
        if (s != null && s.trim().length() > 0)
            flag = false;
        else
            flag = true;
        if (!flag && !s.equals("fail")) {
            context = (new StringBuilder("XiaoMi/MIUI/")).append(s).toString();
        } else {
            String s1 = com.tencent.bugly.proguard.a.a(context, "ro.build.version.emui");
            boolean flag1;
            if (s1 != null && s1.trim().length() > 0)
                flag1 = false;
            else
                flag1 = true;
            if (!flag1 && !s1.equals("fail")) {
                context = (new StringBuilder("HuaWei/EMOTION/")).append(s1).toString();
            } else {
                String s2 = com.tencent.bugly.proguard.a.a(context, "ro.lenovo.series");
                boolean flag2;
                if (s2 != null && s2.trim().length() > 0)
                    flag2 = false;
                else
                    flag2 = true;
                if (!flag2 && !s2.equals("fail")) {
                    context = com.tencent.bugly.proguard.a.a(context, "ro.build.version.incremental");
                    context = (new StringBuilder("Lenovo/VIBE/")).append(context).toString();
                } else {
                    String s3 = com.tencent.bugly.proguard.a.a(context, "ro.build.nubia.rom.name");
                    boolean flag3;
                    if (s3 != null && s3.trim().length() > 0)
                        flag3 = false;
                    else
                        flag3 = true;
                    if (!flag3 && !s3.equals("fail")) {
                        context = (new StringBuilder("Zte/NUBIA/")).append(s3).append("_").append(com.tencent.bugly.proguard.a.a(context, "ro.build.nubia.rom.code")).toString();
                    } else {
                        String s4 = com.tencent.bugly.proguard.a.a(context, "ro.meizu.product.model");
                        boolean flag4;
                        if (s4 != null && s4.trim().length() > 0)
                            flag4 = false;
                        else
                            flag4 = true;
                        if (!flag4 && !s4.equals("fail")) {
                            context = (new StringBuilder("Meizu/FLYME/")).append(com.tencent.bugly.proguard.a.a(context, "ro.build.display.id")).toString();
                        } else {
                            String s5 = com.tencent.bugly.proguard.a.a(context, "ro.build.version.opporom");
                            boolean flag5;
                            if (s5 != null && s5.trim().length() > 0)
                                flag5 = false;
                            else
                                flag5 = true;
                            if (!flag5 && !s5.equals("fail")) {
                                context = (new StringBuilder("Oppo/COLOROS/")).append(s5).toString();
                            } else {
                                String s6 = com.tencent.bugly.proguard.a.a(context, "ro.vivo.os.build.display.id");
                                boolean flag6;
                                if (s6 != null && s6.trim().length() > 0)
                                    flag6 = false;
                                else
                                    flag6 = true;
                                if (!flag6 && !s6.equals("fail")) {
                                    context = (new StringBuilder("vivo/FUNTOUCH/")).append(s6).toString();
                                } else {
                                    String s7 = com.tencent.bugly.proguard.a.a(context, "ro.aa.romver");
                                    boolean flag7;
                                    if (s7 != null && s7.trim().length() > 0)
                                        flag7 = false;
                                    else
                                        flag7 = true;
                                    if (!flag7 && !s7.equals("fail")) {
                                        context = (new StringBuilder("htc/")).append(s7).append("/").append(com.tencent.bugly.proguard.a.a(context, "ro.build.description")).toString();
                                    } else {
                                        String s8 = com.tencent.bugly.proguard.a.a(context, "ro.lewa.version");
                                        boolean flag8;
                                        if (s8 != null && s8.trim().length() > 0)
                                            flag8 = false;
                                        else
                                            flag8 = true;
                                        if (!flag8 && !s8.equals("fail")) {
                                            context = (new StringBuilder("tcl/")).append(s8).append("/").append(com.tencent.bugly.proguard.a.a(context, "ro.build.display.id")).toString();
                                        } else {
                                            String s9 = com.tencent.bugly.proguard.a.a(context, "ro.gn.gnromvernumber");
                                            boolean flag9;
                                            if (s9 != null && s9.trim().length() > 0)
                                                flag9 = false;
                                            else
                                                flag9 = true;
                                            if (!flag9 && !s9.equals("fail")) {
                                                context = (new StringBuilder("amigo/")).append(s9).append("/").append(com.tencent.bugly.proguard.a.a(context, "ro.build.display.id")).toString();
                                            } else {
                                                String s10 = com.tencent.bugly.proguard.a.a(context, "ro.build.tyd.kbstyle_version");
                                                boolean flag10;
                                                if (s10 != null && s10.trim().length() > 0)
                                                    flag10 = flag11;
                                                else
                                                    flag10 = true;
                                                if (!flag10 && !s10.equals("fail"))
                                                    context = (new StringBuilder("dido/")).append(s10).toString();
                                                else
                                                    context = (new StringBuilder()).append(com.tencent.bugly.proguard.a.a(context, "ro.build.fingerprint")).append("/").append(com.tencent.bugly.proguard.a.a(context, "ro.build.rom.id")).toString();
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return context;
    }

    public static long g() {
        Exception exception = null;
        Object obj2;
        obj2 = JVM INSTR new #310 <Class FileReader>;
        ((FileReader) (obj2)).FileReader("/proc/meminfo");
        Object obj1;
        obj1 = JVM INSTR new #315 <Class BufferedReader>;
        ((BufferedReader) (obj1)).BufferedReader(((java.io.Reader) (obj2)), 2048);
        Object obj = ((BufferedReader) (obj1)).readLine();
        if (obj != null) goto _L2; else goto _L1
_L1:
        long l1;
        try {
            ((BufferedReader) (obj1)).close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            if (!ag.a(((Throwable) (obj))))
                ((IOException) (obj)).printStackTrace();
        }
        try {
            ((FileReader) (obj2)).close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            if (!ag.a(((Throwable) (obj))))
                ((IOException) (obj)).printStackTrace();
        }
        l1 = -1L;
_L3:
        return l1;
_L2:
        l1 = Long.parseLong(((String) (obj)).split(":\\s+", 2)[1].toLowerCase().replace("kb", "").trim());
        long l2 = l1 << 10;
        IOException ioexception;
        try {
            ((BufferedReader) (obj1)).close();
        }
        catch (IOException ioexception1) {
            if (!ag.a(ioexception1))
                ioexception1.printStackTrace();
        }
        ((FileReader) (obj2)).close();
        l1 = l2;
          goto _L3
        ioexception;
        l1 = l2;
        if (!ag.a(ioexception)) {
            ioexception.printStackTrace();
            l1 = l2;
        }
          goto _L3
        obj2;
        ioexception1 = null;
        obj1 = exception;
_L6:
        if (!ag.a(((Throwable) (obj2))))
            ((Throwable) (obj2)).printStackTrace();
        if (obj1 != null)
            try {
                ((BufferedReader) (obj1)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj1) {
                if (!ag.a(((Throwable) (obj1))))
                    ((IOException) (obj1)).printStackTrace();
            }
        if (ioexception1 != null)
            try {
                ioexception1.close();
            }
            // Misplaced declaration of an exception variable
            catch (IOException ioexception1) {
                if (!ag.a(ioexception1))
                    ioexception1.printStackTrace();
            }
        l1 = -2L;
          goto _L3
        ioexception1;
        obj1 = null;
        obj2 = null;
_L5:
        if (obj1 != null)
            try {
                ((BufferedReader) (obj1)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj1) {
                if (!ag.a(((Throwable) (obj1))))
                    ((IOException) (obj1)).printStackTrace();
            }
        if (obj2 != null)
            try {
                ((FileReader) (obj2)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj1) {
                if (!ag.a(((Throwable) (obj1))))
                    ((IOException) (obj1)).printStackTrace();
            }
        throw ioexception1;
        ioexception1;
        obj1 = null;
        continue; /* Loop/switch isn't completed */
        ioexception1;
        continue; /* Loop/switch isn't completed */
        exception;
        obj2 = ioexception1;
        ioexception1 = exception;
        if (true) goto _L5; else goto _L4
_L4:
        Throwable throwable1;
        throwable1;
        ioexception1 = ((IOException) (obj2));
        obj2 = throwable1;
        throwable1 = exception;
          goto _L6
        Throwable throwable;
        throwable;
        Object obj3 = obj2;
        obj2 = throwable;
        throwable = ((Throwable) (obj3));
          goto _L6
    }

    public static String g(Context context) {
        return com.tencent.bugly.proguard.a.a(context, "ro.board.platform");
    }

    public static long h() {
        long l2;
        Object obj;
        obj = null;
        l2 = -1L;
        Object obj2;
        obj2 = JVM INSTR new #310 <Class FileReader>;
        ((FileReader) (obj2)).FileReader("/proc/meminfo");
        Object obj1;
        obj1 = JVM INSTR new #315 <Class BufferedReader>;
        ((BufferedReader) (obj1)).BufferedReader(((java.io.Reader) (obj2)), 2048);
        ((BufferedReader) (obj1)).readLine();
        obj = ((BufferedReader) (obj1)).readLine();
        if (obj != null) goto _L2; else goto _L1
_L1:
        long l1;
        try {
            ((BufferedReader) (obj1)).close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            if (!ag.a(((Throwable) (obj))))
                ((IOException) (obj)).printStackTrace();
        }
        ((FileReader) (obj2)).close();
        l1 = l2;
_L3:
        return l1;
        obj;
        l1 = l2;
        if (!ag.a(((Throwable) (obj)))) {
            ((IOException) (obj)).printStackTrace();
            l1 = l2;
        }
          goto _L3
_L2:
        l1 = Long.parseLong(((String) (obj)).split(":\\s+", 2)[1].toLowerCase().replace("kb", "").trim());
        obj = ((BufferedReader) (obj1)).readLine();
        if (obj != null)
            break MISSING_BLOCK_LABEL_204;
        try {
            ((BufferedReader) (obj1)).close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            if (!ag.a(((Throwable) (obj))))
                ((IOException) (obj)).printStackTrace();
        }
        ((FileReader) (obj2)).close();
        l1 = l2;
          goto _L3
        obj;
        l1 = l2;
        if (!ag.a(((Throwable) (obj)))) {
            ((IOException) (obj)).printStackTrace();
            l1 = l2;
        }
          goto _L3
        long l3;
        l3 = Long.parseLong(((String) (obj)).split(":\\s+", 2)[1].toLowerCase().replace("kb", "").trim());
        obj = ((BufferedReader) (obj1)).readLine();
        if (obj != null)
            break MISSING_BLOCK_LABEL_302;
        try {
            ((BufferedReader) (obj1)).close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            if (!ag.a(((Throwable) (obj))))
                ((IOException) (obj)).printStackTrace();
        }
        ((FileReader) (obj2)).close();
        l1 = l2;
          goto _L3
        obj;
        l1 = l2;
        if (!ag.a(((Throwable) (obj)))) {
            ((IOException) (obj)).printStackTrace();
            l1 = l2;
        }
          goto _L3
        l2 = Long.parseLong(((String) (obj)).split(":\\s+", 2)[1].toLowerCase().replace("kb", "").trim());
        l2 = (l2 << 10) + ((l1 << 10) + (l3 << 10));
        try {
            ((BufferedReader) (obj1)).close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            if (!ag.a(((Throwable) (obj))))
                ((IOException) (obj)).printStackTrace();
        }
        ((FileReader) (obj2)).close();
        l1 = l2;
          goto _L3
        obj;
        l1 = l2;
        if (!ag.a(((Throwable) (obj)))) {
            ((IOException) (obj)).printStackTrace();
            l1 = l2;
        }
          goto _L3
        obj2;
        obj1 = null;
_L6:
        if (!ag.a(((Throwable) (obj2))))
            ((Throwable) (obj2)).printStackTrace();
        if (obj1 != null)
            try {
                ((BufferedReader) (obj1)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj1) {
                if (!ag.a(((Throwable) (obj1))))
                    ((IOException) (obj1)).printStackTrace();
            }
        if (obj != null)
            try {
                ((FileReader) (obj)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                if (!ag.a(((Throwable) (obj))))
                    ((IOException) (obj)).printStackTrace();
            }
        l1 = -2L;
          goto _L3
        obj;
        obj1 = null;
        obj2 = null;
_L5:
        if (obj1 != null)
            try {
                ((BufferedReader) (obj1)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj1) {
                if (!ag.a(((Throwable) (obj1))))
                    ((IOException) (obj1)).printStackTrace();
            }
        if (obj2 != null)
            try {
                ((FileReader) (obj2)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj1) {
                if (!ag.a(((Throwable) (obj1))))
                    ((IOException) (obj1)).printStackTrace();
            }
        throw obj;
        obj;
        obj1 = null;
        continue; /* Loop/switch isn't completed */
        obj;
        continue; /* Loop/switch isn't completed */
        obj2;
        Object obj3 = obj;
        obj = obj2;
        obj2 = obj3;
        if (true) goto _L5; else goto _L4
_L4:
        Throwable throwable1;
        throwable1;
        Object obj4 = null;
        obj = obj2;
        obj2 = throwable1;
        throwable1 = obj4;
          goto _L6
        Throwable throwable;
        throwable;
        Object obj5 = obj2;
        obj2 = throwable;
        throwable = ((Throwable) (obj5));
          goto _L6
    }

    public static boolean h(Context context) {
label0:
        {
            boolean flag3 = false;
            boolean flag;
            boolean flag1;
            Object obj;
            Object obj1;
            Object obj2;
            if (Build.TAGS != null && Build.TAGS.contains("test-keys"))
                flag = true;
            else
                flag = false;
            try {
                File file = JVM INSTR new #153 <Class File>;
                file.File("/system/app/Superuser.apk");
                flag1 = file.exists();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                if (!ag.b(((Throwable) (obj))))
                    ((Throwable) (obj)).printStackTrace();
                flag1 = false;
            }
            obj2 = null;
            obj1 = null;
            context = com.tencent.bugly.proguard.a.a(context, new String[] {
                "/system/bin/sh", "-c", "type su"
            });
            obj = obj2;
            if (context != null) {
                obj = obj2;
                if (context.size() > 0) {
                    obj = context.iterator();
                    context = obj1;
                    do {
                        if (!((Iterator) (obj)).hasNext())
                            break;
                        String s = (String)((Iterator) (obj)).next();
                        ag.c(s, new Object[0]);
                        if (s.contains("not found"))
                            context = Boolean.valueOf(false);
                    } while (true);
                    obj = context;
                    if (context == null)
                        obj = Boolean.valueOf(true);
                }
            }
            boolean flag2;
            if (obj == null)
                flag2 = false;
            else
                flag2 = ((Boolean) (obj)).booleanValue();
            if (!flag && !flag1) {
                flag1 = flag3;
                if (!Boolean.valueOf(flag2).booleanValue())
                    break label0;
            }
            flag1 = true;
        }
        return flag1;
    }

    public static long i() {
        if (p()) goto _L2; else goto _L1
_L1:
        long l1 = 0L;
_L4:
        return l1;
_L2:
        int i1;
        int j1;
        StatFs statfs = JVM INSTR new #151 <Class StatFs>;
        statfs.StatFs(Environment.getExternalStorageDirectory().getPath());
        j1 = statfs.getBlockSize();
        i1 = statfs.getBlockCount();
        l1 = i1;
        l1 = (long)j1 * l1;
        continue; /* Loop/switch isn't completed */
        Throwable throwable;
        throwable;
        if (!ag.a(throwable))
            throwable.printStackTrace();
        l1 = -2L;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static String i(Context context) {
        StringBuilder stringbuilder = new StringBuilder();
        String s = com.tencent.bugly.proguard.a.a(context, "ro.genymotion.version");
        if (s != null) {
            stringbuilder.append("ro.genymotion.version");
            stringbuilder.append("|");
            stringbuilder.append(s);
            stringbuilder.append("\n");
        }
        s = com.tencent.bugly.proguard.a.a(context, "androVM.vbox_dpi");
        if (s != null) {
            stringbuilder.append("androVM.vbox_dpi");
            stringbuilder.append("|");
            stringbuilder.append(s);
            stringbuilder.append("\n");
        }
        context = com.tencent.bugly.proguard.a.a(context, "qemu.sf.fake_camera");
        if (context != null) {
            stringbuilder.append("qemu.sf.fake_camera");
            stringbuilder.append("|");
            stringbuilder.append(context);
        }
        return stringbuilder.toString();
    }

    public static long j() {
        if (p()) goto _L2; else goto _L1
_L1:
        long l1 = 0L;
_L4:
        return l1;
_L2:
        int i1;
        int j1;
        StatFs statfs = JVM INSTR new #151 <Class StatFs>;
        statfs.StatFs(Environment.getExternalStorageDirectory().getPath());
        j1 = statfs.getBlockSize();
        i1 = statfs.getAvailableBlocks();
        l1 = i1;
        l1 = (long)j1 * l1;
        continue; /* Loop/switch isn't completed */
        Throwable throwable;
        throwable;
        if (!ag.a(throwable))
            throwable.printStackTrace();
        l1 = -2L;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static String j(Context context) {
        StringBuilder stringbuilder;
        stringbuilder = new StringBuilder();
        if (a == null)
            a = com.tencent.bugly.proguard.a.a(context, "ro.secure");
        if (a != null) {
            stringbuilder.append("ro.secure");
            stringbuilder.append("|");
            stringbuilder.append(a);
            stringbuilder.append("\n");
        }
        if (b == null)
            b = com.tencent.bugly.proguard.a.a(context, "ro.debuggable");
        if (b != null) {
            stringbuilder.append("ro.debuggable");
            stringbuilder.append("|");
            stringbuilder.append(b);
            stringbuilder.append("\n");
        }
        Object obj;
        obj = JVM INSTR new #315 <Class BufferedReader>;
        context = JVM INSTR new #310 <Class FileReader>;
        context.FileReader("/proc/self/status");
        ((BufferedReader) (obj)).BufferedReader(context);
_L2:
        context = ((Context) (obj));
        String s = ((BufferedReader) (obj)).readLine();
        if (s == null)
            break; /* Loop/switch isn't completed */
        context = ((Context) (obj));
        if (!s.startsWith("TracerPid:")) goto _L2; else goto _L1
_L1:
        if (s == null)
            break MISSING_BLOCK_LABEL_203;
        context = ((Context) (obj));
        s = s.substring(10).trim();
        context = ((Context) (obj));
        stringbuilder.append("tracer_pid");
        context = ((Context) (obj));
        stringbuilder.append("|");
        context = ((Context) (obj));
        stringbuilder.append(s);
        context = ((Context) (obj));
        s = stringbuilder.toString();
        context = s;
        try {
            ((BufferedReader) (obj)).close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            ag.a(((Throwable) (obj)));
        }
_L3:
        return context;
        Throwable throwable;
        throwable;
        obj = null;
_L6:
        context = ((Context) (obj));
        ag.a(throwable);
        if (obj != null)
            try {
                ((BufferedReader) (obj)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Context context) {
                ag.a(context);
            }
        context = stringbuilder.toString();
          goto _L3
        Exception exception;
        exception;
        context = null;
_L5:
        if (context != null)
            try {
                context.close();
            }
            // Misplaced declaration of an exception variable
            catch (Context context) {
                ag.a(context);
            }
        throw exception;
        exception;
        if (true) goto _L5; else goto _L4
_L4:
        throwable;
          goto _L6
    }

    public static String k() {
        String s1 = "fail";
        String s = Locale.getDefault().getCountry();
_L2:
        return s;
        Throwable throwable;
        throwable;
        s = s1;
        if (!ag.a(throwable)) {
            throwable.printStackTrace();
            s = s1;
        }
        if (true) goto _L2; else goto _L1
_L1:
    }

    public static String k(Context context) {
        StringBuilder stringbuilder = new StringBuilder();
        String s = com.tencent.bugly.proguard.a.a(context, "gsm.sim.state");
        if (s != null) {
            stringbuilder.append("gsm.sim.state");
            stringbuilder.append("|");
            stringbuilder.append(s);
        }
        stringbuilder.append("\n");
        context = com.tencent.bugly.proguard.a.a(context, "gsm.sim.state2");
        if (context != null) {
            stringbuilder.append("gsm.sim.state2");
            stringbuilder.append("|");
            stringbuilder.append(context);
        }
        return stringbuilder.toString();
    }

    public static String l() {
        String s1 = "fail";
        String s = Build.BRAND;
_L2:
        return s;
        Throwable throwable;
        throwable;
        s = s1;
        if (!ag.a(throwable)) {
            throwable.printStackTrace();
            s = s1;
        }
        if (true) goto _L2; else goto _L1
_L1:
    }

    public static String m() {
        Object obj4 = null;
        Object obj;
        StringBuilder stringbuilder;
        stringbuilder = JVM INSTR new #116 <Class StringBuilder>;
        stringbuilder.StringBuilder();
        obj = JVM INSTR new #153 <Class File>;
        ((File) (obj)).File("/sys/block/mmcblk0/device/type");
        if (!((File) (obj)).exists()) goto _L2; else goto _L1
_L1:
        Object obj1;
        obj1 = JVM INSTR new #315 <Class BufferedReader>;
        obj = JVM INSTR new #310 <Class FileReader>;
        ((FileReader) (obj)).FileReader("/sys/block/mmcblk0/device/type");
        ((BufferedReader) (obj1)).BufferedReader(((java.io.Reader) (obj)));
        obj = obj1;
        Object obj2 = ((BufferedReader) (obj1)).readLine();
        if (obj2 == null)
            break MISSING_BLOCK_LABEL_71;
        obj = obj1;
        stringbuilder.append(((String) (obj2)));
        obj = obj1;
        ((BufferedReader) (obj1)).close();
_L12:
        obj2 = obj1;
        stringbuilder.append(",");
        obj2 = obj1;
        Object obj3 = JVM INSTR new #153 <Class File>;
        obj2 = obj1;
        ((File) (obj3)).File("/sys/block/mmcblk0/device/name");
        obj = obj1;
        obj2 = obj1;
        if (!((File) (obj3)).exists())
            break MISSING_BLOCK_LABEL_170;
        obj2 = obj1;
        obj3 = JVM INSTR new #315 <Class BufferedReader>;
        obj2 = obj1;
        obj = JVM INSTR new #310 <Class FileReader>;
        obj2 = obj1;
        ((FileReader) (obj)).FileReader("/sys/block/mmcblk0/device/name");
        obj2 = obj1;
        ((BufferedReader) (obj3)).BufferedReader(((java.io.Reader) (obj)));
        obj = obj3;
        obj1 = ((BufferedReader) (obj3)).readLine();
        if (obj1 == null)
            break MISSING_BLOCK_LABEL_162;
        obj = obj3;
        stringbuilder.append(((String) (obj1)));
        obj = obj3;
        ((BufferedReader) (obj3)).close();
        obj = obj3;
        obj2 = obj;
        stringbuilder.append(",");
        obj2 = obj;
        obj1 = JVM INSTR new #153 <Class File>;
        obj2 = obj;
        ((File) (obj1)).File("/sys/block/mmcblk0/device/cid");
        obj2 = obj;
        if (!((File) (obj1)).exists()) goto _L4; else goto _L3
_L3:
        obj2 = obj;
        obj3 = JVM INSTR new #315 <Class BufferedReader>;
        obj2 = obj;
        obj1 = JVM INSTR new #310 <Class FileReader>;
        obj2 = obj;
        ((FileReader) (obj1)).FileReader("/sys/block/mmcblk0/device/cid");
        obj2 = obj;
        ((BufferedReader) (obj3)).BufferedReader(((java.io.Reader) (obj1)));
        obj = obj3;
        obj2 = ((BufferedReader) (obj3)).readLine();
        obj1 = obj3;
        if (obj2 == null)
            break MISSING_BLOCK_LABEL_257;
        obj = obj3;
        stringbuilder.append(((String) (obj2)));
        obj1 = obj3;
_L10:
        obj2 = obj1;
        obj = obj1;
        obj3 = stringbuilder.toString();
        obj = obj3;
        obj2 = obj;
        if (obj1 == null)
            break MISSING_BLOCK_LABEL_281;
        ((BufferedReader) (obj1)).close();
        obj2 = obj;
_L5:
        return ((String) (obj2));
        obj1;
        ag.a(((Throwable) (obj1)));
        obj2 = obj;
          goto _L5
        obj1;
        obj = null;
_L9:
        obj2 = obj;
        ag.a(((Throwable) (obj1)));
        obj2 = obj4;
        if (obj == null) goto _L5; else goto _L6
_L6:
        ((BufferedReader) (obj)).close();
        obj2 = obj4;
          goto _L5
        obj;
        ag.a(((Throwable) (obj)));
        obj2 = obj4;
          goto _L5
        obj;
        obj1 = null;
_L8:
        if (obj1 != null)
            try {
                ((BufferedReader) (obj1)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj1) {
                ag.a(((Throwable) (obj1)));
            }
        throw obj;
        obj;
        continue; /* Loop/switch isn't completed */
        obj;
        obj1 = obj2;
        continue; /* Loop/switch isn't completed */
        obj;
        obj1 = obj3;
        continue; /* Loop/switch isn't completed */
        obj;
        obj1 = obj3;
        continue; /* Loop/switch isn't completed */
        obj;
        obj1 = obj2;
        if (true) goto _L8; else goto _L7
_L7:
        obj1;
          goto _L9
        Throwable throwable;
        throwable;
        obj = obj1;
        obj1 = throwable;
          goto _L9
        obj1;
          goto _L9
_L4:
        obj1 = obj;
        if (true) goto _L10; else goto _L2
_L2:
        obj1 = null;
        if (true) goto _L12; else goto _L11
_L11:
    }

    public static String n() {
        Object obj;
        Object obj3;
        Object obj4;
        StringBuilder stringbuilder;
        stringbuilder = new StringBuilder();
        obj4 = null;
        obj = null;
        obj3 = obj4;
        Object obj2 = JVM INSTR new #153 <Class File>;
        obj3 = obj4;
        ((File) (obj2)).File("/sys/class/power_supply/ac/online");
        obj3 = obj4;
        if (!((File) (obj2)).exists())
            break MISSING_BLOCK_LABEL_115;
        obj3 = obj4;
        obj2 = JVM INSTR new #315 <Class BufferedReader>;
        obj3 = obj4;
        obj = JVM INSTR new #310 <Class FileReader>;
        obj3 = obj4;
        ((FileReader) (obj)).FileReader("/sys/class/power_supply/ac/online");
        obj3 = obj4;
        ((BufferedReader) (obj2)).BufferedReader(((java.io.Reader) (obj)));
        obj = obj2;
        obj3 = ((BufferedReader) (obj2)).readLine();
        if (obj3 == null)
            break MISSING_BLOCK_LABEL_107;
        obj = obj2;
        stringbuilder.append("ac_online");
        obj = obj2;
        stringbuilder.append("|");
        obj = obj2;
        stringbuilder.append(((String) (obj3)));
        obj = obj2;
        ((BufferedReader) (obj2)).close();
        obj = obj2;
        obj3 = obj;
        stringbuilder.append("\n");
        obj3 = obj;
        obj4 = JVM INSTR new #153 <Class File>;
        obj3 = obj;
        ((File) (obj4)).File("/sys/class/power_supply/usb/online");
        obj2 = obj;
        obj3 = obj;
        if (!((File) (obj4)).exists())
            break MISSING_BLOCK_LABEL_228;
        obj3 = obj;
        obj2 = JVM INSTR new #315 <Class BufferedReader>;
        obj3 = obj;
        obj4 = JVM INSTR new #310 <Class FileReader>;
        obj3 = obj;
        ((FileReader) (obj4)).FileReader("/sys/class/power_supply/usb/online");
        obj3 = obj;
        ((BufferedReader) (obj2)).BufferedReader(((java.io.Reader) (obj4)));
        obj = obj2;
        obj3 = ((BufferedReader) (obj2)).readLine();
        if (obj3 == null)
            break MISSING_BLOCK_LABEL_222;
        obj = obj2;
        stringbuilder.append("usb_online");
        obj = obj2;
        stringbuilder.append("|");
        obj = obj2;
        stringbuilder.append(((String) (obj3)));
        obj = obj2;
        ((BufferedReader) (obj2)).close();
        obj3 = obj2;
        stringbuilder.append("\n");
        obj3 = obj2;
        obj = JVM INSTR new #153 <Class File>;
        obj3 = obj2;
        ((File) (obj)).File("/sys/class/power_supply/battery/capacity");
        obj3 = obj2;
        if (!((File) (obj)).exists())
            break MISSING_BLOCK_LABEL_341;
        obj3 = obj2;
        obj4 = JVM INSTR new #315 <Class BufferedReader>;
        obj3 = obj2;
        obj = JVM INSTR new #310 <Class FileReader>;
        obj3 = obj2;
        ((FileReader) (obj)).FileReader("/sys/class/power_supply/battery/capacity");
        obj3 = obj2;
        ((BufferedReader) (obj4)).BufferedReader(((java.io.Reader) (obj)));
        obj = obj4;
        obj2 = ((BufferedReader) (obj4)).readLine();
        if (obj2 == null)
            break MISSING_BLOCK_LABEL_333;
        obj = obj4;
        stringbuilder.append("battery_capacity");
        obj = obj4;
        stringbuilder.append("|");
        obj = obj4;
        stringbuilder.append(((String) (obj2)));
        obj = obj4;
        ((BufferedReader) (obj4)).close();
        obj2 = obj4;
        if (obj2 != null)
            try {
                ((BufferedReader) (obj2)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                ag.a(((Throwable) (obj)));
            }
_L2:
        return stringbuilder.toString();
        obj;
        obj = null;
_L5:
        if (obj != null)
            try {
                ((BufferedReader) (obj)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                ag.a(((Throwable) (obj)));
            }
        if (true) goto _L2; else goto _L1
_L1:
        Object obj1;
        obj1;
_L4:
        if (obj3 != null)
            try {
                ((BufferedReader) (obj3)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj2) {
                ag.a(((Throwable) (obj2)));
            }
        throw obj1;
        obj1;
        obj3 = obj2;
        continue; /* Loop/switch isn't completed */
        obj1;
        obj3 = obj2;
        continue; /* Loop/switch isn't completed */
        obj1;
        obj3 = obj4;
        if (true) goto _L4; else goto _L3
_L3:
        obj2;
          goto _L5
        obj2;
          goto _L5
        obj1;
        obj1 = obj2;
          goto _L5
    }

    public static long o() {
        float f1;
        float f2;
        f2 = 0.0F;
        f1 = 0.0F;
        BufferedReader bufferedreader;
        bufferedreader = JVM INSTR new #315 <Class BufferedReader>;
        FileReader filereader = JVM INSTR new #310 <Class FileReader>;
        filereader.FileReader("/proc/uptime");
        bufferedreader.BufferedReader(filereader);
        Object obj = bufferedreader;
        String s = bufferedreader.readLine();
        if (s == null)
            break MISSING_BLOCK_LABEL_81;
        obj = bufferedreader;
        s = s.split(" ")[0];
        obj = bufferedreader;
        float f3 = System.currentTimeMillis() / 1000L;
        obj = bufferedreader;
        f1 = Float.parseFloat(s);
        f1 = f3 - f1;
        try {
            bufferedreader.close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            ag.a(((Throwable) (obj)));
        }
_L2:
        return (long)f1;
        Throwable throwable;
        throwable;
        bufferedreader = null;
_L5:
        obj = bufferedreader;
        ag.a(throwable);
        f1 = f2;
        if (bufferedreader == null) goto _L2; else goto _L1
_L1:
        bufferedreader.close();
        f1 = f2;
          goto _L2
        obj;
        ag.a(((Throwable) (obj)));
        f1 = f2;
          goto _L2
        Exception exception;
        exception;
        obj = null;
_L4:
        if (obj != null)
            try {
                ((BufferedReader) (obj)).close();
            }
            catch (IOException ioexception) {
                ag.a(ioexception);
            }
        throw exception;
        exception;
        if (true) goto _L4; else goto _L3
_L3:
        throwable;
          goto _L5
    }

    private static boolean p() {
        boolean flag = Environment.getExternalStorageState().equals("mounted");
        if (!flag) goto _L2; else goto _L1
_L1:
        flag = true;
_L4:
        return flag;
        Throwable throwable;
        throwable;
        if (!ag.a(throwable))
            throwable.printStackTrace();
_L2:
        flag = false;
        if (true) goto _L4; else goto _L3
_L3:
    }

    private static String q() {
        Object obj1;
        obj1 = JVM INSTR new #310 <Class FileReader>;
        ((FileReader) (obj1)).FileReader("/system/build.prop");
        BufferedReader bufferedreader;
        bufferedreader = JVM INSTR new #315 <Class BufferedReader>;
        bufferedreader.BufferedReader(((java.io.Reader) (obj1)), 2048);
_L2:
        Object obj2;
        Object obj3;
        obj3 = bufferedreader;
        obj2 = obj1;
        Object obj = bufferedreader.readLine();
        if (obj == null)
            break MISSING_BLOCK_LABEL_338;
        obj3 = bufferedreader;
        obj2 = obj1;
        obj = ((String) (obj)).split("=", 2);
        obj3 = bufferedreader;
        obj2 = obj1;
        if (obj.length != 2) goto _L2; else goto _L1
_L1:
        obj3 = bufferedreader;
        obj2 = obj1;
        if (!obj[0].equals("ro.product.cpu.abilist")) goto _L4; else goto _L3
_L3:
        obj = obj[1];
_L6:
        obj2 = obj;
        if (obj == null)
            break MISSING_BLOCK_LABEL_109;
        obj3 = bufferedreader;
        obj2 = obj1;
        obj = ((String) (obj)).split(",")[0];
        obj2 = obj;
        try {
            bufferedreader.close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            if (!ag.a(((Throwable) (obj))))
                ((IOException) (obj)).printStackTrace();
        }
        ((FileReader) (obj1)).close();
        obj = obj2;
_L7:
        return ((String) (obj));
_L4:
        obj3 = bufferedreader;
        obj2 = obj1;
        if (!obj[0].equals("ro.product.cpu.abi")) goto _L2; else goto _L5
_L5:
        obj = obj[1];
          goto _L6
        obj1;
        obj = obj2;
        if (!ag.a(((Throwable) (obj1)))) {
            ((IOException) (obj1)).printStackTrace();
            obj = obj2;
        }
          goto _L7
        Throwable throwable;
        throwable;
        obj = null;
        obj1 = null;
_L10:
        obj3 = obj;
        obj2 = obj1;
        if (ag.a(throwable))
            break MISSING_BLOCK_LABEL_207;
        obj3 = obj;
        obj2 = obj1;
        throwable.printStackTrace();
        if (obj != null)
            try {
                ((BufferedReader) (obj)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                if (!ag.a(((Throwable) (obj))))
                    ((IOException) (obj)).printStackTrace();
            }
        if (obj1 != null)
            try {
                ((FileReader) (obj1)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                if (!ag.a(((Throwable) (obj))))
                    ((IOException) (obj)).printStackTrace();
            }
        obj = null;
          goto _L7
        obj;
        obj3 = null;
        obj1 = null;
_L9:
        if (obj3 != null)
            try {
                ((BufferedReader) (obj3)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj2) {
                if (!ag.a(((Throwable) (obj2))))
                    ((IOException) (obj2)).printStackTrace();
            }
        if (obj1 != null)
            try {
                ((FileReader) (obj1)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj1) {
                if (!ag.a(((Throwable) (obj1))))
                    ((IOException) (obj1)).printStackTrace();
            }
        throw obj;
        obj;
        obj3 = null;
        continue; /* Loop/switch isn't completed */
        obj;
        obj1 = obj2;
        if (true) goto _L9; else goto _L8
_L8:
        throwable;
        obj = null;
          goto _L10
        throwable;
        obj = bufferedreader;
          goto _L10
        obj = null;
          goto _L6
    }

}
