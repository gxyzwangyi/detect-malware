// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.crashreport;

import android.content.Context;
import android.util.Log;
import android.webkit.WebSettings;
import android.webkit.WebView;
import com.tencent.bugly.BuglyStrategy;
import com.tencent.bugly.CrashModule;
import com.tencent.bugly.b;
import com.tencent.bugly.crashreport.common.info.a;
import com.tencent.bugly.crashreport.crash.BuglyBroadcastRecevier;
import com.tencent.bugly.crashreport.crash.c;
import com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface;
import com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler;
import com.tencent.bugly.proguard.af;
import com.tencent.bugly.proguard.ag;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class CrashReport {
    public static class CrashHandleCallback extends com.tencent.bugly.BuglyStrategy.a {

        public CrashHandleCallback() {
        }
    }

    public static class UserStrategy extends BuglyStrategy {

        private CrashHandleCallback a;

        public volatile com.tencent.bugly.BuglyStrategy.a getCrashHandleCallback() {
            return getCrashHandleCallback();
        }

        public CrashHandleCallback getCrashHandleCallback() {
            this;
            JVM INSTR monitorenter ;
            CrashHandleCallback crashhandlecallback = a;
            this;
            JVM INSTR monitorexit ;
            return crashhandlecallback;
            Exception exception;
            exception;
            throw exception;
        }

        public void setCrashHandleCallback(CrashHandleCallback crashhandlecallback) {
            this;
            JVM INSTR monitorenter ;
            a = crashhandlecallback;
            this;
            JVM INSTR monitorexit ;
            return;
            crashhandlecallback;
            throw crashhandlecallback;
        }

        public UserStrategy(Context context) {
        }
    }


    private static Context a;

    public CrashReport() {
    }

    public static void closeBugly() {
        if (b.a) goto _L2; else goto _L1
_L1:
        Log.w(ag.a, "Can not close bugly because bugly is disable.");
_L4:
        return;
_L2:
        if (!CrashModule.hasInitialized())
            Log.w(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
        else
        if (a != null) {
            Object obj = BuglyBroadcastRecevier.getInstance();
            if (obj != null)
                ((BuglyBroadcastRecevier) (obj)).unregist(a);
            closeCrashReport();
            com.tencent.bugly.crashreport.biz.b.a(a);
            obj = af.a();
            if (obj != null)
                ((af) (obj)).b();
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static void closeCrashReport() {
        if (!b.a)
            Log.w(ag.a, "Can not close crash report because bugly is disable.");
        else
        if (!CrashModule.hasInitialized())
            Log.w(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
        else
            c.a().d();
    }

    public static void closeNativeReport() {
        if (!b.a)
            Log.w(ag.a, "Can not close native report because bugly is disable.");
        else
        if (!CrashModule.hasInitialized())
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
        else
            c.a().f();
    }

    public static void enableBugly(boolean flag) {
        b.a = flag;
    }

    public static Set getAllUserDataKeys(Context context) {
        if (!b.a) {
            Log.w(ag.a, "Can not get all keys of user data because bugly is disable.");
            context = new HashSet();
        } else
        if (context == null) {
            Log.e(ag.a, "getAllUserDataKeys args context should not be null");
            context = new HashSet();
        } else {
            context = com.tencent.bugly.crashreport.common.info.a.a(context).B();
        }
        return context;
    }

    public static String getAppChannel() {
        String s;
        if (!b.a) {
            Log.w(ag.a, "Can not get App channel because bugly is disable.");
            s = "unknown";
        } else
        if (!CrashModule.hasInitialized()) {
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
            s = "unknown";
        } else {
            s = com.tencent.bugly.crashreport.common.info.a.a(a).k;
        }
        return s;
    }

    public static String getAppID() {
        String s;
        if (!b.a) {
            Log.w(ag.a, "Can not get App ID because bugly is disable.");
            s = "unknown";
        } else
        if (!CrashModule.hasInitialized()) {
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
            s = "unknown";
        } else {
            s = com.tencent.bugly.crashreport.common.info.a.a(a).e();
        }
        return s;
    }

    public static String getAppVer() {
        String s;
        if (!b.a) {
            Log.w(ag.a, "Can not get app version because bugly is disable.");
            s = "unknown";
        } else
        if (!CrashModule.hasInitialized()) {
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
            s = "unknown";
        } else {
            s = com.tencent.bugly.crashreport.common.info.a.a(a).j;
        }
        return s;
    }

    public static String getBuglyVersion(Context context) {
        if (context == null) {
            ag.d("Please call with context.", new Object[0]);
            context = "unknown";
        } else {
            com.tencent.bugly.crashreport.common.info.a.a(context);
            context = com.tencent.bugly.crashreport.common.info.a.b();
        }
        return context;
    }

    public static Map getSdkExtraData() {
        HashMap hashmap;
        if (!b.a) {
            Log.w(ag.a, "Can not get SDK extra data because bugly is disable.");
            hashmap = new HashMap();
        } else
        if (!CrashModule.hasInitialized()) {
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
            hashmap = null;
        } else {
            hashmap = com.tencent.bugly.crashreport.common.info.a.a(a).A;
        }
        return hashmap;
    }

    public static Map getSdkExtraData(Context context) {
        if (!b.a) {
            Log.w(ag.a, "Can not get SDK extra data because bugly is disable.");
            context = new HashMap();
        } else
        if (context == null) {
            ag.d("Context should not be null.", new Object[0]);
            context = null;
        } else {
            context = com.tencent.bugly.crashreport.common.info.a.a(context).A;
        }
        return context;
    }

    public static String getUserData(Context context, String s) {
        if (!b.a) {
            Log.w(ag.a, "Can not get user data because bugly is disable.");
            context = "unknown";
        } else
        if (context == null) {
            Log.e(ag.a, "getUserDataValue args context should not be null");
            context = "unknown";
        } else {
            boolean flag;
            if (s != null && s.trim().length() > 0)
                flag = false;
            else
                flag = true;
            if (flag)
                context = null;
            else
                context = com.tencent.bugly.crashreport.common.info.a.a(context).g(s);
        }
        return context;
    }

    public static int getUserDatasSize(Context context) {
        int i = -1;
        if (!b.a)
            Log.w(ag.a, "Can not get size of user data because bugly is disable.");
        else
        if (context == null)
            Log.e(ag.a, "getUserDatasSize args context should not be null");
        else
            i = com.tencent.bugly.crashreport.common.info.a.a(context).A();
        return i;
    }

    public static String getUserId() {
        String s;
        if (!b.a) {
            Log.w(ag.a, "Can not get user ID because bugly is disable.");
            s = "unknown";
        } else
        if (!CrashModule.hasInitialized()) {
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
            s = "unknown";
        } else {
            s = com.tencent.bugly.crashreport.common.info.a.a(a).f();
        }
        return s;
    }

    public static int getUserSceneTagId(Context context) {
        int i = -1;
        if (!b.a)
            Log.w(ag.a, "Can not get user scene tag because bugly is disable.");
        else
        if (context == null)
            Log.e(ag.a, "getUserSceneTagId args context should not be null");
        else
            i = com.tencent.bugly.crashreport.common.info.a.a(context).D();
        return i;
    }

    public static void initCrashReport(Context context) {
        a = context;
        b.a(CrashModule.getInstance());
        b.a(context);
    }

    public static void initCrashReport(Context context, UserStrategy userstrategy) {
        a = context;
        b.a(CrashModule.getInstance());
        b.a(context, userstrategy);
    }

    public static void initCrashReport(Context context, String s, boolean flag) {
        if (context != null) {
            a = context;
            b.a(CrashModule.getInstance());
            b.a(context, s, flag, null);
        }
    }

    public static void initCrashReport(Context context, String s, boolean flag, UserStrategy userstrategy) {
        if (context != null) {
            a = context;
            b.a(CrashModule.getInstance());
            b.a(context, s, flag, userstrategy);
        }
    }

    public static boolean isLastSessionCrash() {
        boolean flag = false;
        if (!b.a)
            Log.w(ag.a, "The info 'isLastSessionCrash' is not accurate because bugly is disable.");
        else
        if (!CrashModule.hasInitialized())
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
        else
            flag = c.a().b();
        return flag;
    }

    public static void postCatchedException(Throwable throwable) {
        postCatchedException(throwable, Thread.currentThread(), false);
    }

    public static void postCatchedException(Throwable throwable, Thread thread) {
        postCatchedException(throwable, thread, false);
    }

    public static void postCatchedException(Throwable throwable, Thread thread, boolean flag) {
        if (b.a) goto _L2; else goto _L1
_L1:
        Log.w(ag.a, "Can not post crash caught because bugly is disable.");
_L4:
        return;
_L2:
        if (!CrashModule.hasInitialized())
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
        else
        if (throwable == null) {
            ag.d("throwable is null, just return", new Object[0]);
        } else {
            if (thread == null)
                thread = Thread.currentThread();
            c.a().a(thread, throwable, false, null, null);
            if (flag) {
                ag.a("clear user datas", new Object[0]);
                com.tencent.bugly.crashreport.common.info.a.a(a).z();
            }
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    private static void putSdkData(Context context, String s, String s1) {
        if (context != null) {
            boolean flag;
            if (s != null && s.trim().length() > 0)
                flag = false;
            else
                flag = true;
            if (!flag) {
                if (s1 != null && s1.trim().length() > 0)
                    flag = false;
                else
                    flag = true;
                if (!flag) {
                    String s2 = s.replace("[a-zA-Z[0-9]]+", "");
                    s = s2;
                    if (s2.length() > 100) {
                        Log.w(ag.a, String.format("putSdkData key length over limit %d, will be cutted.", new Object[] {
                            Integer.valueOf(50)
                        }));
                        s = s2.substring(0, 50);
                    }
                    s2 = s1;
                    if (s1.length() > 500) {
                        Log.w(ag.a, String.format("putSdkData value length over limit %d, will be cutted!", new Object[] {
                            Integer.valueOf(200)
                        }));
                        s2 = s1.substring(0, 200);
                    }
                    com.tencent.bugly.crashreport.common.info.a.a(context).c(s, s2);
                    ag.b(String.format("[param] putSdkData data: %s - %s", new Object[] {
                        s, s2
                    }), new Object[0]);
                }
            }
        }
    }

    public static void putUserData(Context context, String s, String s1) {
        if (!b.a)
            Log.w(ag.a, "Can not put user data because bugly is disable.");
        else
        if (context == null)
            Log.w(ag.a, "putUserData args context should not be null");
        else
        if (s == null) {
            (new StringBuilder()).append(s).toString();
            ag.d("putUserData args key should not be null or empty", new Object[0]);
        } else
        if (s1 == null) {
            (new StringBuilder()).append(s1).toString();
            ag.d("putUserData args value should not be null", new Object[0]);
        } else
        if (!s.matches("[a-zA-Z[0-9]]+")) {
            ag.d((new StringBuilder("putUserData args key should match [a-zA-Z[0-9]]+  {")).append(s).append("}").toString(), new Object[0]);
        } else {
            String s2 = s1;
            if (s1.length() > 200) {
                ag.d("user data value length over limit %d, it will be cutted!", new Object[] {
                    Integer.valueOf(200)
                });
                s2 = s1.substring(0, 200);
            }
            s1 = com.tencent.bugly.crashreport.common.info.a.a(context);
            if (s1.B().contains(s)) {
                s1 = NativeCrashHandler.getInstance();
                if (s1 != null)
                    s1.putKeyValueToNative(s, s2);
                com.tencent.bugly.crashreport.common.info.a.a(context).b(s, s2);
                ag.c("replace KV %s %s", new Object[] {
                    s, s2
                });
            } else
            if (s1.A() >= 10) {
                ag.d("user data size is over limit %d, it will be cutted!", new Object[] {
                    Integer.valueOf(10)
                });
            } else {
                s1 = s;
                if (s.length() > 50) {
                    ag.d("user data key length over limit %d , will drop this new key %s", new Object[] {
                        Integer.valueOf(50), s
                    });
                    s1 = s.substring(0, 50);
                }
                s = NativeCrashHandler.getInstance();
                if (s != null)
                    s.putKeyValueToNative(s1, s2);
                com.tencent.bugly.crashreport.common.info.a.a(context).b(s1, s2);
                ag.b("[param] set user data: %s - %s", new Object[] {
                    s1, s2
                });
            }
        }
    }

    public static String removeUserData(Context context, String s) {
        if (!b.a) {
            Log.w(ag.a, "Can not remove user data because bugly is disable.");
            context = "unknown";
        } else
        if (context == null) {
            Log.e(ag.a, "removeUserData args context should not be null");
            context = "unknown";
        } else {
            boolean flag;
            if (s != null && s.trim().length() > 0)
                flag = false;
            else
                flag = true;
            if (flag) {
                context = null;
            } else {
                ag.b("[param] remove user data: %s", new Object[] {
                    s
                });
                context = com.tencent.bugly.crashreport.common.info.a.a(context).f(s);
            }
        }
        return context;
    }

    public static void setAppChannel(Context context, String s) {
        if (b.a) goto _L2; else goto _L1
_L1:
        Log.w(ag.a, "Can not set App channel because Bugly is disable.");
_L4:
        return;
_L2:
        if (context == null)
            Log.w(ag.a, "setAppChannel args context should not be null");
        else
        if (s == null) {
            Log.w(ag.a, "App channel is null, will not set");
        } else {
            com.tencent.bugly.crashreport.common.info.a.a(context).k = s;
            context = NativeCrashHandler.getInstance();
            if (context != null)
                context.setNativeAppChannel(s);
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static void setAppPackage(Context context, String s) {
        if (b.a) goto _L2; else goto _L1
_L1:
        Log.w(ag.a, "Can not set App package because bugly is disable.");
_L4:
        return;
_L2:
        if (context == null)
            Log.w(ag.a, "setAppPackage args context should not be null");
        else
        if (s == null) {
            Log.w(ag.a, "App package is null, will not set");
        } else {
            com.tencent.bugly.crashreport.common.info.a.a(context).c = s;
            context = NativeCrashHandler.getInstance();
            if (context != null)
                context.setNativeAppPackage(s);
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static void setAppVersion(Context context, String s) {
        if (b.a) goto _L2; else goto _L1
_L1:
        Log.w(ag.a, "Can not set App version because bugly is disable.");
_L4:
        return;
_L2:
        if (context == null)
            Log.w(ag.a, "setAppVersion args context should not be null");
        else
        if (s == null) {
            Log.w(ag.a, "App version is null, will not set");
        } else {
            com.tencent.bugly.crashreport.common.info.a.a(context).j = s;
            context = NativeCrashHandler.getInstance();
            if (context != null)
                context.setNativeAppVersion(s);
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static void setContext(Context context) {
        a = context;
    }

    public static void setIsAppForeground(Context context, boolean flag) {
        if (!b.a)
            Log.w(ag.a, "Can not set 'isAppForeground' because bugly is disable.");
        else
        if (context == null) {
            ag.d("Context should not be null.", new Object[0]);
        } else {
            if (flag)
                ag.c("App is in foreground.", new Object[0]);
            else
                ag.c("App is in background.", new Object[0]);
            com.tencent.bugly.crashreport.common.info.a.a(context).o = flag;
        }
    }

    public static void setIsDevelopmentDevice(Context context, boolean flag) {
        if (!b.a)
            Log.w(ag.a, "Can not set 'isDevelopmentDevice' because bugly is disable.");
        else
        if (context == null) {
            ag.d("Context should not be null.", new Object[0]);
        } else {
            if (flag)
                ag.c("This is a development device.", new Object[0]);
            else
                ag.c("This is not a development device.", new Object[0]);
            com.tencent.bugly.crashreport.common.info.a.a(context).y = flag;
        }
    }

    public static boolean setJavascriptMonitor(WebView webview, boolean flag) {
        return setJavascriptMonitor(webview, flag, false);
    }

    public static boolean setJavascriptMonitor(WebView webview, boolean flag, boolean flag1) {
        boolean flag3 = false;
        if (webview != null) goto _L2; else goto _L1
_L1:
        boolean flag2;
        Log.w(ag.a, "Webview is null.");
        flag2 = flag3;
_L4:
        return flag2;
_L2:
        if (!CrashModule.hasInitialized()) {
            ag.e("CrashReport has not been initialed! please to call method 'initCrashReport' first!", new Object[0]);
            flag2 = flag3;
            continue; /* Loop/switch isn't completed */
        }
        ag.a("Set Javascript exception monitor of webview.", new Object[0]);
        if (!b.a) {
            Log.w(ag.a, "Can not set JavaScript monitor because bugly is disable.");
            flag2 = flag3;
            continue; /* Loop/switch isn't completed */
        }
        ag.c("URL of webview is %s", new Object[] {
            webview.getUrl()
        });
        flag2 = flag3;
        if (webview.getUrl() == null)
            continue; /* Loop/switch isn't completed */
        if (!flag1 && android.os.Build.VERSION.SDK_INT < 19) {
            ag.e("This interface is only available for Android 4.4 or later.", new Object[0]);
            flag2 = flag3;
            continue; /* Loop/switch isn't completed */
        }
        Object obj = webview.getSettings();
        if (!((WebSettings) (obj)).getJavaScriptEnabled()) {
            ag.a("Enable the javascript needed by webview monitor.", new Object[0]);
            ((WebSettings) (obj)).setJavaScriptEnabled(true);
        }
        obj = H5JavaScriptInterface.getInstance(webview);
        if (obj != null) {
            ag.a("Add a secure javascript interface to the webview.", new Object[0]);
            webview.addJavascriptInterface(obj, "exceptionUploader");
        }
        if (flag) {
            ag.a("Inject bugly.js(v%s) to the webview.", new Object[] {
                com.tencent.bugly.crashreport.crash.h5.c.b()
            });
            String s = com.tencent.bugly.crashreport.crash.h5.c.a();
            if (s == null) {
                ag.e("Failed to inject Bugly.js.", new Object[] {
                    com.tencent.bugly.crashreport.crash.h5.c.b()
                });
                flag2 = flag3;
                continue; /* Loop/switch isn't completed */
            }
            webview.loadUrl((new StringBuilder("javascript:")).append(s).toString());
        }
        flag2 = true;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static void setSdkExtraData(Context context, String s, String s1) {
        boolean flag1 = false;
        if (b.a) goto _L2; else goto _L1
_L1:
        Log.w(ag.a, "Can not put SDK extra data because bugly is disable.");
_L4:
        return;
_L2:
        if (context != null) {
            boolean flag;
            if (s != null && s.trim().length() > 0)
                flag = false;
            else
                flag = true;
            if (!flag) {
                if (s1 != null && s1.trim().length() > 0)
                    flag = flag1;
                else
                    flag = true;
                if (!flag)
                    com.tencent.bugly.crashreport.common.info.a.a(context).a(s, s1);
            }
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static void setSessionIntervalMills(long l) {
        if (!b.a)
            Log.w(ag.a, "Can not set 'SessionIntervalMills' because bugly is disable.");
        else
            com.tencent.bugly.crashreport.biz.b.a(l);
    }

    public static void setUserId(Context context, String s) {
        if (b.a) goto _L2; else goto _L1
_L1:
        Log.w(ag.a, "Can not set user ID because bugly is disable.");
_L4:
        return;
_L2:
        if (context == null)
            Log.e(ag.a, "Context should not be null when bugly has not been initialed!");
        else
        if (s == null) {
            ag.d("userId should not be null", new Object[0]);
        } else {
            String s1 = s;
            if (s.length() > 100) {
                s1 = s.substring(0, 100);
                ag.d("userId %s length is over limit %d substring to %s", new Object[] {
                    s, Integer.valueOf(100), s1
                });
            }
            if (!s1.equals(com.tencent.bugly.crashreport.common.info.a.a(context).f())) {
                com.tencent.bugly.crashreport.common.info.a.a(context).b(s1);
                ag.b("[user] set userId : %s", new Object[] {
                    s1
                });
                context = NativeCrashHandler.getInstance();
                if (context != null)
                    context.setNativeUserId(s1);
                if (CrashModule.hasInitialized())
                    com.tencent.bugly.crashreport.biz.b.a();
            }
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static void setUserId(String s) {
        if (!b.a)
            Log.w(ag.a, "Can not set user ID because bugly is disable.");
        else
        if (!CrashModule.hasInitialized())
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
        else
            setUserId(a, s);
    }

    public static void setUserSceneTag(Context context, int i) {
        if (!b.a)
            Log.w(ag.a, "Can not set tag caught because bugly is disable.");
        else
        if (context == null) {
            Log.e(ag.a, "setTag args context should not be null");
        } else {
            if (i <= 0)
                ag.d("setTag args tagId should > 0", new Object[0]);
            com.tencent.bugly.crashreport.common.info.a.a(context).a(i);
            ag.b("[param] set user scene tag: %d", new Object[] {
                Integer.valueOf(i)
            });
        }
    }

    public static void startCrashReport() {
        if (!b.a)
            Log.w(ag.a, "Can not start crash report because bugly is disable.");
        else
        if (!CrashModule.hasInitialized())
            Log.w(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
        else
            c.a().c();
    }

    public static void testANRCrash() {
        if (!b.a)
            Log.w(ag.a, "Can not test ANR crash because bugly is disable.");
        else
        if (!CrashModule.hasInitialized()) {
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
        } else {
            ag.a("start to create a anr crash for test!", new Object[0]);
            c.a().k();
        }
    }

    public static void testJavaCrash() {
        if (b.a) goto _L2; else goto _L1
_L1:
        Log.w(ag.a, "Can not test Java crash because bugly is disable.");
_L4:
        return;
_L2:
        if (CrashModule.hasInitialized())
            break; /* Loop/switch isn't completed */
        Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
        if (true) goto _L4; else goto _L3
_L3:
        a a1 = com.tencent.bugly.crashreport.common.info.a.a();
        if (a1 != null)
            a1.b(24096);
        throw new RuntimeException("This Crash create for Test! You can go to Bugly see more detail!");
    }

    public static void testNativeCrash() {
        if (!b.a)
            Log.w(ag.a, "Can not test native crash because bugly is disable.");
        else
        if (!CrashModule.hasInitialized()) {
            Log.e(ag.a, "CrashReport has not been initialed! pls to call method 'initCrashReport' first!");
        } else {
            ag.a("start to create a native crash for test!", new Object[0]);
            c.a().j();
        }
    }
}
