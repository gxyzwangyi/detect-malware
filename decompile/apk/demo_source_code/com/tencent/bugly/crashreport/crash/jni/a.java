// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.crashreport.crash.jni;

import android.content.Context;
import com.tencent.bugly.crashreport.common.info.AppInfo;
import com.tencent.bugly.crashreport.common.strategy.StrategyBean;
import com.tencent.bugly.crashreport.crash.CrashDetailBean;
import com.tencent.bugly.crashreport.crash.b;
import com.tencent.bugly.crashreport.crash.c;
import com.tencent.bugly.proguard.ag;
import com.tencent.bugly.proguard.ah;
import java.io.File;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

// Referenced classes of package com.tencent.bugly.crashreport.crash.jni:
//            NativeExceptionHandler, b

public final class a
    implements NativeExceptionHandler {

    private final Context a;
    private final b b;
    private final com.tencent.bugly.crashreport.common.info.a c;
    private final com.tencent.bugly.crashreport.common.strategy.a d;
    private final String e;

    public a(Context context, com.tencent.bugly.crashreport.common.info.a a1, b b1, com.tencent.bugly.crashreport.common.strategy.a a2, String s) {
        a = context;
        b = b1;
        c = a1;
        d = a2;
        e = s;
    }

    public final void handleNativeException(int i, int j, long l, long l1, String s, 
            String s1, String s2, String s3, int k, String s4, int i1, int j1, 
            int k1, String s5, String s6) {
        ag.a("Native Crash Happen v1", new Object[0]);
        handleNativeException2(i, j, l, l1, s, s1, s2, s3, k, s4, i1, j1, k1, s5, s6, null);
    }

    public final void handleNativeException2(int i, int j, long l, long l1, String s, 
            String s1, String s2, String s3, int k, String s4, int i1, int j1, 
            int k1, String s5, String s6, String as[]) {
        ag.a("Native Crash Happen v2", new Object[0]);
        d.c();
        if (d.b()) goto _L2; else goto _L1
_L1:
        ag.e("waiting for remote sync", new Object[0]);
        i = 0;
_L3:
        boolean flag = d.b();
        if (flag)
            break; /* Loop/switch isn't completed */
        Thread.sleep(500L);
_L8:
        j = i + 500;
        i = j;
        if (j < 3000) goto _L3; else goto _L2
_L2:
        String s7;
        String s8;
        l1 /= 1000L;
        s8 = com.tencent.bugly.crashreport.crash.jni.b.a(s2);
        s2 = JVM INSTR new #80  <Class StringBuilder>;
        s2.StringBuilder("UNKNOWN(");
        s7 = s2.append(i1).append(")").toString();
        if (k <= 0) goto _L5; else goto _L4
_L4:
        s2 = JVM INSTR new #80  <Class StringBuilder>;
        s2.StringBuilder();
        s = s2.append(s).append("(").append(s4).append(")").toString();
        s2 = "KERNEL";
_L9:
        if (!d.b())
            ag.d("no remote but still store!", new Object[0]);
        if (d.c().g || !d.b()) goto _L7; else goto _L6
_L6:
        ag.e("crash report was closed by remote , will not upload to Bugly , print local for helpful!", new Object[0]);
        s6 = com.tencent.bugly.proguard.a.b();
        s5 = c.d;
        s2 = Thread.currentThread();
        s4 = JVM INSTR new #80  <Class StringBuilder>;
        s4.StringBuilder();
        com.tencent.bugly.crashreport.crash.b.a("NATIVE_CRASH", s6, s5, s2, s4.append(s).append("\n").append(s1).append("\n").append(s8).toString(), null);
        if (s3 == null)
            break MISSING_BLOCK_LABEL_336;
        s = JVM INSTR new #138 <Class File>;
        s.File(s3);
        if (s.isFile() && s.exists() && s.canWrite())
            s.delete();
_L21:
        return;
        s5;
        s5.printStackTrace();
          goto _L8
_L5:
        if (i1 <= 0)
            break MISSING_BLOCK_LABEL_904;
        s2 = a;
        s7 = AppInfo.a(i1);
        s2 = s4;
          goto _L9
_L7:
        s5 = null;
        s4 = null;
        if (as == null) goto _L11; else goto _L10
_L10:
        s4 = JVM INSTR new #165 <Class HashMap>;
        s4.HashMap();
        j = as.length;
        i = 0;
_L13:
        if (i >= j)
            break MISSING_BLOCK_LABEL_484;
        s5 = as[i];
        String as1[] = s5.split("=");
        if (as1.length != 2)
            break; /* Loop/switch isn't completed */
        s4.put(as1[0], as1[1]);
_L14:
        i++;
        if (true) goto _L13; else goto _L12
_L12:
        ag.d("bad extraMsg %s", new Object[] {
            s5
        });
          goto _L14
        s5 = (String)s4.get("ExceptionProcessName");
        s4 = (String)s4.get("ExceptionThreadName");
_L22:
        if (s5 == null) goto _L16; else goto _L15
_L15:
        if (s5.length() != 0) goto _L17; else goto _L16
_L16:
        as = c.d;
_L23:
        if (s4 == null) goto _L19; else goto _L18
_L18:
        if (s4.length() != 0) goto _L20; else goto _L19
_L19:
        s4 = Thread.currentThread();
        s5 = JVM INSTR new #80  <Class StringBuilder>;
        s5.StringBuilder();
        s5 = s5.append(s4.getName()).append("(").append(s4.getId()).append(")").toString();
_L25:
        s2 = packageCrashDatas(as, s5, 1000L * l + l1, s, s1, s8, s2, s7, s3, s6, null, null, true);
        if (s2 != null)
            break MISSING_BLOCK_LABEL_795;
        try {
            ag.e("pkg crash datas fail!", new Object[0]);
        }
        // Misplaced declaration of an exception variable
        catch (String s) {
            if (!ag.a(s))
                s.printStackTrace();
        }
          goto _L21
_L11:
        ag.c("not found extraMsg", new Object[0]);
          goto _L22
_L17:
        ag.c("crash process name change to %s", new Object[] {
            s5
        });
        as = s5;
          goto _L23
_L20:
        Iterator iterator;
        ag.c("crash thread name change to %s", new Object[] {
            s4
        });
        iterator = Thread.getAllStackTraces().keySet().iterator();
_L27:
        s5 = s4;
        if (!iterator.hasNext()) goto _L25; else goto _L24
_L24:
        s5 = (Thread)iterator.next();
        if (!s5.getName().equals(s4)) goto _L27; else goto _L26
_L26:
        StringBuilder stringbuilder = JVM INSTR new #80  <Class StringBuilder>;
        stringbuilder.StringBuilder();
        s5 = stringbuilder.append(s4).append("(").append(s5.getId()).append(")").toString();
          goto _L25
        s6 = com.tencent.bugly.proguard.a.b();
        s5 = c.d;
        s3 = Thread.currentThread();
        s4 = JVM INSTR new #80  <Class StringBuilder>;
        s4.StringBuilder();
        com.tencent.bugly.crashreport.crash.b.a("NATIVE_CRASH", s6, s5, s3, s4.append(s).append("\n").append(s1).append("\n").append(s8).toString(), s2);
        if (!b.a(s2, k))
            b.a(s2, 3000L, true);
        com.tencent.bugly.crashreport.crash.jni.b.b(e);
          goto _L21
        s2 = s4;
          goto _L9
    }

    public final CrashDetailBean packageCrashDatas(String s, String s1, long l, String s2, String s3, String s4, 
            String s5, String s6, String s7, String s8, byte abyte0[], Map map, boolean flag) {
        boolean flag1 = com.tencent.bugly.crashreport.crash.c.a().l();
        int i;
        String s9;
        CrashDetailBean crashdetailbean;
        if (flag1)
            s9 = " This Crash Caused By ANR , PLS To Fix ANR , This Trace May Be Not Useful![Bugly]";
        else
            s9 = "";
        if (flag1)
            ag.e("This Crash Caused By ANR , PLS To Fix ANR , This Trace May Be Not Useful!", new Object[0]);
        crashdetailbean = new CrashDetailBean();
        crashdetailbean.b = 1;
        crashdetailbean.e = c.g();
        crashdetailbean.f = c.j;
        crashdetailbean.g = c.v();
        crashdetailbean.m = c.f();
        crashdetailbean.n = s2;
        crashdetailbean.o = s9;
        crashdetailbean.p = s3;
        s2 = s4;
        if (s4 == null)
            s2 = "";
        crashdetailbean.q = s2;
        crashdetailbean.r = l;
        crashdetailbean.u = com.tencent.bugly.proguard.a.c(crashdetailbean.q.getBytes());
        crashdetailbean.z = s;
        crashdetailbean.A = s1;
        crashdetailbean.H = c.x();
        crashdetailbean.h = c.u();
        crashdetailbean.i = c.G();
        crashdetailbean.v = s7;
        s1 = com.tencent.bugly.crashreport.crash.jni.b.a(e, s7);
        if (s1 != null && s1.trim().length() > 0)
            i = 0;
        else
            i = 1;
        if (i == 0)
            crashdetailbean.T = s1;
        s1 = new File(e, "backup_record.txt");
        if (s1.exists())
            s1 = s1.getAbsolutePath();
        else
            s1 = null;
        crashdetailbean.U = s1;
        crashdetailbean.I = s6;
        crashdetailbean.J = s5;
        crashdetailbean.K = s8;
        crashdetailbean.E = c.o();
        crashdetailbean.F = c.n();
        crashdetailbean.G = c.p();
        if (flag) {
            crashdetailbean.B = com.tencent.bugly.crashreport.common.info.b.h();
            crashdetailbean.C = com.tencent.bugly.crashreport.common.info.b.f();
            crashdetailbean.D = com.tencent.bugly.crashreport.common.info.b.j();
            crashdetailbean.w = com.tencent.bugly.proguard.a.a(a, c.d, null);
            crashdetailbean.x = ah.a(true);
            crashdetailbean.L = c.a;
            crashdetailbean.M = c.o;
            crashdetailbean.O = c.D();
            crashdetailbean.P = c.E();
            crashdetailbean.Q = c.y();
            crashdetailbean.R = c.C();
            crashdetailbean.y = com.tencent.bugly.proguard.a.a(c.e, false);
            i = crashdetailbean.q.indexOf("java:\n");
            if (i > 0) {
                int j = i + "java:\n".length();
                s1 = crashdetailbean.q.substring(j, crashdetailbean.q.length() - 1);
                if (s1.length() > 0 && crashdetailbean.y.containsKey(crashdetailbean.A)) {
                    s2 = (String)crashdetailbean.y.get(crashdetailbean.A);
                    i = s2.indexOf(s1);
                    if (i > 0) {
                        s1 = s2.substring(i);
                        crashdetailbean.y.put(crashdetailbean.A, s1);
                        crashdetailbean.q = crashdetailbean.q.substring(0, j);
                        crashdetailbean.q = (new StringBuilder()).append(crashdetailbean.q).append(s1).toString();
                    }
                }
            }
            if (s == null)
                crashdetailbean.z = c.d;
            b.b(crashdetailbean);
        } else {
            crashdetailbean.B = -1L;
            crashdetailbean.C = -1L;
            crashdetailbean.D = -1L;
            crashdetailbean.w = "this crash is occurred at last process! Log is miss, when get an terrible ABRT Native Exception etc.";
            crashdetailbean.L = -1L;
            crashdetailbean.O = -1;
            crashdetailbean.P = -1;
            crashdetailbean.Q = map;
            crashdetailbean.R = c.C();
            crashdetailbean.y = null;
            if (s == null)
                crashdetailbean.z = "unknown(record)";
            if (abyte0 == null)
                crashdetailbean.x = "this crash is occurred at last process! Log is miss, when get an terrible ABRT Native Exception etc.".getBytes();
            else
                crashdetailbean.x = abyte0;
        }
        return crashdetailbean;
    }
}
