// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.crashreport.crash;

import android.content.Context;
import com.tencent.bugly.crashreport.common.strategy.StrategyBean;
import com.tencent.bugly.crashreport.common.strategy.a;
import com.tencent.bugly.crashreport.crash.anr.b;
import com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler;
import com.tencent.bugly.proguard.aa;
import com.tencent.bugly.proguard.ad;
import com.tencent.bugly.proguard.af;
import com.tencent.bugly.proguard.ag;
import com.tencent.bugly.proguard.x;
import com.tencent.bugly.proguard.y;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

// Referenced classes of package com.tencent.bugly.crashreport.crash:
//            b, e, CrashDetailBean

public final class c {

    public static int a = 0;
    public static boolean b = false;
    public static boolean c = true;
    public static int d = 20000;
    public static int e = 20000;
    public static long f = 0x240c8400L;
    public static String g = null;
    public static boolean h = false;
    public static String i = null;
    public static int j = 5000;
    public static boolean k = true;
    private static c o;
    public final com.tencent.bugly.crashreport.crash.b l;
    public com.tencent.bugly.BuglyStrategy.a m;
    private final Context n;
    private final e p;
    private final NativeCrashHandler q;
    private a r;
    private af s;
    private final b t;
    private Boolean u;

    private c(int i1, Context context, af af1, boolean flag, com.tencent.bugly.BuglyStrategy.a a1, x x, String s1) {
        a = i1;
        if (context != null) goto _L2; else goto _L1
_L1:
        Context context1 = context;
_L4:
        n = context1;
        r = com.tencent.bugly.crashreport.common.strategy.a.a();
        ad ad1 = ad.a();
        y y1 = y.a();
        context = com.tencent.bugly.crashreport.common.info.a.a(context1);
        s = af1;
        m = a1;
        l = new com.tencent.bugly.crashreport.crash.b(i1, context1, ad1, y1, r, a1, x);
        p = new e(context1, l, r, context);
        q = NativeCrashHandler.getInstance(context1, context, l, r, af1, flag, s1);
        t = new b(context1, r, context, af1, l);
        return;
_L2:
        Context context2 = context.getApplicationContext();
        context1 = context2;
        if (context2 == null)
            context1 = context;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static c a() {
        com/tencent/bugly/crashreport/crash/c;
        JVM INSTR monitorenter ;
        c c1 = o;
        com/tencent/bugly/crashreport/crash/c;
        JVM INSTR monitorexit ;
        return c1;
        Exception exception;
        exception;
        throw exception;
    }

    static e a(c c1) {
        return c1.p;
    }

    public static void a(int i1, Context context, boolean flag, com.tencent.bugly.BuglyStrategy.a a1, x x, String s1) {
        com/tencent/bugly/crashreport/crash/c;
        JVM INSTR monitorenter ;
        if (o == null) {
            x = JVM INSTR new #2   <Class c>;
            x.c(1004, context, af.a(), flag, a1, null, null);
            o = x;
        }
        com/tencent/bugly/crashreport/crash/c;
        JVM INSTR monitorexit ;
        return;
        context;
        throw context;
    }

    static Context b(c c1) {
        return c1.n;
    }

    public final void a(long l1) {
        af.a().a(new Thread() {

            private c a;

            public final void run() {
                if (com.tencent.bugly.proguard.a.a(com.tencent.bugly.crashreport.crash.c.b(a), "local_crash_lock", 10000L)) {
                    List list = a.l.a();
                    if (list != null && list.size() > 0) {
                        int j1 = list.size();
                        Object obj;
                        if ((long)j1 > 100L) {
                            ArrayList arraylist = new ArrayList();
                            Collections.sort(list);
                            int i1 = 0;
                            do {
                                obj = arraylist;
                                if ((long)i1 >= 100L)
                                    break;
                                arraylist.add(list.get(j1 - 1 - i1));
                                i1++;
                            } while (true);
                        } else {
                            obj = list;
                        }
                        a.l.a(((List) (obj)), 0L, false, false);
                    }
                    com.tencent.bugly.proguard.a.b(com.tencent.bugly.crashreport.crash.c.b(a), "local_crash_lock");
                }
            }

             {
                a = c.this;
                super();
            }
        }
, l1);
    }

    public final void a(StrategyBean strategybean) {
        p.a(strategybean);
        q.onStrategyChanged(strategybean);
        t.a(strategybean);
    }

    public final void a(CrashDetailBean crashdetailbean) {
        l.c(crashdetailbean);
    }

    public final void a(Thread thread, Throwable throwable, boolean flag, String s1, byte abyte0[]) {
        s.a(new Runnable(false, thread, throwable, null, null) {

            private boolean a;
            private Thread b;
            private Throwable c;
            private String d;
            private byte e[];
            private c f;

            public final void run() {
                ag.c("post a throwable %b", new Object[] {
                    Boolean.valueOf(a)
                });
                com.tencent.bugly.crashreport.crash.c.a(f).a(b, c, false, d, e);
_L1:
                return;
                Throwable throwable1;
                throwable1;
                if (!ag.b(throwable1))
                    throwable1.printStackTrace();
                ag.e("java catch error: %s", new Object[] {
                    c.toString()
                });
                  goto _L1
            }

             {
                f = c.this;
                a = flag;
                b = thread;
                c = throwable;
                d = s1;
                e = abyte0;
                super();
            }
        }
);
    }

    public final boolean b() {
        boolean flag = false;
        Boolean boolean1 = u;
        if (boolean1 != null) {
            flag = boolean1.booleanValue();
        } else {
            String s1 = com.tencent.bugly.crashreport.common.info.a.a().d;
            Object obj = y.a().a(1);
            ArrayList arraylist = new ArrayList();
            if (obj != null && ((List) (obj)).size() > 0) {
                obj = ((List) (obj)).iterator();
                do {
                    if (!((Iterator) (obj)).hasNext())
                        break;
                    aa aa1 = (aa)((Iterator) (obj)).next();
                    if (s1.equals(aa1.c)) {
                        u = Boolean.valueOf(true);
                        arraylist.add(aa1);
                    }
                } while (true);
                if (arraylist.size() > 0) {
                    y.a();
                    y.a(arraylist);
                }
                flag = true;
            } else {
                u = Boolean.valueOf(false);
            }
        }
        return flag;
    }

    public final void c() {
        this;
        JVM INSTR monitorenter ;
        p.a();
        q.setUserOpened(true);
        t.a(true);
        this;
        JVM INSTR monitorexit ;
        return;
        Exception exception;
        exception;
        throw exception;
    }

    public final void d() {
        this;
        JVM INSTR monitorenter ;
        p.b();
        q.setUserOpened(false);
        t.a(false);
        this;
        JVM INSTR monitorexit ;
        return;
        Exception exception;
        exception;
        throw exception;
    }

    public final void e() {
        p.a();
    }

    public final void f() {
        q.setUserOpened(false);
    }

    public final void g() {
        q.setUserOpened(true);
    }

    public final void h() {
        t.a(true);
    }

    public final void i() {
        t.a(false);
    }

    public final void j() {
        this;
        JVM INSTR monitorenter ;
        q.testNativeCrash();
        this;
        JVM INSTR monitorexit ;
        return;
        Exception exception;
        exception;
        throw exception;
    }

    public final void k() {
        int i1 = 0;
        this;
        JVM INSTR monitorenter ;
        b b1 = t;
_L1:
        int j1;
        j1 = i1 + 1;
        if (i1 >= 30)
            break MISSING_BLOCK_LABEL_69;
        ag.a("try main sleep for make a test anr! try:%d/30 , kill it if you don't want to wait!", new Object[] {
            Integer.valueOf(j1)
        });
        Thread.sleep(5000L);
        i1 = j1;
          goto _L1
        Object obj;
        obj;
        ((InterruptedException) (obj)).printStackTrace();
        i1 = j1;
          goto _L1
        obj;
        if (!ag.a(((Throwable) (obj))))
            ((Throwable) (obj)).printStackTrace();
        this;
        JVM INSTR monitorexit ;
        return;
        obj;
        throw obj;
    }

    public final boolean l() {
        return t.a();
    }

}
