// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.proguard;

import com.tencent.bugly.crashreport.crash.jni.b;

// Referenced classes of package com.tencent.bugly.proguard:
//            j, az, h, s, 
//            i, k

public final class u extends j
    implements Cloneable {

    private static az c;
    private static s d;
    private static boolean e;
    public az a;
    public s b;

    public u() {
        a = null;
        b = null;
    }

    public final void a(h h1) {
        if (c == null)
            c = new az();
        a = (az)h1.a(c, 0, false);
        if (d == null)
            d = new s();
        b = (s)h1.a(d, 1, false);
    }

    public final void a(i l) {
        if (a != null)
            l.a(a, 0);
        if (b != null)
            l.a(b, 1);
    }

    public final void a(StringBuilder stringbuilder, int l) {
        stringbuilder = new b(stringbuilder, l);
        stringbuilder.a(a, "baseStrategy");
        stringbuilder.a(b, "grayStrategy");
    }

    public final Object clone() {
        Object obj = null;
        Object obj1 = super.clone();
        obj = obj1;
_L2:
        return obj;
        CloneNotSupportedException clonenotsupportedexception;
        clonenotsupportedexception;
        if (!e)
            throw new AssertionError();
        if (true) goto _L2; else goto _L1
_L1:
    }

    public final boolean equals(Object obj) {
        boolean flag1 = false;
        if (obj != null) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L4:
        return flag;
_L2:
        obj = (u)obj;
        flag = flag1;
        if (k.a(a, ((u) (obj)).a)) {
            flag = flag1;
            if (k.a(b, ((u) (obj)).b))
                flag = true;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public final int hashCode() {
        try {
            Exception exception = JVM INSTR new #88  <Class Exception>;
            exception.Exception("Need define key first!");
            throw exception;
        }
        catch (Exception exception1) {
            exception1.printStackTrace();
        }
        return 0;
    }

    static  {
        boolean flag;
        if (!com/tencent/bugly/proguard/u.desiredAssertionStatus())
            flag = true;
        else
            flag = false;
        e = flag;
    }
}
