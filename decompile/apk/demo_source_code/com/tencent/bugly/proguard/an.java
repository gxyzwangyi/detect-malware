// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.proguard;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.zip.*;

// Referenced classes of package com.tencent.bugly.proguard:
//            al

public final class an
    implements al {

    public an() {
    }

    public final byte[] a(byte abyte0[]) {
        ByteArrayOutputStream bytearrayoutputstream = new ByteArrayOutputStream();
        ZipOutputStream zipoutputstream = new ZipOutputStream(bytearrayoutputstream);
        ZipEntry zipentry = new ZipEntry("zip");
        zipentry.setSize(abyte0.length);
        zipoutputstream.putNextEntry(zipentry);
        zipoutputstream.write(abyte0);
        zipoutputstream.closeEntry();
        zipoutputstream.close();
        abyte0 = bytearrayoutputstream.toByteArray();
        bytearrayoutputstream.close();
        return abyte0;
    }

    public final byte[] b(byte abyte0[]) {
        Object obj = null;
        ByteArrayInputStream bytearrayinputstream = new ByteArrayInputStream(abyte0);
        ZipInputStream zipinputstream = new ZipInputStream(bytearrayinputstream);
        abyte0 = obj;
        ByteArrayOutputStream bytearrayoutputstream;
        for (; zipinputstream.getNextEntry() != null; bytearrayoutputstream.close()) {
            abyte0 = new byte[1024];
            bytearrayoutputstream = new ByteArrayOutputStream();
            do {
                int i = zipinputstream.read(abyte0, 0, abyte0.length);
                if (i == -1)
                    break;
                bytearrayoutputstream.write(abyte0, 0, i);
            } while (true);
            abyte0 = bytearrayoutputstream.toByteArray();
            bytearrayoutputstream.flush();
        }

        zipinputstream.close();
        bytearrayinputstream.close();
        return abyte0;
    }
}
