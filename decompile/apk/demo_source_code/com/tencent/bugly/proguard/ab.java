// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.proguard;

import android.content.Context;
import android.os.Process;
import android.os.SystemClock;
import com.tencent.bugly.crashreport.common.info.b;
import java.io.*;
import java.net.*;
import java.util.*;

// Referenced classes of package com.tencent.bugly.proguard:
//            ag, ae

public final class ab {

    private static ab b;
    public Map a;
    private Context c;

    private ab(Context context) {
        a = null;
        c = context;
    }

    public static ab a(Context context) {
        if (b == null)
            b = new ab(context);
        return b;
    }

    private static HttpURLConnection a(String s, String s1) {
        URL url;
        url = JVM INSTR new #31  <Class URL>;
        url.URL(s1);
        if (s == null) goto _L2; else goto _L1
_L1:
        if (!s.toLowerCase(Locale.US).contains("wap")) goto _L2; else goto _L3
_L3:
        String s2 = System.getProperty("http.proxyHost");
        s1 = System.getProperty("http.proxyPort");
        s = JVM INSTR new #64  <Class InetSocketAddress>;
        s.InetSocketAddress(s2, Integer.parseInt(s1));
        s1 = JVM INSTR new #75  <Class Proxy>;
        s1.Proxy(java.net.Proxy.Type.HTTP, s);
        s = (HttpURLConnection)url.openConnection(s1);
_L4:
        s.setConnectTimeout(30000);
        s.setReadTimeout(10000);
        s.setDoOutput(true);
        s.setDoInput(true);
        s.setRequestMethod("POST");
        s.setUseCaches(false);
        s.setInstanceFollowRedirects(false);
_L5:
        return s;
_L2:
        s = (HttpURLConnection)url.openConnection();
          goto _L4
        s;
        if (!ag.a(s))
            s.printStackTrace();
        s = null;
          goto _L5
    }

    private HttpURLConnection a(String s, byte abyte0[], String s1, Map map) {
        if (s == null) {
            ag.e("destUrl is null.", new Object[0]);
            s = null;
        } else {
label0:
            {
                s = a(s1, s);
                if (s != null)
                    break label0;
                ag.e("Failed to get HttpURLConnection object.", new Object[0]);
                s = null;
            }
        }
_L1:
        return s;
        s.setRequestProperty("wup_version", "3.0");
        if (map == null)
            break MISSING_BLOCK_LABEL_161;
        if (map.size() > 0) {
            for (Iterator iterator = map.entrySet().iterator(); iterator.hasNext(); s.setRequestProperty((String)map.getKey(), URLEncoder.encode((String)map.getValue(), "utf-8")))
                map = (java.util.Map.Entry)iterator.next();

        }
        s.setRequestProperty("A37", URLEncoder.encode(s1, "utf-8"));
        s.setRequestProperty("A38", URLEncoder.encode(s1, "utf-8"));
        s.connect();
        s1 = s.getOutputStream();
label1:
        {
            if (abyte0 != null)
                break label1;
            try {
                s1.write(0);
            }
            // Misplaced declaration of an exception variable
            catch (String s) {
                if (!ag.a(s))
                    s.printStackTrace();
                ag.e("Failed to upload crash, please check your network.", new Object[0]);
                s = null;
            }
        }
          goto _L1
        s1.write(abyte0);
          goto _L1
    }

    private static Map a(HttpURLConnection httpurlconnection) {
        HashMap hashmap = new HashMap();
        Map map = httpurlconnection.getHeaderFields();
        if (map == null || map.size() == 0) {
            httpurlconnection = null;
        } else {
            httpurlconnection = map.keySet().iterator();
            do {
                if (!httpurlconnection.hasNext())
                    break;
                String s = (String)httpurlconnection.next();
                List list = (List)map.get(s);
                if (list.size() > 0)
                    hashmap.put(s, list.get(0));
            } while (true);
            httpurlconnection = hashmap;
        }
        return httpurlconnection;
    }

    private static byte[] b(HttpURLConnection httpurlconnection) {
        Object obj2 = null;
        if (httpurlconnection != null) goto _L2; else goto _L1
_L1:
        httpurlconnection = obj2;
_L6:
        return httpurlconnection;
_L2:
        Object obj;
        obj = JVM INSTR new #239 <Class BufferedInputStream>;
        ((BufferedInputStream) (obj)).BufferedInputStream(httpurlconnection.getInputStream());
        httpurlconnection = ((HttpURLConnection) (obj));
        ByteArrayOutputStream bytearrayoutputstream = JVM INSTR new #248 <Class ByteArrayOutputStream>;
        httpurlconnection = ((HttpURLConnection) (obj));
        bytearrayoutputstream.ByteArrayOutputStream();
        httpurlconnection = ((HttpURLConnection) (obj));
        byte abyte0[] = new byte[1024];
_L4:
        httpurlconnection = ((HttpURLConnection) (obj));
        int i = ((BufferedInputStream) (obj)).read(abyte0);
        if (i <= 0)
            break; /* Loop/switch isn't completed */
        httpurlconnection = ((HttpURLConnection) (obj));
        bytearrayoutputstream.write(abyte0, 0, i);
        if (true) goto _L4; else goto _L3
        Object obj1;
        obj1;
_L9:
        httpurlconnection = ((HttpURLConnection) (obj));
        if (ag.a(((Throwable) (obj1))))
            break MISSING_BLOCK_LABEL_87;
        httpurlconnection = ((HttpURLConnection) (obj));
        ((Throwable) (obj1)).printStackTrace();
        httpurlconnection = obj2;
        if (obj == null) goto _L6; else goto _L5
_L5:
        ((BufferedInputStream) (obj)).close();
        httpurlconnection = obj2;
          goto _L6
        httpurlconnection;
        httpurlconnection.printStackTrace();
        httpurlconnection = obj2;
          goto _L6
_L3:
        httpurlconnection = ((HttpURLConnection) (obj));
        bytearrayoutputstream.flush();
        httpurlconnection = ((HttpURLConnection) (obj));
        obj1 = bytearrayoutputstream.toByteArray();
        httpurlconnection = ((HttpURLConnection) (obj1));
        try {
            ((BufferedInputStream) (obj)).close();
        }
        // Misplaced declaration of an exception variable
        catch (Object obj) {
            ((Throwable) (obj)).printStackTrace();
        }
          goto _L6
        obj;
        httpurlconnection = null;
_L8:
        if (httpurlconnection != null)
            try {
                httpurlconnection.close();
            }
            // Misplaced declaration of an exception variable
            catch (HttpURLConnection httpurlconnection) {
                httpurlconnection.printStackTrace();
            }
        throw obj;
        obj;
        if (true) goto _L8; else goto _L7
_L7:
        obj1;
        obj = null;
          goto _L9
    }

    public final byte[] a(String s, byte abyte0[], ae ae1, Map map) {
        if (s != null) goto _L2; else goto _L1
_L1:
        ag.e("Failed for no URL.", new Object[0]);
        s = null;
_L13:
        return s;
_L2:
        int i;
        int j;
        boolean flag;
        int k;
        long l1;
        Object obj;
        j = 0;
        i = 0;
        if (abyte0 == null)
            l1 = 0L;
        else
            l1 = abyte0.length;
        ag.c("request: %s, send: %d (pid=%d | tid=%d)", new Object[] {
            s, Long.valueOf(l1), Integer.valueOf(Process.myPid()), Integer.valueOf(Process.myTid())
        });
        k = 0;
        break MISSING_BLOCK_LABEL_76;
        ae1.a(l1);
        httpurlconnection = a(s, abyte0, ((String) (obj)), map);
        if (httpurlconnection == null) goto _L4; else goto _L3
_L3:
        i1 = httpurlconnection.getResponseCode();
        if (i1 != 200)
            break MISSING_BLOCK_LABEL_322;
        a = a(httpurlconnection);
        abyte1 = b(httpurlconnection);
        if (abyte1 != null) goto _L6; else goto _L5
_L5:
        l2 = 0L;
_L8:
        ae1.b(l2);
        try {
            httpurlconnection.disconnect();
        }
        // Misplaced declaration of an exception variable
        catch (String s) {
            if (!ag.a(s))
                s.printStackTrace();
        }
        s = abyte1;
        continue; /* Loop/switch isn't completed */
_L6:
        k = abyte1.length;
        l2 = k;
        if (true) goto _L8; else goto _L7
_L7:
        if (i1 == 301 || i1 == 302 || i1 == 303 || i1 == 307)
            k = 1;
        else
            k = 0;
        if (k == 0)
            break MISSING_BLOCK_LABEL_475;
        abyte1 = httpurlconnection.getHeaderField("Location");
        if (abyte1 != null)
            break MISSING_BLOCK_LABEL_439;
        abyte1 = JVM INSTR new #304 <Class StringBuilder>;
        abyte1.StringBuilder("Failed to redirect: %d");
        ag.e(abyte1.append(i1).toString(), new Object[0]);
        try {
            httpurlconnection.disconnect();
        }
        // Misplaced declaration of an exception variable
        catch (String s) {
            if (!ag.a(s))
                s.printStackTrace();
        }
        s = null;
        continue; /* Loop/switch isn't completed */
        i++;
        ag.c("redirect code: %d ,to:%s", new Object[] {
            Integer.valueOf(i1), abyte1
        });
        flag = true;
        s = abyte1;
        j = 0;
        abyte1 = JVM INSTR new #304 <Class StringBuilder>;
        abyte1.StringBuilder("response code ");
        ag.d(abyte1.append(i1).toString(), new Object[0]);
        l3 = httpurlconnection.getContentLength();
        l2 = l3;
        if (l3 < 0L)
            l2 = 0L;
        ae1.b(l2);
        httpurlconnection.disconnect();
        abyte1 = s;
        j1 = j;
        i1 = i;
        k = ((flag) ? 1 : 0);
_L10:
        j = j1;
        i = i1;
        s = abyte1;
          goto _L9
        throwable;
        k = ((flag) ? 1 : 0);
        i1 = i;
        j1 = j;
        abyte1 = s;
        if (!ag.a(throwable)) {
            throwable.printStackTrace();
            k = ((flag) ? 1 : 0);
            i1 = i;
            j1 = j;
            abyte1 = s;
        }
          goto _L10
        abyte1;
_L14:
        if (!ag.a(abyte1))
            abyte1.printStackTrace();
        httpurlconnection.disconnect();
        k = ((flag) ? 1 : 0);
        i1 = i;
        j1 = j;
        abyte1 = s;
          goto _L10
        throwable;
        k = ((flag) ? 1 : 0);
        i1 = i;
        j1 = j;
        abyte1 = s;
        if (!ag.a(throwable)) {
            throwable.printStackTrace();
            k = ((flag) ? 1 : 0);
            i1 = i;
            j1 = j;
            abyte1 = s;
        }
          goto _L10
        s;
        httpurlconnection.disconnect();
_L11:
        throw s;
        abyte0;
        if (!ag.a(abyte0))
            abyte0.printStackTrace();
        if (true) goto _L11; else goto _L4
_L4:
        ag.c("Failed to execute post.", new Object[0]);
        ae1.b(0L);
        k = ((flag) ? 1 : 0);
        i1 = i;
        j1 = j;
        abyte1 = s;
          goto _L10
_L9:
        int i1;
        int j1;
        long l2;
        long l3;
        byte abyte1[];
        Throwable throwable;
        HttpURLConnection httpurlconnection;
        while (j <= 0 && i <= 0)  {
label0:
            {
                if (k != 0) {
                    flag = false;
                } else {
                    int l = j + 1;
                    flag = k;
                    j = l;
                    if (l > 1) {
                        ag.c((new StringBuilder("try time: ")).append(l).toString(), new Object[0]);
                        SystemClock.sleep((long)(new Random(System.currentTimeMillis())).nextInt(10000) + 10000L);
                        flag = k;
                        j = l;
                    }
                }
                obj = com.tencent.bugly.crashreport.common.info.b.e(c);
                if (obj != null)
                    break label0;
                ag.d("Failed to request for network not avail", new Object[0]);
                k = ((flag) ? 1 : 0);
            }
        }
        s = null;
        if (true) goto _L13; else goto _L12
_L12:
        abyte1;
        flag = true;
          goto _L14
        IOException ioexception;
        ioexception;
        s = abyte1;
        abyte1 = ioexception;
        flag = true;
        j = 0;
          goto _L14
        abyte1;
          goto _L14
    }
}
