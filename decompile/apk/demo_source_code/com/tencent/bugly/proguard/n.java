// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.proguard;

import android.os.Handler;
import android.os.Looper;
import android.text.TextUtils;
import com.tencent.bugly.beta.download.BetaReceiver;
import com.tencent.bugly.beta.download.DownloadTask;
import com.tencent.bugly.beta.ui.c;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;
import java.util.concurrent.ConcurrentHashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

// Referenced classes of package com.tencent.bugly.proguard:
//            l, m, ag

public final class n extends DownloadTask
    implements Runnable {

    public long h;
    private File i;
    private long j;
    private Handler k;

    public n(String s, String s1, long l1, long l2, String s2) {
        super(s, "", "", s2);
        h = 0L;
        j = 0L;
        k = new Handler(Looper.getMainLooper());
        i = new File(s1);
        a = i.getParent();
        b = i.getName();
        d = l1;
        e = l2;
        getStatus();
    }

    public n(String s, String s1, String s2, String s3) {
        super(s, s1, s2, s3);
        h = 0L;
        j = 0L;
        k = new Handler(Looper.getMainLooper());
        getStatus();
    }

    private String a(HttpURLConnection httpurlconnection) {
        if (TextUtils.isEmpty(b)) goto _L2; else goto _L1
_L1:
        httpurlconnection = b;
_L11:
        return httpurlconnection;
_L2:
        Map map = httpurlconnection.getHeaderFields();
        if (map == null)
            break MISSING_BLOCK_LABEL_163;
        httpurlconnection = map.keySet().iterator();
_L4:
        String s;
        do {
            if (!httpurlconnection.hasNext())
                break MISSING_BLOCK_LABEL_163;
            s = (String)httpurlconnection.next();
        } while (s == null);
        Object obj = (List)map.get(s);
        if (obj == null) goto _L4; else goto _L3
_L3:
        obj = ((List) (obj)).iterator();
_L7:
        if (!((Iterator) (obj)).hasNext()) goto _L4; else goto _L5
_L5:
        Object obj1 = (String)((Iterator) (obj)).next();
        if (obj1 == null) goto _L7; else goto _L6
_L6:
        if (!"content-disposition".equals(s.toLowerCase())) goto _L7; else goto _L8
_L8:
        obj1 = Pattern.compile(".*filename=(.*)").matcher(((String) (obj1)).toLowerCase());
        if (!((Matcher) (obj1)).find()) goto _L7; else goto _L9
_L9:
        httpurlconnection = ((Matcher) (obj1)).group(1);
        continue; /* Loop/switch isn't completed */
        boolean flag;
        httpurlconnection = getDownloadUrl().substring(getDownloadUrl().lastIndexOf('/') + 1);
        flag = TextUtils.isEmpty(httpurlconnection);
        if (!flag)
            continue; /* Loop/switch isn't completed */
_L12:
        httpurlconnection = (new StringBuilder()).append(UUID.randomUUID()).append(".apk").toString();
        if (true) goto _L11; else goto _L10
_L10:
        httpurlconnection;
        httpurlconnection.printStackTrace();
          goto _L12
    }

    private void a() {
        h = h + (System.currentTimeMillis() - j);
        l.a.a(this);
        j = System.currentTimeMillis();
        c.a.a();
        k.post(new com.tencent.bugly.beta.global.c(9, new Object[] {
            c, this
        }));
    }

    private void a(int i1, String s) {
        g = 5;
        c.a.a();
        m.a.b.remove(getDownloadUrl());
        k.post(new com.tencent.bugly.beta.global.c(10, new Object[] {
            c, this, Integer.valueOf(i1), s
        }));
    }

    private void b() {
        g = 1;
        a();
        m.a.b.remove(getDownloadUrl());
        BetaReceiver.netListeners.remove(getDownloadUrl());
        k.post(new com.tencent.bugly.beta.global.c(8, new Object[] {
            c, this
        }));
    }

    public final void delete(boolean flag) {
        if (g != 5)
            g = 3;
        if (flag) {
            if (getSaveFile() != null && getSaveFile().exists() && !getSaveFile().isDirectory())
                getSaveFile().delete();
            l.a.b(this);
        }
        BetaReceiver.netListeners.remove(getDownloadUrl());
        b = null;
        d = 0L;
        e = 0L;
        g = 4;
    }

    public final void download() {
        if (getStatus() != 1) goto _L2; else goto _L1
_L1:
        b();
_L4:
        return;
_L2:
        if (getStatus() != 2) {
            if (getSaveFile() == null || !getSaveFile().exists()) {
                d = 0L;
                e = 0L;
                h = 0L;
            } else {
                d = getSaveFile().length();
            }
            if (f)
                c.a.a(this);
            j = System.currentTimeMillis();
            g = 2;
            m.a.b.put(getDownloadUrl(), this);
            m.a.a(this);
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public final long getCostTime() {
        return h;
    }

    public final File getSaveFile() {
        return i;
    }

    public final int getStatus() {
        if (getSaveFile() != null && getSaveFile().exists() && getSaveFile().length() == e && !m.a.b.contains(this)) {
            d = e;
            g = 1;
        }
        if (getSaveFile() != null && getSaveFile().exists() && getSaveFile().length() > 0L && getSaveFile().length() < e && !m.a.b.contains(this)) {
            d = getSaveFile().length();
            g = 3;
        }
        if ((getSaveFile() == null || !getSaveFile().exists()) && !m.a.b.contains(this))
            g = 0;
        return g;
    }

    public final void run() {
        Object obj3 = null;
        URL url;
        url = JVM INSTR new #294 <Class URL>;
        url.URL(getDownloadUrl());
        int i1;
        Object obj1;
        i1 = 0;
        obj1 = null;
_L10:
        int j1;
        Object obj4;
        j1 = i1;
        obj4 = obj1;
        if (i1 >= 3) goto _L2; else goto _L1
_L1:
        Object obj2;
        i1++;
        obj4 = obj3;
        obj2 = obj1;
        Object obj = (HttpURLConnection)url.openConnection();
        obj4 = obj3;
        obj2 = obj1;
        ((HttpURLConnection) (obj)).setConnectTimeout(5000);
        obj4 = obj3;
        obj2 = obj1;
        ((HttpURLConnection) (obj)).setRequestMethod("GET");
        obj4 = obj3;
        obj2 = obj1;
        ((HttpURLConnection) (obj)).setRequestProperty("Referer", url.toString());
        obj4 = obj3;
        obj2 = obj1;
        ((HttpURLConnection) (obj)).setRequestProperty("Charset", "UTF-8");
        obj4 = obj3;
        obj2 = obj1;
        Object obj5 = JVM INSTR new #157 <Class StringBuilder>;
        obj4 = obj3;
        obj2 = obj1;
        ((StringBuilder) (obj5)).StringBuilder("bytes=");
        obj4 = obj3;
        obj2 = obj1;
        ((HttpURLConnection) (obj)).setRequestProperty("Range", ((StringBuilder) (obj5)).append(d).append("-").toString());
        obj4 = obj3;
        obj2 = obj1;
        ((HttpURLConnection) (obj)).setRequestProperty("Connection", "Keep-Alive");
        obj4 = obj3;
        obj2 = obj1;
        ((HttpURLConnection) (obj)).connect();
        obj4 = obj3;
        obj2 = obj1;
        b = a(((HttpURLConnection) (obj)));
        obj4 = obj3;
        obj2 = obj1;
        File file = JVM INSTR new #39  <Class File>;
        obj4 = obj3;
        obj2 = obj1;
        file.File(a);
        obj4 = obj3;
        obj2 = obj1;
        if (file.exists())
            break MISSING_BLOCK_LABEL_290;
        obj4 = obj3;
        obj2 = obj1;
        file.mkdirs();
        obj4 = obj3;
        obj2 = obj1;
        obj5 = JVM INSTR new #39  <Class File>;
        obj4 = obj3;
        obj2 = obj1;
        ((File) (obj5)).File(file, b);
        obj4 = obj3;
        obj2 = obj1;
        i = ((File) (obj5));
        obj4 = obj3;
        obj2 = obj1;
        if (e != 0L) goto _L4; else goto _L3
_L3:
        obj4 = obj3;
        obj2 = obj1;
        e = ((HttpURLConnection) (obj)).getContentLength();
        obj4 = obj3;
        obj2 = obj1;
        if (e > 0L) goto _L4; else goto _L5
_L5:
        obj4 = obj3;
        obj2 = obj1;
        a(2000, "tLen <= 0 ");
        if (obj3 == null)
            break MISSING_BLOCK_LABEL_422;
        obj2 = obj1;
        obj = obj1;
        ((RandomAccessFile) (obj3)).close();
        if (obj1 == null)
            break MISSING_BLOCK_LABEL_432;
        ((InputStream) (obj1)).close();
_L6:
        return;
        obj;
        ag.a(((MalformedURLException) (obj)).getMessage(), new Object[0]);
        a(2010, ((MalformedURLException) (obj)).getMessage());
          goto _L6
        obj;
        ((Exception) (obj)).printStackTrace();
          goto _L6
_L4:
        obj4 = obj3;
        obj2 = obj1;
        l.a.a(this);
        obj4 = obj3;
        obj2 = obj1;
        obj = ((HttpURLConnection) (obj)).getInputStream();
        obj2 = new byte[0x4b000];
        obj1 = JVM INSTR new #353 <Class RandomAccessFile>;
        ((RandomAccessFile) (obj1)).RandomAccessFile(i, "rwd");
        ((RandomAccessFile) (obj1)).seek(d);
_L8:
        j1 = ((InputStream) (obj)).read(((byte []) (obj2)));
        if (j1 == -1)
            break MISSING_BLOCK_LABEL_668;
        d = d + (long)j1;
        if (d <= e)
            break MISSING_BLOCK_LABEL_604;
        b();
        ag.e("mSavedLength > mTotalLength,\u91CD\u65B0\u4E0B\u8F7D!", new Object[0]);
        ((RandomAccessFile) (obj1)).close();
        if (obj != null)
            try {
                ((InputStream) (obj)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                ((Exception) (obj)).printStackTrace();
            }
          goto _L6
        a();
        ((RandomAccessFile) (obj1)).write(((byte []) (obj2)), 0, j1);
        if (getSaveFile() == null || !getSaveFile().exists())
            break; /* Loop/switch isn't completed */
        j1 = getStatus();
        if (j1 != 3) goto _L8; else goto _L7
_L7:
        ((RandomAccessFile) (obj1)).close();
        if (obj != null)
            try {
                ((InputStream) (obj)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                ((Exception) (obj)).printStackTrace();
            }
          goto _L6
        b();
        ((RandomAccessFile) (obj1)).close();
        obj4 = obj;
        j1 = i1;
_L2:
        if (j1 < 3)
            break MISSING_BLOCK_LABEL_712;
        obj2 = obj4;
        obj = obj4;
        com.tencent.bugly.proguard.ag.c("have retry %d times", new Object[] {
            Integer.valueOf(3)
        });
        if (obj4 != null)
            try {
                ((InputStream) (obj4)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                ((Exception) (obj)).printStackTrace();
            }
          goto _L6
        obj2;
        obj3 = obj1;
        obj1 = obj;
        obj = obj2;
_L15:
        obj4 = obj3;
        obj2 = obj1;
        ((IOException) (obj)).printStackTrace();
        obj4 = obj3;
        obj2 = obj1;
        com.tencent.bugly.proguard.ag.c("IOException,stop download!", new Object[0]);
        if (obj3 == null) goto _L10; else goto _L9
_L9:
        obj2 = obj1;
        obj = obj1;
        ((RandomAccessFile) (obj3)).close();
          goto _L10
        Exception exception;
        exception;
        obj3 = obj1;
        obj1 = obj;
_L14:
        if (obj3 == null)
            break MISSING_BLOCK_LABEL_822;
        obj2 = obj1;
        obj = obj1;
        ((RandomAccessFile) (obj3)).close();
        obj2 = obj1;
        obj = obj1;
        try {
            throw exception;
        }
        // Misplaced declaration of an exception variable
        catch (Object obj1) { }
_L13:
        obj = obj2;
        a(2000, ((Exception) (obj1)).getMessage());
        obj = obj2;
        ((Exception) (obj1)).printStackTrace();
        if (obj2 != null)
            try {
                ((InputStream) (obj2)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                ((Exception) (obj)).printStackTrace();
            }
          goto _L6
        obj1;
_L12:
        if (obj != null)
            try {
                ((InputStream) (obj)).close();
            }
            // Misplaced declaration of an exception variable
            catch (Object obj) {
                ((Exception) (obj)).printStackTrace();
            }
        throw obj1;
        obj1;
        if (true) goto _L12; else goto _L11
_L11:
        obj1;
        obj2 = obj;
          goto _L13
        exception;
        obj3 = obj4;
        obj1 = obj2;
          goto _L14
        exception;
        obj1 = obj;
          goto _L14
        obj;
          goto _L15
        IOException ioexception;
        ioexception;
        obj1 = obj;
        obj = ioexception;
          goto _L15
    }

    public final void stop() {
        if (g != 5)
            g = 3;
    }
}
