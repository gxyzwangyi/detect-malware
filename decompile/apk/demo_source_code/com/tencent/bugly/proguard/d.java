// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.proguard;

import java.nio.ByteBuffer;
import java.util.HashMap;

// Referenced classes of package com.tencent.bugly.proguard:
//            c, f, h, i, 
//            k

public final class d extends c {

    private static HashMap f = null;
    private static HashMap g = null;
    private f e;

    public d() {
        e = new f();
        e.a = 2;
    }

    public final void a(String s, Object obj) {
        if (s.startsWith(".")) {
            throw new IllegalArgumentException((new StringBuilder("put name can not startwith . , now is ")).append(s).toString());
        } else {
            super.a(s, obj);
            return;
        }
    }

    public final void a(byte abyte0[]) {
        if (abyte0.length < 4)
            throw new IllegalArgumentException("decode package must include size head");
        h h1 = JVM INSTR new #68  <Class h>;
        h1.h(abyte0, 4);
        h1.a(b);
        e.a(h1);
        if (e.a != 3)
            break MISSING_BLOCK_LABEL_120;
        h1 = JVM INSTR new #68  <Class h>;
        h1.h(e.e);
        h1.a(b);
        if (f == null) {
            abyte0 = JVM INSTR new #88  <Class HashMap>;
            abyte0.HashMap();
            f = abyte0;
            abyte0.put("", new byte[0]);
        }
        d = h1.a(f, 0, false);
_L1:
        return;
        try {
            abyte0 = JVM INSTR new #68  <Class h>;
            abyte0.h(e.e);
            abyte0.a(b);
            if (g == null) {
                HashMap hashmap = JVM INSTR new #88  <Class HashMap>;
                hashmap.HashMap();
                g = hashmap;
                hashmap = JVM INSTR new #88  <Class HashMap>;
                hashmap.HashMap();
                hashmap.put("", new byte[0]);
                g.put("", hashmap);
            }
            a = abyte0.a(g, 0, false);
            new HashMap();
        }
        // Misplaced declaration of an exception variable
        catch (byte abyte0[]) {
            throw new RuntimeException(abyte0);
        }
          goto _L1
    }

    public final byte[] a() {
        if (e.a == 2) {
            if (e.c.equals(""))
                throw new IllegalArgumentException("servantName can not is null");
            if (e.d.equals(""))
                throw new IllegalArgumentException("funcName can not is null");
        } else {
            if (e.c == null)
                e.c = "";
            if (e.d == null)
                e.d = "";
        }
        byte abyte0[] = new i(0);
        abyte0.a(b);
        int j;
        ByteBuffer bytebuffer;
        if (e.a == 2)
            abyte0.a(a, 0);
        else
            abyte0.a(d, 0);
        e.e = k.a(abyte0.a());
        abyte0 = new i(0);
        abyte0.a(b);
        e.a(abyte0);
        abyte0 = k.a(abyte0.a());
        j = abyte0.length;
        bytebuffer = ByteBuffer.allocate(j + 4);
        bytebuffer.putInt(j + 4).put(abyte0).flip();
        return bytebuffer.array();
    }

    public final void b(int j) {
        e.b = 1;
    }

    public final void d() {
        super.d();
        e.a = 3;
    }

    public final void d(String s) {
        e.c = s;
    }

    public final void e(String s) {
        e.d = s;
    }

}
