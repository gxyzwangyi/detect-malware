// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.proguard;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import java.util.*;

// Referenced classes of package com.tencent.bugly.proguard:
//            z, ag, aa, af, 
//            x

public final class y {
    final class a extends Thread {

        private int a;
        private x b;
        private String c;
        private ContentValues d;
        private boolean e;
        private String f[];
        private String g;
        private String h[];
        private String i;
        private String j;
        private String k;
        private String l;
        private String m;
        private String n[];
        private int o;
        private String p;
        private byte q[];
        private y r;

        public final void a(int i1, String s, byte abyte0[]) {
            o = i1;
            p = s;
            q = abyte0;
        }

        public final void a(boolean flag, String s, String as[], String s1, String as1[], String s2, String s3, 
                String s4, String s5) {
            e = flag;
            c = s;
            f = as;
            g = s1;
            h = as1;
            i = s2;
            j = s3;
            k = s4;
            l = s5;
        }

        public final void run() {
            a;
            JVM INSTR tableswitch 1 6: default 44
        //                       1 45
        //                       2 68
        //                       3 95
        //                       4 146
        //                       5 173
        //                       6 192;
               goto _L1 _L2 _L3 _L4 _L5 _L6 _L7
_L1:
            return;
_L2:
            y.a(r, c, d, b);
            continue; /* Loop/switch isn't completed */
_L3:
            y.a(r, c, m, n, b);
            continue; /* Loop/switch isn't completed */
_L4:
            y.a(r, e, c, f, g, h, i, j, k, l, b);
            continue; /* Loop/switch isn't completed */
_L5:
            y.a(r, o, p, q, b);
            continue; /* Loop/switch isn't completed */
_L6:
            y.a(r, o, b);
            continue; /* Loop/switch isn't completed */
_L7:
            y y1 = r;
            y.a(o, p, b);
            if (true) goto _L1; else goto _L8
_L8:
        }

        public a(int i1, x x) {
            r = y.this;
            super();
            a = i1;
            b = x;
        }
    }


    private static y a = null;
    private static z b = null;
    private static boolean c = false;

    private y(Context context, List list) {
        b = new z(context, list);
    }

    static int a(y y1, String s, String s1, String as[], x x) {
        return y1.a(s, s1, as, x);
    }

    private int a(String s, String s1, String as[], x x) {
        boolean flag = false;
        int i = 0;
        this;
        JVM INSTR monitorenter ;
        SQLiteDatabase sqlitedatabase = b.getWritableDatabase();
        if (sqlitedatabase == null)
            break MISSING_BLOCK_LABEL_31;
        i = sqlitedatabase.delete(s, s1, as);
        int j;
        j = i;
        if (x != null)
            j = i;
_L2:
        this;
        JVM INSTR monitorexit ;
        return j;
        s;
        if (!ag.a(s))
            s.printStackTrace();
        j = ((flag) ? 1 : 0);
        if (x != null)
            j = ((flag) ? 1 : 0);
        if (true) goto _L2; else goto _L1
_L1:
        s;
        throw s;
        s;
        if (x == null);
        throw s;
    }

    static long a(y y1, String s, ContentValues contentvalues, x x) {
        return y1.a(s, contentvalues, x);
    }

    private long a(String s, ContentValues contentvalues, x x) {
        long l1 = 0L;
        this;
        JVM INSTR monitorenter ;
        SQLiteDatabase sqlitedatabase = b.getWritableDatabase();
        long l = l1;
        if (sqlitedatabase == null) goto _L2; else goto _L1
_L1:
        l = l1;
        if (contentvalues == null) goto _L2; else goto _L3
_L3:
        l = sqlitedatabase.replace(s, "_id", contentvalues);
        if (l < 0L) goto _L5; else goto _L4
_L4:
        ag.c("[db] insert %s success", new Object[] {
            s
        });
_L2:
        long l2;
        l2 = l;
        if (x != null)
            l2 = l;
_L6:
        this;
        JVM INSTR monitorexit ;
        return l2;
_L5:
        ag.d("[db] replace %s error", new Object[] {
            s
        });
          goto _L2
        s;
        if (!ag.a(s))
            s.printStackTrace();
        l2 = l1;
        if (x != null)
            l2 = l1;
          goto _L6
        s;
        throw s;
        s;
        if (x == null);
        throw s;
          goto _L2
    }

    static Cursor a(y y1, boolean flag, String s, String as[], String s1, String as1[], String s2, String s3, 
            String s4, String s5, x x) {
        return y1.a(flag, s, as, s1, as1, s2, s3, s4, s5, x);
    }

    private Cursor a(boolean flag, String s, String as[], String s1, String as1[], String s2, String s3, 
            String s4, String s5, x x) {
        this;
        JVM INSTR monitorenter ;
        SQLiteDatabase sqlitedatabase = b.getWritableDatabase();
        if (sqlitedatabase == null) goto _L2; else goto _L1
_L1:
        s = sqlitedatabase.query(flag, s, as, s1, as1, s2, s3, s4, s5);
_L6:
        if (x == null);
_L4:
        this;
        JVM INSTR monitorexit ;
        return s;
        s;
        if (!ag.a(s))
            s.printStackTrace();
        if (x != null)
            s = null;
        else
            s = null;
        if (true) goto _L4; else goto _L3
_L3:
        s;
        throw s;
        s;
        this;
        JVM INSTR monitorexit ;
        throw s;
_L2:
        s = null;
        if (true) goto _L6; else goto _L5
_L5:
    }

    private static aa a(Cursor cursor) {
        Object obj = null;
        if (cursor != null) goto _L2; else goto _L1
_L1:
        cursor = obj;
_L4:
        return cursor;
_L2:
        aa aa1;
        aa1 = JVM INSTR new #86  <Class aa>;
        aa1.aa();
        aa1.a = cursor.getLong(cursor.getColumnIndex("_id"));
        aa1.b = cursor.getInt(cursor.getColumnIndex("_tp"));
        aa1.c = cursor.getString(cursor.getColumnIndex("_pc"));
        aa1.d = cursor.getString(cursor.getColumnIndex("_th"));
        aa1.e = cursor.getLong(cursor.getColumnIndex("_tm"));
        aa1.g = cursor.getBlob(cursor.getColumnIndex("_dt"));
        cursor = aa1;
        continue; /* Loop/switch isn't completed */
        Throwable throwable;
        throwable;
        cursor = obj;
        if (!ag.a(throwable)) {
            throwable.printStackTrace();
            cursor = obj;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static y a() {
        com/tencent/bugly/proguard/y;
        JVM INSTR monitorenter ;
        y y1 = a;
        com/tencent/bugly/proguard/y;
        JVM INSTR monitorexit ;
        return y1;
        Exception exception;
        exception;
        throw exception;
    }

    public static y a(Context context, List list) {
        com/tencent/bugly/proguard/y;
        JVM INSTR monitorenter ;
        if (a == null) {
            y y1 = JVM INSTR new #2   <Class y>;
            y1.y(context, list);
            a = y1;
        }
        context = a;
        com/tencent/bugly/proguard/y;
        JVM INSTR monitorexit ;
        return context;
        context;
        throw context;
    }

    private Map a(int i, x x) {
        HashMap hashmap;
        Object obj;
        obj = c(i);
        hashmap = JVM INSTR new #147 <Class HashMap>;
        hashmap.HashMap();
        obj = ((List) (obj)).iterator();
_L4:
        if (!((Iterator) (obj)).hasNext()) goto _L2; else goto _L1
_L1:
        aa aa1;
        byte abyte0[];
        aa1 = (aa)((Iterator) (obj)).next();
        abyte0 = aa1.g;
        if (abyte0 == null) goto _L4; else goto _L3
_L3:
        hashmap.put(aa1.f, abyte0);
          goto _L4
        Throwable throwable;
        throwable;
_L8:
        if (!ag.a(throwable))
            throwable.printStackTrace();
        if (x == null);
_L6:
        return hashmap;
_L2:
        if (x == null);
        if (true) goto _L6; else goto _L5
_L5:
        x;
        throw x;
        throwable;
        hashmap = null;
        if (true) goto _L8; else goto _L7
_L7:
    }

    static Map a(y y1, int i, x x) {
        return y1.a(i, x);
    }

    public static void a(List list) {
        if (list != null && list.size() != 0) goto _L2; else goto _L1
_L1:
        return;
_L2:
        SQLiteDatabase sqlitedatabase = b.getWritableDatabase();
        if (sqlitedatabase == null) goto _L1; else goto _L3
_L3:
        StringBuilder stringbuilder = new StringBuilder();
        for (Iterator iterator = list.iterator(); iterator.hasNext(); stringbuilder.append(" or _id").append(" = ").append(((aa) (list)).a))
            list = (aa)iterator.next();

        String s = stringbuilder.toString();
        list = s;
        if (s.length() > 0)
            list = s.substring(4);
        stringbuilder.setLength(0);
        ag.c("deleted %s data %d", new Object[] {
            "t_lr", Integer.valueOf(sqlitedatabase.delete("t_lr", list, null))
        });
          goto _L1
        list;
        if (ag.a(list)) goto _L1; else goto _L4
_L4:
        list.printStackTrace();
          goto _L1
        list;
        throw list;
    }

    public static boolean a(int i, String s, x x) {
        boolean flag1;
        boolean flag2;
        boolean flag3;
        flag3 = true;
        flag2 = false;
        flag1 = false;
        SQLiteDatabase sqlitedatabase = b.getWritableDatabase();
        if (sqlitedatabase == null) goto _L2; else goto _L1
_L1:
        if (s == null) goto _L4; else goto _L3
_L3:
        if (s.trim().length() <= 0) goto _L4; else goto _L5
_L5:
        boolean flag = false;
_L11:
        if (!flag) goto _L7; else goto _L6
_L6:
        s = JVM INSTR new #184 <Class StringBuilder>;
        s.StringBuilder("_id = ");
        s = s.append(i).toString();
_L8:
        i = sqlitedatabase.delete("t_pf", s, null);
        ag.c("deleted %s data %d", new Object[] {
            "t_pf", Integer.valueOf(i)
        });
        if (i > 0)
            flag1 = flag3;
        else
            flag1 = false;
_L2:
        if (x == null);
_L9:
        return flag1;
_L4:
        flag = true;
        continue; /* Loop/switch isn't completed */
_L7:
        StringBuilder stringbuilder = JVM INSTR new #184 <Class StringBuilder>;
        stringbuilder.StringBuilder("_id = ");
        s = stringbuilder.append(i).append(" and _tp").append(" = \"").append(s).append("\"").toString();
          goto _L8
        s;
        if (!ag.a(s))
            s.printStackTrace();
        flag1 = flag2;
        if (x != null)
            flag1 = flag2;
          goto _L9
        s;
        if (x == null);
        throw s;
        if (true) goto _L11; else goto _L10
_L10:
    }

    private boolean a(int i, String s, byte abyte0[], x x) {
        boolean flag1 = false;
        boolean flag;
        aa aa1 = JVM INSTR new #86  <Class aa>;
        aa1.aa();
        aa1.a = i;
        aa1.f = s;
        aa1.e = System.currentTimeMillis();
        aa1.g = abyte0;
        flag = b(aa1);
        if (x == null);
_L2:
        return flag;
        s;
        if (!ag.a(s))
            s.printStackTrace();
        flag = flag1;
        if (x != null)
            flag = flag1;
        if (true) goto _L2; else goto _L1
_L1:
        s;
        if (x == null);
        throw s;
    }

    static boolean a(y y1, int i, String s, byte abyte0[], x x) {
        return y1.a(i, s, abyte0, x);
    }

    private static aa b(Cursor cursor) {
        Object obj = null;
        if (cursor != null) goto _L2; else goto _L1
_L1:
        cursor = obj;
_L4:
        return cursor;
_L2:
        aa aa1;
        aa1 = JVM INSTR new #86  <Class aa>;
        aa1.aa();
        aa1.a = cursor.getLong(cursor.getColumnIndex("_id"));
        aa1.e = cursor.getLong(cursor.getColumnIndex("_tm"));
        aa1.f = cursor.getString(cursor.getColumnIndex("_tp"));
        aa1.g = cursor.getBlob(cursor.getColumnIndex("_dt"));
        cursor = aa1;
        continue; /* Loop/switch isn't completed */
        Throwable throwable;
        throwable;
        cursor = obj;
        if (!ag.a(throwable)) {
            throwable.printStackTrace();
            cursor = obj;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static void b(int i) {
        Object obj;
        SQLiteDatabase sqlitedatabase;
        obj = null;
        sqlitedatabase = b.getWritableDatabase();
        if (sqlitedatabase == null)
            break MISSING_BLOCK_LABEL_66;
        if (i < 0)
            break MISSING_BLOCK_LABEL_37;
        obj = JVM INSTR new #184 <Class StringBuilder>;
        ((StringBuilder) (obj)).StringBuilder("_tp = ");
        obj = ((StringBuilder) (obj)).append(i).toString();
        ag.c("deleted %s data %d", new Object[] {
            "t_lr", Integer.valueOf(sqlitedatabase.delete("t_lr", ((String) (obj)), null))
        });
_L2:
        return;
        Object obj1;
        obj1;
        if (ag.a(((Throwable) (obj1)))) goto _L2; else goto _L1
_L1:
        ((Throwable) (obj1)).printStackTrace();
          goto _L2
        obj1;
        throw obj1;
    }

    private boolean b(aa aa1) {
        boolean flag1 = false;
        if (aa1 != null) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L4:
        return flag;
_L2:
        SQLiteDatabase sqlitedatabase = b.getWritableDatabase();
        flag = flag1;
        if (sqlitedatabase == null) goto _L4; else goto _L3
_L3:
        ContentValues contentvalues = d(aa1);
        flag = flag1;
        if (contentvalues == null) goto _L4; else goto _L5
_L5:
        long l = sqlitedatabase.replace("t_pf", "_id", contentvalues);
        flag = flag1;
        if (l < 0L) goto _L4; else goto _L6
_L6:
        ag.c("insert %s success!", new Object[] {
            "t_pf"
        });
        aa1.a = l;
        flag = true;
          goto _L4
        aa1;
        flag = flag1;
        if (ag.a(aa1)) goto _L4; else goto _L7
_L7:
        aa1.printStackTrace();
        flag = flag1;
          goto _L4
        aa1;
        throw aa1;
    }

    private static ContentValues c(aa aa1) {
        Object obj = null;
        if (aa1 != null) goto _L2; else goto _L1
_L1:
        aa1 = obj;
_L4:
        return aa1;
_L2:
        ContentValues contentvalues;
        contentvalues = JVM INSTR new #265 <Class ContentValues>;
        contentvalues.ContentValues();
        if (aa1.a > 0L)
            contentvalues.put("_id", Long.valueOf(aa1.a));
        contentvalues.put("_tp", Integer.valueOf(aa1.b));
        contentvalues.put("_pc", aa1.c);
        contentvalues.put("_th", aa1.d);
        contentvalues.put("_tm", Long.valueOf(aa1.e));
        if (aa1.g != null)
            contentvalues.put("_dt", aa1.g);
        aa1 = contentvalues;
        continue; /* Loop/switch isn't completed */
        Throwable throwable;
        throwable;
        aa1 = obj;
        if (!ag.a(throwable)) {
            throwable.printStackTrace();
            aa1 = obj;
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    private List c(int i) {
        Object obj2 = b.getWritableDatabase();
        if (obj2 == null) goto _L2; else goto _L1
_L1:
        Object obj;
        String s;
        obj = JVM INSTR new #184 <Class StringBuilder>;
        ((StringBuilder) (obj)).StringBuilder("_id = ");
        s = ((StringBuilder) (obj)).append(i).toString();
        obj = ((SQLiteDatabase) (obj2)).query("t_pf", null, s, null, null, null, null);
        if (obj != null) goto _L4; else goto _L3
_L3:
        if (obj != null)
            ((Cursor) (obj)).close();
        obj = null;
_L10:
        return ((List) (obj));
_L4:
        Object obj1;
        StringBuilder stringbuilder;
        stringbuilder = JVM INSTR new #184 <Class StringBuilder>;
        stringbuilder.StringBuilder();
        obj1 = JVM INSTR new #291 <Class ArrayList>;
        ((ArrayList) (obj1)).ArrayList();
_L9:
        if (!((Cursor) (obj)).moveToNext()) goto _L6; else goto _L5
_L5:
        aa aa1 = b(((Cursor) (obj)));
        if (aa1 == null) goto _L8; else goto _L7
_L7:
        ((List) (obj1)).add(aa1);
          goto _L9
        obj1;
_L12:
        if (!ag.a(((Throwable) (obj1))))
            ((Throwable) (obj1)).printStackTrace();
        if (obj != null)
            ((Cursor) (obj)).close();
_L2:
        obj = null;
          goto _L10
_L8:
        String s1 = ((Cursor) (obj)).getString(((Cursor) (obj)).getColumnIndex("_tp"));
        stringbuilder.append(" or _tp").append(" = ").append(s1);
          goto _L9
        Throwable throwable;
        throwable;
        ag.d("unknown id!", new Object[0]);
          goto _L9
        obj2;
        obj1 = obj;
        obj = obj2;
_L11:
        if (obj1 != null)
            ((Cursor) (obj1)).close();
        throw obj;
_L6:
        if (stringbuilder.length() > 0) {
            stringbuilder.append(" and _id").append(" = ").append(i);
            ag.d("deleted %s illegle data %d", new Object[] {
                "t_pf", Integer.valueOf(((SQLiteDatabase) (obj2)).delete("t_pf", s.substring(4), null))
            });
        }
        if (obj != null)
            ((Cursor) (obj)).close();
        obj = obj1;
          goto _L10
        obj;
        obj1 = null;
          goto _L11
        Exception exception;
        exception;
        obj1 = obj;
        obj = exception;
          goto _L11
        obj1;
        obj = null;
          goto _L12
    }

    private static ContentValues d(aa aa1) {
        if (aa1 == null) goto _L2; else goto _L1
_L1:
        Object obj;
        obj = aa1.f;
        boolean flag;
        if (obj != null && ((String) (obj)).trim().length() > 0)
            flag = false;
        else
            flag = true;
        if (!flag) goto _L3; else goto _L2
_L2:
        obj = null;
_L5:
        return ((ContentValues) (obj));
_L3:
        ContentValues contentvalues;
        contentvalues = JVM INSTR new #265 <Class ContentValues>;
        contentvalues.ContentValues();
        if (aa1.a > 0L)
            contentvalues.put("_id", Long.valueOf(aa1.a));
        contentvalues.put("_tp", aa1.f);
        contentvalues.put("_tm", Long.valueOf(aa1.e));
        obj = contentvalues;
        if (aa1.g == null)
            continue; /* Loop/switch isn't completed */
        contentvalues.put("_dt", aa1.g);
        obj = contentvalues;
        continue; /* Loop/switch isn't completed */
        aa1;
        if (!ag.a(aa1))
            aa1.printStackTrace();
        obj = null;
        if (true) goto _L5; else goto _L4
_L4:
    }

    public final int a(String s, String s1, String as[], x x, boolean flag) {
        return a(s, s1, as, ((x) (null)));
    }

    public final long a(String s, ContentValues contentvalues, x x, boolean flag) {
        return a(s, contentvalues, ((x) (null)));
    }

    public final Cursor a(String s, String as[], String s1, String as1[], x x, boolean flag) {
        return a(false, s, as, s1, as1, null, null, null, null, null);
    }

    public final List a(int i) {
        Object obj2 = b.getWritableDatabase();
        if (obj2 == null) goto _L2; else goto _L1
_L1:
        if (i < 0) goto _L4; else goto _L3
_L3:
        Object obj;
        obj = JVM INSTR new #184 <Class StringBuilder>;
        ((StringBuilder) (obj)).StringBuilder("_tp = ");
        obj = ((StringBuilder) (obj)).append(i).toString();
_L7:
        obj = ((SQLiteDatabase) (obj2)).query("t_lr", null, ((String) (obj)), null, null, null, null);
        if (obj != null) goto _L6; else goto _L5
_L5:
        if (obj != null)
            ((Cursor) (obj)).close();
        obj = null;
_L13:
        return ((List) (obj));
_L4:
        obj = null;
          goto _L7
_L6:
        Object obj1;
        Object obj3;
        obj3 = JVM INSTR new #184 <Class StringBuilder>;
        ((StringBuilder) (obj3)).StringBuilder();
        obj1 = JVM INSTR new #291 <Class ArrayList>;
        ((ArrayList) (obj1)).ArrayList();
_L12:
        if (!((Cursor) (obj)).moveToNext()) goto _L9; else goto _L8
_L8:
        aa aa1 = a(((Cursor) (obj)));
        if (aa1 == null) goto _L11; else goto _L10
_L10:
        ((List) (obj1)).add(aa1);
          goto _L12
        obj1;
_L15:
        if (!ag.a(((Throwable) (obj1))))
            ((Throwable) (obj1)).printStackTrace();
        if (obj != null)
            ((Cursor) (obj)).close();
_L2:
        obj = null;
          goto _L13
_L11:
        long l = ((Cursor) (obj)).getLong(((Cursor) (obj)).getColumnIndex("_id"));
        ((StringBuilder) (obj3)).append(" or _id").append(" = ").append(l);
          goto _L12
        Throwable throwable;
        throwable;
        ag.d("unknown id!", new Object[0]);
          goto _L12
        obj2;
        obj1 = obj;
        obj = obj2;
_L14:
        if (obj1 != null)
            ((Cursor) (obj1)).close();
        throw obj;
_L9:
        obj3 = ((StringBuilder) (obj3)).toString();
        if (((String) (obj3)).length() > 0)
            ag.d("deleted %s illegle data %d", new Object[] {
                "t_lr", Integer.valueOf(((SQLiteDatabase) (obj2)).delete("t_lr", ((String) (obj3)).substring(4), null))
            });
        if (obj != null)
            ((Cursor) (obj)).close();
        obj = obj1;
          goto _L13
        obj;
        obj1 = null;
          goto _L14
        Exception exception;
        exception;
        obj1 = obj;
        obj = exception;
          goto _L14
        obj1;
        obj = null;
          goto _L15
    }

    public final Map a(int i, x x, boolean flag) {
        return a(i, ((x) (null)));
    }

    public final boolean a(int i, String s, x x, boolean flag) {
        return a(555, s, ((x) (null)));
    }

    public final boolean a(int i, String s, byte abyte0[], x x, boolean flag) {
        if (!flag) {
            x = new a(4, null);
            x.a(i, s, abyte0);
            af.a().a(x);
            flag = true;
        } else {
            flag = a(i, s, abyte0, ((x) (null)));
        }
        return flag;
    }

    public final boolean a(aa aa1) {
        boolean flag1 = false;
        if (aa1 != null) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L4:
        return flag;
_L2:
        SQLiteDatabase sqlitedatabase = b.getWritableDatabase();
        flag = flag1;
        if (sqlitedatabase == null) goto _L4; else goto _L3
_L3:
        ContentValues contentvalues = c(aa1);
        flag = flag1;
        if (contentvalues == null) goto _L4; else goto _L5
_L5:
        long l = sqlitedatabase.replace("t_lr", "_id", contentvalues);
        flag = flag1;
        if (l < 0L) goto _L4; else goto _L6
_L6:
        ag.c("insert %s success!", new Object[] {
            "t_lr"
        });
        aa1.a = l;
        flag = true;
          goto _L4
        aa1;
        flag = flag1;
        if (ag.a(aa1)) goto _L4; else goto _L7
_L7:
        aa1.printStackTrace();
        flag = flag1;
          goto _L4
        aa1;
        throw aa1;
    }

}
