// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.proguard;

import java.nio.ByteBuffer;

public final class k {

    public static boolean a(byte byte0, byte byte1) {
        boolean flag;
        if (byte0 == byte1)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public static boolean a(int i, int j) {
        boolean flag;
        if (i == j)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public static boolean a(long l, long l1) {
        boolean flag;
        if (l == l1)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public static boolean a(Object obj, Object obj1) {
        return obj.equals(obj1);
    }

    public static boolean a(boolean flag, boolean flag1) {
        if (flag == flag1)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public static byte[] a(ByteBuffer bytebuffer) {
        byte abyte0[] = new byte[bytebuffer.position()];
        System.arraycopy(bytebuffer.array(), 0, abyte0, 0, abyte0.length);
        return abyte0;
    }

    static  {
        byte abyte1[] = new byte[16];
        byte[] _tmp = abyte1;
        abyte1[0] = 48;
        abyte1[1] = 49;
        abyte1[2] = 50;
        abyte1[3] = 51;
        abyte1[4] = 52;
        abyte1[5] = 53;
        abyte1[6] = 54;
        abyte1[7] = 55;
        abyte1[8] = 56;
        abyte1[9] = 57;
        abyte1[10] = 65;
        abyte1[11] = 66;
        abyte1[12] = 67;
        abyte1[13] = 68;
        abyte1[14] = 69;
        abyte1[15] = 70;
        byte abyte2[] = new byte[256];
        byte abyte0[] = new byte[256];
        for (int i = 0; i < 256; i++) {
            abyte2[i] = abyte1[i >>> 4];
            abyte0[i] = abyte1[i & 0xf];
        }

    }
}
