// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.proguard;

import java.util.*;

// Referenced classes of package com.tencent.bugly.proguard:
//            a, h, i, k, 
//            b

public class c extends a {

    protected HashMap d;
    private HashMap e;
    private h f;

    public c() {
        d = null;
        e = new HashMap();
        f = new h();
    }

    public final volatile void a(String s) {
        super.a(s);
    }

    public void a(String s, Object obj) {
        if (d != null) {
            if (s == null)
                throw new IllegalArgumentException("put key can not is null");
            if (obj == null)
                throw new IllegalArgumentException("put value can not is null");
            if (obj instanceof Set)
                throw new IllegalArgumentException("can not support Set");
            i j = new i();
            j.a(b);
            j.a(obj, 0);
            obj = k.a(j.a());
            d.put(s, obj);
        } else {
            super.a(s, obj);
        }
    }

    public void a(byte abyte0[]) {
        super.a(abyte0);
_L1:
        return;
        Exception exception;
        exception;
        f.a(abyte0);
        f.a(b);
        abyte0 = new HashMap(1);
        abyte0.put("", new byte[0]);
        d = f.a(abyte0, 0, false);
          goto _L1
    }

    public byte[] a() {
        byte abyte0[];
        if (d != null) {
            i j = new i(0);
            j.a(b);
            j.a(d, 0);
            abyte0 = k.a(j.a());
        } else {
            abyte0 = super.a();
        }
        return abyte0;
    }

    public final Object b(String s, Object obj) {
        Object obj1 = null;
        if (d == null) goto _L2; else goto _L1
_L1:
        if (d.containsKey(s)) goto _L4; else goto _L3
_L3:
        return obj1;
_L4:
        if (e.containsKey(s)) {
            obj1 = e.get(s);
            continue; /* Loop/switch isn't completed */
        }
        obj1 = (byte[])d.get(s);
        try {
            f.a(((byte []) (obj1)));
            f.a(b);
            obj = f.a(obj, 0, true);
        }
        // Misplaced declaration of an exception variable
        catch (String s) {
            throw new b(s);
        }
        obj1 = obj;
        if (obj == null)
            continue; /* Loop/switch isn't completed */
        e.put(s, obj);
        obj1 = obj;
        continue; /* Loop/switch isn't completed */
_L2:
        if (a.containsKey(s))
            if (e.containsKey(s)) {
                obj1 = e.get(s);
            } else {
                obj1 = ((HashMap)a.get(s)).entrySet().iterator();
                if (((Iterator) (obj1)).hasNext()) {
                    obj1 = (java.util.Map.Entry)((Iterator) (obj1)).next();
                    ((java.util.Map.Entry) (obj1)).getKey();
                    obj1 = (byte[])((java.util.Map.Entry) (obj1)).getValue();
                } else {
                    obj1 = new byte[0];
                }
                try {
                    f.a(((byte []) (obj1)));
                    f.a(b);
                    obj1 = f.a(obj, 0, true);
                    e.put(s, obj1);
                }
                // Misplaced declaration of an exception variable
                catch (String s) {
                    throw new b(s);
                }
            }
        if (true) goto _L3; else goto _L5
_L5:
    }

    public void d() {
        d = new HashMap();
    }
}
