// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.proguard;

import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.util.*;

// Referenced classes of package com.tencent.bugly.proguard:
//            b, j

public final class i {

    private ByteBuffer a;
    private String b;

    public i() {
        this(128);
    }

    public i(int k) {
        b = "GBK";
        a = ByteBuffer.allocate(k);
    }

    private void a(int k) {
        if (a.remaining() < k) {
            ByteBuffer bytebuffer = ByteBuffer.allocate(a.capacity() + k << 1);
            bytebuffer.put(a.array(), 0, a.position());
            a = bytebuffer;
        }
    }

    private void b(byte byte0, int k) {
        if (k < 15) {
            byte byte1 = (byte)(k << 4 | byte0);
            a.put(byte1);
        } else
        if (k < 256) {
            byte byte2 = (byte)(byte0 | 0xf0);
            a.put(byte2);
            a.put((byte)k);
        } else {
            throw new b((new StringBuilder("tag is too large: ")).append(k).toString());
        }
    }

    public final int a(String s) {
        b = s;
        return 0;
    }

    public final ByteBuffer a() {
        return a;
    }

    public final void a(byte byte0, int k) {
        a(3);
        if (byte0 == 0) {
            b((byte)12, k);
        } else {
            b((byte)0, k);
            a.put(byte0);
        }
    }

    public final void a(int k, int l) {
        a(6);
        if (k >= -32768 && k <= 32767) {
            a((short)k, l);
        } else {
            b((byte)2, l);
            a.putInt(k);
        }
    }

    public final void a(long l, int k) {
        a(10);
        if (l >= 0x80000000L && l <= 0x7fffffffL) {
            a((int)l, k);
        } else {
            b((byte)3, k);
            a.putLong(l);
        }
    }

    public final void a(j j1, int k) {
        a(2);
        b((byte)10, k);
        j1.a(this);
        a(2);
        b((byte)11, 0);
    }

    public final void a(Object obj, int k) {
        int l = 1;
        if (obj instanceof Byte)
            a(((Byte)obj).byteValue(), k);
        else
        if (obj instanceof Boolean) {
            if (!((Boolean)obj).booleanValue())
                l = 0;
            a((byte)l, k);
        } else
        if (obj instanceof Short)
            a(((Short)obj).shortValue(), k);
        else
        if (obj instanceof Integer)
            a(((Integer)obj).intValue(), k);
        else
        if (obj instanceof Long)
            a(((Long)obj).longValue(), k);
        else
        if (obj instanceof Float) {
            float f = ((Float)obj).floatValue();
            a(6);
            b((byte)4, k);
            a.putFloat(f);
        } else
        if (obj instanceof Double) {
            double d = ((Double)obj).doubleValue();
            a(10);
            b((byte)5, k);
            a.putDouble(d);
        } else
        if (obj instanceof String)
            a((String)obj, k);
        else
        if (obj instanceof Map)
            a((Map)obj, k);
        else
        if (obj instanceof List)
            a(((Collection) ((List)obj)), k);
        else
        if (obj instanceof j) {
            obj = (j)obj;
            a(2);
            b((byte)10, k);
            ((j) (obj)).a(this);
            a(2);
            b((byte)11, 0);
        } else
        if (obj instanceof byte[])
            a((byte[])obj, k);
        else
        if (obj instanceof boolean[]) {
            obj = (boolean[])obj;
            a(8);
            b((byte)9, k);
            a(obj.length, 0);
            int l2 = obj.length;
            k = 0;
            while (k < l2)  {
                int i1;
                if (obj[k] != 0)
                    i1 = 1;
                else
                    i1 = 0;
                a((byte)i1, 0);
                k++;
            }
        } else
        if (obj instanceof short[]) {
            obj = (short[])obj;
            a(8);
            b((byte)9, k);
            a(obj.length, 0);
            int j1 = obj.length;
            k = 0;
            while (k < j1)  {
                a(obj[k], 0);
                k++;
            }
        } else
        if (obj instanceof int[]) {
            obj = (int[])obj;
            a(8);
            b((byte)9, k);
            a(obj.length, 0);
            int k1 = obj.length;
            k = 0;
            while (k < k1)  {
                a(obj[k], 0);
                k++;
            }
        } else
        if (obj instanceof long[]) {
            obj = (long[])obj;
            a(8);
            b((byte)9, k);
            a(obj.length, 0);
            int l1 = obj.length;
            k = 0;
            while (k < l1)  {
                a(obj[k], 0);
                k++;
            }
        } else
        if (obj instanceof float[]) {
            obj = (float[])obj;
            a(8);
            b((byte)9, k);
            a(obj.length, 0);
            int i2 = obj.length;
            k = 0;
            while (k < i2)  {
                float f1 = obj[k];
                a(6);
                b((byte)4, 0);
                a.putFloat(f1);
                k++;
            }
        } else
        if (obj instanceof double[]) {
            obj = (double[])obj;
            a(8);
            b((byte)9, k);
            a(obj.length, 0);
            int j2 = obj.length;
            k = 0;
            while (k < j2)  {
                double d1 = obj[k];
                a(10);
                b((byte)5, 0);
                a.putDouble(d1);
                k++;
            }
        } else
        if (obj.getClass().isArray()) {
            obj = ((Object) ((Object[])obj));
            a(8);
            b((byte)9, k);
            a(obj.length, 0);
            int k2 = obj.length;
            k = 0;
            while (k < k2)  {
                a(obj[k], 0);
                k++;
            }
        } else
        if (obj instanceof Collection)
            a((Collection)obj, k);
        else
            throw new b((new StringBuilder("write object error: unsupport type. ")).append(obj.getClass()).toString());
    }

    public final void a(String s, int k) {
        byte abyte0[] = s.getBytes(b);
        s = abyte0;
_L1:
        a(s.length + 10);
        UnsupportedEncodingException unsupportedencodingexception;
        if (s.length > 255) {
            b((byte)7, k);
            a.putInt(s.length);
            a.put(s);
        } else {
            b((byte)6, k);
            a.put((byte)s.length);
            a.put(s);
        }
        return;
        unsupportedencodingexception;
        s = s.getBytes();
          goto _L1
    }

    public final void a(Collection collection, int k) {
        a(8);
        b((byte)9, k);
        if (collection == null)
            k = 0;
        else
            k = collection.size();
        a(k, 0);
        if (collection != null)
            for (collection = collection.iterator(); collection.hasNext(); a(collection.next(), 0));
    }

    public final void a(Map map, int k) {
        a(8);
        b((byte)8, k);
        if (map == null)
            k = 0;
        else
            k = map.size();
        a(k, 0);
        if (map != null) {
            for (Iterator iterator = map.entrySet().iterator(); iterator.hasNext(); a(map.getValue(), 1)) {
                map = (java.util.Map.Entry)iterator.next();
                a(map.getKey(), 0);
            }

        }
    }

    public final void a(short word0, int k) {
        a(4);
        if (word0 >= -128 && word0 <= 127) {
            a((byte)word0, k);
        } else {
            b((byte)1, k);
            a.putShort(word0);
        }
    }

    public final void a(boolean flag, int k) {
        int l;
        if (flag)
            l = 1;
        else
            l = 0;
        a((byte)l, k);
    }

    public final void a(byte abyte0[], int k) {
        a(abyte0.length + 8);
        b((byte)13, k);
        b((byte)0, 0);
        a(abyte0.length, 0);
        a.put(abyte0);
    }

    public final byte[] b() {
        byte abyte0[] = new byte[a.position()];
        System.arraycopy(a.array(), 0, abyte0, 0, a.position());
        return abyte0;
    }
}
