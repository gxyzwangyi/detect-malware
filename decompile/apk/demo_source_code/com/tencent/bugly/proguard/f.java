// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.tencent.bugly.proguard;

import com.tencent.bugly.crashreport.crash.jni.b;
import java.io.PrintStream;
import java.util.HashMap;
import java.util.Map;

// Referenced classes of package com.tencent.bugly.proguard:
//            j, h, e, i, 
//            k

public final class f extends j {

    private static byte k[] = null;
    private static Map l = null;
    private static boolean m;
    public short a;
    public int b;
    public String c;
    public String d;
    public byte e[];
    private byte f;
    private int g;
    private int h;
    private Map i;
    private Map j;

    public f() {
        a = 0;
        f = 0;
        g = 0;
        b = 0;
        c = null;
        d = null;
        h = 0;
    }

    public final void a(h h1) {
        try {
            a = h1.a(a, 1, true);
            f = h1.a(f, 2, true);
            g = h1.a(g, 3, true);
            b = h1.a(b, 4, true);
            c = h1.b(5, true);
            d = h1.b(6, true);
            if (k == null)
                k = (new byte[] {
                    0
                });
            byte abyte0[] = k;
            e = (byte[])h1.c(7, true);
            h = h1.a(h, 8, true);
            if (l == null) {
                HashMap hashmap = JVM INSTR new #82  <Class HashMap>;
                hashmap.HashMap();
                l = hashmap;
                hashmap.put("", "");
            }
            i = (Map)h1.a(l, 9, true);
            if (l == null) {
                HashMap hashmap1 = JVM INSTR new #82  <Class HashMap>;
                hashmap1.HashMap();
                l = hashmap1;
                hashmap1.put("", "");
            }
            j = (Map)h1.a(l, 10, true);
            return;
        }
        // Misplaced declaration of an exception variable
        catch (h h1) {
            h1.printStackTrace();
        }
        System.out.println((new StringBuilder("RequestPacket decode error ")).append(com.tencent.bugly.proguard.e.a(e)).toString());
        throw new RuntimeException(h1);
    }

    public final void a(i i1) {
        i1.a(a, 1);
        i1.a(f, 2);
        i1.a(g, 3);
        i1.a(b, 4);
        i1.a(c, 5);
        i1.a(d, 6);
        i1.a(e, 7);
        i1.a(h, 8);
        i1.a(i, 9);
        i1.a(j, 10);
    }

    public final void a(StringBuilder stringbuilder, int i1) {
        stringbuilder = new b(stringbuilder, i1);
        stringbuilder.a(a, "iVersion");
        stringbuilder.a(f, "cPacketType");
        stringbuilder.a(g, "iMessageType");
        stringbuilder.a(b, "iRequestId");
        stringbuilder.b(c, "sServantName");
        stringbuilder.b(d, "sFuncName");
        stringbuilder.a(e, "sBuffer");
        stringbuilder.a(h, "iTimeout");
        stringbuilder.a(i, "context");
        stringbuilder.a(j, "status");
    }

    public final Object clone() {
        Object obj = null;
        Object obj1 = super.clone();
        obj = obj1;
_L2:
        return obj;
        CloneNotSupportedException clonenotsupportedexception;
        clonenotsupportedexception;
        if (!m)
            throw new AssertionError();
        if (true) goto _L2; else goto _L1
_L1:
    }

    public final boolean equals(Object obj) {
        boolean flag = true;
        obj = (f)obj;
        if (!com.tencent.bugly.proguard.k.a(1, ((f) (obj)).a) || !com.tencent.bugly.proguard.k.a(1, ((f) (obj)).f) || !com.tencent.bugly.proguard.k.a(1, ((f) (obj)).g) || !com.tencent.bugly.proguard.k.a(1, ((f) (obj)).b) || !com.tencent.bugly.proguard.k.a(Integer.valueOf(1), ((f) (obj)).c) || !com.tencent.bugly.proguard.k.a(Integer.valueOf(1), ((f) (obj)).d) || !com.tencent.bugly.proguard.k.a(Integer.valueOf(1), ((f) (obj)).e) || !com.tencent.bugly.proguard.k.a(1, ((f) (obj)).h) || !com.tencent.bugly.proguard.k.a(Integer.valueOf(1), ((f) (obj)).i) || !com.tencent.bugly.proguard.k.a(Integer.valueOf(1), ((f) (obj)).j))
            flag = false;
        return flag;
    }

    static  {
        boolean flag;
        if (!com/tencent/bugly/proguard/f.desiredAssertionStatus())
            flag = true;
        else
            flag = false;
        m = flag;
    }
}
