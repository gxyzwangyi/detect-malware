// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing;


// Referenced classes of package com.google.zxing:
//            c

public final class f extends c {

    private final byte a[];
    private final int b;
    private final int c;
    private final int d = 0;
    private final int e = 0;

    public f(int i, int j, int ai[]) {
        super(i, j);
        b = i;
        c = j;
        a = new byte[i * j];
        for (int k = 0; k < j; k++) {
            int i1 = k * i;
            int l = 0;
            while (l < i)  {
                int l1 = ai[i1 + l];
                int j1 = l1 >> 16 & 0xff;
                int k1 = l1 >> 8 & 0xff;
                l1 &= 0xff;
                if (j1 == k1 && k1 == l1)
                    a[i1 + l] = (byte)j1;
                else
                    a[i1 + l] = (byte)(l1 + (j1 + k1 + k1) >> 2);
                l++;
            }
        }

    }

    public byte[] a() {
        int i;
        int k;
        int l;
        i = 0;
        k = b();
        l = c();
        if (k != b || l != c) goto _L2; else goto _L1
_L1:
        byte abyte0[] = a;
_L4:
        return abyte0;
_L2:
        int j;
        byte abyte1[];
        int i1 = k * l;
        abyte1 = new byte[i1];
        j = e * b + d;
        if (k != b)
            break; /* Loop/switch isn't completed */
        System.arraycopy(a, j, abyte1, 0, i1);
        abyte0 = abyte1;
        if (true) goto _L4; else goto _L3
_L3:
        byte abyte2[] = a;
        do {
            abyte0 = abyte1;
            if (i >= l)
                continue;
            System.arraycopy(abyte2, j, abyte1, i * k, k);
            j += b;
            i++;
        } while (true);
        if (true) goto _L4; else goto _L5
_L5:
    }

    public byte[] a(int i, byte abyte0[]) {
        int k;
        byte abyte1[];
label0:
        {
            if (i < 0 || i >= c())
                throw new IllegalArgumentException((new StringBuilder()).append("Requested row is outside the image: ").append(i).toString());
            k = b();
            if (abyte0 != null) {
                abyte1 = abyte0;
                if (abyte0.length >= k)
                    break label0;
            }
            abyte1 = new byte[k];
        }
        int l = e;
        int j = b;
        int i1 = d;
        System.arraycopy(a, (l + i) * j + i1, abyte1, 0, k);
        return abyte1;
    }
}
