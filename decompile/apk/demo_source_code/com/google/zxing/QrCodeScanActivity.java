// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing;

import android.app.Activity;
import android.content.Intent;
import android.content.res.AssetFileDescriptor;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Vibrator;
import android.util.Log;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.View;
import android.widget.Toast;
import com.google.zxing.camera.d;
import com.google.zxing.common.i;
import com.google.zxing.decoding.CaptureActivityHandler;
import com.google.zxing.qrcode.a;
import com.google.zxing.view.ViewfinderView;
import java.io.IOException;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Vector;

// Referenced classes of package com.google.zxing:
//            DecodeHintType, h, NotFoundException, ChecksumException, 
//            FormatException, f, b

public class QrCodeScanActivity extends Activity
    implements android.view.SurfaceHolder.Callback {

    private d a;
    private CaptureActivityHandler b;
    private ViewfinderView c;
    private boolean d;
    private Vector e;
    private String f;
    private com.google.zxing.decoding.d g;
    private MediaPlayer h;
    private boolean i;
    private boolean j;
    private final android.media.MediaPlayer.OnCompletionListener k = new android.media.MediaPlayer.OnCompletionListener() {

        final QrCodeScanActivity a;

        public void onCompletion(MediaPlayer mediaplayer) {
            mediaplayer.seekTo(0);
        }

             {
                a = QrCodeScanActivity.this;
                super();
            }
    }
;

    public QrCodeScanActivity() {
    }

    private void a(SurfaceHolder surfaceholder) {
        if (surfaceholder == null)
            throw new IllegalStateException("No SurfaceHolder provided");
        if (!a.a()) goto _L2; else goto _L1
_L1:
        Log.w(com/google/zxing/QrCodeScanActivity.getSimpleName(), "initCamera() while already open -- late SurfaceView callback?");
_L4:
        return;
_L2:
        try {
            a.a(surfaceholder);
            if (b == null) {
                surfaceholder = JVM INSTR new #78  <Class EnumMap>;
                surfaceholder.EnumMap(com/google/zxing/DecodeHintType);
                CaptureActivityHandler captureactivityhandler = JVM INSTR new #85  <Class CaptureActivityHandler>;
                captureactivityhandler.CaptureActivityHandler(this, e, surfaceholder, f, a);
                b = captureactivityhandler;
            }
        }
        // Misplaced declaration of an exception variable
        catch (SurfaceHolder surfaceholder) {
            Log.w(com/google/zxing/QrCodeScanActivity.getSimpleName(), surfaceholder);
        }
        // Misplaced declaration of an exception variable
        catch (SurfaceHolder surfaceholder) {
            Log.w(com/google/zxing/QrCodeScanActivity.getSimpleName(), "Unexpected error initializing camera", surfaceholder);
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    private void e() {
        AssetFileDescriptor assetfiledescriptor;
        if (!i || h != null)
            break MISSING_BLOCK_LABEL_98;
        setVolumeControlStream(3);
        h = new MediaPlayer();
        h.setAudioStreamType(3);
        h.setOnCompletionListener(k);
        assetfiledescriptor = getResources().openRawResourceFd(0x7f070000);
        h.setDataSource(assetfiledescriptor.getFileDescriptor(), assetfiledescriptor.getStartOffset(), assetfiledescriptor.getLength());
        assetfiledescriptor.close();
        h.setVolume(1.0F, 1.0F);
        h.prepare();
_L1:
        return;
        IOException ioexception;
        ioexception;
        h = null;
          goto _L1
    }

    private void f() {
        if (i && h != null)
            h.start();
        if (j)
            ((Vibrator)getSystemService("vibrator")).vibrate(200L);
    }

    public d a() {
        return a;
    }

    public void a(h h1, Bitmap bitmap, float f1) {
        g.a();
        f();
        bitmap = h1.a();
        if (!bitmap.startsWith("http://") && !bitmap.startsWith("https://")) {
            Toast.makeText(this, "\u672A\u53D1\u73B0\u4E8C\u7EF4\u7801", 0).show();
        } else {
            h1 = new Intent("android.intent.action.VIEW");
            h1.setData(Uri.parse((new StringBuilder()).append("jdhttpmonitor://webview?param=").append(Uri.encode((new StringBuilder()).append("{\"url\":\"").append(bitmap).append("\", \"from\":\"app\"}").toString())).toString()));
            startActivity(h1);
        }
        finish();
    }

    public ViewfinderView b() {
        return c;
    }

    public Handler c() {
        return b;
    }

    public void d() {
        c.a();
    }

    protected void onActivityResult(int l, int i1, Intent intent) {
        super.onActivityResult(l, i1, intent);
        l;
        JVM INSTR tableswitch 1800 1800: default 28
    //                   1800 29;
           goto _L1 _L2
_L1:
        return;
_L2:
        if (i1 == -1)
            try {
                intent = intent.getData();
                Object obj = android.provider.MediaStore.Images.Media.getBitmap(getContentResolver(), intent);
                int ai[] = new int[((Bitmap) (obj)).getWidth() * ((Bitmap) (obj)).getHeight()];
                ((Bitmap) (obj)).getPixels(ai, 0, ((Bitmap) (obj)).getWidth(), 0, 0, ((Bitmap) (obj)).getWidth(), ((Bitmap) (obj)).getHeight());
                intent = JVM INSTR new #300 <Class f>;
                intent.f(((Bitmap) (obj)).getWidth(), ((Bitmap) (obj)).getHeight(), ai);
                obj = JVM INSTR new #305 <Class b>;
                Object obj1 = JVM INSTR new #307 <Class i>;
                ((i) (obj1)).i(intent);
                ((b) (obj)).b(((com.google.zxing.a) (obj1)));
                obj1 = JVM INSTR new #315 <Class a>;
                ((a) (obj1)).a();
                intent = JVM INSTR new #318 <Class HashMap>;
                intent.HashMap();
                intent.put(DecodeHintType.e, "utf-8");
                intent = ((a) (obj1)).a(((b) (obj)), intent).a();
                f();
                obj = JVM INSTR new #215 <Class Intent>;
                ((Intent) (obj)).Intent("android.intent.action.VIEW");
                obj1 = JVM INSTR new #220 <Class StringBuilder>;
                ((StringBuilder) (obj1)).StringBuilder();
                obj1 = ((StringBuilder) (obj1)).append("jdhttpmonitor://webview?param=");
                StringBuilder stringbuilder = JVM INSTR new #220 <Class StringBuilder>;
                stringbuilder.StringBuilder();
                ((Intent) (obj)).setData(Uri.parse(((StringBuilder) (obj1)).append(Uri.encode(stringbuilder.append("{\"url\":\"").append(intent).append("\", \"from\":\"app\"}").toString())).toString()));
                startActivity(((Intent) (obj)));
                finish();
            }
            // Misplaced declaration of an exception variable
            catch (Intent intent) {
                Toast.makeText(this, "\u672A\u53D1\u73B0\u4E8C\u7EF4\u7801", 0).show();
            }
            // Misplaced declaration of an exception variable
            catch (Intent intent) {
                Toast.makeText(this, "\u672A\u53D1\u73B0\u4E8C\u7EF4\u7801", 0).show();
            }
            // Misplaced declaration of an exception variable
            catch (Intent intent) {
                Toast.makeText(this, "\u672A\u53D1\u73B0\u4E8C\u7EF4\u7801", 0).show();
            }
            // Misplaced declaration of an exception variable
            catch (Intent intent) {
                Toast.makeText(this, "\u672A\u53D1\u73B0\u4E8C\u7EF4\u7801", 0).show();
            }
        if (true) goto _L1; else goto _L3
_L3:
    }

    public void onCreate(Bundle bundle) {
        requestWindowFeature(1);
        super.onCreate(bundle);
        setContentView(0x7f04001d);
        d = false;
        g = new com.google.zxing.decoding.d(this);
    }

    protected void onDestroy() {
        g.d();
        super.onDestroy();
    }

    public void onGalleryClick(View view) {
        view = new Intent();
        view.setAction("android.intent.action.PICK");
        view.setType("image/*");
        startActivityForResult(view, 1800);
    }

    protected void onPause() {
        if (b != null) {
            b.a();
            b = null;
        }
        g.b();
        a.b();
        if (!d)
            ((SurfaceView)findViewById(0x7f0f0098)).getHolder().removeCallback(this);
        super.onPause();
    }

    protected void onResume() {
        super.onResume();
        a = new d(getApplication());
        c = (ViewfinderView)findViewById(0x7f0f0099);
        c.setCameraManager(a);
        b = null;
        setRequestedOrientation(1);
        c.setVisibility(0);
        SurfaceHolder surfaceholder = ((SurfaceView)findViewById(0x7f0f0098)).getHolder();
        if (d)
            a(surfaceholder);
        else
            surfaceholder.addCallback(this);
        e = null;
        f = null;
        i = true;
        if (((AudioManager)getSystemService("audio")).getRingerMode() != 2)
            i = false;
        e();
        j = true;
        g.c();
    }

    public void surfaceChanged(SurfaceHolder surfaceholder, int l, int i1, int j1) {
    }

    public void surfaceCreated(SurfaceHolder surfaceholder) {
        if (surfaceholder == null)
            Log.e(com/google/zxing/QrCodeScanActivity.getSimpleName(), "*** WARNING *** surfaceCreated() gave us a null surface!");
        if (!d) {
            d = true;
            a(surfaceholder);
        }
    }

    public void surfaceDestroyed(SurfaceHolder surfaceholder) {
        d = false;
    }
}
