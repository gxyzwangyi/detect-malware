// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.qrcode.detector;

import com.google.zxing.DecodeHintType;
import com.google.zxing.NotFoundException;
import com.google.zxing.common.a.a;
import com.google.zxing.common.b;
import com.google.zxing.common.f;
import com.google.zxing.common.h;
import com.google.zxing.common.j;
import com.google.zxing.i;
import java.util.Map;

// Referenced classes of package com.google.zxing.qrcode.detector:
//            e, d, FinderPatternFinder, b, 
//            a

public class c {

    private final b a;
    private com.google.zxing.j b;

    public c(b b1) {
        a = b1;
    }

    private float a(int k, int l, int i1, int j1) {
        boolean flag = false;
        float f2 = b(k, l, i1, j1);
        i1 = k - (i1 - k);
        float f1;
        float f3;
        if (i1 < 0) {
            f1 = (float)k / (float)(k - i1);
            i1 = 0;
        } else
        if (i1 >= a.e()) {
            f1 = (float)(a.e() - 1 - k) / (float)(i1 - k);
            i1 = a.e();
            i1--;
        } else {
            f1 = 1.0F;
        }
        j1 = (int)((float)l - f1 * (float)(j1 - l));
        if (j1 < 0) {
            f1 = (float)l / (float)(l - j1);
            j1 = ((flag) ? 1 : 0);
        } else
        if (j1 >= a.f()) {
            f1 = (float)(a.f() - 1 - l) / (float)(j1 - l);
            j1 = a.f() - 1;
        } else {
            f1 = 1.0F;
        }
        f3 = k;
        return (b(k, l, (int)(f1 * (float)(i1 - k) + f3), j1) + f2) - 1.0F;
    }

    private float a(i k, i l) {
        float f2 = a((int)k.a(), (int)k.b(), (int)l.a(), (int)l.b());
        float f1 = a((int)l.a(), (int)l.b(), (int)k.a(), (int)k.b());
        if (Float.isNaN(f2))
            f1 /= 7F;
        else
        if (Float.isNaN(f1))
            f1 = f2 / 7F;
        else
            f1 = (f2 + f1) / 14F;
        return f1;
    }

    private static int a(i k, i l, i i1, float f1) {
        int j1;
        int k1;
        k1 = (com.google.zxing.common.a.a.a(i.a(k, l) / f1) + com.google.zxing.common.a.a.a(i.a(k, i1) / f1) >> 1) + 7;
        j1 = k1;
        k1 & 3;
        JVM INSTR tableswitch 0 3: default 68
    //                   0 75
    //                   1 72
    //                   2 84
    //                   3 93;
           goto _L1 _L2 _L3 _L4 _L5
_L3:
        break; /* Loop/switch isn't completed */
_L1:
        j1 = k1;
_L6:
        return j1;
_L2:
        j1 = k1 + 1;
        continue; /* Loop/switch isn't completed */
_L4:
        j1 = k1 - 1;
        if (true) goto _L6; else goto _L5
_L5:
        throw NotFoundException.a();
    }

    private static b a(b b1, j j1, int k) {
        return h.a().a(b1, k, k, j1);
    }

    private static j a(i k, i l, i i1, i j1, int k1) {
        float f1 = (float)k1 - 3.5F;
        float f2;
        float f3;
        float f4;
        float f5;
        if (j1 != null) {
            f2 = j1.a();
            f5 = j1.b();
            f3 = f1 - 3F;
            f4 = f3;
        } else {
            f2 = (l.a() - k.a()) + i1.a();
            f5 = (l.b() - k.b()) + i1.b();
            f3 = f1;
            f4 = f1;
        }
        return j.a(3.5F, 3.5F, f1, 3.5F, f4, f3, 3.5F, f1, k.a(), k.b(), l.a(), l.b(), f2, f5, i1.a(), i1.b());
    }

    private float b(int k, int l, int i1, int j1) {
        float f1;
        int k1;
        int l1;
        boolean flag;
        int i2;
        int j2;
        int k2;
        byte byte0;
        int l2;
        int i3;
        int j3;
        int k3;
        boolean flag1;
        if (Math.abs(j1 - l) > Math.abs(i1 - k))
            flag = true;
        else
            flag = false;
        if (flag) {
            j2 = j1;
            i2 = i1;
            k1 = l;
            j1 = k;
        } else {
            i2 = j1;
            j1 = l;
            k1 = k;
            j2 = i1;
        }
        k3 = Math.abs(j2 - k1);
        j3 = Math.abs(i2 - j1);
        k = -k3;
        if (k1 < j2)
            k2 = 1;
        else
            k2 = -1;
        if (j1 < i2)
            byte0 = 1;
        else
            byte0 = -1;
        i1 = 0;
        l = k1;
        l1 = k >> 1;
        k = j1;
        if (l == j2 + k2) goto _L2; else goto _L1
_L1:
        if (flag)
            l2 = k;
        else
            l2 = l;
        if (flag)
            i3 = l;
        else
            i3 = k;
        if (i1 == 1)
            flag1 = true;
        else
            flag1 = false;
        if (flag1 != a.a(l2, i3)) goto _L4; else goto _L3
_L3:
        if (i1 != 2) goto _L6; else goto _L5
_L5:
        f1 = com.google.zxing.common.a.a.a(l, k, k1, j1);
_L9:
        return f1;
_L6:
        i1++;
_L4:
        l1 += j3;
        if (l1 <= 0)
            continue; /* Loop/switch isn't completed */
        if (k != i2) goto _L8; else goto _L7
_L7:
        k = i1;
_L10:
        if (k == 2)
            f1 = com.google.zxing.common.a.a.a(j2 + k2, i2, k1, j1);
        else
            f1 = (0.0F / 0.0F);
        if (true) goto _L9; else goto _L8
_L8:
        k += byte0;
        l1 -= k3;
        l += k2;
        break MISSING_BLOCK_LABEL_94;
_L2:
        k = i1;
          goto _L10
    }

    protected final float a(i k, i l, i i1) {
        return (a(k, l) + a(k, i1)) / 2.0F;
    }

    protected final f a(e e1) {
        float f1;
        int k;
        int l;
        Object obj;
        d d1;
        d d2;
        d d3;
        com.google.zxing.qrcode.decoder.h h1;
        d1 = e1.b();
        d2 = e1.c();
        d3 = e1.a();
        f1 = a(((i) (d1)), ((i) (d2)), ((i) (d3)));
        if (f1 < 1.0F)
            throw NotFoundException.a();
        l = a(((i) (d1)), ((i) (d2)), ((i) (d3)), f1);
        h1 = com.google.zxing.qrcode.decoder.h.a(l);
        k = h1.d();
        obj = null;
        e1 = obj;
        if (h1.b().length <= 0) goto _L2; else goto _L1
_L1:
        int i1;
        int j1;
        float f10 = d2.a();
        float f7 = d1.a();
        float f8 = d3.a();
        float f5 = d2.b();
        float f2 = d1.b();
        float f9 = d3.b();
        float f6 = 1.0F - 3F / (float)(k - 7);
        float f4 = d1.a();
        j1 = (int)((((f10 - f7) + f8) - d1.a()) * f6 + f4);
        i1 = (int)(d1.b() + f6 * (((f5 - f2) + f9) - d1.b()));
        k = 4;
_L5:
        e1 = obj;
        if (k > 16) goto _L2; else goto _L3
_L3:
        float f3 = k;
        e1 = a(f1, j1, i1, f3);
_L2:
        Object obj1 = a(((i) (d1)), ((i) (d2)), ((i) (d3)), ((i) (e1)), l);
        obj1 = a(a, ((j) (obj1)), l);
        if (e1 == null) {
            e1 = new i[3];
            e1[0] = d3;
            e1[1] = d1;
            e1[2] = d2;
        } else {
            e1 = (new i[] {
                d3, d1, d2, e1
            });
        }
        return new f(((b) (obj1)), e1);
        e1;
        k <<= 1;
        if (true) goto _L5; else goto _L4
_L4:
    }

    public final f a(Map map) {
        com.google.zxing.j j1;
        if (map == null)
            j1 = null;
        else
            j1 = (com.google.zxing.j)map.get(DecodeHintType.j);
        b = j1;
        return a((new FinderPatternFinder(a, b)).a(map));
    }

    protected final com.google.zxing.qrcode.detector.a a(float f1, int k, int l, float f2) {
        int j1 = (int)(f2 * f1);
        int i1 = Math.max(0, k - j1);
        int k1 = Math.min(a.e() - 1, k + j1);
        if ((float)(k1 - i1) < f1 * 3F)
            throw NotFoundException.a();
        k = Math.max(0, l - j1);
        l = Math.min(a.f() - 1, j1 + l);
        if ((float)(l - k) < f1 * 3F)
            throw NotFoundException.a();
        else
            return (new com.google.zxing.qrcode.detector.b(a, i1, k, k1 - i1, l - k, f1, b)).a();
    }
}
