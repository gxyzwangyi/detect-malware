// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.aztec.a;

import com.google.zxing.NotFoundException;
import com.google.zxing.common.b;
import com.google.zxing.common.h;
import com.google.zxing.common.reedsolomon.ReedSolomonException;
import com.google.zxing.common.reedsolomon.c;
import com.google.zxing.i;

public final class com.google.zxing.aztec.a.a {
    static final class a {

        private final int a;
        private final int b;

        i a() {
            return new i(b(), c());
        }

        int b() {
            return a;
        }

        int c() {
            return b;
        }

        public String toString() {
            return (new StringBuilder()).append("<").append(a).append(' ').append(b).append('>').toString();
        }

        a(int j, int k) {
            a = j;
            b = k;
        }
    }


    private static final int g[] = {
        3808, 476, 2107, 1799
    };
    private final b a;
    private boolean b;
    private int c;
    private int d;
    private int e;
    private int f;

    public com.google.zxing.aztec.a.a(b b1) {
        a = b1;
    }

    private static float a(i j, i k) {
        return com.google.zxing.common.a.a.a(j.a(), j.b(), k.a(), k.b());
    }

    private static int a(long l, boolean flag) {
        boolean flag1 = false;
        byte byte0;
        int j;
        int ai[];
        if (flag) {
            j = 7;
            byte0 = 2;
        } else {
            j = 10;
            byte0 = 4;
        }
        ai = new int[j];
        for (int k = j - 1; k >= 0; k--) {
            ai[k] = (int)l & 0xf;
            l >>= 4;
        }

        int i1;
        try {
            c c1 = JVM INSTR new #46  <Class c>;
            c1.c(com.google.zxing.common.reedsolomon.a.d);
            c1.a(ai, j - byte0);
        }
        catch (ReedSolomonException reedsolomonexception) {
            throw NotFoundException.a();
        }
        j = 0;
        i1 = ((flag1) ? 1 : 0);
        for (; j < byte0; j++)
            i1 = ai[j] + (i1 << 4);

        return i1;
    }

    private int a(a a1, a a2) {
        float f4 = b(a1, a2);
        float f5 = (float)(a2.b() - a1.b()) / f4;
        float f6 = (float)(a2.c() - a1.c()) / f4;
        float f1 = a1.b();
        float f3 = a1.c();
        boolean flag1 = a.a(a1.b(), a1.c());
        int k = 0;
        int j = 0;
        float f2 = f1;
        f1 = f3;
        while ((float)j < f4)  {
            f2 += f5;
            f1 += f6;
            int l = k;
            if (a.a(com.google.zxing.common.a.a.a(f2), com.google.zxing.common.a.a.a(f1)) != flag1)
                l = k + 1;
            j++;
            k = l;
        }
        f1 = (float)k / f4;
        if (f1 > 0.1F && f1 < 0.9F) {
            j = 0;
        } else {
            boolean flag;
            if (f1 <= 0.1F)
                flag = true;
            else
                flag = false;
            if (flag == flag1)
                j = 1;
            else
                j = -1;
        }
        return j;
    }

    private int a(i j, i k, int l) {
        int k1 = 0;
        float f4 = a(j, k);
        float f5 = f4 / (float)l;
        float f3 = j.a();
        float f1 = j.b();
        float f2 = ((k.a() - j.a()) * f5) / f4;
        f4 = (f5 * (k.b() - j.b())) / f4;
        for (int i1 = 0; i1 < l;) {
            int j1 = k1;
            if (a.a(com.google.zxing.common.a.a.a((float)i1 * f2 + f3), com.google.zxing.common.a.a.a((float)i1 * f4 + f1)))
                j1 = k1 | 1 << l - i1 - 1;
            i1++;
            k1 = j1;
        }

        return k1;
    }

    private static int a(int ai[], int j) {
        boolean flag = false;
        int i1 = ai.length;
        int l = 0;
        int k = 0;
        for (; l < i1; l++) {
            int j1 = ai[l];
            k = (k << 3) + ((j1 & 1) + ((j1 >> j - 2) << 1));
        }

        for (j = ((flag) ? 1 : 0); j < 4; j++)
            if (Integer.bitCount(g[j] ^ ((k & 1) << 11) + (k >> 1)) <= 2)
                return j;

        throw NotFoundException.a();
    }

    private a a() {
        i ai[];
        com.google.zxing.common.a.b b1 = JVM INSTR new #94  <Class com.google.zxing.common.a.b>;
        b1.com.google.zxing.common.a.b(a);
        ai = b1.a();
        Object obj;
        i l;
        i i1;
        i j1;
        obj = ai[0];
        i1 = ai[1];
        j1 = ai[2];
        l = ai[3];
_L1:
        int j;
        int k;
        j = com.google.zxing.common.a.a.a((((i) (obj)).a() + l.a() + i1.a() + j1.a()) / 4F);
        float f1 = ((i) (obj)).b();
        k = com.google.zxing.common.a.a.a((l.b() + f1 + i1.b() + j1.b()) / 4F);
        obj = JVM INSTR new #94  <Class com.google.zxing.common.a.b>;
        ((com.google.zxing.common.a.b) (obj)).com.google.zxing.common.a.b(a, 15, j, k);
        obj = ((com.google.zxing.common.a.b) (obj)).a();
        j1 = obj[0];
        i1 = obj[1];
        l = obj[2];
        obj = obj[3];
_L2:
        j = com.google.zxing.common.a.a.a((j1.a() + ((i) (obj)).a() + i1.a() + l.a()) / 4F);
        float f2 = j1.b();
        return new a(j, com.google.zxing.common.a.a.a((((i) (obj)).b() + f2 + i1.b() + l.b()) / 4F));
        NotFoundException notfoundexception;
        notfoundexception;
        j = a.e() / 2;
        k = a.f() / 2;
        notfoundexception = a(new a(j + 7, k - 7), false, 1, -1).a();
        i1 = a(new a(j + 7, k + 7), false, 1, 1).a();
        j1 = a(new a(j - 7, k + 7), false, -1, 1).a();
        l = a(new a(j - 7, k - 7), false, -1, -1).a();
          goto _L1
        notfoundexception;
        j1 = a(new a(j + 7, k - 7), false, 1, -1).a();
        i1 = a(new a(j + 7, k + 7), false, 1, 1).a();
        l = a(new a(j - 7, k + 7), false, -1, 1).a();
        notfoundexception = a(new a(j - 7, k - 7), false, -1, -1).a();
          goto _L2
    }

    private a a(a a1, boolean flag, int j, int k) {
        int l = a1.b() + j;
        int i1;
        for (i1 = a1.c() + k; a(l, i1) && a.a(l, i1) == flag; i1 += k)
            l += j;

        i1 -= k;
        for (l -= j; a(l, i1) && a.a(l, i1) == flag; l += j);
        l -= j;
        for (j = i1; a(l, j) && a.a(l, j) == flag; j += k);
        return new a(l, j - k);
    }

    private b a(b b1, i j, i k, i l, i i1) {
        h h1 = h.a();
        int j1 = b();
        float f1 = (float)j1 / 2.0F - (float)e;
        float f2 = (float)j1 / 2.0F + (float)e;
        return h1.a(b1, j1, j1, f1, f1, f2, f1, f2, f2, f1, f2, j.a(), j.b(), k.a(), k.b(), l.a(), l.b(), i1.a(), i1.b());
    }

    private void a(i ai[]) {
        if (!a(ai[0]) || !a(ai[1]) || !a(ai[2]) || !a(ai[3]))
            throw NotFoundException.a();
        int j = e * 2;
        int ai1[] = new int[4];
        ai1[0] = a(ai[0], ai[1], j);
        ai1[1] = a(ai[1], ai[2], j);
        ai1[2] = a(ai[2], ai[3], j);
        ai1[3] = a(ai[3], ai[0], j);
        f = a(ai1, j);
        long l = 0L;
        j = 0;
        while (j < 4)  {
            int k = ai1[(f + j) % 4];
            if (b)
                l = (l << 7) + (long)(k >> 1 & 0x7f);
            else
                l = (l << 10) + (long)((k >> 1 & 0x1f) + (k >> 2 & 0x3e0));
            j++;
        }
        j = a(l, b);
        if (b) {
            c = (j >> 6) + 1;
            d = (j & 0x3f) + 1;
        } else {
            c = (j >> 11) + 1;
            d = (j & 0x7ff) + 1;
        }
    }

    private boolean a(int j, int k) {
        boolean flag;
        if (j >= 0 && j < a.e() && k > 0 && k < a.f())
            flag = true;
        else
            flag = false;
        return flag;
    }

    private boolean a(a a1, a a2, a a3, a a4) {
        int j;
        boolean flag1;
        flag1 = false;
        a1 = new a(a1.b() - 3, a1.c() + 3);
        a2 = new a(a2.b() - 3, a2.c() - 3);
        a3 = new a(a3.b() + 3, a3.c() - 3);
        a4 = new a(a4.b() + 3, 3 + a4.c());
        j = a(a4, a1);
        if (j != 0) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L4:
        return flag;
_L2:
        flag = flag1;
        if (a(a1, a2) == j) {
            flag = flag1;
            if (a(a2, a3) == j) {
                flag = flag1;
                if (a(a3, a4) == j)
                    flag = true;
            }
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    private boolean a(i j) {
        return a(com.google.zxing.common.a.a.a(j.a()), com.google.zxing.common.a.a.a(j.b()));
    }

    private i[] a(a a1) {
        boolean flag = true;
        e = 1;
        Object obj = a1;
        Object obj1 = a1;
        Object obj2 = a1;
label0:
        do {
            a a2;
            a a3;
            a a4;
            a a5;
label1:
            {
                if (e < 9) {
                    a2 = a(((a) (obj2)), flag, 1, -1);
                    a3 = a(((a) (obj1)), flag, 1, 1);
                    a4 = a(((a) (obj)), flag, -1, 1);
                    a5 = a(a1, flag, -1, -1);
                    if (e <= 2)
                        break label1;
                    float f1 = (b(a5, a2) * (float)e) / (b(a1, ((a) (obj2))) * (float)(e + 2));
                    if ((double)f1 >= 0.75D && (double)f1 <= 1.25D && a(a2, a3, a4, a5))
                        break label1;
                }
                if (e != 5 && e != 7)
                    throw NotFoundException.a();
                break label0;
            }
            if (!flag)
                flag = true;
            else
                flag = false;
            e = e + 1;
            a1 = a5;
            obj = a4;
            obj1 = a3;
            obj2 = a2;
        } while (true);
        float f2;
        float f3;
        if (e == 5)
            flag = true;
        else
            flag = false;
        b = flag;
        obj2 = new i((float)((a) (obj2)).b() + 0.5F, (float)((a) (obj2)).c() - 0.5F);
        obj1 = new i((float)((a) (obj1)).b() + 0.5F, (float)((a) (obj1)).c() + 0.5F);
        obj = new i((float)((a) (obj)).b() - 0.5F, (float)((a) (obj)).c() + 0.5F);
        a1 = new i((float)a1.b() - 0.5F, (float)a1.c() - 0.5F);
        f2 = e * 2 - 3;
        f3 = e * 2;
        return a(new i[] {
            obj2, obj1, obj, a1
        }, f2, f3);
    }

    private static i[] a(i ai[], float f1, float f2) {
        f1 = f2 / (2.0F * f1);
        float f3 = ai[0].a() - ai[2].a();
        float f4 = ai[0].b() - ai[2].b();
        float f5 = (ai[0].a() + ai[2].a()) / 2.0F;
        f2 = (ai[0].b() + ai[2].b()) / 2.0F;
        i j = new i(f1 * f3 + f5, f1 * f4 + f2);
        i k = new i(f5 - f3 * f1, f2 - f4 * f1);
        f4 = ai[1].a() - ai[3].a();
        f5 = ai[1].b() - ai[3].b();
        f2 = (ai[1].a() + ai[3].a()) / 2.0F;
        f3 = (ai[1].b() + ai[3].b()) / 2.0F;
        return (new i[] {
            j, new i(f1 * f4 + f2, f1 * f5 + f3), k, new i(f2 - f4 * f1, f3 - f1 * f5)
        });
    }

    private static float b(a a1, a a2) {
        return com.google.zxing.common.a.a.a(a1.b(), a1.c(), a2.b(), a2.c());
    }

    private int b() {
        int j;
        if (b)
            j = c * 4 + 11;
        else
        if (c <= 4)
            j = c * 4 + 15;
        else
            j = c * 4 + ((c - 4) / 8 + 1) * 2 + 15;
        return j;
    }

    private i[] b(i ai[]) {
        return a(ai, e * 2, b());
    }

    public com.google.zxing.aztec.a a(boolean flag) {
        i ai[] = a(a());
        if (flag) {
            i j = ai[0];
            ai[0] = ai[2];
            ai[2] = j;
        }
        a(ai);
        return new com.google.zxing.aztec.a(a(a, ai[f % 4], ai[(f + 1) % 4], ai[(f + 2) % 4], ai[(f + 3) % 4]), b(ai), b, d, c);
    }

}
