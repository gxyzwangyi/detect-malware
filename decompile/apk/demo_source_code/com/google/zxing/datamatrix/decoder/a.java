// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.datamatrix.decoder;

import com.google.zxing.FormatException;
import com.google.zxing.common.b;

// Referenced classes of package com.google.zxing.datamatrix.decoder:
//            d

final class a {

    private final b a;
    private final b b;
    private final d c;

    a(b b1) {
        int i = b1.f();
        if (i < 8 || i > 144 || (i & 1) != 0) {
            throw FormatException.a();
        } else {
            c = b(b1);
            a = a(b1);
            b = new b(a.e(), a.f());
            return;
        }
    }

    private static d b(b b1) {
        return com.google.zxing.datamatrix.decoder.d.a(b1.f(), b1.e());
    }

    int a(int i, int j) {
        int k;
        int l;
        if (a(i - 1, 0, i, j))
            k = 1;
        else
            k = 0;
        l = k << 1;
        k = l;
        if (a(i - 1, 1, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(i - 1, 2, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 2, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 1, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(1, j - 1, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(2, j - 1, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(3, j - 1, i, j))
            k = l | 1;
        return k;
    }

    b a(b b1) {
        int k = c.b();
        int i = c.c();
        if (b1.f() != k)
            throw new IllegalArgumentException("Dimension of bitMarix must match the version size");
        int l1 = c.d();
        int k1 = c.e();
        int i2 = k / l1;
        int j2 = i / k1;
        b b2 = new b(j2 * k1, i2 * l1);
        for (int j = 0; j < i2; j++) {
            for (int l = 0; l < j2; l++) {
                for (int i1 = 0; i1 < l1; i1++) {
                    for (int j1 = 0; j1 < k1; j1++)
                        if (b1.a((k1 + 2) * l + 1 + j1, (l1 + 2) * j + 1 + i1))
                            b2.b(l * k1 + j1, j * l1 + i1);

                }

            }

        }

        return b2;
    }

    d a() {
        return c;
    }

    boolean a(int i, int j, int k, int l) {
        if (i < 0) {
            i += k;
            j = (4 - (k + 4 & 7)) + j;
        }
        int i1 = j;
        k = i;
        if (j < 0) {
            i1 = j + l;
            k = i + (4 - (l + 4 & 7));
        }
        b.b(i1, k);
        return a.a(i1, k);
    }

    int b(int i, int j) {
        int k;
        int l;
        if (a(i - 3, 0, i, j))
            k = 1;
        else
            k = 0;
        l = k << 1;
        k = l;
        if (a(i - 2, 0, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(i - 1, 0, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 4, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 3, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 2, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 1, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(1, j - 1, i, j))
            k = l | 1;
        return k;
    }

    int b(int i, int j, int k, int l) {
        int i1 = 0;
        if (a(i - 2, j - 2, k, l))
            i1 = 1;
        int j1 = i1 << 1;
        i1 = j1;
        if (a(i - 2, j - 1, k, l))
            i1 = j1 | 1;
        j1 = i1 << 1;
        i1 = j1;
        if (a(i - 1, j - 2, k, l))
            i1 = j1 | 1;
        j1 = i1 << 1;
        i1 = j1;
        if (a(i - 1, j - 1, k, l))
            i1 = j1 | 1;
        j1 = i1 << 1;
        i1 = j1;
        if (a(i - 1, j, k, l))
            i1 = j1 | 1;
        j1 = i1 << 1;
        i1 = j1;
        if (a(i, j - 2, k, l))
            i1 = j1 | 1;
        j1 = i1 << 1;
        i1 = j1;
        if (a(i, j - 1, k, l))
            i1 = j1 | 1;
        j1 = i1 << 1;
        i1 = j1;
        if (a(i, j, k, l))
            i1 = j1 | 1;
        return i1;
    }

    byte[] b() {
        int i;
        int j;
        int k;
        boolean flag;
        boolean flag1;
        boolean flag2;
        boolean flag3;
        int j1;
        int k1;
        byte abyte0[];
        flag3 = false;
        abyte0 = new byte[c.f()];
        j1 = a.f();
        k1 = a.e();
        flag1 = false;
        flag = false;
        flag2 = false;
        i = 0;
        j = 4;
        k = 0;
_L3:
        if (j != j1 || i != 0 || flag2) goto _L2; else goto _L1
_L1:
        abyte0[k] = (byte)a(j1, k1);
        k++;
        j -= 2;
        i += 2;
        flag2 = true;
_L4:
        int l;
        if (j >= j1 && i >= k1)
            if (k != c.f())
                throw FormatException.a();
            else
                return abyte0;
        if (true) goto _L3; else goto _L2
_L2:
        if (j == j1 - 2 && i == 0 && (k1 & 3) != 0 && !flag) {
            abyte0[k] = (byte)b(j1, k1);
            k++;
            j -= 2;
            i += 2;
            flag = true;
        } else
        if (j == j1 + 4 && i == 2 && (k1 & 7) == 0 && !flag1) {
            abyte0[k] = (byte)c(j1, k1);
            k++;
            j -= 2;
            i += 2;
            flag1 = true;
        } else {
            if (j != j1 - 2 || i != 0 || (k1 & 7) != 4 || flag3)
                break MISSING_BLOCK_LABEL_439;
            abyte0[k] = (byte)d(j1, k1);
            k++;
            j -= 2;
            i += 2;
            flag3 = true;
        }
          goto _L4
_L6:
        j = l;
_L10:
        if (k < j1 && j >= 0 && !b.a(j, k)) {
            l = i + 1;
            abyte0[i] = (byte)b(k, j, j1, k1);
            i = l;
        }
        k -= 2;
        l = j + 2;
        if (k >= 0 && l < k1) goto _L6; else goto _L5
_L5:
        j = k + 1;
        l += 3;
_L9:
        if (j >= 0 && l < k1 && !b.a(l, j)) {
            k = i + 1;
            abyte0[i] = (byte)b(j, l, j1, k1);
        } else {
            k = i;
        }
        j += 2;
        l -= 2;
        if (j < j1 && l >= 0) goto _L8; else goto _L7
_L7:
        j += 3;
        i = l + 1;
          goto _L4
_L8:
        i = k;
          goto _L9
        int i1 = i;
        i = k;
        k = j;
        j = i1;
          goto _L10
    }

    int c(int i, int j) {
        int k;
        int l;
        if (a(i - 1, 0, i, j))
            k = 1;
        else
            k = 0;
        l = k << 1;
        k = l;
        if (a(i - 1, j - 1, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 3, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 2, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 1, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(1, j - 3, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(1, j - 2, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(1, j - 1, i, j))
            k = l | 1;
        return k;
    }

    int d(int i, int j) {
        int k;
        int l;
        if (a(i - 3, 0, i, j))
            k = 1;
        else
            k = 0;
        l = k << 1;
        k = l;
        if (a(i - 2, 0, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(i - 1, 0, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 2, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(0, j - 1, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(1, j - 1, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(2, j - 1, i, j))
            k = l | 1;
        l = k << 1;
        k = l;
        if (a(3, j - 1, i, j))
            k = l | 1;
        return k;
    }
}
