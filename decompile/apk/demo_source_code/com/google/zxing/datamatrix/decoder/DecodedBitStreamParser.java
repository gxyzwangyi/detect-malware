// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.datamatrix.decoder;

import com.google.zxing.FormatException;
import com.google.zxing.common.c;
import com.google.zxing.common.d;
import java.io.UnsupportedEncodingException;
import java.util.*;

final class DecodedBitStreamParser {
    private static final class Mode extends Enum {

        public static final Mode a;
        public static final Mode b;
        public static final Mode c;
        public static final Mode d;
        public static final Mode e;
        public static final Mode f;
        public static final Mode g;
        private static final Mode h[];

        public static Mode valueOf(String s) {
            return (Mode)Enum.valueOf(com/google/zxing/datamatrix/decoder/DecodedBitStreamParser$Mode, s);
        }

        public static Mode[] values() {
            return (Mode[])h.clone();
        }

        static  {
            a = new Mode("PAD_ENCODE", 0);
            b = new Mode("ASCII_ENCODE", 1);
            c = new Mode("C40_ENCODE", 2);
            d = new Mode("TEXT_ENCODE", 3);
            e = new Mode("ANSIX12_ENCODE", 4);
            f = new Mode("EDIFACT_ENCODE", 5);
            g = new Mode("BASE256_ENCODE", 6);
            h = (new Mode[] {
                a, b, c, d, e, f, g
            });
        }

        private Mode(String s, int i) {
            super(s, i);
        }
    }


    private static final char a[] = {
        '*', '*', '*', ' ', '0', '1', '2', '3', '4', '5', 
        '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 
        'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 
        'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'
    };
    private static final char b[] = {
        '!', '"', '#', '$', '%', '&', '\'', '(', ')', '*', 
        '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', 
        '?', '@', '[', '\\', ']', '^', '_'
    };
    private static final char c[] = {
        '*', '*', '*', ' ', '0', '1', '2', '3', '4', '5', 
        '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 
        'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 
        'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'
    };
    private static final char d[] = {
        '`', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 
        'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 
        'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '{', '|', '}', 
        '~', '\177'
    };

    private static int a(int i, int j) {
        i -= (j * 149) % 255 + 1;
        if (i < 0)
            i += 256;
        return i;
    }

    static d a(byte abyte0[]) {
        Object obj;
        ArrayList arraylist;
        Object obj1;
        StringBuilder stringbuilder;
        StringBuilder stringbuilder1;
        obj1 = new c(abyte0);
        stringbuilder = new StringBuilder(100);
        stringbuilder1 = new StringBuilder(0);
        arraylist = new ArrayList(1);
        obj = Mode.b;
_L3:
        if (obj != Mode.b) goto _L2; else goto _L1
_L1:
        obj = a(((c) (obj1)), stringbuilder, stringbuilder1);
_L10:
        if (obj == Mode.a || ((c) (obj1)).c() <= 0) {
            if (stringbuilder1.length() > 0)
                stringbuilder.append(stringbuilder1);
            obj1 = stringbuilder.toString();
            static class _cls1 {

                static final int a[];

                static  {
                    a = new int[Mode.values().length];
                    NoSuchFieldError nosuchfielderror;
                    try {
                        a[com.google.zxing.datamatrix.decoder.Mode.c.ordinal()] = 1;
                    }
                    catch (NoSuchFieldError nosuchfielderror4) { }
                    try {
                        a[com.google.zxing.datamatrix.decoder.Mode.d.ordinal()] = 2;
                    }
                    catch (NoSuchFieldError nosuchfielderror3) { }
                    try {
                        a[Mode.e.ordinal()] = 3;
                    }
                    catch (NoSuchFieldError nosuchfielderror2) { }
                    try {
                        a[Mode.f.ordinal()] = 4;
                    }
                    catch (NoSuchFieldError nosuchfielderror1) { }
                    a[Mode.g.ordinal()] = 5;
_L2:
                    return;
                    nosuchfielderror;
                    if (true) goto _L2; else goto _L1
_L1:
                }
            }

            if (arraylist.isEmpty())
                obj = null;
            else
                obj = arraylist;
            return new d(abyte0, ((String) (obj1)), ((List) (obj)), null);
        }
        if (true) goto _L3; else goto _L2
_L2:
        _cls1.a[((Mode) (obj)).ordinal()];
        JVM INSTR tableswitch 1 5: default 160
    //                   1 164
    //                   2 177
    //                   3 186
    //                   4 195
    //                   5 204;
           goto _L4 _L5 _L6 _L7 _L8 _L9
_L9:
        break MISSING_BLOCK_LABEL_204;
_L4:
        throw FormatException.a();
_L5:
        a(((c) (obj1)), stringbuilder);
_L11:
        obj = Mode.b;
          goto _L10
_L6:
        b(((c) (obj1)), stringbuilder);
          goto _L11
_L7:
        c(((c) (obj1)), stringbuilder);
          goto _L11
_L8:
        d(((c) (obj1)), stringbuilder);
          goto _L11
        a(((c) (obj1)), stringbuilder, ((Collection) (arraylist)));
          goto _L11
    }

    private static Mode a(c c1, StringBuilder stringbuilder, StringBuilder stringbuilder1) {
        int i = 0;
_L4:
        int k = c1.a(8);
        if (k == 0)
            throw FormatException.a();
        if (k <= 128) {
            int j;
            if (i != 0)
                i = k + 128;
            else
                i = k;
            stringbuilder.append((char)(i - 1));
            c1 = Mode.b;
        } else {
label0:
            {
                if (k != 129)
                    break label0;
                c1 = Mode.a;
            }
        }
_L5:
        return c1;
        if (k > 229) goto _L2; else goto _L1
_L1:
        j = k - 130;
        if (j < 10)
            stringbuilder.append('0');
        stringbuilder.append(j);
        j = i;
_L6:
        i = j;
        if (c1.c() > 0) goto _L4; else goto _L3
_L3:
        c1 = Mode.b;
          goto _L5
_L2:
        if (k == 230) {
            c1 = com.google.zxing.datamatrix.decoder.Mode.c;
        } else {
label1:
            {
                if (k != 231)
                    break label1;
                c1 = Mode.g;
            }
        }
          goto _L5
        if (k == 232) {
            stringbuilder.append('\035');
            j = i;
        } else {
            j = i;
            if (k != 233) {
                j = i;
                if (k != 234)
                    if (k == 235)
                        j = 1;
                    else
                    if (k == 236) {
                        stringbuilder.append("[)>\03605\035");
                        stringbuilder1.insert(0, "\036\004");
                        j = i;
                    } else {
label2:
                        {
                            if (k != 237)
                                break label2;
                            stringbuilder.append("[)>\03606\035");
                            stringbuilder1.insert(0, "\036\004");
                            j = i;
                        }
                    }
            }
        }
          goto _L6
        if (k == 238)
            c1 = Mode.e;
        else
        if (k == 239) {
            c1 = com.google.zxing.datamatrix.decoder.Mode.d;
        } else {
label3:
            {
                if (k != 240)
                    break label3;
                c1 = Mode.f;
            }
        }
          goto _L5
        j = i;
        if (k == 241) goto _L6; else goto _L7
_L7:
        j = i;
        if (k < 242) goto _L6; else goto _L8
_L8:
        if (k != 254)
            break; /* Loop/switch isn't completed */
        j = i;
        if (c1.c() == 0) goto _L6; else goto _L9
_L9:
        throw FormatException.a();
          goto _L5
    }

    private static void a(int i, int j, int ai[]) {
        j = ((i << 8) + j) - 1;
        i = j / 1600;
        ai[0] = i;
        j -= i * 1600;
        i = j / 40;
        ai[1] = i;
        ai[2] = j - i * 40;
    }

    private static void a(c c1, StringBuilder stringbuilder) {
        int i;
        boolean flag;
        int ai[];
        ai = new int[3];
        i = 0;
        flag = false;
_L12:
        if (c1.c() != 8) goto _L2; else goto _L1
_L1:
        int j;
        return;
_L2:
        if ((j = c1.a(8)) == 254) goto _L1; else goto _L3
_L3:
        a(j, c1.a(8), ai);
        j = 0;
_L10:
        int k;
        if (j >= 3)
            continue; /* Loop/switch isn't completed */
        k = ai[j];
        i;
        JVM INSTR tableswitch 0 3: default 96
    //                   0 100
    //                   1 168
    //                   2 204
    //                   3 287;
           goto _L4 _L5 _L6 _L7 _L8
_L8:
        break MISSING_BLOCK_LABEL_287;
_L6:
        break; /* Loop/switch isn't completed */
_L4:
        throw FormatException.a();
_L5:
        if (k < 3)
            i = k + 1;
        else
        if (k < a.length) {
            char c2 = a[k];
            if (flag) {
                stringbuilder.append((char)(c2 + 128));
                flag = false;
            } else {
                stringbuilder.append(c2);
            }
        } else {
            throw FormatException.a();
        }
_L11:
        j++;
        if (true) goto _L10; else goto _L9
_L9:
        if (flag) {
            stringbuilder.append((char)(k + 128));
            flag = false;
        } else {
            stringbuilder.append((char)k);
        }
        i = 0;
          goto _L11
_L7:
        if (k < b.length) {
            char c3 = b[k];
            if (flag) {
                stringbuilder.append((char)(c3 + 128));
                flag = false;
            } else {
                stringbuilder.append(c3);
            }
        } else
        if (k == 27)
            stringbuilder.append('\035');
        else
        if (k == 30)
            flag = true;
        else
            throw FormatException.a();
        i = 0;
          goto _L11
        if (flag) {
            stringbuilder.append((char)(k + 224));
            flag = false;
        } else {
            stringbuilder.append((char)(k + 96));
        }
        i = 0;
          goto _L11
        if (c1.c() > 0) goto _L12; else goto _L1
    }

    private static void a(c c1, StringBuilder stringbuilder, Collection collection) {
        int i;
        int j;
        int k = c1.b() + 1;
        i = c1.a(8);
        j = k + 1;
        i = a(i, k);
        if (i != 0) goto _L2; else goto _L1
_L1:
        i = c1.c() / 8;
_L4:
        if (i < 0)
            throw FormatException.a();
        break; /* Loop/switch isn't completed */
_L2:
        if (i >= 250) {
            i = (i - 249) * 250 + a(c1.a(8), j);
            j++;
        }
        if (true) goto _L4; else goto _L3
_L3:
        byte abyte0[] = new byte[i];
        for (int l = 0; l < i;) {
            if (c1.c() < 8)
                throw FormatException.a();
            abyte0[l] = (byte)a(c1.a(8), j);
            l++;
            j++;
        }

        collection.add(abyte0);
        try {
            c1 = JVM INSTR new #245 <Class String>;
            c1.String(abyte0, "ISO8859_1");
            stringbuilder.append(c1);
            return;
        }
        // Misplaced declaration of an exception variable
        catch (c c1) {
            throw new IllegalStateException((new StringBuilder()).append("Platform does not support required encoding: ").append(c1).toString());
        }
    }

    private static void b(c c1, StringBuilder stringbuilder) {
        int i;
        boolean flag;
        int ai[];
        ai = new int[3];
        i = 0;
        flag = false;
_L12:
        if (c1.c() != 8) goto _L2; else goto _L1
_L1:
        int j;
        return;
_L2:
        if ((j = c1.a(8)) == 254) goto _L1; else goto _L3
_L3:
        a(j, c1.a(8), ai);
        j = 0;
_L10:
        int k;
        if (j >= 3)
            continue; /* Loop/switch isn't completed */
        k = ai[j];
        i;
        JVM INSTR tableswitch 0 3: default 96
    //                   0 100
    //                   1 168
    //                   2 204
    //                   3 287;
           goto _L4 _L5 _L6 _L7 _L8
_L8:
        break MISSING_BLOCK_LABEL_287;
_L6:
        break; /* Loop/switch isn't completed */
_L4:
        throw FormatException.a();
_L5:
        if (k < 3)
            i = k + 1;
        else
        if (k < c.length) {
            char c2 = c[k];
            if (flag) {
                stringbuilder.append((char)(c2 + 128));
                flag = false;
            } else {
                stringbuilder.append(c2);
            }
        } else {
            throw FormatException.a();
        }
_L11:
        j++;
        if (true) goto _L10; else goto _L9
_L9:
        if (flag) {
            stringbuilder.append((char)(k + 128));
            flag = false;
        } else {
            stringbuilder.append((char)k);
        }
        i = 0;
          goto _L11
_L7:
        if (k < b.length) {
            char c3 = b[k];
            if (flag) {
                stringbuilder.append((char)(c3 + 128));
                flag = false;
            } else {
                stringbuilder.append(c3);
            }
        } else
        if (k == 27)
            stringbuilder.append('\035');
        else
        if (k == 30)
            flag = true;
        else
            throw FormatException.a();
        i = 0;
          goto _L11
        if (k < d.length) {
            char c4 = d[k];
            if (flag) {
                stringbuilder.append((char)(c4 + 128));
                flag = false;
            } else {
                stringbuilder.append(c4);
            }
            i = 0;
        } else {
            throw FormatException.a();
        }
          goto _L11
        if (c1.c() > 0) goto _L12; else goto _L1
    }

    private static void c(c c1, StringBuilder stringbuilder) {
        int ai[] = new int[3];
_L4:
        if (c1.c() != 8) goto _L2; else goto _L1
_L1:
        int i;
        return;
_L2:
        if ((i = c1.a(8)) == 254) goto _L1; else goto _L3
_L3:
        a(i, c1.a(8), ai);
        i = 0;
        while (i < 3)  {
            int j = ai[i];
            if (j == 0)
                stringbuilder.append('\r');
            else
            if (j == 1)
                stringbuilder.append('*');
            else
            if (j == 2)
                stringbuilder.append('>');
            else
            if (j == 3)
                stringbuilder.append(' ');
            else
            if (j < 14)
                stringbuilder.append((char)(j + 44));
            else
            if (j < 40)
                stringbuilder.append((char)(j + 51));
            else
                throw FormatException.a();
            i++;
        }
        if (c1.c() > 0) goto _L4; else goto _L1
    }

    private static void d(c c1, StringBuilder stringbuilder) {
_L6:
        if (c1.c() > 16) goto _L2; else goto _L1
_L1:
        return;
_L2:
        int i = 0;
_L5:
        if (i >= 4) goto _L4; else goto _L3
_L3:
        int k;
label0:
        {
            k = c1.a(6);
            if (k != 31)
                break label0;
            i = 8 - c1.a();
            if (i != 8)
                c1.a(i);
        }
          goto _L1
        int j = k;
        if ((k & 0x20) == 0)
            j = k | 0x40;
        stringbuilder.append((char)j);
        i++;
          goto _L5
_L4:
        if (c1.c() > 0) goto _L6; else goto _L1
    }

}
