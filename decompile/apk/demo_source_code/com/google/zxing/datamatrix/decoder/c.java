// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.datamatrix.decoder;

import com.google.zxing.ChecksumException;
import com.google.zxing.common.b;
import com.google.zxing.common.d;
import com.google.zxing.common.reedsolomon.ReedSolomonException;
import com.google.zxing.common.reedsolomon.a;

// Referenced classes of package com.google.zxing.datamatrix.decoder:
//            a, b, DecodedBitStreamParser

public final class c {

    private final com.google.zxing.common.reedsolomon.c a;

    public c() {
        a = new com.google.zxing.common.reedsolomon.c(a.f);
    }

    private void a(byte abyte0[], int i) {
        boolean flag = false;
        int l = abyte0.length;
        int ai[] = new int[l];
        for (int j = 0; j < l; j++)
            ai[j] = abyte0[j] & 0xff;

        int k = abyte0.length;
        try {
            a.a(ai, k - i);
        }
        // Misplaced declaration of an exception variable
        catch (byte abyte0[]) {
            throw ChecksumException.a();
        }
        for (k = ((flag) ? 1 : 0); k < i; k++)
            abyte0[k] = (byte)ai[k];

    }

    public d a(b b1) {
        com.google.zxing.datamatrix.decoder.a a1 = new com.google.zxing.datamatrix.decoder.a(b1);
        b1 = a1.a();
        com.google.zxing.datamatrix.decoder.b ab[] = com.google.zxing.datamatrix.decoder.b.a(a1.b(), b1);
        int i1 = ab.length;
        int j1 = ab.length;
        int i = 0;
        int k = 0;
        for (; i < j1; i++)
            k += ab[i].a();

        byte abyte1[] = new byte[k];
        for (int j = 0; j < i1; j++) {
            b1 = ab[j];
            byte abyte0[] = b1.b();
            int k1 = b1.a();
            a(abyte0, k1);
            for (int l = 0; l < k1; l++)
                abyte1[l * i1 + j] = abyte0[l];

        }

        return com.google.zxing.datamatrix.decoder.DecodedBitStreamParser.a(abyte1);
    }
}
