// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.pdf417.decoder;

import com.google.zxing.ChecksumException;
import com.google.zxing.FormatException;
import com.google.zxing.NotFoundException;
import com.google.zxing.common.b;
import com.google.zxing.common.d;
import com.google.zxing.pdf417.decoder.a.a;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

// Referenced classes of package com.google.zxing.pdf417.decoder:
//            e, f, d, c, 
//            g, b, DecodedBitStreamParser, h, 
//            a

public final class i {

    private static final a a = new a();

    private static int a(int j) {
        return 2 << j;
    }

    private static int a(e e1, int j, int k, boolean flag) {
        int l;
        com.google.zxing.pdf417.decoder.d d1;
        if (flag)
            l = 1;
        else
            l = -1;
        d1 = null;
        if (a(e1, j - l))
            d1 = e1.a(j - l).c(k);
        if (d1 == null) goto _L2; else goto _L1
_L1:
        if (flag)
            j = d1.e();
        else
            j = d1.d();
_L4:
        return j;
_L2:
        com.google.zxing.pdf417.decoder.d d2 = e1.a(j).a(k);
        if (d2 != null) {
            if (flag)
                j = d2.d();
            else
                j = d2.e();
            continue; /* Loop/switch isn't completed */
        }
        if (a(e1, j - l))
            d2 = e1.a(j - l).a(k);
        if (d2 != null) {
            if (flag)
                j = d2.e();
            else
                j = d2.d();
            continue; /* Loop/switch isn't completed */
        }
        boolean flag1 = false;
        k = j;
        j = ((flag1) ? 1 : 0);
        int i1;
        for (; a(e1, k - l); k = i1) {
            i1 = k - l;
            com.google.zxing.pdf417.decoder.d ad[] = e1.a(i1).b();
            int j1 = ad.length;
            k = 0;
            do {
                if (k >= j1)
                    break;
                com.google.zxing.pdf417.decoder.d d3 = ad[k];
                if (d3 != null) {
                    if (flag)
                        k = d3.e();
                    else
                        k = d3.d();
                    j = l * j * (d3.e() - d3.d()) + k;
                    continue; /* Loop/switch isn't completed */
                }
                k++;
            } while (true);
            j++;
        }

        if (flag)
            j = e1.e().a();
        else
            j = e1.e().b();
        if (true) goto _L4; else goto _L3
_L3:
    }

    private static int a(int ai[]) {
        int k = -1;
        int l = ai.length;
        for (int j = 0; j < l; j++)
            k = Math.max(k, ai[j]);

        return k;
    }

    private static int a(int ai[], int ai1[], int j) {
        if (ai1 != null && ai1.length > j / 2 + 3 || j < 0 || j > 512)
            throw ChecksumException.a();
        else
            return a.a(ai, j, ai1);
    }

    private static d a(int j, int ai[], int ai1[], int ai2[], int ai3[][]) {
        int ai4[] = new int[ai2.length];
        int k = 100;
label0:
        do {
            if (k > 0) {
                for (int l = 0; l < ai4.length; l++)
                    ai[ai2[l]] = ai3[l][ai4[l]];

                d d1;
                try {
                    d1 = a(ai, j, ai1);
                }
                catch (ChecksumException checksumexception) {
                    if (ai4.length == 0)
                        throw ChecksumException.a();
                    int i1 = 0;
                    do {
label1:
                        {
                            if (i1 < ai4.length) {
                                if (ai4[i1] >= ai3[i1].length - 1)
                                    break label1;
                                ai4[i1] = ai4[i1] + 1;
                            }
                            k--;
                            continue label0;
                        }
                        ai4[i1] = 0;
                        if (i1 == ai4.length - 1)
                            throw ChecksumException.a();
                        i1++;
                    } while (true);
                }
                return d1;
            }
            throw ChecksumException.a();
        } while (true);
    }

    public static d a(b b1, com.google.zxing.i j, com.google.zxing.i k, com.google.zxing.i l, com.google.zxing.i i1, int j1, int k1) {
        int i2;
        int j2;
        int k2;
        int l2;
        int j3;
        int k3;
        boolean flag;
        e e1;
        c c1;
        {
            com.google.zxing.i l3;
            com.google.zxing.i i4;
label0:
            {
                c1 = new c(b1, j, k, l, i1);
                k = null;
                int l1 = 0;
                e1 = null;
                i1 = null;
                do {
                    i4 = i1;
                    l3 = k;
                    if (l1 >= 2)
                        break label0;
                    if (j != null)
                        i1 = a(b1, c1, j, true, j1, k1);
                    if (l != null)
                        k = a(b1, c1, l, false, j1, k1);
                    e1 = a(((g) (i1)), ((g) (k)));
                    if (e1 == null)
                        throw NotFoundException.a();
                    if (l1 != 0 || e1.e() == null || e1.e().c() >= c1.c() && e1.e().d() <= c1.d())
                        break;
                    c1 = e1.e();
                    l1++;
                } while (true);
                e1.a(c1);
                l3 = k;
                i4 = i1;
            }
            k3 = e1.b() + 1;
            e1.a(0, i4);
            e1.a(k3, l3);
            if (i4 != null)
                flag = true;
            else
                flag = false;
            j2 = 1;
            i2 = k1;
            k1 = j2;
            j2 = j1;
        }
        if (k1 > k3)
            break MISSING_BLOCK_LABEL_476;
        if (flag)
            l2 = k1;
        else
            l2 = k3 - k1;
        if (e1.a(l2) == null) goto _L2; else goto _L1
_L1:
        k2 = i2;
        j3 = j2;
_L4:
        k1++;
        j2 = j3;
        i2 = k2;
        break MISSING_BLOCK_LABEL_212;
_L2:
        int i3;
        if (l2 == 0 || l2 == k3) {
            boolean flag1;
            if (l2 == 0)
                flag1 = true;
            else
                flag1 = false;
            j = new g(c1, flag1);
        } else {
            j = new f(c1);
        }
        e1.a(l2, j);
        i3 = c1.c();
        j1 = -1;
        j3 = j2;
        k2 = i2;
        if (i3 > c1.d()) goto _L4; else goto _L3
_L3:
        j3 = a(e1, l2, i3, flag);
        if (j3 >= 0) {
            k2 = j3;
            if (j3 <= c1.b())
                break MISSING_BLOCK_LABEL_411;
        }
        if (j1 != -1) goto _L6; else goto _L5
_L5:
        i3++;
        break MISSING_BLOCK_LABEL_326;
_L6:
        k2 = j1;
        k = a(b1, c1.a(), c1.b(), flag, k2, i3, j2, i2);
        if (k != null) {
            j.a(i3, k);
            j2 = Math.min(j2, k.c());
            i2 = Math.max(i2, k.c());
            j1 = k2;
        }
        if (true) goto _L5; else goto _L7
_L7:
        return a(e1);
    }

    private static d a(e e1) {
        boolean flag = false;
        com.google.zxing.pdf417.decoder.b ab[][] = b(e1);
        a(e1, ab);
        ArrayList arraylist1 = new ArrayList();
        int ai[] = new int[e1.c() * e1.b()];
        ArrayList arraylist2 = new ArrayList();
        ArrayList arraylist = new ArrayList();
        for (int j = 0; j < e1.c(); j++) {
            int l = 0;
            while (l < e1.b())  {
                int ai1[] = ab[j][l + 1].a();
                int i1 = e1.b() * j + l;
                if (ai1.length == 0)
                    arraylist1.add(Integer.valueOf(i1));
                else
                if (ai1.length == 1) {
                    ai[i1] = ai1[0];
                } else {
                    arraylist.add(Integer.valueOf(i1));
                    arraylist2.add(ai1);
                }
                l++;
            }
        }

        int ai2[][] = new int[arraylist2.size()][];
        for (int k = ((flag) ? 1 : 0); k < ai2.length; k++)
            ai2[k] = (int[])arraylist2.get(k);

        return a(e1.d(), ai, com.google.zxing.pdf417.a.a(arraylist1), com.google.zxing.pdf417.a.a(arraylist), ai2);
    }

    private static d a(int ai[], int j, int ai1[]) {
        if (ai.length == 0) {
            throw FormatException.a();
        } else {
            int k = 1 << j + 1;
            int l = a(ai, ai1, k);
            a(ai, k);
            ai = com.google.zxing.pdf417.decoder.DecodedBitStreamParser.a(ai, String.valueOf(j));
            ai.a(Integer.valueOf(l));
            ai.b(Integer.valueOf(ai1.length));
            return ai;
        }
    }

    private static c a(g g1) {
        Object obj = null;
        if (g1 != null) goto _L2; else goto _L1
_L1:
        return ((c) (obj));
_L2:
        int ai[] = g1.d();
        if (ai == null)
            continue; /* Loop/switch isn't completed */
        int l1 = a(ai);
        int k1 = ai.length;
        int j1 = 0;
        int j = 0;
label0:
        do {
label1:
            {
                int l = j;
                if (j1 < k1) {
                    l = ai[j1];
                    j += l1 - l;
                    if (l <= 0)
                        break label1;
                    l = j;
                }
                obj = g1.b();
                j = 0;
                for (j1 = l; j1 > 0 && obj[j] == null; j++)
                    j1--;

                break label0;
            }
            j1++;
        } while (true);
        j = ai.length;
        int i1 = 0;
        k1 = j - 1;
label2:
        do {
            int k;
label3:
            {
                k = i1;
                if (k1 >= 0) {
                    k = i1 + (l1 - ai[k1]);
                    if (ai[k1] <= 0)
                        break label3;
                }
                i1 = obj.length;
                k1 = i1 - 1;
                i1 = k;
                for (k = k1; i1 > 0 && obj[k] == null; k--)
                    i1--;

                break label2;
            }
            k1--;
            i1 = k;
        } while (true);
        obj = g1.a().a(j1, i1, g1.f());
        if (true) goto _L1; else goto _L3
_L3:
    }

    private static com.google.zxing.pdf417.decoder.d a(b b1, int j, int k, boolean flag, int l, int i1, int j1, int k1) {
        l = b(b1, j, k, flag, l, i1);
        b1 = a(b1, j, k, flag, l, i1);
        if (b1 == null) {
            b1 = null;
        } else {
            k = com.google.zxing.pdf417.a.a(b1);
            if (flag) {
                j = l;
                l += k;
            } else {
                for (j = 0; j < b1.length >> 1; j++) {
                    i1 = b1[j];
                    b1[j] = b1[b1.length - 1 - j];
                    b1[b1.length - 1 - j] = i1;
                }

                j = l - k;
            }
            if (!a(k, j1, k1)) {
                b1 = null;
            } else {
                i1 = com.google.zxing.pdf417.decoder.h.a(b1);
                k = com.google.zxing.pdf417.a.a(i1);
                if (k == -1)
                    b1 = null;
                else
                    b1 = new com.google.zxing.pdf417.decoder.d(j, l, c(i1), k);
            }
        }
        return b1;
    }

    private static e a(g g1, g g2) {
        e e1 = null;
        if (g1 != null || g2 != null) goto _L2; else goto _L1
_L1:
        return e1;
_L2:
        com.google.zxing.pdf417.decoder.a a1 = b(g1, g2);
        if (a1 != null)
            e1 = new e(a1, com.google.zxing.pdf417.decoder.c.a(a(g1), a(g2)));
        if (true) goto _L1; else goto _L3
_L3:
    }

    private static g a(b b1, c c1, com.google.zxing.i j, boolean flag, int k, int l) {
        g g1 = new g(c1, flag);
        for (int j1 = 0; j1 < 2; j1++) {
            int i1;
            int k1;
            int l1;
            if (j1 == 0)
                k1 = 1;
            else
                k1 = -1;
            i1 = (int)j.a();
            l1 = (int)j.b();
            while (l1 <= c1.d() && l1 >= c1.c())  {
                com.google.zxing.pdf417.decoder.d d1 = a(b1, 0, b1.e(), flag, i1, l1, k, l);
                if (d1 != null) {
                    g1.a(l1, d1);
                    if (flag)
                        i1 = d1.d();
                    else
                        i1 = d1.e();
                }
                l1 += k1;
            }
        }

        return g1;
    }

    private static void a(e e1, com.google.zxing.pdf417.decoder.b ab[][]) {
        int j;
        int ai[];
        ai = ab[0][1].a();
        j = e1.b() * e1.c() - a(e1.d());
        if (ai.length != 0) goto _L2; else goto _L1
_L1:
        if (j < 1 || j > 928)
            throw NotFoundException.a();
        ab[0][1].a(j);
_L4:
        return;
_L2:
        if (ai[0] != j)
            ab[0][1].a(j);
        if (true) goto _L4; else goto _L3
_L3:
    }

    private static void a(int ai[], int j) {
label0:
        {
            if (ai.length < 4)
                throw FormatException.a();
            int k = ai[0];
            if (k > ai.length)
                throw FormatException.a();
            if (k == 0) {
                if (j >= ai.length)
                    break label0;
                ai[0] = ai.length - j;
            }
            return;
        }
        throw FormatException.a();
    }

    private static boolean a(int j, int k, int l) {
        boolean flag;
        if (k - 2 <= j && j <= l + 2)
            flag = true;
        else
            flag = false;
        return flag;
    }

    private static boolean a(e e1, int j) {
        boolean flag;
        if (j >= 0 && j <= e1.b() + 1)
            flag = true;
        else
            flag = false;
        return flag;
    }

    private static int[] a(b b1, int j, int k, boolean flag, int l, int i1) {
        int ai[] = new int[8];
        int j1;
        int k1;
        boolean flag1;
        if (flag)
            j1 = 1;
        else
            j1 = -1;
        flag1 = flag;
        for (k1 = 0; (flag && l < k || !flag && l >= j) && k1 < ai.length;)
            if (b1.a(l, i1) == flag1) {
                ai[k1] = ai[k1] + 1;
                l += j1;
            } else {
                k1++;
                if (!flag1)
                    flag1 = true;
                else
                    flag1 = false;
            }

        if (k1 == ai.length || (flag && l == k || !flag && l == j) && k1 == ai.length - 1)
            b1 = ai;
        else
            b1 = null;
        return b1;
    }

    private static int b(b b1, int j, int k, boolean flag, int l, int i1) {
        int j1;
        int k1;
        int l1;
        if (flag)
            j1 = -1;
        else
            j1 = 1;
        l1 = 0;
        k1 = j1;
        j1 = l;
_L6:
        if (l1 >= 2)
            break MISSING_BLOCK_LABEL_109;
_L5:
        if ((!flag || j1 < j) && (flag || j1 >= k) || flag != b1.a(j1, i1)) goto _L2; else goto _L1
_L1:
        if (Math.abs(l - j1) <= 2) goto _L4; else goto _L3
_L3:
        return l;
_L4:
        j1 += k1;
          goto _L5
_L2:
        k1 = -k1;
        if (!flag)
            flag = true;
        else
            flag = false;
        l1++;
          goto _L6
        l = j1;
          goto _L3
    }

    private static int b(int ai[]) {
        return ((((ai[0] - ai[2]) + ai[4]) - ai[6]) + 9) % 9;
    }

    private static com.google.zxing.pdf417.decoder.a b(g g1, g g2) {
        Object obj = null;
        if (g1 == null) goto _L2; else goto _L1
_L1:
        com.google.zxing.pdf417.decoder.a a1 = g1.e();
        if (a1 != null) goto _L3; else goto _L2
_L2:
        if (g2 == null)
            g1 = obj;
        else
            g1 = g2.e();
_L5:
        return g1;
_L3:
label0:
        {
            if (g2 != null) {
                g2 = g2.e();
                if (g2 != null)
                    break label0;
            }
            g1 = a1;
            continue; /* Loop/switch isn't completed */
        }
        if (a1.() != g2.() && a1.b() != g2.b()) {
            g1 = obj;
            if (a1.c() != g2.c())
                continue; /* Loop/switch isn't completed */
        }
        g1 = a1;
        if (true) goto _L5; else goto _L4
_L4:
    }

    private static int[] b(int j) {
        int ai[] = new int[8];
        int j1 = 0;
        int i1 = ai.length - 1;
        do {
            int k = i1;
            int l = j1;
            if ((j & 1) != j1) {
                l = j & 1;
                k = --i1;
                if (i1 < 0)
                    return ai;
            }
            ai[k] = ai[k] + 1;
            j >>= 1;
            i1 = k;
            j1 = l;
        } while (true);
    }

    private static com.google.zxing.pdf417.decoder.b[][] b(e e1) {
        com.google.zxing.pdf417.decoder.b ab[][] = (com.google.zxing.pdf417.decoder.b[][])Array.newInstance(com/google/zxing/pdf417/decoder/b, new int[] {
            e1.c(), e1.b() + 2
        });
        for (int j = 0; j < ab.length; j++) {
            for (int l = 0; l < ab[j].length; l++)
                ab[j][l] = new com.google.zxing.pdf417.decoder.b();

        }

        e1 = e1.a();
        int l1 = e1.length;
        int k = 0;
        int i1 = -1;
        while (k < l1)  {
            f f1 = e1[k];
            int k1 = i1 + 1;
            if (f1 != null) {
                com.google.zxing.pdf417.decoder.d ad[] = f1.b();
                int i2 = ad.length;
                int j1 = 0;
                while (j1 < i2)  {
                    com.google.zxing.pdf417.decoder.d d1 = ad[j1];
                    if (d1 != null && d1.h() != -1)
                        ab[d1.h()][k1].a(d1.g());
                    j1++;
                }
            }
            k++;
            i1 = k1;
        }
        return ab;
    }

    private static int c(int j) {
        return b(b(j));
    }

}
