// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.pdf417.decoder;

import com.google.zxing.NotFoundException;
import com.google.zxing.common.b;
import com.google.zxing.i;

final class c {

    private b a;
    private i b;
    private i c;
    private i d;
    private i e;
    private int f;
    private int g;
    private int h;
    private int i;

    c(b b1, i j, i k, i l, i i1) {
        if (j == null && l == null || k == null && i1 == null || j != null && k == null || l != null && i1 == null) {
            throw NotFoundException.a();
        } else {
            a(b1, j, k, l, i1);
            return;
        }
    }

    c(c c1) {
        a(c1.a, c1.b, c1.c, c1.d, c1.e);
    }

    static c a(c c1, c c2) {
        if (c1 != null)
            if (c2 == null)
                c2 = c1;
            else
                c2 = new c(c1.a, c1.b, c1.c, c2.d, c2.e);
        return c2;
    }

    private void a(b b1, i j, i k, i l, i i1) {
        a = b1;
        b = j;
        c = k;
        d = l;
        e = i1;
        i();
    }

    private void i() {
        if (b != null) goto _L2; else goto _L1
_L1:
        b = new i(0.0F, d.b());
        c = new i(0.0F, e.b());
_L4:
        f = (int)Math.min(b.a(), c.a());
        g = (int)Math.max(d.a(), e.a());
        h = (int)Math.min(b.b(), d.b());
        i = (int)Math.max(c.b(), e.b());
        return;
_L2:
        if (d == null) {
            d = new i(a.e() - 1, b.b());
            e = new i(a.e() - 1, c.b());
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    int a() {
        return f;
    }

    c a(int j, int k, boolean flag) {
        i i1 = b;
        i j1 = c;
        i j2 = d;
        i i2 = e;
        i k1;
        i l1;
        if (j > 0) {
            int l;
            if (flag)
                k1 = b;
            else
                k1 = d;
            l = (int)k1.b() - j;
            j = l;
            if (l < 0)
                j = 0;
            l1 = new i(k1.a(), j);
            if (flag) {
                k1 = j2;
                i1 = l1;
            } else {
                k1 = l1;
            }
        } else {
            k1 = j2;
        }
        if (k > 0) {
            if (flag)
                l1 = c;
            else
                l1 = e;
            k = (int)l1.b() + k;
            j = k;
            if (k >= a.f())
                j = a.f() - 1;
            l1 = new i(l1.a(), j);
            if (flag)
                j1 = l1;
            else
                i2 = l1;
        }
        i();
        return new c(a, i1, j1, k1, i2);
    }

    int b() {
        return g;
    }

    int c() {
        return h;
    }

    int d() {
        return i;
    }

    i e() {
        return b;
    }

    i f() {
        return d;
    }

    i g() {
        return c;
    }

    i h() {
        return e;
    }
}
