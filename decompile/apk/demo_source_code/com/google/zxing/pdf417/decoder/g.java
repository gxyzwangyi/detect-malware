// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.pdf417.decoder;

import com.google.zxing.FormatException;
import com.google.zxing.i;

// Referenced classes of package com.google.zxing.pdf417.decoder:
//            f, d, a, c, 
//            b

final class g extends f {

    private final boolean a;

    g(c c1, boolean flag) {
        super(c1);
        a = flag;
    }

    private void a(d ad[], a a1) {
        int j = 0;
_L5:
        if (j >= ad.length) goto _L2; else goto _L1
_L1:
        d d1 = ad[j];
        if (ad[j] != null) goto _L4; else goto _L3
_L3:
        j++;
          goto _L5
_L4:
        int i1 = d1.g() % 30;
        int l = d1.h();
        if (l > a1.c()) {
            ad[j] = null;
            continue; /* Loop/switch isn't completed */
        }
        int k = l;
        if (!a)
            k = l + 2;
        switch (k % 3) {
        case 0: // '\0'
            if (i1 * 3 + 1 != a1.d())
                ad[j] = null;
            break;

        case 1: // '\001'
            if (i1 / 3 != a1.b() || i1 % 3 != a1.e())
                ad[j] = null;
            break;

        case 2: // '\002'
            if (i1 + 1 != a1.a())
                ad[j] = null;
            break;
        }
        if (true) goto _L3; else goto _L2
_L2:
    }

    int a(a a1) {
        d ad[] = b();
        c();
        a(ad, a1);
        Object obj = a();
        float f1;
        int j;
        int k;
        int l;
        int j2;
        int j3;
        i k3;
        if (a)
            k3 = ((c) (obj)).e();
        else
            k3 = ((c) (obj)).f();
        if (a)
            obj = ((c) (obj)).g();
        else
            obj = ((c) (obj)).h();
        j2 = b((int)k3.b());
        j3 = b((int)((i) (obj)).b());
        f1 = (float)(j3 - j2) / (float)a1.c();
        k = -1;
        l = 0;
        j = 1;
        while (j2 < j3)  {
            int j1;
            if (ad[j2] == null) {
                int i1 = l;
                l = k;
                k = j;
                j = i1;
            } else {
                d d1 = ad[j2];
                int k2 = d1.h() - k;
                if (k2 == 0) {
                    k2 = l + 1;
                    l = j;
                    int k1 = k;
                    j = k2;
                    k = l;
                    l = k1;
                } else
                if (k2 == 1) {
                    k = Math.max(j, l);
                    l = d1.h();
                    j = 1;
                } else
                if (k2 < 0 || d1.h() >= a1.c() || k2 > j2) {
                    ad[j2] = null;
                    k2 = j;
                    int l1 = k;
                    j = l;
                    k = k2;
                    l = l1;
                } else {
                    if (j > 2)
                        k2 *= j - 2;
                    boolean flag;
                    int i3;
                    if (k2 >= j2)
                        flag = true;
                    else
                        flag = false;
                    i3 = 1;
                    while (i3 <= k2 && !flag)  {
                        if (ad[j2 - i3] != null)
                            flag = true;
                        else
                            flag = false;
                        i3++;
                    }
                    if (flag) {
                        ad[j2] = null;
                        int i2 = l;
                        int l2 = j;
                        l = k;
                        j = i2;
                        k = l2;
                    } else {
                        l = d1.h();
                        k = j;
                        j = 1;
                    }
                }
            }
            j2++;
            j1 = l;
            l = j;
            j = k;
            k = j1;
        }
        return (int)((double)f1 + 0.5D);
    }

    int b(a a1) {
        Object obj1 = a();
        float f1;
        int j;
        int k;
        int l;
        int i1;
        int j1;
        Object obj;
        if (a)
            obj = ((c) (obj1)).e();
        else
            obj = ((c) (obj1)).f();
        if (a)
            obj1 = ((c) (obj1)).g();
        else
            obj1 = ((c) (obj1)).h();
        l = b((int)((i) (obj)).b());
        j1 = b((int)((i) (obj1)).b());
        f1 = (float)(j1 - l) / (float)a1.c();
        obj = b();
        k = -1;
        j = 0;
        i1 = 1;
        while (l < j1)  {
            if (obj[l] != null) {
                d d1 = obj[l];
                d1.b();
                int k1 = d1.h() - k;
                if (k1 == 0)
                    j++;
                else
                if (k1 == 1) {
                    i1 = Math.max(i1, j);
                    k = d1.h();
                    j = 1;
                } else
                if (d1.h() >= a1.c()) {
                    obj[l] = null;
                } else {
                    k = d1.h();
                    j = 1;
                }
            }
            l++;
        }
        return (int)((double)f1 + 0.5D);
    }

    void c() {
        d ad[] = b();
        int k = ad.length;
        for (int j = 0; j < k; j++) {
            d d1 = ad[j];
            if (d1 != null)
                d1.b();
        }

    }

    int[] d() {
        Object obj = e();
        if (obj != null) goto _L2; else goto _L1
_L1:
        obj = null;
_L4:
        return ((int []) (obj));
_L2:
        b(((a) (obj)));
        int ai[] = new int[((a) (obj)).c()];
        d ad[] = b();
        int k = ad.length;
        int j = 0;
        do {
            obj = ai;
            if (j >= k)
                continue;
            obj = ad[j];
            if (obj != null) {
                int l = ((d) (obj)).h();
                if (l >= ai.length)
                    throw FormatException.a();
                ai[l] = ai[l] + 1;
            }
            j++;
        } while (true);
        if (true) goto _L4; else goto _L3
_L3:
    }

    a e() {
        int j;
        int i1;
        Object obj;
        d ad[];
        b b1;
        b b2;
        b b3;
        ad = b();
        b1 = new b();
        b3 = new b();
        obj = new b();
        b2 = new b();
        i1 = ad.length;
        j = 0;
_L5:
        if (j >= i1) goto _L2; else goto _L1
_L1:
        d d1 = ad[j];
        if (d1 != null) goto _L4; else goto _L3
_L3:
        j++;
          goto _L5
_L4:
        d1.b();
        int j1 = d1.g() % 30;
        int l = d1.h();
        int k = l;
        if (!a)
            k = l + 2;
        switch (k % 3) {
        case 0: // '\0'
            b3.a(j1 * 3 + 1);
            break;

        case 1: // '\001'
            b2.a(j1 / 3);
            ((b) (obj)).a(j1 % 3);
            break;

        case 2: // '\002'
            b1.a(j1 + 1);
            break;
        }
        continue; /* Loop/switch isn't completed */
_L2:
        if (b1.a().length == 0 || b3.a().length == 0 || ((b) (obj)).a().length == 0 || b2.a().length == 0 || b1.a()[0] < 1 || b3.a()[0] + ((b) (obj)).a()[0] < 3 || b3.a()[0] + ((b) (obj)).a()[0] > 90) {
            obj = null;
        } else {
            obj = new a(b1.a()[0], b3.a()[0], ((b) (obj)).a()[0], b2.a()[0]);
            a(ad, ((a) (obj)));
        }
        return ((a) (obj));
        if (true) goto _L3; else goto _L6
_L6:
    }

    boolean f() {
        return a;
    }

    public String toString() {
        return (new StringBuilder()).append("IsLeft: ").append(a).append('\n').append(super.toString()).toString();
    }
}
