// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.pdf417.decoder.a;


// Referenced classes of package com.google.zxing.pdf417.decoder.a:
//            c

public final class b {

    public static final b a = new b(929, 3);
    private final int b[];
    private final int c[];
    private final c d = new c(this, new int[] {
        0
    });
    private final c e = new c(this, new int[] {
        1
    });
    private final int f;

    private b(int i, int j) {
        f = i;
        b = new int[i];
        c = new int[i];
        int l = 0;
        int k = 1;
        for (; l < i; l++) {
            b[l] = k;
            k = (k * j) % i;
        }

        for (j = 0; j < i - 1; j++)
            c[b[j]] = j;

    }

    int a(int i) {
        return b[i];
    }

    c a() {
        return d;
    }

    c a(int i, int j) {
        if (i < 0)
            throw new IllegalArgumentException();
        Object obj;
        if (j == 0) {
            obj = d;
        } else {
            obj = new int[i + 1];
            obj[0] = j;
            obj = new c(this, ((int []) (obj)));
        }
        return ((c) (obj));
    }

    int b(int i) {
        if (i == 0)
            throw new IllegalArgumentException();
        else
            return c[i];
    }

    int b(int i, int j) {
        return (i + j) % f;
    }

    c b() {
        return e;
    }

    int c() {
        return f;
    }

    int c(int i) {
        if (i == 0)
            throw new ArithmeticException();
        else
            return b[f - c[i] - 1];
    }

    int c(int i, int j) {
        return ((f + i) - j) % f;
    }

    int d(int i, int j) {
        if (i == 0 || j == 0)
            i = 0;
        else
            i = b[(c[i] + c[j]) % (f - 1)];
        return i;
    }

}
