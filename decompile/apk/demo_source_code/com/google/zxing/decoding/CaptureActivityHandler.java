// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.decoding;

import android.content.ActivityNotFoundException;
import android.content.Intent;
import android.content.pm.*;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.*;
import android.util.Log;
import com.google.zxing.QrCodeScanActivity;
import com.google.zxing.camera.d;
import com.google.zxing.h;
import com.google.zxing.view.a;
import java.util.Collection;
import java.util.Map;

// Referenced classes of package com.google.zxing.decoding:
//            c

public final class CaptureActivityHandler extends Handler {
    private static final class State extends Enum {

        public static final State a;
        public static final State b;
        public static final State c;
        private static final State d[];

        public static State valueOf(String s) {
            return (State)Enum.valueOf(com/google/zxing/decoding/CaptureActivityHandler$State, s);
        }

        public static State[] values() {
            return (State[])d.clone();
        }

        static  {
            a = new State("PREVIEW", 0);
            b = new State("SUCCESS", 1);
            c = new State("DONE", 2);
            d = (new State[] {
                a, b, c
            });
        }

        private State(String s, int i) {
            super(s, i);
        }
    }


    private static final String a = com/google/zxing/decoding/CaptureActivityHandler.getSimpleName();
    private final QrCodeScanActivity b;
    private final c c;
    private State d;
    private final d e;

    public CaptureActivityHandler(QrCodeScanActivity qrcodescanactivity, Collection collection, Map map, String s, d d1) {
        b = qrcodescanactivity;
        c = new c(qrcodescanactivity, collection, map, s, new a(qrcodescanactivity.b()));
        c.start();
        d = State.b;
        e = d1;
        d1.c();
        b();
    }

    private void b() {
        if (d == State.b) {
            d = com.google.zxing.decoding.State.a;
            e.a(c.a(), 0x7f0f0007);
            b.d();
        }
    }

    public void a() {
        d = State.c;
        e.d();
        Message.obtain(c.a(), 0x7f0f0015).sendToTarget();
        try {
            c.join(500L);
        }
        catch (InterruptedException interruptedexception) { }
        removeMessages(0x7f0f0009);
        removeMessages(0x7f0f0008);
    }

    public void handleMessage(Message message) {
        Object obj = null;
        if (message.what != 0x7f0f0016) goto _L2; else goto _L1
_L1:
        b();
_L4:
        return;
_L2:
        if (message.what == 0x7f0f0009) {
            d = State.b;
            Object obj1 = message.getData();
            float f;
            if (obj1 != null) {
                obj = ((Bundle) (obj1)).getByteArray("barcode_bitmap");
                Intent intent;
                ResolveInfo resolveinfo;
                if (obj != null)
                    obj = BitmapFactory.decodeByteArray(((byte []) (obj)), 0, obj.length, null).copy(android.graphics.Bitmap.Config.ARGB_8888, true);
                else
                    obj = null;
                f = ((Bundle) (obj1)).getFloat("barcode_scaled_factor");
            } else {
                obj = null;
                f = 1.0F;
            }
            b.a((h)message.obj, ((Bitmap) (obj)), f);
        } else
        if (message.what == 0x7f0f0008) {
            d = com.google.zxing.decoding.State.a;
            e.a(c.a(), 0x7f0f0007);
        } else
        if (message.what == 0x7f0f0017) {
            b.setResult(-1, (Intent)message.obj);
            b.finish();
        } else
        if (message.what == 0x7f0f0010) {
            obj1 = (String)message.obj;
            intent = new Intent("android.intent.action.VIEW");
            intent.addFlags(0x80000);
            intent.setData(Uri.parse(((String) (obj1))));
            resolveinfo = b.getPackageManager().resolveActivity(intent, 0x10000);
            message = ((Message) (obj));
            if (resolveinfo != null) {
                message = ((Message) (obj));
                if (resolveinfo.activityInfo != null) {
                    message = resolveinfo.activityInfo.packageName;
                    Log.d(a, (new StringBuilder()).append("Using browser in package ").append(message).toString());
                }
            }
            if ("com.android.browser".equals(message) || "com.android.chrome".equals(message)) {
                intent.setPackage(message);
                intent.addFlags(0x10000000);
                intent.putExtra("com.android.browser.application_id", message);
            }
            try {
                b.startActivity(intent);
            }
            // Misplaced declaration of an exception variable
            catch (Message message) {
                Log.w(a, (new StringBuilder()).append("Can't find anything to handle VIEW of URI ").append(((String) (obj1))).toString());
            }
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

}
