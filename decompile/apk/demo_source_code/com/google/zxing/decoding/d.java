// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.decoding;

import android.app.Activity;
import android.content.*;
import android.os.AsyncTask;
import android.util.Log;

public final class d {
    private final class a extends AsyncTask {

        final d a;

        protected transient Object doInBackground(Object aobj[]) {
            try {
                Thread.sleep(0x493e0L);
                Log.i(d.e(), "Finishing activity due to inactivity");
                d.b(a).finish();
            }
            // Misplaced declaration of an exception variable
            catch (Object aobj[]) { }
            return null;
        }

        private a() {
            a = d.this;
            super();
        }

    }

    private final class b extends BroadcastReceiver {

        final d a;

        public void onReceive(Context context, Intent intent) {
            if ("android.intent.action.BATTERY_CHANGED".equals(intent.getAction())) {
                boolean flag;
                if (intent.getIntExtra("plugged", -1) <= 0)
                    flag = true;
                else
                    flag = false;
                if (flag)
                    a.a();
                else
                    d.a(a);
            }
        }

        private b() {
            a = d.this;
            super();
        }

    }


    private static final String a = com/google/zxing/decoding/d.getSimpleName();
    private final Activity b;
    private final BroadcastReceiver c = new b();
    private boolean d;
    private AsyncTask e;

    public d(Activity activity) {
        b = activity;
        d = false;
        a();
    }

    static void a(d d1) {
        d1.f();
    }

    static Activity b(d d1) {
        return d1.b;
    }

    static String e() {
        return a;
    }

    private void f() {
        this;
        JVM INSTR monitorenter ;
        AsyncTask asynctask = e;
        if (asynctask == null)
            break MISSING_BLOCK_LABEL_22;
        asynctask.cancel(true);
        e = null;
        this;
        JVM INSTR monitorexit ;
        return;
        Exception exception;
        exception;
        throw exception;
    }

    public void a() {
        this;
        JVM INSTR monitorenter ;
        f();
        a a1 = JVM INSTR new #8   <Class d$a>;
        a1.this. a();
        e = a1;
        e.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, new Object[0]);
        this;
        JVM INSTR monitorexit ;
        return;
        Exception exception;
        exception;
        throw exception;
    }

    public void b() {
        this;
        JVM INSTR monitorenter ;
        f();
        if (!d)
            break MISSING_BLOCK_LABEL_32;
        b.unregisterReceiver(c);
        d = false;
_L1:
        this;
        JVM INSTR monitorexit ;
        return;
        Log.w(a, "PowerStatusReceiver was never registered?");
          goto _L1
        Exception exception;
        exception;
        throw exception;
    }

    public void c() {
        this;
        JVM INSTR monitorenter ;
        if (!d)
            break MISSING_BLOCK_LABEL_25;
        Log.w(a, "PowerStatusReceiver was already registered?");
_L1:
        a();
        this;
        JVM INSTR monitorexit ;
        return;
        Activity activity = b;
        BroadcastReceiver broadcastreceiver = c;
        IntentFilter intentfilter = JVM INSTR new #87  <Class IntentFilter>;
        intentfilter.IntentFilter("android.intent.action.BATTERY_CHANGED");
        activity.registerReceiver(broadcastreceiver, intentfilter);
        d = true;
          goto _L1
        Exception exception;
        exception;
        throw exception;
    }

    public void d() {
        f();
    }

}
