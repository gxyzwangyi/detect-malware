// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.camera;

import android.content.Context;
import android.hardware.Camera;
import android.os.AsyncTask;
import android.preference.PreferenceManager;
import android.util.Log;
import java.util.ArrayList;
import java.util.Collection;
import java.util.concurrent.RejectedExecutionException;

final class com.google.zxing.camera.a
    implements android.hardware.Camera.AutoFocusCallback {
    private final class a extends AsyncTask {

        final com.google.zxing.camera.a a;

        protected transient Object doInBackground(Object aobj[]) {
            try {
                Thread.sleep(1300L);
            }
            // Misplaced declaration of an exception variable
            catch (Object aobj[]) { }
            a.a();
            return null;
        }

        private a() {
            a = com.google.zxing.camera.a.this;
            super();
        }

    }


    private static final String a = com/google/zxing/camera/a.getSimpleName();
    private static final Collection b;
    private boolean c;
    private boolean d;
    private final boolean e = true;
    private final Camera f;
    private AsyncTask g;

    com.google.zxing.camera.a(Context context, Camera camera) {
        f = camera;
        PreferenceManager.getDefaultSharedPreferences(context);
        context = camera.getParameters().getFocusMode();
        Log.i(a, (new StringBuilder()).append("Current focus mode '").append(context).append("'; use auto focus? ").append(e).toString());
        a();
    }

    private void c() {
        this;
        JVM INSTR monitorenter ;
        a a1;
        if (c || g != null)
            break MISSING_BLOCK_LABEL_43;
        a1 = JVM INSTR new #10  <Class a$a>;
        a1.this. a();
        a1.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, new Object[0]);
        g = a1;
_L1:
        this;
        JVM INSTR monitorexit ;
        return;
        Object obj;
        obj;
        Log.w(a, "Could not request auto focus", ((Throwable) (obj)));
          goto _L1
        obj;
        throw obj;
    }

    private void d() {
        this;
        JVM INSTR monitorenter ;
        if (g != null) {
            if (g.getStatus() != android.os.AsyncTask.Status.FINISHED)
                g.cancel(true);
            g = null;
        }
        this;
        JVM INSTR monitorexit ;
        return;
        Exception exception;
        exception;
        throw exception;
    }

    void a() {
        this;
        JVM INSTR monitorenter ;
        boolean flag;
        if (!e)
            break MISSING_BLOCK_LABEL_43;
        g = null;
        if (c)
            break MISSING_BLOCK_LABEL_43;
        flag = d;
        if (flag)
            break MISSING_BLOCK_LABEL_43;
        f.autoFocus(this);
        d = true;
_L1:
        this;
        JVM INSTR monitorexit ;
        return;
        Object obj;
        obj;
        Log.w(a, "Unexpected exception while focusing", ((Throwable) (obj)));
        c();
          goto _L1
        obj;
        throw obj;
    }

    void b() {
        this;
        JVM INSTR monitorenter ;
        c = true;
        if (!e)
            break MISSING_BLOCK_LABEL_25;
        d();
        f.cancelAutoFocus();
_L1:
        this;
        JVM INSTR monitorexit ;
        return;
        Object obj;
        obj;
        Log.w(a, "Unexpected exception while cancelling focusing", ((Throwable) (obj)));
          goto _L1
        obj;
        throw obj;
    }

    public void onAutoFocus(boolean flag, Camera camera) {
        this;
        JVM INSTR monitorenter ;
        d = false;
        c();
        this;
        JVM INSTR monitorexit ;
        return;
        camera;
        throw camera;
    }

    static  {
        b = new ArrayList(2);
        b.add("auto");
        b.add("macro");
    }
}
