// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.oned;

import com.google.zxing.*;
import com.google.zxing.common.a;
import com.google.zxing.g;
import com.google.zxing.h;
import com.google.zxing.oned.rss.e;
import com.google.zxing.oned.rss.expanded.d;
import java.util.*;

// Referenced classes of package com.google.zxing.oned:
//            k, j, c, d, 
//            b, h, a

public final class i extends k {

    private final k a[];

    public i(Map map) {
        boolean flag;
        Collection collection;
        ArrayList arraylist;
        if (map == null)
            collection = null;
        else
            collection = (Collection)map.get(DecodeHintType.c);
        if (map != null && map.get(DecodeHintType.g) != null)
            flag = true;
        else
            flag = false;
        arraylist = new ArrayList();
        if (collection != null) {
            if (collection.contains(BarcodeFormat.h) || collection.contains(BarcodeFormat.o) || collection.contains(BarcodeFormat.g) || collection.contains(BarcodeFormat.p))
                arraylist.add(new j(map));
            if (collection.contains(BarcodeFormat.c))
                arraylist.add(new c(flag));
            if (collection.contains(BarcodeFormat.d))
                arraylist.add(new com.google.zxing.oned.d());
            if (collection.contains(BarcodeFormat.e))
                arraylist.add(new b());
            if (collection.contains(BarcodeFormat.i))
                arraylist.add(new com.google.zxing.oned.h());
            if (collection.contains(BarcodeFormat.b))
                arraylist.add(new com.google.zxing.oned.a());
            if (collection.contains(BarcodeFormat.m))
                arraylist.add(new e());
            if (collection.contains(BarcodeFormat.n))
                arraylist.add(new d());
        }
        if (arraylist.isEmpty()) {
            arraylist.add(new j(map));
            arraylist.add(new c());
            arraylist.add(new com.google.zxing.oned.a());
            arraylist.add(new com.google.zxing.oned.d());
            arraylist.add(new b());
            arraylist.add(new com.google.zxing.oned.h());
            arraylist.add(new e());
            arraylist.add(new d());
        }
        a = (k[])arraylist.toArray(new k[arraylist.size()]);
    }

    public h a(int l, a a1, Map map) {
        int i1;
        int j1;
        k ak[];
        ak = a;
        j1 = ak.length;
        i1 = 0;
_L2:
        Object obj;
        if (i1 >= j1)
            break; /* Loop/switch isn't completed */
        obj = ak[i1];
        obj = ((k) (obj)).a(l, a1, map);
        return ((h) (obj));
        ReaderException readerexception;
        readerexception;
        i1++;
        if (true) goto _L2; else goto _L1
_L1:
        throw NotFoundException.a();
    }

    public void a() {
        k ak[] = a;
        int i1 = ak.length;
        for (int l = 0; l < i1; l++)
            ak[l].a();

    }
}
