// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.oned;

import com.google.zxing.*;
import com.google.zxing.common.a;
import com.google.zxing.h;
import com.google.zxing.i;
import java.util.EnumMap;
import java.util.Map;

// Referenced classes of package com.google.zxing.oned:
//            p

final class m {

    private final int a[] = new int[4];
    private final StringBuilder b = new StringBuilder();

    m() {
    }

    private static Map a(String s) {
        if (s.length() != 2) {
            s = null;
        } else {
            EnumMap enummap = new EnumMap(com/google/zxing/ResultMetadataType);
            enummap.put(ResultMetadataType.e, Integer.valueOf(s));
            s = enummap;
        }
        return s;
    }

    int a(a a1, int ai[], StringBuilder stringbuilder) {
        int ai1[] = a;
        ai1[0] = 0;
        ai1[1] = 0;
        ai1[2] = 0;
        ai1[3] = 0;
        int k1 = a1.a();
        int j = ai[1];
        int l = 0;
        int k;
        int j1;
        for (k = 0; l < 2 && j < k1; k = j1) {
            int l1 = com.google.zxing.oned.p.a(a1, ai1, j, p.e);
            stringbuilder.append((char)(l1 % 10 + 48));
            int i2 = ai1.length;
            for (int i1 = 0; i1 < i2;) {
                int j2 = ai1[i1];
                i1++;
                j = j2 + j;
            }

            j1 = k;
            if (l1 >= 10)
                j1 = k | 1 << 1 - l;
            k = j;
            if (l != 1)
                k = a1.d(a1.c(j));
            l++;
            j = k;
        }

        if (stringbuilder.length() != 2)
            throw NotFoundException.a();
        if (Integer.parseInt(stringbuilder.toString()) % 4 != k)
            throw NotFoundException.a();
        else
            return j;
    }

    h a(int j, a a1, int ai[]) {
        Object obj = b;
        ((StringBuilder) (obj)).setLength(0);
        int k = a(a1, ai, ((StringBuilder) (obj)));
        obj = ((StringBuilder) (obj)).toString();
        a1 = a(((String) (obj)));
        i l = new i((float)(ai[0] + ai[1]) / 2.0F, j);
        ai = new i(k, j);
        BarcodeFormat barcodeformat = BarcodeFormat.q;
        ai = new h(((String) (obj)), null, new i[] {
            l, ai
        }, barcodeformat);
        if (a1 != null)
            ai.a(a1);
        return ai;
    }
}
