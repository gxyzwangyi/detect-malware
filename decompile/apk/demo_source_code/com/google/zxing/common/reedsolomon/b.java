// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.common.reedsolomon;


// Referenced classes of package com.google.zxing.common.reedsolomon:
//            a

final class b {

    private final a a;
    private final int b[];

    b(a a1, int ai[]) {
        int i = 1;
        super();
        if (ai.length == 0)
            throw new IllegalArgumentException();
        a = a1;
        int j = ai.length;
        if (j > 1 && ai[0] == 0) {
            for (; i < j && ai[i] == 0; i++);
            if (i == j) {
                b = a1.a().b;
            } else {
                b = new int[j - i];
                System.arraycopy(ai, i, b, 0, b.length);
            }
        } else {
            b = ai;
        }
    }

    int a() {
        return b.length - 1;
    }

    int a(int i) {
        return b[b.length - 1 - i];
    }

    b a(int i, int j) {
        if (i < 0)
            throw new IllegalArgumentException();
        Object obj;
        if (j == 0) {
            obj = a.a();
        } else {
            int k = b.length;
            obj = new int[k + i];
            for (i = 0; i < k; i++)
                obj[i] = a.c(b[i], j);

            obj = new b(a, ((int []) (obj)));
        }
        return ((b) (obj));
    }

    b a(b b1) {
        if (!a.equals(b1.a))
            throw new IllegalArgumentException("GenericGFPolys do not have same GenericGF field");
        if (!b())
            if (b1.b()) {
                b1 = this;
            } else {
                int ai[] = b;
                b1 = b1.b;
                int j;
                Object obj;
                if (ai.length > b1.length) {
                    obj = ai;
                } else {
                    obj = b1;
                    b1 = ai;
                }
                ai = new int[obj.length];
                j = obj.length - b1.length;
                System.arraycopy(obj, 0, ai, 0, j);
                for (int i = j; i < obj.length; i++)
                    ai[i] = com.google.zxing.common.reedsolomon.a.b(b1[i - j], obj[i]);

                b1 = new b(a, ai);
            }
        return b1;
    }

    int b(int i) {
        int k = 0;
        if (i != 0) goto _L2; else goto _L1
_L1:
        int j = a(0);
_L4:
        return j;
_L2:
        int j1 = b.length;
        if (i == 1) {
            int ai[] = b;
            int l = ai.length;
            i = 0;
            do {
                j = i;
                if (k >= l)
                    continue;
                i = com.google.zxing.common.reedsolomon.a.b(i, ai[k]);
                k++;
            } while (true);
        }
        k = b[0];
        int i1 = 1;
        do {
            j = k;
            if (i1 >= j1)
                continue;
            k = com.google.zxing.common.reedsolomon.a.b(a.c(i, k), b[i1]);
            i1++;
        } while (true);
        if (true) goto _L4; else goto _L3
_L3:
    }

    b b(b b1) {
        if (!a.equals(b1.a))
            throw new IllegalArgumentException("GenericGFPolys do not have same GenericGF field");
        if (b() || b1.b()) {
            b1 = a.a();
        } else {
            int ai[] = b;
            int l = ai.length;
            int ai1[] = b1.b;
            int k = ai1.length;
            b1 = new int[(l + k) - 1];
            for (int i = 0; i < l; i++) {
                int i1 = ai[i];
                for (int j = 0; j < k; j++)
                    b1[i + j] = com.google.zxing.common.reedsolomon.a.b(b1[i + j], a.c(i1, ai1[j]));

            }

            b1 = new b(a, b1);
        }
        return b1;
    }

    boolean b() {
        boolean flag = false;
        if (b[0] == 0)
            flag = true;
        return flag;
    }

    b c(int i) {
        if (i != 0) goto _L2; else goto _L1
_L1:
        Object obj = a.a();
_L4:
        return ((b) (obj));
_L2:
        obj = this;
        if (i != 1) {
            int k = b.length;
            obj = new int[k];
            for (int j = 0; j < k; j++)
                obj[j] = a.c(b[j], i);

            obj = new b(a, ((int []) (obj)));
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public String toString() {
        StringBuilder stringbuilder = new StringBuilder(a() * 8);
        int i = a();
        do {
            if (i >= 0) {
                int k = a(i);
                if (k != 0) {
                    int j;
                    if (k < 0) {
                        stringbuilder.append(" - ");
                        j = -k;
                    } else {
                        j = k;
                        if (stringbuilder.length() > 0) {
                            stringbuilder.append(" + ");
                            j = k;
                        }
                    }
                    if (i == 0 || j != 1) {
                        j = a.b(j);
                        if (j == 0)
                            stringbuilder.append('1');
                        else
                        if (j == 1) {
                            stringbuilder.append('a');
                        } else {
                            stringbuilder.append("a^");
                            stringbuilder.append(j);
                        }
                    }
                    if (i != 0)
                        if (i == 1) {
                            stringbuilder.append('x');
                        } else {
                            stringbuilder.append("x^");
                            stringbuilder.append(i);
                        }
                }
                i--;
                continue;
            }
            return stringbuilder.toString();
        } while (true);
    }
}
