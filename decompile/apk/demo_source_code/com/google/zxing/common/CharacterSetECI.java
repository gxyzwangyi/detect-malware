// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.zxing.common;

import com.google.zxing.FormatException;
import java.util.HashMap;
import java.util.Map;

public final class CharacterSetECI extends Enum {

    public static final CharacterSetECI A;
    private static final Map B;
    private static final Map C;
    private static final CharacterSetECI F[];
    public static final CharacterSetECI a;
    public static final CharacterSetECI b;
    public static final CharacterSetECI c;
    public static final CharacterSetECI d;
    public static final CharacterSetECI e;
    public static final CharacterSetECI f;
    public static final CharacterSetECI g;
    public static final CharacterSetECI h;
    public static final CharacterSetECI i;
    public static final CharacterSetECI j;
    public static final CharacterSetECI k;
    public static final CharacterSetECI l;
    public static final CharacterSetECI m;
    public static final CharacterSetECI n;
    public static final CharacterSetECI o;
    public static final CharacterSetECI p;
    public static final CharacterSetECI q;
    public static final CharacterSetECI r;
    public static final CharacterSetECI s;
    public static final CharacterSetECI t;
    public static final CharacterSetECI u;
    public static final CharacterSetECI v;
    public static final CharacterSetECI w;
    public static final CharacterSetECI x;
    public static final CharacterSetECI y;
    public static final CharacterSetECI z;
    private final int D[];
    private final String E[];

    private CharacterSetECI(String s1, int i1, int j1) {
        this(s1, i1, new int[] {
            j1
        }, new String[0]);
    }

    private transient CharacterSetECI(String s1, int i1, int j1, String as[]) {
        super(s1, i1);
        D = (new int[] {
            j1
        });
        E = as;
    }

    private transient CharacterSetECI(String s1, int i1, int ai[], String as[]) {
        super(s1, i1);
        D = ai;
        E = as;
    }

    public static CharacterSetECI a(int i1) {
        if (i1 < 0 || i1 >= 900)
            throw FormatException.a();
        else
            return (CharacterSetECI)B.get(Integer.valueOf(i1));
    }

    public static CharacterSetECI valueOf(String s1) {
        return (CharacterSetECI)Enum.valueOf(com/google/zxing/common/CharacterSetECI, s1);
    }

    public static CharacterSetECI[] values() {
        return (CharacterSetECI[])F.clone();
    }

    static  {
        a = new CharacterSetECI("Cp437", 0, new int[] {
            0, 2
        }, new String[0]);
        b = new CharacterSetECI("ISO8859_1", 1, new int[] {
            1, 3
        }, new String[] {
            "ISO-8859-1"
        });
        c = new CharacterSetECI("ISO8859_2", 2, 4, new String[] {
            "ISO-8859-2"
        });
        d = new CharacterSetECI("ISO8859_3", 3, 5, new String[] {
            "ISO-8859-3"
        });
        e = new CharacterSetECI("ISO8859_4", 4, 6, new String[] {
            "ISO-8859-4"
        });
        f = new CharacterSetECI("ISO8859_5", 5, 7, new String[] {
            "ISO-8859-5"
        });
        g = new CharacterSetECI("ISO8859_6", 6, 8, new String[] {
            "ISO-8859-6"
        });
        h = new CharacterSetECI("ISO8859_7", 7, 9, new String[] {
            "ISO-8859-7"
        });
        i = new CharacterSetECI("ISO8859_8", 8, 10, new String[] {
            "ISO-8859-8"
        });
        j = new CharacterSetECI("ISO8859_9", 9, 11, new String[] {
            "ISO-8859-9"
        });
        k = new CharacterSetECI("ISO8859_10", 10, 12, new String[] {
            "ISO-8859-10"
        });
        l = new CharacterSetECI("ISO8859_11", 11, 13, new String[] {
            "ISO-8859-11"
        });
        m = new CharacterSetECI("ISO8859_13", 12, 15, new String[] {
            "ISO-8859-13"
        });
        n = new CharacterSetECI("ISO8859_14", 13, 16, new String[] {
            "ISO-8859-14"
        });
        o = new CharacterSetECI("ISO8859_15", 14, 17, new String[] {
            "ISO-8859-15"
        });
        p = new CharacterSetECI("ISO8859_16", 15, 18, new String[] {
            "ISO-8859-16"
        });
        q = new CharacterSetECI("SJIS", 16, 20, new String[] {
            "Shift_JIS"
        });
        r = new CharacterSetECI("Cp1250", 17, 21, new String[] {
            "windows-1250"
        });
        s = new CharacterSetECI("Cp1251", 18, 22, new String[] {
            "windows-1251"
        });
        t = new CharacterSetECI("Cp1252", 19, 23, new String[] {
            "windows-1252"
        });
        u = new CharacterSetECI("Cp1256", 20, 24, new String[] {
            "windows-1256"
        });
        v = new CharacterSetECI("UnicodeBigUnmarked", 21, 25, new String[] {
            "UTF-16BE", "UnicodeBig"
        });
        w = new CharacterSetECI("UTF8", 22, 26, new String[] {
            "UTF-8"
        });
        x = new CharacterSetECI("ASCII", 23, new int[] {
            27, 170
        }, new String[] {
            "US-ASCII"
        });
        y = new CharacterSetECI("Big5", 24, 28);
        z = new CharacterSetECI("GB18030", 25, 29, new String[] {
            "GB2312", "EUC_CN", "GBK"
        });
        A = new CharacterSetECI("EUC_KR", 26, 30, new String[] {
            "EUC-KR"
        });
        F = (new CharacterSetECI[] {
            a, b, c, d, e, f, g, h, i, j, 
            k, l, m, n, o, p, q, r, s, t, 
            u, v, w, x, y, z, A
        });
        B = new HashMap();
        C = new HashMap();
        CharacterSetECI acharacterseteci[] = values();
        int l1 = acharacterseteci.length;
        for (int i1 = 0; i1 < l1; i1++) {
            CharacterSetECI characterseteci = acharacterseteci[i1];
            int ai[] = characterseteci.D;
            int i2 = ai.length;
            for (int j1 = 0; j1 < i2; j1++) {
                int j2 = ai[j1];
                B.put(Integer.valueOf(j2), characterseteci);
            }

            C.put(characterseteci.name(), characterseteci);
            String as[] = characterseteci.E;
            i2 = as.length;
            for (int k1 = 0; k1 < i2; k1++) {
                String s1 = as[k1];
                C.put(s1, characterseteci);
            }

        }

    }
}
