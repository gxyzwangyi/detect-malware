// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.gson;

import com.google.gson.internal.LazilyParsedNumber;
import com.google.gson.internal.a;
import java.math.BigInteger;

// Referenced classes of package com.google.gson:
//            j

public final class n extends j {

    private static final Class a[];
    private Object b;

    public n(Boolean boolean1) {
        a(boolean1);
    }

    public n(Number number) {
        a(number);
    }

    public n(String s) {
        a(s);
    }

    private static boolean a(n n1) {
        boolean flag;
        if (n1.b instanceof Number) {
            n1 = (Number)n1.b;
            if ((n1 instanceof BigInteger) || (n1 instanceof Long) || (n1 instanceof Integer) || (n1 instanceof Short) || (n1 instanceof Byte))
                flag = true;
            else
                flag = false;
        } else {
            flag = false;
        }
        return flag;
    }

    private static boolean b(Object obj) {
        boolean flag1 = true;
        if (!(obj instanceof String)) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L4:
        return flag;
_L2:
        obj = obj.getClass();
        Class aclass[] = a;
        int k = aclass.length;
        for (int i = 0; i < k; i++) {
            flag = flag1;
            if (aclass[i].isAssignableFrom(((Class) (obj))))
                continue; /* Loop/switch isn't completed */
        }

        flag = false;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public Number a() {
        Object obj;
        if (b instanceof String)
            obj = new LazilyParsedNumber((String)b);
        else
            obj = (Number)b;
        return ((Number) (obj));
    }

    void a(Object obj) {
        if (obj instanceof Character) {
            b = String.valueOf(((Character)obj).charValue());
        } else {
            boolean flag;
            if ((obj instanceof Number) || b(obj))
                flag = true;
            else
                flag = false;
            com.google.gson.internal.a.a(flag);
            b = obj;
        }
    }

    public String b() {
        String s;
        if (p())
            s = a().toString();
        else
        if (o())
            s = n().toString();
        else
            s = (String)b;
        return s;
    }

    public double c() {
        double d1;
        if (p())
            d1 = a().doubleValue();
        else
            d1 = Double.parseDouble(b());
        return d1;
    }

    public long d() {
        long l;
        if (p())
            l = a().longValue();
        else
            l = Long.parseLong(b());
        return l;
    }

    public int e() {
        int i;
        if (p())
            i = a().intValue();
        else
            i = Integer.parseInt(b());
        return i;
    }

    public boolean equals(Object obj) {
        boolean flag;
        boolean flag1;
        flag = true;
        flag1 = false;
        if (this != obj) goto _L2; else goto _L1
_L1:
        return flag;
_L2:
        if (obj == null || getClass() != obj.getClass()) {
            flag = false;
            continue; /* Loop/switch isn't completed */
        }
        obj = (n)obj;
        if (b == null) {
            if (((n) (obj)).b != null)
                flag = false;
            continue; /* Loop/switch isn't completed */
        }
        if (a(this) && a(((n) (obj)))) {
            if (a().longValue() != ((n) (obj)).a().longValue())
                flag = false;
            continue; /* Loop/switch isn't completed */
        }
        if ((b instanceof Number) && (((n) (obj)).b instanceof Number)) {
            double d1 = a().doubleValue();
            double d2 = ((n) (obj)).a().doubleValue();
            if (d1 != d2) {
                flag = flag1;
                if (!Double.isNaN(d1))
                    continue; /* Loop/switch isn't completed */
                flag = flag1;
                if (!Double.isNaN(d2))
                    continue; /* Loop/switch isn't completed */
            }
            flag = true;
        } else {
            flag = b.equals(((n) (obj)).b);
        }
        if (true) goto _L1; else goto _L3
_L3:
    }

    public boolean f() {
        boolean flag;
        if (o())
            flag = n().booleanValue();
        else
            flag = Boolean.parseBoolean(b());
        return flag;
    }

    public int hashCode() {
        int i;
        if (b == null)
            i = 31;
        else
        if (a(this)) {
            long l = a().longValue();
            i = (int)(l ^ l >>> 32);
        } else
        if (b instanceof Number) {
            long l1 = Double.doubleToLongBits(a().doubleValue());
            i = (int)(l1 ^ l1 >>> 32);
        } else {
            i = b.hashCode();
        }
        return i;
    }

    Boolean n() {
        return (Boolean)b;
    }

    public boolean o() {
        return b instanceof Boolean;
    }

    public boolean p() {
        return b instanceof Number;
    }

    public boolean q() {
        return b instanceof String;
    }

    static  {
        a = (new Class[] {
            Integer.TYPE, Long.TYPE, Short.TYPE, Float.TYPE, Double.TYPE, Byte.TYPE, Boolean.TYPE, Character.TYPE, java/lang/Integer, java/lang/Long, 
            java/lang/Short, java/lang/Float, java/lang/Double, java/lang/Byte, java/lang/Boolean, java/lang/Character
        });
    }
}
