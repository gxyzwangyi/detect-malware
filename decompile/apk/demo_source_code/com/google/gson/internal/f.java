// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.gson.internal;

import com.google.gson.JsonIOException;
import com.google.gson.JsonSyntaxException;
import com.google.gson.internal.bind.i;
import com.google.gson.*;
import com.google.gson.stream.*;
import java.io.*;

public final class f {
    private static final class a extends Writer {

        private final Appendable a;
        private final a b = new a();

        public void close() {
        }

        public void flush() {
        }

        public void write(int l) {
            a.append((char)l);
        }

        public void write(char ac[], int l, int i1) {
            b.a = ac;
            a.append(b, l, l + i1);
        }

        a(Appendable appendable) {
            a = appendable;
        }
    }

    static class a.a
        implements CharSequence {

        char a[];

        public char charAt(int l) {
            return a[l];
        }

        public int length() {
            return a.length;
        }

        public CharSequence subSequence(int l, int i1) {
            return new String(a, l, i1 - l);
        }

        a.a() {
        }
    }


    public static j a(com.google.gson.stream.a a1) {
        boolean flag = true;
        a1.f();
        flag = false;
        try {
            a1 = (j)i.X.b(a1);
        }
        // Misplaced declaration of an exception variable
        catch (com.google.gson.stream.a a1) {
            if (flag)
                a1 = k.a;
            else
                throw new JsonSyntaxException(a1);
        }
        // Misplaced declaration of an exception variable
        catch (com.google.gson.stream.a a1) {
            throw new JsonSyntaxException(a1);
        }
        // Misplaced declaration of an exception variable
        catch (com.google.gson.stream.a a1) {
            throw new JsonIOException(a1);
        }
        // Misplaced declaration of an exception variable
        catch (com.google.gson.stream.a a1) {
            throw new JsonSyntaxException(a1);
        }
        return a1;
    }

    public static Writer a(Appendable appendable) {
        if (appendable instanceof Writer)
            appendable = (Writer)appendable;
        else
            appendable = new a(appendable);
        return appendable;
    }

    public static void a(j j1, b b) {
        i.X.a(b, j1);
    }
}
