// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.gson;

import com.google.gson.internal.f;
import com.google.gson.stream.b;
import java.io.IOException;
import java.io.StringWriter;

// Referenced classes of package com.google.gson:
//            g, l, n, k

public abstract class j {

    public j() {
    }

    public Number a() {
        throw new UnsupportedOperationException(getClass().getSimpleName());
    }

    public String b() {
        throw new UnsupportedOperationException(getClass().getSimpleName());
    }

    public double c() {
        throw new UnsupportedOperationException(getClass().getSimpleName());
    }

    public long d() {
        throw new UnsupportedOperationException(getClass().getSimpleName());
    }

    public int e() {
        throw new UnsupportedOperationException(getClass().getSimpleName());
    }

    public boolean f() {
        throw new UnsupportedOperationException(getClass().getSimpleName());
    }

    public boolean g() {
        return this instanceof g;
    }

    public boolean h() {
        return this instanceof l;
    }

    public boolean i() {
        return this instanceof n;
    }

    public boolean j() {
        return this instanceof k;
    }

    public l k() {
        if (h())
            return (l)this;
        else
            throw new IllegalStateException((new StringBuilder()).append("Not a JSON Object: ").append(this).toString());
    }

    public g l() {
        if (g())
            return (g)this;
        else
            throw new IllegalStateException("This is not a JSON Array.");
    }

    public n m() {
        if (i())
            return (n)this;
        else
            throw new IllegalStateException("This is not a JSON Primitive.");
    }

    Boolean n() {
        throw new UnsupportedOperationException(getClass().getSimpleName());
    }

    public String toString() {
        Object obj;
        try {
            StringWriter stringwriter = JVM INSTR new #87  <Class StringWriter>;
            stringwriter.StringWriter();
            obj = JVM INSTR new #90  <Class b>;
            ((b) (obj)).b(stringwriter);
            ((b) (obj)).b(true);
            com.google.gson.internal.f.a(this, ((b) (obj)));
            obj = stringwriter.toString();
        }
        catch (IOException ioexception) {
            throw new AssertionError(ioexception);
        }
        return ((String) (obj));
    }
}
