// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.gson;

import java.lang.reflect.Field;
import java.util.Locale;

// Referenced classes of package com.google.gson:
//            c

public abstract class FieldNamingPolicy extends Enum
    implements c {

    public static final FieldNamingPolicy a;
    public static final FieldNamingPolicy b;
    public static final FieldNamingPolicy c;
    public static final FieldNamingPolicy d;
    public static final FieldNamingPolicy e;
    private static final FieldNamingPolicy f[];

    private FieldNamingPolicy(String s, int i) {
        super(s, i);
    }


    private static String a(char c1, String s, int i) {
        if (i < s.length())
            s = (new StringBuilder()).append(c1).append(s.substring(i)).toString();
        else
            s = String.valueOf(c1);
        return s;
    }

    static String a(String s) {
        StringBuilder stringbuilder = new StringBuilder();
        int i = 0;
        char c1 = s.charAt(0);
        do {
            if (i >= s.length() - 1 || Character.isLetter(c1)) {
                String s1;
                if (i == s.length()) {
                    s1 = stringbuilder.toString();
                } else {
                    s1 = s;
                    if (!Character.isUpperCase(c1))
                        s1 = stringbuilder.append(a(Character.toUpperCase(c1), s, i + 1)).toString();
                }
                return s1;
            }
            stringbuilder.append(c1);
            i++;
            c1 = s.charAt(i);
        } while (true);
    }

    static String a(String s, String s1) {
        StringBuilder stringbuilder = new StringBuilder();
        for (int i = 0; i < s.length(); i++) {
            char c1 = s.charAt(i);
            if (Character.isUpperCase(c1) && stringbuilder.length() != 0)
                stringbuilder.append(s1);
            stringbuilder.append(c1);
        }

        return stringbuilder.toString();
    }

    public static FieldNamingPolicy valueOf(String s) {
        return (FieldNamingPolicy)Enum.valueOf(com/google/gson/FieldNamingPolicy, s);
    }

    public static FieldNamingPolicy[] values() {
        return (FieldNamingPolicy[])f.clone();
    }

    static  {
        a = new FieldNamingPolicy("IDENTITY", 0) {

            public String a(Field field) {
                return field.getName();
            }

        }
;
        b = new FieldNamingPolicy("UPPER_CAMEL_CASE", 1) {

            public String a(Field field) {
                return a(field.getName());
            }

        }
;
        c = new FieldNamingPolicy("UPPER_CAMEL_CASE_WITH_SPACES", 2) {

            public String a(Field field) {
                return a(a(field.getName(), " "));
            }

        }
;
        d = new FieldNamingPolicy("LOWER_CASE_WITH_UNDERSCORES", 3) {

            public String a(Field field) {
                return a(field.getName(), "_").toLowerCase(Locale.ENGLISH);
            }

        }
;
        e = new FieldNamingPolicy("LOWER_CASE_WITH_DASHES", 4) {

            public String a(Field field) {
                return a(field.getName(), "-").toLowerCase(Locale.ENGLISH);
            }

        }
;
        f = (new FieldNamingPolicy[] {
            a, b, c, d, e
        });
    }
}
