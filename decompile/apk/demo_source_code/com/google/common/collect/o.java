// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.common.collect;

import java.lang.reflect.Array;

// Referenced classes of package com.google.common.collect:
//            r

public final class o {

    static final Object a[] = new Object[0];

    static Object a(Object obj, int i) {
        if (obj == null)
            throw new NullPointerException((new StringBuilder()).append("at index ").append(i).toString());
        else
            return obj;
    }

    public static Object[] a(Class class1, int i) {
        return (Object[])(Object[])Array.newInstance(class1, i);
    }

    static transient Object[] a(Object aobj[]) {
        return c(aobj, aobj.length);
    }

    public static Object[] a(Object aobj[], int i) {
        return r.a(aobj, i);
    }

    public static Object[] a(Object aobj[], Object aobj1[], Class class1) {
        class1 = ((Class) (a(class1, aobj.length + aobj1.length)));
        System.arraycopy(((Object) (aobj)), 0, class1, 0, aobj.length);
        System.arraycopy(((Object) (aobj1)), 0, class1, aobj.length, aobj1.length);
        return class1;
    }

    static Object[] b(Object aobj[], int i) {
        Object aobj1[] = a(aobj, i);
        System.arraycopy(((Object) (aobj)), 0, ((Object) (aobj1)), 0, Math.min(aobj.length, i));
        return aobj1;
    }

    static Object[] c(Object aobj[], int i) {
        for (int j = 0; j < i; j++)
            a(aobj[j], j);

        return aobj;
    }

}
