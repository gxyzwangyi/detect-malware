// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.common.collect;

import java.util.Iterator;

// Referenced classes of package com.google.common.collect:
//            ImmutableCollection, k, ImmutableMap, ImmutableSet, 
//            z, ImmutableList, ImmutableAsList

final class ImmutableMapValues extends ImmutableCollection {

    private final ImmutableMap a;

    ImmutableMapValues(ImmutableMap immutablemap) {
        a = immutablemap;
    }

    static ImmutableMap a(ImmutableMapValues immutablemapvalues) {
        return immutablemapvalues.a;
    }

    public boolean contains(Object obj) {
        boolean flag;
        if (obj != null && k.a(d_(), obj))
            flag = true;
        else
            flag = false;
        return flag;
    }

    public z d_() {
        return new z() {

            final z a;
            final ImmutableMapValues b;

            public boolean hasNext() {
                return a.hasNext();
            }

            public Object next() {
                return ((java.util.Map.Entry)a.next()).getValue();
            }

             {
                b = ImmutableMapValues.this;
                super();
                a = ImmutableMapValues.a(b).g().d_();
            }
        }
;
    }

    boolean e() {
        return true;
    }

    ImmutableList g() {
        return new ImmutableAsList(a.g().f()) {

            final ImmutableList a;
            final ImmutableMapValues b;

            ImmutableCollection b() {
                return b;
            }

            public Object get(int i) {
                return ((java.util.Map.Entry)a.get(i)).getValue();
            }

             {
                b = ImmutableMapValues.this;
                a = immutablelist;
                super();
            }
        }
;
    }

    public Iterator iterator() {
        return d_();
    }

    public int size() {
        return a.size();
    }
}
