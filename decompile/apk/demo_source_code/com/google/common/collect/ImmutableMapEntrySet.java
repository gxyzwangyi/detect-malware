// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.common.collect;

import java.util.Iterator;

// Referenced classes of package com.google.common.collect:
//            ImmutableSet, ImmutableMap, ImmutableList, RegularImmutableAsList, 
//            z

abstract class ImmutableMapEntrySet extends ImmutableSet {
    static final class RegularEntrySet extends ImmutableMapEntrySet {

        private final transient ImmutableMap a;
        private final transient java.util.Map.Entry b[];

        ImmutableMap c() {
            return a;
        }

        public z d_() {
            return f().d_();
        }

        ImmutableList g() {
            return new RegularImmutableAsList(this, b);
        }

        public Iterator iterator() {
            return d_();
        }

        RegularEntrySet(ImmutableMap immutablemap, java.util.Map.Entry aentry[]) {
            a = immutablemap;
            b = aentry;
        }
    }


    ImmutableMapEntrySet() {
    }

    boolean a_() {
        return c().k();
    }

    abstract ImmutableMap c();

    public boolean contains(Object obj) {
        boolean flag1 = false;
        boolean flag = flag1;
        if (obj instanceof java.util.Map.Entry) {
            java.util.Map.Entry entry = (java.util.Map.Entry)obj;
            obj = c().get(entry.getKey());
            flag = flag1;
            if (obj != null) {
                flag = flag1;
                if (obj.equals(entry.getValue()))
                    flag = true;
            }
        }
        return flag;
    }

    boolean e() {
        return c().c();
    }

    public int hashCode() {
        return c().hashCode();
    }

    public int size() {
        return c().size();
    }
}
