// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.common.collect;

import com.google.common.base.*;
import java.util.*;

// Referenced classes of package com.google.common.collect:
//            Maps, m, l, AbstractListMultimap, 
//            Lists, c, h, k

public final class Multimaps {
    private static class CustomListMultimap extends AbstractListMultimap {

        transient n a;

        protected List a() {
            return (List)a.get();
        }

        protected Collection c() {
            return a();
        }

        CustomListMultimap(Map map, n n1) {
            super(map);
            a = (n)i.a(n1);
        }
    }

    static abstract class a extends AbstractCollection {

        abstract m a();

        public void clear() {
            a().e();
        }

        public boolean contains(Object obj) {
            boolean flag;
            if (obj instanceof java.util.Map.Entry) {
                obj = (java.util.Map.Entry)obj;
                flag = a().b(((java.util.Map.Entry) (obj)).getKey(), ((java.util.Map.Entry) (obj)).getValue());
            } else {
                flag = false;
            }
            return flag;
        }

        public boolean remove(Object obj) {
            boolean flag;
            if (obj instanceof java.util.Map.Entry) {
                obj = (java.util.Map.Entry)obj;
                flag = a().c(((java.util.Map.Entry) (obj)).getKey(), ((java.util.Map.Entry) (obj)).getValue());
            } else {
                flag = false;
            }
            return flag;
        }

        public int size() {
            return a().d();
        }

        a() {
        }
    }

    private static final class b extends c
        implements l {

        public List a(Object obj) {
            return a(obj, a.b(obj));
        }

        List a(Object obj, Collection collection) {
            return Lists.a((List)collection, Maps.a(b, obj));
        }

        public Collection b(Object obj) {
            return a(obj);
        }

        Collection b(Object obj, Collection collection) {
            return a(obj, collection);
        }

        b(l l1, Maps.b b1) {
            super(l1, b1);
        }
    }

    private static class c extends com.google.common.collect.c {

        final m a;
        final Maps.b b;

        public boolean a(Object obj, Iterable iterable) {
            throw new UnsupportedOperationException();
        }

        public boolean a(Object obj, Object obj1) {
            throw new UnsupportedOperationException();
        }

        public Collection b(Object obj) {
            return b(obj, a.b(obj));
        }

        Collection b(Object obj, Collection collection) {
            obj = Maps.a(b, obj);
            if (collection instanceof List)
                obj = Lists.a((List)collection, ((d) (obj)));
            else
                obj = com.google.common.collect.h.a(collection, ((d) (obj)));
            return ((Collection) (obj));
        }

        public boolean c(Object obj, Object obj1) {
            return b(obj).remove(obj1);
        }

        public int d() {
            return a.d();
        }

        public void e() {
            a.e();
        }

        Iterator h() {
            return k.a(a.g().iterator(), Maps.a(b));
        }

        Map i() {
            return Maps.a(a.b(), new Maps.b(this) {

                final c a;

                public volatile Object a(Object obj, Object obj1) {
                    return a(obj, (Collection)obj1);
                }

                public Collection a(Object obj, Collection collection) {
                    return a.b(obj, collection);
                }

             {
                a = c1;
                super();
            }
            }
);
        }

        public boolean j() {
            return a.j();
        }

        public Set l() {
            return a.l();
        }

        c(m m1, Maps.b b1) {
            a = (m)com.google.common.base.i.a(m1);
            b = (Maps.b)com.google.common.base.i.a(b1);
        }
    }


    public static l a(l l, d d) {
        i.a(d);
        return a(l, Maps.a(d));
    }

    public static l a(l l, Maps.b b1) {
        return new b(l, b1);
    }

    public static l a(Map map, n n) {
        return new CustomListMultimap(map, n);
    }

    static boolean a(m m1, Object obj) {
        boolean flag;
        if (obj == m1)
            flag = true;
        else
        if (obj instanceof m) {
            obj = (m)obj;
            flag = m1.b().equals(((m) (obj)).b());
        } else {
            flag = false;
        }
        return flag;
    }
}
