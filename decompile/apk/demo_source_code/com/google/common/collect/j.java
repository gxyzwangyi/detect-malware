// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.common.collect;

import com.google.common.base.i;
import java.util.Collection;
import java.util.List;

// Referenced classes of package com.google.common.collect:
//            k, h, Lists

public final class j {

    public static Object a(Iterable iterable) {
        return k.b(iterable.iterator());
    }

    public static Object a(Iterable iterable, int l) {
        i.a(iterable);
        if (iterable instanceof List)
            iterable = ((Iterable) (((List)iterable).get(l)));
        else
            iterable = ((Iterable) (k.a(iterable.iterator(), l)));
        return iterable;
    }

    public static Object a(Iterable iterable, Object obj) {
        return k.b(iterable.iterator(), obj);
    }

    public static boolean a(Collection collection, Iterable iterable) {
        boolean flag;
        if (iterable instanceof Collection)
            flag = collection.addAll(h.a(iterable));
        else
            flag = k.a(collection, ((Iterable)i.a(iterable)).iterator());
        return flag;
    }

    static Object[] a(Iterable iterable, Object aobj[]) {
        return c(iterable).toArray(aobj);
    }

    static Object[] b(Iterable iterable) {
        return c(iterable).toArray();
    }

    private static Collection c(Iterable iterable) {
        if (iterable instanceof Collection)
            iterable = (Collection)iterable;
        else
            iterable = Lists.a(iterable.iterator());
        return iterable;
    }
}
