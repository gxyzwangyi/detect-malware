// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.common.base;

import java.util.Iterator;
import java.util.NoSuchElementException;

// Referenced classes of package com.google.common.base:
//            i

abstract class AbstractIterator
    implements Iterator {
    private static final class State extends Enum {

        public static final State a;
        public static final State b;
        public static final State c;
        public static final State d;
        private static final State e[];

        public static State valueOf(String s) {
            return (State)Enum.valueOf(com/google/common/base/AbstractIterator$State, s);
        }

        public static State[] values() {
            return (State[])e.clone();
        }

        static  {
            a = new State("READY", 0);
            b = new State("NOT_READY", 1);
            c = new State("DONE", 2);
            d = new State("FAILED", 3);
            e = (new State[] {
                a, b, c, d
            });
        }

        private State(String s, int j) {
            super(s, j);
        }
    }


    private State a;
    private Object b;

    protected AbstractIterator() {
        a = State.b;
    }

    private boolean c() {
        a = State.d;
        b = a();
        boolean flag;
        if (a != State.c) {
            a = State.a;
            flag = true;
        } else {
            flag = false;
        }
        return flag;
    }

    protected abstract Object a();

    protected final Object b() {
        a = State.c;
        return null;
    }

    public final boolean hasNext() {
        boolean flag;
        boolean flag1 = true;
        static class _cls1 {

            static final int a[];

            static  {
                a = new int[State.values().length];
                NoSuchFieldError nosuchfielderror;
                try {
                    a[State.a.ordinal()] = 1;
                }
                catch (NoSuchFieldError nosuchfielderror1) { }
                a[State.c.ordinal()] = 2;
_L2:
                return;
                nosuchfielderror;
                if (true) goto _L2; else goto _L1
_L1:
            }
        }

        if (a != State.d)
            flag = true;
        else
            flag = false;
        i.b(flag);
        flag = flag1;
        _cls1.a[a.ordinal()];
        JVM INSTR tableswitch 1 2: default 52
    //                   1 57
    //                   2 64;
           goto _L1 _L2 _L3
_L2:
        break; /* Loop/switch isn't completed */
_L1:
        flag = c();
_L5:
        return flag;
_L3:
        flag = false;
        if (true) goto _L5; else goto _L4
_L4:
    }

    public final Object next() {
        if (!hasNext()) {
            throw new NoSuchElementException();
        } else {
            a = State.b;
            Object obj = b;
            b = null;
            return obj;
        }
    }

    public final void remove() {
        throw new UnsupportedOperationException();
    }
}
