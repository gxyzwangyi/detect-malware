// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.google.common.base;

import java.io.Serializable;

// Referenced classes of package com.google.common.base:
//            i, n, g

public final class Suppliers {
    static class MemoizingSupplier
        implements n, Serializable {

        final n a;
        volatile transient boolean b;
        transient Object c;

        public Object get() {
            if (b) goto _L2; else goto _L1
_L1:
            this;
            JVM INSTR monitorenter ;
            if (b) goto _L4; else goto _L3
_L3:
            Object obj;
            obj = a.get();
            c = obj;
            b = true;
            this;
            JVM INSTR monitorexit ;
_L6:
            return obj;
_L4:
            this;
            JVM INSTR monitorexit ;
_L2:
            obj = c;
            if (true) goto _L6; else goto _L5
_L5:
            Exception exception;
            exception;
            this;
            JVM INSTR monitorexit ;
            throw exception;
        }

        public String toString() {
            return (new StringBuilder()).append("Suppliers.memoize(").append(a).append(")").toString();
        }

        MemoizingSupplier(n n1) {
            a = n1;
        }
    }

    private static class SupplierOfInstance
        implements n, Serializable {

        final Object a;

        public boolean equals(Object obj) {
            boolean flag;
            if (obj instanceof SupplierOfInstance) {
                obj = (SupplierOfInstance)obj;
                flag = g.a(a, ((SupplierOfInstance) (obj)).a);
            } else {
                flag = false;
            }
            return flag;
        }

        public Object get() {
            return a;
        }

        public int hashCode() {
            return g.a(new Object[] {
                a
            });
        }

        public String toString() {
            return (new StringBuilder()).append("Suppliers.ofInstance(").append(a).append(")").toString();
        }

        SupplierOfInstance(Object obj) {
            a = obj;
        }
    }


    public static n a(n n1) {
        if (!(n1 instanceof MemoizingSupplier))
            n1 = new MemoizingSupplier((n)i.a(n1));
        return n1;
    }

    public static n a(Object obj) {
        return new SupplierOfInstance(obj);
    }
}
