// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package com.jcraft.jzlib;


// Referenced classes of package com.jcraft.jzlib:
//            i, e

final class f {

    private static final int o[] = {
        0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 
        1023, 2047, 4095, 8191, 16383, 32767, 65535
    };
    int a;
    int b;
    int c[];
    int d;
    int e;
    int f;
    int g;
    int h;
    byte i;
    byte j;
    int k[];
    int l;
    int m[];
    int n;
    private final i p;
    private final e q;

    f(i i1, e e1) {
        d = 0;
        p = i1;
        q = e1;
    }

    int a(int i1) {
        int j1;
        int k1;
        int l1;
        int i2;
        int j2;
        int k2;
        int l2;
        int i3;
        int j3;
        int k3;
        int i4;
        int j4;
        int k4;
        int l4;
        int i5;
        int j5;
        int k5;
        int l5;
        int i6;
        int j6;
        int k6;
        int l6;
        int i7;
        int j7;
        int k7;
        int l7;
        int i8;
        k1 = p.b;
        j1 = p.c;
        i2 = q.q;
        l1 = q.p;
        j2 = q.v;
        i j8;
        if (j2 < q.u)
            k2 = q.u - j2 - 1;
        else
            k2 = q.t - j2;
_L12:
        i7 = k2;
        l6 = j2;
        k3 = j1;
        j3 = k1;
        j5 = l1;
        i3 = i2;
        i4 = i1;
        k4 = j1;
        i5 = k1;
        k5 = l1;
        j4 = i2;
        l4 = i1;
        k6 = j1;
        j6 = k1;
        i6 = l1;
        l5 = i2;
        l2 = i1;
        i8 = j2;
        l7 = j1;
        k7 = k1;
        j7 = l1;
        a;
        JVM INSTR tableswitch 0 9: default 200
    //                   0 297
    //                   1 643
    //                   2 1092
    //                   3 1296
    //                   4 1669
    //                   5 1849
    //                   6 2334
    //                   7 2716
    //                   8 2928
    //                   9 3013;
           goto _L1 _L2 _L3 _L4 _L5 _L6 _L7 _L8 _L9 _L10 _L11
_L11:
        break MISSING_BLOCK_LABEL_3013;
_L1:
        q.q = i2;
        q.p = l1;
        p.c = j1;
        j8 = p;
        j8.d = j8.d + (long)(k1 - p.b);
        p.b = k1;
        q.v = j2;
        i1 = q.b(-2);
_L13:
        return i1;
_L2:
label0:
        {
            l2 = k2;
            j4 = j2;
            k3 = j1;
            j3 = k1;
            j5 = l1;
            i3 = i2;
            i4 = i1;
            if (k2 < 258)
                break label0;
            l2 = k2;
            j4 = j2;
            k3 = j1;
            j3 = k1;
            j5 = l1;
            i3 = i2;
            i4 = i1;
            if (j1 < 10)
                break label0;
            q.q = i2;
            q.p = l1;
            p.c = j1;
            i k8 = p;
            k8.d = k8.d + (long)(k1 - p.b);
            p.b = k1;
            q.v = j2;
            i1 = a(i, j, k, l, m, n, q, p);
            k1 = p.b;
            j1 = p.c;
            i2 = q.q;
            l1 = q.p;
            j2 = q.v;
            if (j2 < q.u)
                k2 = q.u - j2 - 1;
            else
                k2 = q.t - j2;
            l2 = k2;
            j4 = j2;
            k3 = j1;
            j3 = k1;
            j5 = l1;
            i3 = i2;
            i4 = i1;
            if (i1 == 0)
                break label0;
            if (i1 == 1)
                l2 = 7;
            else
                l2 = 9;
            a = l2;
        }
          goto _L12
        e = i;
        c = k;
        d = l;
        a = 1;
        l6 = j4;
        i7 = l2;
_L3:
label1:
        {
            i2 = e;
            l1 = j5;
            i1 = i4;
            k1 = j3;
            j1 = k3;
            do {
                if (l1 >= i2)
                    break label1;
                if (j1 == 0)
                    break;
                i1 = 0;
                j1--;
                i3 |= (p.a[k1] & 0xff) << l1;
                l1 += 8;
                k1++;
            } while (true);
            q.q = i3;
            q.p = l1;
            p.c = j1;
            i l8 = p;
            l8.d = l8.d + (long)(k1 - p.b);
            p.b = k1;
            q.v = l6;
            i1 = q.b(i1);
        }
          goto _L13
        j2 = (d + (o[i2] & i3)) * 3;
        i2 = i3 >>> c[j2 + 1];
        l1 -= c[j2 + 1];
        k2 = c[j2];
        if (k2 == 0) {
            f = c[j2 + 2];
            a = 6;
            k2 = i7;
            j2 = l6;
        } else
        if ((k2 & 0x10) != 0) {
            g = k2 & 0xf;
            b = c[j2 + 2];
            a = 2;
            k2 = i7;
            j2 = l6;
        } else
        if ((k2 & 0x40) == 0) {
            e = k2;
            d = j2 / 3 + c[j2 + 2];
            k2 = i7;
            j2 = l6;
        } else {
label2:
            {
                if ((k2 & 0x20) == 0)
                    break label2;
                a = 7;
                k2 = i7;
                j2 = l6;
            }
        }
          goto _L12
        a = 9;
        p.i = "invalid literal/length code";
        q.q = i2;
        q.p = l1;
        p.c = j1;
        i i9 = p;
        i9.d = i9.d + (long)(k1 - p.b);
        p.b = k1;
        q.v = l6;
        i1 = q.b(-3);
          goto _L13
_L4:
label3:
        {
            l2 = g;
            do {
                if (l1 >= l2)
                    break label3;
                if (j1 == 0)
                    break;
                i1 = 0;
                j1--;
                i2 |= (p.a[k1] & 0xff) << l1;
                l1 += 8;
                k1++;
            } while (true);
            q.q = i2;
            q.p = l1;
            p.c = j1;
            i j9 = p;
            j9.d = j9.d + (long)(k1 - p.b);
            p.b = k1;
            q.v = j2;
            i1 = q.b(i1);
        }
          goto _L13
        b = b + (o[l2] & i2);
        j4 = i2 >> l2;
        k5 = l1 - l2;
        e = j;
        c = m;
        d = n;
        a = 3;
        l4 = i1;
        i5 = k1;
        k4 = j1;
_L5:
label4:
        {
            i2 = e;
            l1 = k5;
            i1 = l4;
            k1 = i5;
            j1 = k4;
            do {
                if (l1 >= i2)
                    break label4;
                if (j1 == 0)
                    break;
                i1 = 0;
                j1--;
                j4 |= (p.a[k1] & 0xff) << l1;
                l1 += 8;
                k1++;
            } while (true);
            q.q = j4;
            q.p = l1;
            p.c = j1;
            i k9 = p;
            k9.d = k9.d + (long)(k1 - p.b);
            p.b = k1;
            q.v = j2;
            i1 = q.b(i1);
        }
          goto _L13
        l2 = (d + (o[i2] & j4)) * 3;
        i2 = j4 >> c[l2 + 1];
        l1 -= c[l2 + 1];
        i3 = c[l2];
        if ((i3 & 0x10) != 0) {
            g = i3 & 0xf;
            h = c[l2 + 2];
            a = 4;
        } else {
label5:
            {
                if ((i3 & 0x40) != 0)
                    break label5;
                e = i3;
                d = l2 / 3 + c[l2 + 2];
            }
        }
          goto _L12
        a = 9;
        p.i = "invalid distance code";
        q.q = i2;
        q.p = l1;
        p.c = j1;
        i l9 = p;
        l9.d = l9.d + (long)(k1 - p.b);
        p.b = k1;
        q.v = j2;
        i1 = q.b(-3);
          goto _L13
_L6:
label6:
        {
            l2 = g;
            do {
                if (l1 >= l2)
                    break label6;
                if (j1 == 0)
                    break;
                i1 = 0;
                j1--;
                i2 |= (p.a[k1] & 0xff) << l1;
                l1 += 8;
                k1++;
            } while (true);
            q.q = i2;
            q.p = l1;
            p.c = j1;
            i i10 = p;
            i10.d = i10.d + (long)(k1 - p.b);
            p.b = k1;
            q.v = j2;
            i1 = q.b(i1);
        }
          goto _L13
        h = h + (o[l2] & i2);
        l5 = i2 >> l2;
        i6 = l1 - l2;
        a = 5;
        l2 = i1;
        j6 = k1;
        k6 = j1;
_L7:
        k1 = j2 - h;
        do {
            j1 = k2;
            i1 = j2;
            j3 = k1;
            i3 = l2;
            if (k1 >= 0)
                break;
            k1 += q.t;
        } while (true);
_L15:
        if (b == 0)
            break MISSING_BLOCK_LABEL_2303;
        i2 = j1;
        l1 = i1;
        k2 = i3;
        if (j1 == 0)
            break; /* Loop/switch isn't completed */
_L17:
        byte abyte2[] = q.s;
        byte abyte0[] = q.s;
        i1 = j3 + 1;
        abyte2[l1] = abyte0[j3];
        if (i1 == q.t)
            i1 = 0;
        b = b - 1;
        j1 = i2 - 1;
        k1 = l1 + 1;
        i3 = k2;
        j3 = i1;
        i1 = k1;
        if (true) goto _L15; else goto _L14
_L14:
        k1 = j1;
        j2 = i1;
        if (i1 == q.t) {
            k1 = j1;
            j2 = i1;
            if (q.u != 0) {
                j2 = 0;
                i j10;
                if (q.u < 0)
                    k1 = q.u - 0 - 1;
                else
                    k1 = q.t - 0;
            }
        }
        i2 = k1;
        l1 = j2;
        k2 = i3;
        if (k1 != 0) goto _L17; else goto _L16
_L16:
        q.v = j2;
        j2 = q.b(i3);
        l1 = q.v;
        if (l1 < q.u)
            k1 = q.u - l1 - 1;
        else
            k1 = q.t - l1;
        i1 = k1;
        j1 = l1;
        if (l1 == q.t) {
            i1 = k1;
            j1 = l1;
            if (q.u != 0) {
                j1 = 0;
                if (q.u < 0)
                    i1 = q.u - 0 - 1;
                else
                    i1 = q.t - 0;
            }
        }
        i2 = i1;
        l1 = j1;
        k2 = j2;
        if (i1 != 0) goto _L17; else goto _L18
_L18:
        q.q = l5;
        q.p = i6;
        p.c = k6;
        j10 = p;
        j10.d = j10.d + (long)(j6 - p.b);
        p.b = j6;
        q.v = j1;
        i1 = q.b(j2);
          goto _L13
        a = 0;
        k2 = j1;
        j2 = i1;
        j1 = k6;
        k1 = j6;
        l1 = i6;
        i2 = l5;
        i1 = i3;
          goto _L12
_L8:
label7:
        {
            i3 = k2;
            j3 = j2;
            if (k2 != 0)
                break label7;
            l2 = k2;
            int l3 = j2;
            if (j2 == q.t) {
                l2 = k2;
                l3 = j2;
                if (q.u != 0) {
                    l3 = 0;
                    i k10;
                    if (q.u < 0)
                        l2 = q.u - 0 - 1;
                    else
                        l2 = q.t - 0;
                }
            }
            i3 = l2;
            j3 = l3;
            if (l2 != 0)
                break label7;
            q.v = l3;
            l3 = q.b(i1);
            l2 = q.v;
            if (l2 < q.u)
                k2 = q.u - l2 - 1;
            else
                k2 = q.t - l2;
            i1 = k2;
            j2 = l2;
            if (l2 == q.t) {
                i1 = k2;
                j2 = l2;
                if (q.u != 0) {
                    j2 = 0;
                    if (q.u < 0)
                        i1 = q.u - 0 - 1;
                    else
                        i1 = q.t - 0;
                }
            }
            i3 = i1;
            j3 = j2;
            if (i1 != 0)
                break label7;
            q.q = i2;
            q.p = l1;
            p.c = j1;
            k10 = p;
            k10.d = k10.d + (long)(k1 - p.b);
            p.b = k1;
            q.v = j2;
            i1 = q.b(l3);
        }
          goto _L13
        i1 = 0;
        byte abyte1[] = q.s;
        j2 = j3 + 1;
        abyte1[j3] = (byte)f;
        k2 = i3 - 1;
        a = 0;
          goto _L12
_L9:
label8:
        {
            i3 = j1;
            l2 = k1;
            k2 = l1;
            if (l1 > 7) {
                k2 = l1 - 8;
                i3 = j1 + 1;
                l2 = k1 - 1;
            }
            q.v = j2;
            i1 = q.b(i1);
            i8 = q.v;
            i l10;
            if (i8 < q.u)
                j1 = q.u;
            else
                j1 = q.t;
            if (q.u == q.v)
                break label8;
            q.q = i2;
            q.p = k2;
            p.c = i3;
            l10 = p;
            l10.d = l10.d + (long)(l2 - p.b);
            p.b = l2;
            q.v = i8;
            i1 = q.b(i1);
        }
          goto _L13
        a = 8;
        j7 = k2;
        k7 = l2;
        l7 = i3;
_L10:
        q.q = i2;
        q.p = j7;
        p.c = l7;
        i i11 = p;
        i11.d = i11.d + (long)(k7 - p.b);
        p.b = k7;
        q.v = i8;
        i1 = q.b(1);
          goto _L13
        q.q = i2;
        q.p = l1;
        p.c = j1;
        i j11 = p;
        j11.d = j11.d + (long)(k1 - p.b);
        p.b = k1;
        q.v = j2;
        i1 = q.b(-3);
          goto _L13
    }

    int a(int i1, int j1, int ai[], int k1, int ai1[], int l1, e e1, 
            i i2) {
        int j2;
        int k2;
        int l2;
        int i3;
        int l6;
        int i7;
        int i5 = i2.b;
        int j4 = i2.c;
        k2 = e1.q;
        l2 = e1.p;
        int j3 = e1.v;
        if (j3 < e1.u)
            j2 = e1.u - j3 - 1;
        else
            j2 = e1.t - j3;
        l6 = o[i1];
        i7 = o[j1];
        i3 = j2;
        i1 = i5;
        j1 = j4;
        j2 = j3;
_L25:
        int k3;
        int k4;
        int j5;
        int k5;
        int i6;
        int j6;
        int k6;
        while (l2 < 20)  {
            j1--;
            k2 |= (i2.a[i1] & 0xff) << l2;
            l2 += 8;
            i1++;
        }
        i6 = k2 & l6;
        j6 = (k1 + i6) * 3;
        k6 = ai[j6];
        k3 = j6;
        j5 = l2;
        k5 = k2;
        k4 = k6;
        if (k6 != 0) goto _L2; else goto _L1
_L1:
        j5 = ai[j6 + 1];
        k5 = ai[j6 + 1];
        byte abyte0[] = e1.s;
        k4 = j2 + 1;
        abyte0[j2] = (byte)ai[j6 + 2];
        k3 = i3 - 1;
        j2 = l2 - k5;
        i3 = k2 >> j5;
        l2 = j1;
        k2 = k4;
        j1 = i1;
        i1 = l2;
        l2 = k3;
_L15:
        if (l2 >= 258 && i1 >= 10) goto _L4; else goto _L3
_L3:
        l1 = i2.c - i1;
        k1 = l1;
        if (j2 >> 3 < l1)
            k1 = j2 >> 3;
        j1 -= k1;
        e1.q = i3;
        e1.p = j2 - (k1 << 3);
        i2.c = i1 + k1;
        i2.d = i2.d + (long)(j1 - i2.b);
        i2.b = j1;
        e1.v = k2;
        i1 = 0;
_L23:
        return i1;
_L2:
        k2 = k5 >> ai[k3 + 1];
        l2 = j5 - ai[k3 + 1];
        if ((k4 & 0x10) == 0) goto _L6; else goto _L5
_L5:
        k4 &= 0xf;
        i6 = ai[k3 + 2] + (o[k4] & k2);
        k3 = k2 >> k4;
        k4 = l2 - k4;
        k2 = i1;
        l2 = j1;
        j1 = k3;
        for (i1 = k4; i1 < 15;) {
            l2--;
            j1 |= (i2.a[k2] & 0xff) << i1;
            i1 += 8;
            k2++;
        }

        j5 = j1 & i7;
        k3 = (l1 + j5) * 3;
        k4 = ai1[k3];
        k5 = i1;
        i1 = k3;
_L22:
        k3 = j1 >> ai1[i1 + 1];
        j1 = k5 - ai1[i1 + 1];
        if ((k4 & 0x10) == 0) goto _L8; else goto _L7
_L7:
        for (k4 &= 0xf; j1 < k4;) {
            l2--;
            k3 |= (i2.a[k2] & 0xff) << j1;
            j1 += 8;
            k2++;
        }

        i1 = ai1[i1 + 2] + (o[k4] & k3);
        k3 >>= k4;
        k4 = j1 - k4;
        i3 -= i6;
        if (j2 < i1) goto _L10; else goto _L9
_L9:
        i1 = j2 - i1;
        byte abyte2[];
        if (j2 - i1 > 0 && 2 > j2 - i1) {
            byte abyte5[] = e1.s;
            j1 = j2 + 1;
            byte abyte1[] = e1.s;
            j5 = i1 + 1;
            abyte5[j2] = abyte1[i1];
            abyte5 = e1.s;
            j2 = j1 + 1;
            abyte1 = e1.s;
            i1 = j5 + 1;
            abyte5[j1] = abyte1[j5];
            j1 = i6 - 2;
        } else {
            System.arraycopy(e1.s, i1, e1.s, j2, 2);
            j2 += 2;
            i1 += 2;
            j1 = i6 - 2;
        }
_L20:
        if (j2 - i1 <= 0 || j1 <= j2 - i1) goto _L12; else goto _L11
_L11:
        j5 = j2;
        j2 = j1;
        j1 = j5;
_L26:
        abyte2 = e1.s;
        j5 = j1 + 1;
        abyte2[j1] = e1.s[i1];
        if (--j2 != 0) goto _L14; else goto _L13
_L13:
        i1 = i3;
        j2 = l2;
        j1 = k2;
        i3 = k3;
        l2 = i1;
        i1 = j2;
        j2 = k4;
        k2 = j5;
          goto _L15
_L10:
        j1 = j2 - i1;
        do {
            i1 = j1 + e1.t;
            j1 = i1;
        } while (i1 < 0);
        k5 = e1.t - i1;
        if (i6 <= k5)
            break MISSING_BLOCK_LABEL_1592;
        if (j2 - i1 <= 0 || k5 <= j2 - i1) goto _L17; else goto _L16
_L16:
        j1 = j2;
        j2 = k5;
_L27:
        byte abyte3[] = e1.s;
        j5 = j1 + 1;
        abyte3[j1] = e1.s[i1];
        if (--j2 != 0) goto _L19; else goto _L18
_L18:
        i1 = j5;
_L21:
        j1 = 0;
        j5 = i6 - k5;
        j2 = i1;
        i1 = j1;
        j1 = j5;
          goto _L20
_L17:
        System.arraycopy(e1.s, i1, e1.s, j2, k5);
        i1 = j2 + k5;
          goto _L21
_L12:
        System.arraycopy(e1.s, i1, e1.s, j2, j1);
        j5 = j2 + j1;
        j2 = i3;
        i1 = l2;
        j1 = k2;
        i3 = k3;
        l2 = j2;
        j2 = k4;
        k2 = j5;
          goto _L15
_L8:
label0:
        {
            if ((k4 & 0x40) != 0)
                break label0;
            j5 = ai1[i1 + 2] + j5 + (o[k4] & k3);
            i1 = (l1 + j5) * 3;
            k4 = ai1[i1];
            k5 = j1;
            j1 = k3;
        }
          goto _L22
        i2.i = "invalid distance code";
        k1 = i2.c - l2;
        i1 = k1;
        if (j1 >> 3 < k1)
            i1 = j1 >> 3;
        k1 = k2 - i1;
        e1.q = k3;
        e1.p = j1 - (i1 << 3);
        i2.c = l2 + i1;
        i2.d = i2.d + (long)(k1 - i2.b);
        i2.b = k1;
        e1.v = j2;
        i1 = -3;
          goto _L23
_L6:
        if ((k4 & 0x40) != 0)
            break MISSING_BLOCK_LABEL_1331;
        i6 = ai[k3 + 2] + i6 + (o[k4] & k2);
        j6 = (k1 + i6) * 3;
        k6 = ai[j6];
        k3 = j6;
        j5 = l2;
        k5 = k2;
        k4 = k6;
        if (k6 != 0) goto _L2; else goto _L24
_L24:
        int l5 = ai[j6 + 1];
        k4 = ai[j6 + 1];
        byte abyte4[] = e1.s;
        int l3 = j2 + 1;
        abyte4[j2] = (byte)ai[j6 + 2];
        j5 = i3 - 1;
        k4 = l2 - k4;
        i3 = k2 >> l5;
        j2 = i1;
        l2 = j5;
        i1 = j1;
        j1 = j2;
        j2 = k4;
        k2 = l3;
          goto _L15
        if ((k4 & 0x20) != 0) {
            l1 = i2.c - j1;
            k1 = l1;
            if (l2 >> 3 < l1)
                k1 = l2 >> 3;
            i1 -= k1;
            e1.q = k2;
            e1.p = l2 - (k1 << 3);
            i2.c = j1 + k1;
            i2.d = i2.d + (long)(i1 - i2.b);
            i2.b = i1;
            e1.v = j2;
            i1 = 1;
        } else {
            i2.i = "invalid literal/length code";
            l1 = i2.c - j1;
            k1 = l1;
            if (l2 >> 3 < l1)
                k1 = l2 >> 3;
            i1 -= k1;
            e1.q = k2;
            e1.p = l2 - (k1 << 3);
            i2.c = j1 + k1;
            i2.d = i2.d + (long)(i1 - i2.b);
            i2.b = i1;
            e1.v = j2;
            i1 = -3;
        }
          goto _L23
_L4:
        int i4 = l2;
        int l4 = i1;
        i1 = j1;
        l2 = j2;
        j2 = k2;
        k2 = i3;
        j1 = l4;
        i3 = i4;
          goto _L25
_L14:
        j1 = j5;
        i1++;
          goto _L26
_L19:
        j1 = j5;
        i1++;
          goto _L27
        j1 = i6;
          goto _L20
    }

    void a(int i1, int j1, int ai[], int k1, int ai1[], int l1) {
        a = 0;
        i = (byte)i1;
        j = (byte)j1;
        k = ai;
        l = k1;
        m = ai1;
        n = l1;
        c = null;
    }

    void a(i i1) {
    }

}
