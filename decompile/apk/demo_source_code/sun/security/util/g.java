// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package sun.security.util;

import java.io.ByteArrayInputStream;
import java.io.IOException;

class g extends ByteArrayInputStream
    implements Cloneable {

    g(byte abyte0[]) {
        super(abyte0);
    }

    g a() {
        g g1;
        try {
            g1 = (g)clone();
            g1.mark(0x7fffffff);
        }
        catch (CloneNotSupportedException clonenotsupportedexception) {
            throw new IllegalArgumentException(clonenotsupportedexception.toString());
        }
        return g1;
    }

    void a(int i) {
        if (i > available()) {
            throw new IOException("insufficient data");
        } else {
            count = pos + i;
            return;
        }
    }

    boolean a(g g1) {
        boolean flag1 = true;
        if (this != g1) goto _L2; else goto _L1
_L1:
        boolean flag = flag1;
_L4:
        return flag;
_L2:
        int i;
        int j;
        j = available();
        if (g1.available() != j) {
            flag = false;
            continue; /* Loop/switch isn't completed */
        }
        i = 0;
_L5:
        flag = flag1;
        if (i < j) {
label0:
            {
                if (buf[pos + i] == g1.buf[g1.pos + i])
                    break label0;
                flag = false;
            }
        }
        if (true) goto _L4; else goto _L3
_L3:
        i++;
          goto _L5
        if (true) goto _L4; else goto _L6
_L6:
    }

    public boolean equals(Object obj) {
        boolean flag;
        if (obj instanceof g)
            flag = a((g)obj);
        else
            flag = false;
        return flag;
    }

    public int hashCode() {
        int i = 0;
        int l = available();
        int k = pos;
        int j = 0;
        for (; i < l; i++)
            j += buf[k + i] * i;

        return j;
    }
}
