// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package sun.security.util;

import java.io.IOException;
import java.io.InputStream;

// Referenced classes of package sun.security.util:
//            g, ObjectIdentifier, j

public class h {

    g a;

    h(g g1) {
        a = g1;
        a.mark(0x7fffffff);
    }

    static int a(int i, InputStream inputstream) {
        if ((i & 0x80) != 0) goto _L2; else goto _L1
_L1:
        int k = i;
_L4:
        return k;
_L2:
        int l;
        l = i & 0x7f;
        if (l != 0)
            break; /* Loop/switch isn't completed */
        k = -1;
        if (true) goto _L4; else goto _L3
_L3:
        if (l < 0 || l > 4) {
            StringBuilder stringbuilder = (new StringBuilder()).append("DerInputStream.getLength(): lengthTag=").append(l).append(", ");
            if (l < 0)
                inputstream = "incorrect DER encoding.";
            else
                inputstream = "too big.";
            throw new IOException(stringbuilder.append(inputstream).toString());
        }
        i = 0;
        do {
            k = i;
            if (l <= 0)
                continue;
            i = (i << 8) + (inputstream.read() & 0xff);
            l--;
        } while (true);
        if (true) goto _L4; else goto _L5
_L5:
    }

    static int a(InputStream inputstream) {
        return a(inputstream.read(), inputstream);
    }

    public ObjectIdentifier a() {
        return new ObjectIdentifier(this);
    }

    public void a(int i) {
        a.mark(i);
    }

    public void a(byte abyte0[]) {
        if (abyte0.length != 0 && a.read(abyte0) != abyte0.length)
            throw new IOException("short read of DER octet string");
        else
            return;
    }

    public j b() {
        return new j(a);
    }

    int c() {
        return a.read() & 0xff;
    }

    int d() {
        return a(a);
    }

    public void e() {
        a.reset();
    }

    public int f() {
        return a.available();
    }
}
