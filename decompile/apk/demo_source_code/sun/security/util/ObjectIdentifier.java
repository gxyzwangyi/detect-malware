// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package sun.security.util;

import java.io.IOException;
import java.io.Serializable;

// Referenced classes of package sun.security.util:
//            h, i, g

public final class ObjectIdentifier
    implements Serializable {

    private int a[];
    private int b;
    private volatile transient String c;

    public ObjectIdentifier(String s) {
        int j;
        int k;
        k = 0;
        super();
        b = 0;
        j = 0;
        do {
            j = s.indexOf('.', j);
            if (j == -1)
                break;
            j++;
            b = b + 1;
        } while (true);
        b = b + 1;
        a = new int[b];
        boolean flag = false;
        j = k;
        k = ((flag) ? 1 : 0);
_L1:
        int l;
        String s1;
        try {
            l = s.indexOf('.', k);
        }
        // Misplaced declaration of an exception variable
        catch (String s) {
            throw new IOException((new StringBuilder()).append("ObjectIdentifier() -- Invalid format: ").append(s.toString()).toString());
        }
        if (l == -1)
            break MISSING_BLOCK_LABEL_119;
        s1 = s.substring(k, l);
        a[j] = Integer.valueOf(s1).intValue();
        k = l + 1;
        j++;
          goto _L1
        s1 = s.substring(k);
        a[j] = Integer.valueOf(s1).intValue();
        a(a, b);
        c = s;
        return;
    }

    ObjectIdentifier(g g) {
        a(new h(g), 0);
    }

    public ObjectIdentifier(h h1) {
        int j = (byte)h1.c();
        if (j != 6)
            throw new IOException((new StringBuilder()).append("ObjectIdentifier() -- data isn't an object ID (tag = ").append(j).append(")").toString());
        j = h1.f() - h1.d() - 1;
        if (j < 0) {
            throw new IOException("ObjectIdentifier() -- not enough data");
        } else {
            a(h1, j);
            return;
        }
    }

    private ObjectIdentifier(int ai[], boolean flag) {
        a = ai;
        b = ai.length;
    }

    private static int a(h h1) {
        int k = 0;
        int j = 0;
        for (; k < 4; k++) {
            int l = h1.c();
            if (k == 0 && l == 128)
                throw new IOException("ObjectIdentifier() -- sub component starts with 0x80");
            j = j << 7 | l & 0x7f;
            if ((l & 0x80) == 0)
                return j;
        }

        throw new IOException("ObjectIdentifier() -- component value too big");
    }

    public static ObjectIdentifier a(int ai[]) {
        return new ObjectIdentifier(ai, true);
    }

    private void a(h h1, int j) {
        a = new int[5];
        b = 0;
        int k = 1;
        while (h1.f() > j)  {
            int l = a(h1);
            if (l < 0)
                throw new IOException("ObjectIdentifier() -- component values must be nonnegative");
            if (k != 0) {
                if (l < 40)
                    k = 0;
                else
                if (l < 80)
                    k = 1;
                else
                    k = 2;
                a[0] = k;
                a[1] = l - k * 40;
                b = 2;
                k = 0;
            } else {
                if (b >= a.length) {
                    int ai[] = new int[a.length + 5];
                    System.arraycopy(a, 0, ai, 0, a.length);
                    a = ai;
                }
                int ai1[] = a;
                int i1 = b;
                b = i1 + 1;
                ai1[i1] = l;
            }
        }
        a(a, b);
        if (h1.f() != j)
            throw new IOException("ObjectIdentifier() -- malformed input data");
        else
            return;
    }

    private static void a(i j, int k) {
        byte abyte0[] = new byte[4];
        boolean flag = false;
        int l = k;
        k = ((flag) ? 1 : 0);
label0:
        do {
label1:
            {
                int i1 = k;
                if (k < 4) {
                    abyte0[k] = (byte)(l & 0x7f);
                    l >>>= 7;
                    if (l != 0)
                        break label1;
                }
                for (i1 = k; i1 > 0; i1--)
                    j.write(abyte0[i1] | 0x80);

                break label0;
            }
            k++;
        } while (true);
        j.write(abyte0[0]);
    }

    private void a(int ai[], int j) {
        if (ai == null || j < 2)
            throw new IOException("ObjectIdentifier() -- Must be at least two oid components ");
        for (int k = 0; k < j; k++)
            if (ai[k] < 0)
                throw new IOException((new StringBuilder()).append("ObjectIdentifier() -- oid component #").append(k + 1).append(" must be non-negative ").toString());

        if (ai[0] > 2)
            throw new IOException("ObjectIdentifier() -- First oid component is invalid ");
        if (ai[0] < 2 && ai[1] > 39)
            throw new IOException("ObjectIdentifier() -- Second oid component is invalid ");
        else
            return;
    }

    void a(i j) {
        int k = 2;
        i l = new i();
        if (a[0] < 2)
            l.write(a[0] * 40 + a[1]);
        else
            a(l, a[0] * 40 + a[1]);
        for (; k < b; k++)
            a(l, a[k]);

        j.a((byte)6, l);
    }

    public boolean a(ObjectIdentifier objectidentifier) {
        return equals(objectidentifier);
    }

    public boolean equals(Object obj) {
        boolean flag1 = false;
        if (this != obj) goto _L2; else goto _L1
_L1:
        boolean flag = true;
_L4:
        return flag;
_L2:
        flag = flag1;
        if (!(obj instanceof ObjectIdentifier))
            continue; /* Loop/switch isn't completed */
        obj = (ObjectIdentifier)obj;
        flag = flag1;
        if (b != ((ObjectIdentifier) (obj)).b)
            continue; /* Loop/switch isn't completed */
        for (int j = 0; j < b; j++) {
            flag = flag1;
            if (a[j] != ((ObjectIdentifier) (obj)).a[j])
                continue; /* Loop/switch isn't completed */
        }

        flag = true;
        if (true) goto _L4; else goto _L3
_L3:
    }

    public int hashCode() {
        int k = b;
        for (int j = 0; j < b; j++)
            k += a[j] * 37;

        return k;
    }

    public String toString() {
        String s = c;
        Object obj = s;
        if (s == null) {
            obj = new StringBuffer(b * 4);
            for (int j = 0; j < b; j++) {
                if (j != 0)
                    ((StringBuffer) (obj)).append('.');
                ((StringBuffer) (obj)).append(a[j]);
            }

            obj = ((StringBuffer) (obj)).toString();
            c = ((String) (obj));
        }
        return ((String) (obj));
    }
}
