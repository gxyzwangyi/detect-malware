// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package sun.security.util;

import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.math.BigInteger;
import java.text.SimpleDateFormat;
import java.util.*;

// Referenced classes of package sun.security.util:
//            e, b, c, ObjectIdentifier, 
//            a, j

public class i extends ByteArrayOutputStream
    implements e {

    private static b a = new b();
    private static c b = new c();

    public i() {
    }

    private void a(byte byte0, e ae[], Comparator comparator) {
        boolean flag = false;
        i ai[] = new i[ae.length];
        for (int k = 0; k < ae.length; k++) {
            ai[k] = new i();
            ae[k].a(ai[k]);
        }

        ae = new byte[ai.length][];
        for (int l = 0; l < ai.length; l++)
            ae[l] = ai[l].toByteArray();

        Arrays.sort(ae, comparator);
        comparator = new i();
        for (int i1 = ((flag) ? 1 : 0); i1 < ai.length; i1++)
            comparator.write(ae[i1]);

        a(byte0, ((i) (comparator)));
    }

    private void a(String s, byte byte0, String s1) {
        s = s.getBytes(s1);
        write(byte0);
        b(s.length);
        write(s);
    }

    private void a(Date date, byte byte0) {
        TimeZone timezone = TimeZone.getTimeZone("GMT");
        Object obj;
        if (byte0 == 23) {
            obj = "yyMMddHHmmss'Z'";
        } else {
            byte0 = 24;
            obj = "yyyyMMddHHmmss'Z'";
        }
        obj = new SimpleDateFormat(((String) (obj)));
        ((SimpleDateFormat) (obj)).setTimeZone(timezone);
        date = ((SimpleDateFormat) (obj)).format(date).getBytes("ISO-8859-1");
        write(byte0);
        b(date.length);
        write(date);
    }

    private void c(int k) {
        int l = 0;
        int i1 = 0;
        boolean flag = false;
        byte abyte0[] = new byte[4];
        abyte0[3] = (byte)(k & 0xff);
        abyte0[2] = (byte)((0xff00 & k) >>> 8);
        abyte0[1] = (byte)((0xff0000 & k) >>> 16);
        abyte0[0] = (byte)((0xff000000 & k) >>> 24);
        if (abyte0[0] == 255) {
            i1 = 0;
            l = ((flag) ? 1 : 0);
            do {
                k = l;
                if (i1 >= 3)
                    break;
                k = l;
                if (abyte0[i1] != 255)
                    break;
                k = l;
                if ((abyte0[i1 + 1] & 0x80) != 128)
                    break;
                i1++;
                l++;
            } while (true);
        } else {
            k = i1;
            if (abyte0[0] == 0) {
                int j1 = 0;
                do {
                    k = l;
                    if (j1 >= 3)
                        break;
                    k = l;
                    if (abyte0[j1] != 0)
                        break;
                    k = l;
                    if ((abyte0[j1 + 1] & 0x80) != 0)
                        break;
                    j1++;
                    l++;
                } while (true);
            }
        }
        b(4 - k);
        for (; k < 4; k++)
            write(abyte0[k]);

    }

    public void a() {
        write(5);
        b(0);
    }

    public void a(byte byte0, i k) {
        write(byte0);
        b(k.count);
        write(k.buf, 0, k.count);
    }

    public void a(byte byte0, byte abyte0[]) {
        write(byte0);
        b(abyte0.length);
        write(abyte0, 0, abyte0.length);
    }

    public void a(byte byte0, e ae[]) {
        a(byte0, ae, ((Comparator) (a)));
    }

    public void a(int k) {
        write(2);
        c(k);
    }

    public void a(OutputStream outputstream) {
        outputstream.write(toByteArray());
    }

    public void a(String s) {
        a(s, (byte)19, "ASCII");
    }

    public void a(BigInteger biginteger) {
        write(2);
        biginteger = biginteger.toByteArray();
        b(biginteger.length);
        write(biginteger, 0, biginteger.length);
    }

    public void a(Date date) {
        a(date, (byte)23);
    }

    public void a(ObjectIdentifier objectidentifier) {
        objectidentifier.a(this);
    }

    public void a(a a1) {
        byte abyte0[] = a1.b();
        write(3);
        b(abyte0.length + 1);
        write(abyte0.length * 8 - a1.a());
        write(abyte0);
    }

    public void a(j j1) {
        j1.a(this);
    }

    public void a(boolean flag) {
        write(1);
        b(1);
        if (flag)
            write(255);
        else
            write(0);
    }

    public void a(byte abyte0[]) {
        write(3);
        b(abyte0.length + 1);
        write(0);
        write(abyte0);
    }

    public void b(byte byte0, i k) {
        write(byte0);
        write(k.buf, 1, k.count - 1);
    }

    public void b(int k) {
        if (k < 128)
            write((byte)k);
        else
        if (k < 256) {
            write(-127);
            write((byte)k);
        } else
        if (k < 0x10000) {
            write(-126);
            write((byte)(k >> 8));
            write((byte)k);
        } else
        if (k < 0x1000000) {
            write(-125);
            write((byte)(k >> 16));
            write((byte)(k >> 8));
            write((byte)k);
        } else {
            write(-124);
            write((byte)(k >> 24));
            write((byte)(k >> 16));
            write((byte)(k >> 8));
            write((byte)k);
        }
    }

    public void b(String s) {
        a(s, (byte)22, "ASCII");
    }

    public void b(Date date) {
        a(date, (byte)24);
    }

    public void b(a a1) {
        a(a1.d());
    }

    public void b(byte abyte0[]) {
        a((byte)4, abyte0);
    }

}
