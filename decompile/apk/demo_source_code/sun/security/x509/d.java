// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package sun.security.x509;

import java.io.IOException;
import java.io.OutputStream;
import sun.security.util.i;

// Referenced classes of package sun.security.x509:
//            r, e, aa

public class d extends r
    implements e {

    private boolean d;
    private int e;

    private void b() {
        if (!d && e < 0) {
            c = null;
        } else {
            i j = new i();
            i k = new i();
            if (d)
                k.a(d);
            if (e >= 0)
                k.a(e);
            j.a((byte)48, k);
            c = j.toByteArray();
        }
    }

    public Object a(String s) {
        if (s.equalsIgnoreCase("is_ca"))
            s = Boolean.valueOf(d);
        else
        if (s.equalsIgnoreCase("path_len"))
            s = Integer.valueOf(e);
        else
            throw new IOException("Attribute name not recognized by CertAttrSet:BasicConstraints.");
        return s;
    }

    public String a() {
        return "BasicConstraints";
    }

    public void a(OutputStream outputstream) {
        i j = new i();
        if (c == null) {
            a = aa.j;
            if (d)
                b = true;
            else
                b = false;
            b();
        }
        super.a(j);
        outputstream.write(j.toByteArray());
    }

    public String toString() {
        String s = (new StringBuilder()).append(super.toString()).append("BasicConstraints:[\n").toString();
        StringBuilder stringbuilder = (new StringBuilder()).append(s);
        if (d)
            s = "  CA:true";
        else
            s = "  CA:false";
        s = stringbuilder.append(s).append("\n").toString();
        if (e >= 0)
            s = (new StringBuilder()).append(s).append("  PathLen:").append(e).append("\n").toString();
        else
            s = (new StringBuilder()).append(s).append("  PathLen: undefined\n").toString();
        return (new StringBuilder()).append(s).append("]\n").toString();
    }
}
