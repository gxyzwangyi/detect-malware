// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package sun.security.x509;

import java.io.IOException;
import java.util.Arrays;
import sun.security.util.ObjectIdentifier;
import sun.security.util.i;

public class r {

    protected ObjectIdentifier a;
    protected boolean b;
    protected byte c[];

    public r() {
        a = null;
        b = false;
        c = null;
    }

    public void a(i j) {
        if (a == null)
            throw new IOException("Null OID to encode for the extension!");
        if (c == null)
            throw new IOException("No value to encode for the extension!");
        i k = new i();
        k.a(a);
        if (b)
            k.a(b);
        k.b(c);
        j.a((byte)48, k);
    }

    public boolean c() {
        return b;
    }

    public ObjectIdentifier d() {
        return a;
    }

    public byte[] e() {
        return c;
    }

    public boolean equals(Object obj) {
        boolean flag1 = false;
        if (this != obj) goto _L2; else goto _L1
_L1:
        boolean flag = true;
_L4:
        return flag;
_L2:
        flag = flag1;
        if (obj instanceof r) {
            obj = (r)obj;
            flag = flag1;
            if (b == ((r) (obj)).b) {
                flag = flag1;
                if (a.a(((r) (obj)).a))
                    flag = Arrays.equals(c, ((r) (obj)).c);
            }
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public int hashCode() {
        int k = 0;
        int j = 0;
        if (c != null) {
            byte abyte0[] = c;
            int l = abyte0.length;
            do {
                k = j;
                if (l <= 0)
                    break;
                k = l - 1;
                j += l * abyte0[k];
                l = k;
            } while (true);
        }
        int i1 = a.hashCode();
        if (b)
            j = 1231;
        else
            j = 1237;
        return j + (k * 31 + i1) * 31;
    }

    public String toString() {
        String s = (new StringBuilder()).append("ObjectId: ").append(a.toString()).toString();
        if (b)
            s = (new StringBuilder()).append(s).append(" Criticality=true\n").toString();
        else
            s = (new StringBuilder()).append(s).append(" Criticality=false\n").toString();
        return s;
    }
}
