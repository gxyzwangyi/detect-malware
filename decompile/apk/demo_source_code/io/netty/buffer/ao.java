// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.buffer;

import io.netty.util.internal.PlatformDependent;
import java.nio.*;
import java.nio.channels.*;

// Referenced classes of package io.netty.buffer:
//            d, as, at, i, 
//            h, aj

public class ao extends d {

    ByteBuffer d;
    private final i e;
    private long f;
    private ByteBuffer g;
    private int h;
    private boolean i;

    protected ao(i k, int l, int i1) {
        super(i1);
        if (k == null)
            throw new NullPointerException("alloc");
        if (l < 0)
            throw new IllegalArgumentException((new StringBuilder()).append("initialCapacity: ").append(l).toString());
        if (i1 < 0)
            throw new IllegalArgumentException((new StringBuilder()).append("maxCapacity: ").append(i1).toString());
        if (l > i1) {
            throw new IllegalArgumentException(String.format("initialCapacity(%d) > maxCapacity(%d)", new Object[] {
                Integer.valueOf(l), Integer.valueOf(i1)
            }));
        } else {
            e = k;
            a(x(l), false);
            return;
        }
    }

    private ByteBuffer E() {
        ByteBuffer bytebuffer1 = g;
        ByteBuffer bytebuffer = bytebuffer1;
        if (bytebuffer1 == null) {
            bytebuffer = d.duplicate();
            g = bytebuffer;
        }
        return bytebuffer;
    }

    private int a(int k, GatheringByteChannel gatheringbytechannel, int l, boolean flag) {
        x();
        if (l == 0) {
            k = 0;
        } else {
            ByteBuffer bytebuffer;
            if (flag)
                bytebuffer = E();
            else
                bytebuffer = d.duplicate();
            bytebuffer.clear().position(k).limit(k + l);
            k = gatheringbytechannel.write(bytebuffer);
        }
        return k;
    }

    protected void D() {
        ByteBuffer bytebuffer = d;
        if (bytebuffer != null) goto _L2; else goto _L1
_L1:
        return;
_L2:
        d = null;
        if (!i)
            b(bytebuffer);
        if (true) goto _L1; else goto _L3
_L3:
    }

    public int H() {
        return h;
    }

    public i I() {
        return e;
    }

    public ByteOrder J() {
        return ByteOrder.BIG_ENDIAN;
    }

    public h K() {
        return null;
    }

    public boolean L() {
        return true;
    }

    public boolean M() {
        return false;
    }

    public byte[] N() {
        throw new UnsupportedOperationException("direct buffer");
    }

    public int O() {
        throw new UnsupportedOperationException("direct buffer");
    }

    public boolean P() {
        return true;
    }

    public long Q() {
        x();
        return f;
    }

    public int a(int k, GatheringByteChannel gatheringbytechannel, int l) {
        return a(k, gatheringbytechannel, l, false);
    }

    public int a(int k, ScatteringByteChannel scatteringbytechannel, int l) {
        x();
        ByteBuffer bytebuffer = E();
        bytebuffer.clear().position(k).limit(k + l);
        try {
            k = scatteringbytechannel.read(bytebuffer);
        }
        // Misplaced declaration of an exception variable
        catch (ScatteringByteChannel scatteringbytechannel) {
            k = -1;
        }
        return k;
    }

    public int a(GatheringByteChannel gatheringbytechannel, int k) {
        v(k);
        k = a(b, gatheringbytechannel, k, true);
        b = b + k;
        return k;
    }

    public h a(int k) {
        int l;
        int i1;
        int j1;
        x();
        if (k < 0 || k > a())
            throw new IllegalArgumentException((new StringBuilder()).append("newCapacity: ").append(k).toString());
        i1 = b();
        l = c();
        j1 = h;
        if (k <= j1) goto _L2; else goto _L1
_L1:
        ByteBuffer bytebuffer2 = d;
        ByteBuffer bytebuffer = x(k);
        bytebuffer2.position(0).limit(bytebuffer2.capacity());
        bytebuffer.position(0).limit(bytebuffer2.capacity());
        bytebuffer.put(bytebuffer2);
        bytebuffer.clear();
        a(bytebuffer, true);
_L4:
        return this;
_L2:
        if (k < j1) {
            ByteBuffer bytebuffer3 = d;
            ByteBuffer bytebuffer1 = x(k);
            if (i1 < k) {
                if (l > k)
                    c(k);
                else
                    k = l;
                bytebuffer3.position(i1).limit(k);
                bytebuffer1.position(i1).limit(k);
                bytebuffer1.put(bytebuffer3);
                bytebuffer1.clear();
            } else {
                a(k, k);
            }
            a(bytebuffer1, true);
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public h a(int k, h h1, int l, int i1) {
        as.a(this, y(k), k, h1, l, i1);
        return this;
    }

    public h a(int k, ByteBuffer bytebuffer) {
        as.a(this, y(k), k, bytebuffer);
        return this;
    }

    public h a(int k, byte abyte0[], int l, int i1) {
        as.a(this, y(k), k, abyte0, l, i1);
        return this;
    }

    final void a(ByteBuffer bytebuffer, boolean flag) {
        if (flag) {
            ByteBuffer bytebuffer1 = d;
            if (bytebuffer1 != null)
                if (i)
                    i = false;
                else
                    b(bytebuffer1);
        }
        d = bytebuffer;
        f = PlatformDependent.b(bytebuffer);
        g = null;
        h = bytebuffer.remaining();
    }

    public h a_(int k, int l) {
        return as.a(this, y(k), k, l);
    }

    public h b(int k, h h1, int l, int i1) {
        as.b(this, y(k), k, h1, l, i1);
        return this;
    }

    public h b(int k, ByteBuffer bytebuffer) {
        as.b(this, y(k), k, bytebuffer);
        return this;
    }

    public h b(int k, byte abyte0[], int l, int i1) {
        as.b(this, y(k), k, abyte0, l, i1);
        return this;
    }

    protected void b(int k, long l) {
        as.a(y(k), l);
    }

    protected void b(ByteBuffer bytebuffer) {
        PlatformDependent.a(bytebuffer);
    }

    public ByteBuffer[] b_(int k, int l) {
        return (new ByteBuffer[] {
            n(k, l)
        });
    }

    protected void c(int k, int l) {
        as.a(y(k), l);
    }

    protected void e(int k, int l) {
        as.b(y(k), l);
    }

    protected byte g(int k) {
        return as.a(y(k));
    }

    protected void g(int k, int l) {
        as.c(y(k), l);
    }

    public h h(int k, int l) {
        as.b(this, y(k), k, l);
        return this;
    }

    public int h_() {
        return 1;
    }

    protected short j(int k) {
        return as.b(y(k));
    }

    protected int m(int k) {
        return as.c(y(k));
    }

    protected aj m() {
        Object obj;
        if (PlatformDependent.g())
            obj = new at(this);
        else
            obj = super.m();
        return ((aj) (obj));
    }

    public ByteBuffer m(int k, int l) {
        j(k, l);
        return (ByteBuffer)E().clear().position(k).limit(k + l);
    }

    public ByteBuffer n(int k, int l) {
        j(k, l);
        return ((ByteBuffer)d.duplicate().position(k).limit(k + l)).slice();
    }

    protected long p(int k) {
        return as.d(y(k));
    }

    protected ByteBuffer x(int k) {
        return ByteBuffer.allocateDirect(k);
    }

    long y(int k) {
        return f + (long)k;
    }
}
