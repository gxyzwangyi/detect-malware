// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.buffer;

import io.netty.util.internal.PlatformDependent;
import java.nio.*;
import java.nio.channels.*;

// Referenced classes of package io.netty.buffer:
//            d, h, s, i

public class an extends d {

    byte d[];
    private final i e;
    private ByteBuffer f;

    protected an(i k, int i1, int j1) {
        this(k, new byte[i1], 0, 0, j1);
    }

    protected an(i k, byte abyte0[], int i1) {
        this(k, abyte0, 0, abyte0.length, i1);
    }

    private an(i k, byte abyte0[], int i1, int j1, int k1) {
        super(k1);
        if (k == null)
            throw new NullPointerException("alloc");
        if (abyte0 == null)
            throw new NullPointerException("initialArray");
        if (abyte0.length > k1) {
            throw new IllegalArgumentException(String.format("initialCapacity(%d) > maxCapacity(%d)", new Object[] {
                Integer.valueOf(abyte0.length), Integer.valueOf(k1)
            }));
        } else {
            e = k;
            c(abyte0);
            a(i1, j1);
            return;
        }
    }

    private ByteBuffer E() {
        ByteBuffer bytebuffer1 = f;
        ByteBuffer bytebuffer = bytebuffer1;
        if (bytebuffer1 == null) {
            bytebuffer = ByteBuffer.wrap(d);
            f = bytebuffer;
        }
        return bytebuffer;
    }

    private int a(int k, GatheringByteChannel gatheringbytechannel, int i1, boolean flag) {
        x();
        ByteBuffer bytebuffer;
        if (flag)
            bytebuffer = E();
        else
            bytebuffer = ByteBuffer.wrap(d);
        return gatheringbytechannel.write((ByteBuffer)bytebuffer.clear().position(k).limit(k + i1));
    }

    private void c(byte abyte0[]) {
        d = abyte0;
        f = null;
    }

    protected void D() {
        d = null;
    }

    public int H() {
        x();
        return d.length;
    }

    public i I() {
        return e;
    }

    public ByteOrder J() {
        return ByteOrder.BIG_ENDIAN;
    }

    public h K() {
        return null;
    }

    public boolean L() {
        return false;
    }

    public boolean M() {
        return true;
    }

    public byte[] N() {
        x();
        return d;
    }

    public int O() {
        return 0;
    }

    public boolean P() {
        return false;
    }

    public long Q() {
        throw new UnsupportedOperationException();
    }

    public int a(int k, GatheringByteChannel gatheringbytechannel, int i1) {
        x();
        return a(k, gatheringbytechannel, i1, false);
    }

    public int a(int k, ScatteringByteChannel scatteringbytechannel, int i1) {
        x();
        try {
            k = scatteringbytechannel.read((ByteBuffer)E().clear().position(k).limit(k + i1));
        }
        // Misplaced declaration of an exception variable
        catch (ScatteringByteChannel scatteringbytechannel) {
            k = -1;
        }
        return k;
    }

    public int a(GatheringByteChannel gatheringbytechannel, int k) {
        v(k);
        k = a(b, gatheringbytechannel, k, true);
        b = b + k;
        return k;
    }

    public h a(int k) {
        int i1;
        x();
        if (k < 0 || k > a())
            throw new IllegalArgumentException((new StringBuilder()).append("newCapacity: ").append(k).toString());
        i1 = d.length;
        if (k <= i1) goto _L2; else goto _L1
_L1:
        byte abyte0[] = new byte[k];
        System.arraycopy(d, 0, abyte0, 0, d.length);
        c(abyte0);
_L4:
        return this;
_L2:
        if (k < i1) {
            byte abyte1[] = new byte[k];
            int k1 = b();
            if (k1 < k) {
                int j1 = c();
                if (j1 > k)
                    c(k);
                else
                    k = j1;
                System.arraycopy(d, k1, abyte1, k1, k - k1);
            } else {
                a(k, k);
            }
            c(abyte1);
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public h a(int k, long l1) {
        x();
        b(k, l1);
        return this;
    }

    public h a(int k, h h1, int i1, int j1) {
        b(k, j1, i1, h1.H());
        if (h1.P())
            PlatformDependent.a(d, k, h1.Q() + (long)i1, j1);
        else
        if (h1.M())
            a(k, h1.N(), h1.O() + i1, j1);
        else
            h1.b(i1, d, k, j1);
        return this;
    }

    public h a(int k, ByteBuffer bytebuffer) {
        x();
        bytebuffer.put(d, k, Math.min(H() - k, bytebuffer.remaining()));
        return this;
    }

    public h a(int k, byte abyte0[], int i1, int j1) {
        b(k, j1, i1, abyte0.length);
        System.arraycopy(d, k, abyte0, i1, j1);
        return this;
    }

    public h a_(int k, int i1) {
        j(k, i1);
        byte abyte0[] = new byte[i1];
        System.arraycopy(d, k, abyte0, 0, i1);
        return new an(I(), abyte0, a());
    }

    public h b(int k, int i1) {
        x();
        c(k, i1);
        return this;
    }

    public h b(int k, h h1, int i1, int j1) {
        a(k, j1, i1, h1.H());
        if (h1.P())
            PlatformDependent.a(h1.Q() + (long)i1, d, k, j1);
        else
        if (h1.M())
            b(k, h1.N(), h1.O() + i1, j1);
        else
            h1.a(i1, d, k, j1);
        return this;
    }

    public h b(int k, ByteBuffer bytebuffer) {
        x();
        bytebuffer.get(d, k, bytebuffer.remaining());
        return this;
    }

    public h b(int k, byte abyte0[], int i1, int j1) {
        a(k, j1, i1, abyte0.length);
        System.arraycopy(abyte0, i1, d, k, j1);
        return this;
    }

    protected void b(int k, long l1) {
        s.a(d, k, l1);
    }

    public ByteBuffer[] b_(int k, int i1) {
        return (new ByteBuffer[] {
            n(k, i1)
        });
    }

    protected void c(int k, int i1) {
        s.a(d, k, i1);
    }

    public h d(int k, int i1) {
        x();
        e(k, i1);
        return this;
    }

    protected void e(int k, int i1) {
        s.b(d, k, i1);
    }

    public byte f(int k) {
        x();
        return g(k);
    }

    public h f(int k, int i1) {
        x();
        g(k, i1);
        return this;
    }

    protected byte g(int k) {
        return s.a(d, k);
    }

    protected void g(int k, int i1) {
        s.c(d, k, i1);
    }

    public int h_() {
        return 1;
    }

    public short i(int k) {
        x();
        return j(k);
    }

    protected short j(int k) {
        return s.b(d, k);
    }

    public int l(int k) {
        x();
        return m(k);
    }

    protected int m(int k) {
        return s.c(d, k);
    }

    public ByteBuffer m(int k, int i1) {
        j(k, i1);
        return (ByteBuffer)E().clear().position(k).limit(k + i1);
    }

    public ByteBuffer n(int k, int i1) {
        x();
        return ByteBuffer.wrap(d, k, i1).slice();
    }

    public long o(int k) {
        x();
        return p(k);
    }

    protected long p(int k) {
        return s.d(d, k);
    }
}
