// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.buffer;

import io.netty.util.internal.PlatformDependent;
import java.nio.ByteOrder;

// Referenced classes of package io.netty.buffer:
//            aj, as, a, h

abstract class e extends aj {

    static final boolean a;
    private final boolean b;
    private final a c;

    e(a a1) {
        boolean flag1 = true;
        super(a1);
        if (!a && !PlatformDependent.g())
            throw new AssertionError();
        c = a1;
        boolean flag2 = as.a;
        boolean flag;
        if (J() == ByteOrder.BIG_ENDIAN)
            flag = true;
        else
            flag = false;
        if (flag2 == flag)
            flag = flag1;
        else
            flag = false;
        b = flag;
    }

    public final h a(int j, long l1) {
        c.j(j, 8);
        a a1 = c;
        if (!b)
            l1 = Long.reverseBytes(l1);
        a(a1, j, l1);
        return this;
    }

    protected abstract short a(a a1, int j);

    protected abstract void a(a a1, int j, int i1);

    protected abstract void a(a a1, int j, long l1);

    protected abstract void a(a a1, int j, short word0);

    protected abstract int b(a a1, int j);

    protected abstract long c(a a1, int j);

    public final h d(int j, int i1) {
        c.k(j, 2);
        a a1 = c;
        short word0;
        if (b)
            word0 = (short)i1;
        else
            word0 = Short.reverseBytes((short)i1);
        a(a1, j, word0);
        return this;
    }

    public final h f(int j, int i1) {
        c.k(j, 4);
        a a1 = c;
        if (!b)
            i1 = Integer.reverseBytes(i1);
        a(a1, j, i1);
        return this;
    }

    public final short i(int j) {
        c.k(j, 2);
        short word0 = a(c, j);
        if (!b)
            word0 = Short.reverseBytes(word0);
        return word0;
    }

    public final int k(int j) {
        return i(j) & 0xffff;
    }

    public final int l(int j) {
        c.k(j, 4);
        j = b(c, j);
        if (!b)
            j = Integer.reverseBytes(j);
        return j;
    }

    public final long n(int j) {
        return (long)l(j) & 0xffffffffL;
    }

    public final long o(int j) {
        c.j(j, 8);
        long l1 = c(c, j);
        if (!b)
            l1 = Long.reverseBytes(l1);
        return l1;
    }

    static  {
        boolean flag;
        if (!io/netty/buffer/e.desiredAssertionStatus())
            flag = true;
        else
            flag = false;
        a = flag;
    }
}
