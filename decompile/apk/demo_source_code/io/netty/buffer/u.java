// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.buffer;

import io.netty.util.internal.m;
import java.util.*;

// Referenced classes of package io.netty.buffer:
//            v, t, y

final class u
    implements v {

    static final boolean a;
    private static final Iterator b = Collections.emptyList().iterator();
    private final u c;
    private final int d;
    private final int e;
    private final int f;
    private t g;
    private u h;

    u(u u1, int i, int j, int k) {
        if (!a && i > j) {
            throw new AssertionError();
        } else {
            c = u1;
            d = i;
            e = j;
            f = a(i, k);
            return;
        }
    }

    private static int a(int i) {
        return Math.max(1, i);
    }

    private static int a(int i, int j) {
        i = a(i);
        if (i == 100) {
            i = 0;
        } else {
            long l = j;
            i = (int)(((100L - (long)i) * l) / 100L);
        }
        return i;
    }

    private boolean c(t t1) {
        if (!a && t1.a() >= e)
            throw new AssertionError();
        boolean flag;
        if (t1.a() < d) {
            flag = d(t1);
        } else {
            b(t1);
            flag = true;
        }
        return flag;
    }

    private boolean d(t t1) {
        boolean flag;
        if (h == null) {
            if (!a && t1.a() != 0)
                throw new AssertionError();
            flag = false;
        } else {
            flag = h.c(t1);
        }
        return flag;
    }

    private void e(t t1) {
        if (t1 != g) goto _L2; else goto _L1
_L1:
        g = t1.f;
        if (g != null)
            g.e = null;
_L4:
        return;
_L2:
        t t2 = t1.f;
        t1.e.f = t2;
        if (t2 != null)
            t2.e = t1.e;
        if (true) goto _L4; else goto _L3
_L3:
    }

    void a(t t1) {
        if (t1.a() >= e)
            c.a(t1);
        else
            b(t1);
    }

    void a(u u1) {
        if (!a && h != null) {
            throw new AssertionError();
        } else {
            h = u1;
            return;
        }
    }

    boolean a(t t1, long l) {
        t1.a(l);
        boolean flag;
        if (t1.a() < d) {
            e(t1);
            flag = d(t1);
        } else {
            flag = true;
        }
        return flag;
    }

    boolean a(y y, int i, int j) {
        if (g != null && j <= f) goto _L2; else goto _L1
_L1:
        boolean flag = false;
_L4:
        return flag;
_L2:
        t t1 = g;
        long l;
        do {
            l = t1.a(j);
            if (l >= 0L)
                break;
            t t2 = t1.f;
            t1 = t2;
            if (t2 == null) {
                flag = false;
                continue; /* Loop/switch isn't completed */
            }
        } while (true);
        t1.a(y, l, i);
        if (t1.a() >= e) {
            e(t1);
            c.a(t1);
        }
        flag = true;
        if (true) goto _L4; else goto _L3
_L3:
    }

    void b(t t1) {
        t1.d = this;
        if (g == null) {
            g = t1;
            t1.e = null;
            t1.f = null;
        } else {
            t1.e = null;
            t1.f = g;
            g.e = t1;
            g = t1;
        }
    }

    public Iterator iterator() {
        Object obj;
        if (g == null) {
            obj = b;
        } else {
            ArrayList arraylist = new ArrayList();
            obj = g;
            t t1;
            do {
                arraylist.add(obj);
                t1 = ((t) (obj)).f;
                obj = t1;
            } while (t1 != null);
            obj = arraylist.iterator();
        }
        return ((Iterator) (obj));
    }

    public String toString() {
        if (g != null) goto _L2; else goto _L1
_L1:
        Object obj = "none";
_L4:
        return ((String) (obj));
_L2:
        StringBuilder stringbuilder = new StringBuilder();
        obj = g;
        do {
label0:
            {
                stringbuilder.append(obj);
                obj = ((t) (obj)).f;
                if (obj != null)
                    break label0;
                obj = stringbuilder.toString();
            }
            if (true)
                continue;
            stringbuilder.append(m.a);
        } while (true);
        if (true) goto _L4; else goto _L3
_L3:
    }

    static  {
        boolean flag;
        if (!io/netty/buffer/u.desiredAssertionStatus())
            flag = true;
        else
            flag = false;
        a = flag;
    }
}
