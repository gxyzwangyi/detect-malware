// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.buffer;


final class s {

    static byte a(byte abyte0[], int i) {
        return abyte0[i];
    }

    static void a(byte abyte0[], int i, int j) {
        abyte0[i] = (byte)j;
    }

    static void a(byte abyte0[], int i, long l) {
        abyte0[i] = (byte)(int)(l >>> 56);
        abyte0[i + 1] = (byte)(int)(l >>> 48);
        abyte0[i + 2] = (byte)(int)(l >>> 40);
        abyte0[i + 3] = (byte)(int)(l >>> 32);
        abyte0[i + 4] = (byte)(int)(l >>> 24);
        abyte0[i + 5] = (byte)(int)(l >>> 16);
        abyte0[i + 6] = (byte)(int)(l >>> 8);
        abyte0[i + 7] = (byte)(int)l;
    }

    static short b(byte abyte0[], int i) {
        return (short)(abyte0[i] << 8 | abyte0[i + 1] & 0xff);
    }

    static void b(byte abyte0[], int i, int j) {
        abyte0[i] = (byte)(j >>> 8);
        abyte0[i + 1] = (byte)j;
    }

    static int c(byte abyte0[], int i) {
        return (abyte0[i] & 0xff) << 24 | (abyte0[i + 1] & 0xff) << 16 | (abyte0[i + 2] & 0xff) << 8 | abyte0[i + 3] & 0xff;
    }

    static void c(byte abyte0[], int i, int j) {
        abyte0[i] = (byte)(j >>> 24);
        abyte0[i + 1] = (byte)(j >>> 16);
        abyte0[i + 2] = (byte)(j >>> 8);
        abyte0[i + 3] = (byte)j;
    }

    static long d(byte abyte0[], int i) {
        return ((long)abyte0[i] & 255L) << 56 | ((long)abyte0[i + 1] & 255L) << 48 | ((long)abyte0[i + 2] & 255L) << 40 | ((long)abyte0[i + 3] & 255L) << 32 | ((long)abyte0[i + 4] & 255L) << 24 | ((long)abyte0[i + 5] & 255L) << 16 | ((long)abyte0[i + 6] & 255L) << 8 | (long)abyte0[i + 7] & 255L;
    }
}
