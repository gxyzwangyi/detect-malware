// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.buffer;

import io.netty.util.internal.PlatformDependent;

// Referenced classes of package io.netty.buffer:
//            an, as, au, i, 
//            h, aj

final class ap extends an {

    ap(i k, int i1, int j1) {
        super(k, i1, j1);
    }

    private void o(int k, int i1) {
        j(k, i1);
        as.d(d, k, i1);
    }

    public h a(int k, long l1) {
        j(k, 8);
        b(k, l1);
        return this;
    }

    public h b(int k, int i1) {
        u(k);
        c(k, i1);
        return this;
    }

    protected void b(int k, long l1) {
        as.a(d, k, l1);
    }

    protected void c(int k, int i1) {
        as.a(d, k, i1);
    }

    public h d(int k, int i1) {
        j(k, 2);
        e(k, i1);
        return this;
    }

    protected void e(int k, int i1) {
        as.b(d, k, i1);
    }

    public byte f(int k) {
        u(k);
        return g(k);
    }

    public h f(int k, int i1) {
        j(k, 4);
        g(k, i1);
        return this;
    }

    protected byte g(int k) {
        return as.a(d, k);
    }

    protected void g(int k, int i1) {
        as.c(d, k, i1);
    }

    public h h(int k, int i1) {
        Object obj;
        if (PlatformDependent.d() >= 7) {
            o(k, i1);
            obj = this;
        } else {
            obj = super.h(k, i1);
        }
        return ((h) (obj));
    }

    public short i(int k) {
        j(k, 2);
        return j(k);
    }

    protected short j(int k) {
        return as.b(d, k);
    }

    public int l(int k) {
        j(k, 4);
        return m(k);
    }

    protected int m(int k) {
        return as.c(d, k);
    }

    protected aj m() {
        Object obj;
        if (PlatformDependent.g())
            obj = new au(this);
        else
            obj = super.m();
        return ((aj) (obj));
    }

    public long o(int k) {
        j(k, 8);
        return p(k);
    }

    protected long p(int k) {
        return as.d(d, k);
    }
}
