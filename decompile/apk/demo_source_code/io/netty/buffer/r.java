// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.buffer;

import io.netty.util.i;
import io.netty.util.internal.*;
import java.nio.*;
import java.nio.channels.GatheringByteChannel;
import java.nio.channels.ScatteringByteChannel;
import java.nio.charset.Charset;

// Referenced classes of package io.netty.buffer:
//            h, i, l

public final class r extends h {

    private static final ByteBuffer a;
    private static final long b;
    private final io.netty.buffer.i c;
    private final ByteOrder d;
    private final String e;
    private r f;

    public r(io.netty.buffer.i j) {
        this(j, ByteOrder.BIG_ENDIAN);
    }

    private r(io.netty.buffer.i j, ByteOrder byteorder) {
        if (j == null)
            throw new NullPointerException("alloc");
        c = j;
        d = byteorder;
        StringBuilder stringbuilder = (new StringBuilder()).append(io.netty.util.internal.m.a(this));
        if (byteorder == ByteOrder.BIG_ENDIAN)
            j = "BE";
        else
            j = "LE";
        e = stringbuilder.append(j).toString();
    }

    private h d(int j) {
        if (j != 0)
            throw new IndexOutOfBoundsException();
        else
            return this;
    }

    private h g(int j) {
        if (j < 0)
            throw new IllegalArgumentException((new StringBuilder()).append("length: ").append(j).append(" (expected: >= 0)").toString());
        if (j != 0)
            throw new IndexOutOfBoundsException();
        else
            return this;
    }

    private h g(int j, int i1) {
        if (i1 < 0)
            throw new IllegalArgumentException((new StringBuilder()).append("length: ").append(i1).toString());
        if (j != 0 || i1 != 0)
            throw new IndexOutOfBoundsException();
        else
            return this;
    }

    public h A() {
        return this;
    }

    public boolean B() {
        return false;
    }

    public i C() {
        return A();
    }

    public int H() {
        return 0;
    }

    public io.netty.buffer.i I() {
        return c;
    }

    public ByteOrder J() {
        return d;
    }

    public h K() {
        return null;
    }

    public boolean L() {
        return true;
    }

    public boolean M() {
        return true;
    }

    public byte[] N() {
        return c.a;
    }

    public int O() {
        return 0;
    }

    public boolean P() {
        boolean flag;
        if (b != 0L)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public long Q() {
        if (P())
            return b;
        else
            throw new UnsupportedOperationException();
    }

    public int a() {
        return 0;
    }

    public int a(int j, GatheringByteChannel gatheringbytechannel, int i1) {
        g(j, i1);
        return 0;
    }

    public int a(int j, ScatteringByteChannel scatteringbytechannel, int i1) {
        g(j, i1);
        return 0;
    }

    public int a(int j, boolean flag) {
        if (j < 0)
            throw new IllegalArgumentException((new StringBuilder()).append("minWritableBytes: ").append(j).append(" (expected: >= 0)").toString());
        if (j == 0)
            j = 0;
        else
            j = 1;
        return j;
    }

    public int a(l l1) {
        return -1;
    }

    public int a(GatheringByteChannel gatheringbytechannel, int j) {
        g(j);
        return 0;
    }

    public int a(ScatteringByteChannel scatteringbytechannel, int j) {
        g(j);
        return 0;
    }

    public h a(int j) {
        throw new ReadOnlyBufferException();
    }

    public h a(int j, int i1) {
        d(j);
        d(i1);
        return this;
    }

    public h a(int j, long l1) {
        throw new IndexOutOfBoundsException();
    }

    public h a(int j, h h1, int i1, int j1) {
        return g(j, j1);
    }

    public h a(int j, ByteBuffer bytebuffer) {
        return g(j, bytebuffer.remaining());
    }

    public h a(int j, byte abyte0[]) {
        return g(j, abyte0.length);
    }

    public h a(int j, byte abyte0[], int i1, int j1) {
        return g(j, j1);
    }

    public h a(h h1) {
        throw new IndexOutOfBoundsException();
    }

    public h a(h h1, int j, int i1) {
        return g(i1);
    }

    public h a(ByteBuffer bytebuffer) {
        return g(bytebuffer.remaining());
    }

    public h a(ByteOrder byteorder) {
        if (byteorder == null)
            throw new NullPointerException("endianness");
        if (byteorder == J()) {
            byteorder = this;
        } else {
            r r1 = f;
            if (r1 != null) {
                byteorder = r1;
            } else {
                byteorder = new r(I(), byteorder);
                f = byteorder;
            }
        }
        return byteorder;
    }

    public h a(byte abyte0[]) {
        return g(abyte0.length);
    }

    public h a(byte abyte0[], int j, int i1) {
        return g(i1);
    }

    public String a(Charset charset) {
        return "";
    }

    public h a_(int j, int i1) {
        return g(j, i1);
    }

    public int b() {
        return 0;
    }

    public int b(h h1) {
        byte byte0;
        if (h1.e())
            byte0 = -1;
        else
            byte0 = 0;
        return byte0;
    }

    public h b(int j) {
        return d(j);
    }

    public h b(int j, int i1) {
        throw new IndexOutOfBoundsException();
    }

    public h b(int j, h h1, int i1, int j1) {
        return g(j, j1);
    }

    public h b(int j, ByteBuffer bytebuffer) {
        return g(j, bytebuffer.remaining());
    }

    public h b(int j, byte abyte0[], int i1, int j1) {
        return g(j, j1);
    }

    public h b(byte abyte0[]) {
        return g(abyte0.length);
    }

    public h b(byte abyte0[], int j, int i1) {
        return g(i1);
    }

    public ByteBuffer[] b_(int j, int i1) {
        g(j, i1);
        return w();
    }

    public int c() {
        return 0;
    }

    public h c(int j) {
        return d(j);
    }

    public int compareTo(Object obj) {
        return b((h)obj);
    }

    public h d() {
        return this;
    }

    public h d(int j, int i1) {
        throw new IndexOutOfBoundsException();
    }

    public h e(int j) {
        if (j < 0)
            throw new IllegalArgumentException((new StringBuilder()).append("minWritableBytes: ").append(j).append(" (expected: >= 0)").toString());
        if (j != 0)
            throw new IndexOutOfBoundsException();
        else
            return this;
    }

    public boolean e() {
        return false;
    }

    public boolean equals(Object obj) {
        boolean flag;
        if ((obj instanceof h) && !((h)obj).e())
            flag = true;
        else
            flag = false;
        return flag;
    }

    public byte f(int j) {
        throw new IndexOutOfBoundsException();
    }

    public int f() {
        return 0;
    }

    public h f(int j, int i1) {
        throw new IndexOutOfBoundsException();
    }

    public int g() {
        return 0;
    }

    public h h() {
        return this;
    }

    public h h(int j, int i1) {
        return g(j, i1);
    }

    public short h(int j) {
        throw new IndexOutOfBoundsException();
    }

    public int h_() {
        return 1;
    }

    public int hashCode() {
        return 0;
    }

    public h i() {
        return this;
    }

    public h i(int j, int i1) {
        return g(j, i1);
    }

    public short i(int j) {
        throw new IndexOutOfBoundsException();
    }

    public int k(int j) {
        throw new IndexOutOfBoundsException();
    }

    public h k() {
        return this;
    }

    public int l(int j) {
        throw new IndexOutOfBoundsException();
    }

    public h l() {
        return this;
    }

    public ByteBuffer m(int j, int i1) {
        return a;
    }

    public byte n() {
        throw new IndexOutOfBoundsException();
    }

    public long n(int j) {
        throw new IndexOutOfBoundsException();
    }

    public ByteBuffer n(int j, int i1) {
        g(j, i1);
        return v();
    }

    public long o(int j) {
        throw new IndexOutOfBoundsException();
    }

    public short o() {
        throw new IndexOutOfBoundsException();
    }

    public short p() {
        throw new IndexOutOfBoundsException();
    }

    public int q() {
        throw new IndexOutOfBoundsException();
    }

    public h q(int j) {
        return g(j);
    }

    public long r() {
        throw new IndexOutOfBoundsException();
    }

    public h r(int j) {
        return g(j);
    }

    public h s() {
        return this;
    }

    public h s(int j) {
        return g(j);
    }

    public h t() {
        return this;
    }

    public h t(int j) {
        throw new IndexOutOfBoundsException();
    }

    public String toString() {
        return e;
    }

    public h u() {
        return this;
    }

    public ByteBuffer v() {
        return a;
    }

    public ByteBuffer[] w() {
        return (new ByteBuffer[] {
            a
        });
    }

    public int z() {
        return 1;
    }

    static  {
        a = ByteBuffer.allocateDirect(0);
        long l2 = 0L;
        long l1 = l2;
        try {
            if (PlatformDependent.f())
                l1 = PlatformDependent.b(a);
        }
        catch (Throwable throwable) {
            l1 = l2;
        }
        b = l1;
    }
}
