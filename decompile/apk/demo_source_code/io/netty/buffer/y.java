// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.buffer;

import io.netty.util.Recycler;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

// Referenced classes of package io.netty.buffer:
//            d, t, PoolArena, x, 
//            i, h

abstract class y extends d {

    static final boolean k;
    protected t d;
    protected long e;
    protected Object f;
    protected int g;
    protected int h;
    int i;
    x j;
    private final io.netty.util.Recycler.b l;
    private ByteBuffer m;

    protected y(io.netty.util.Recycler.b b, int i1) {
        super(i1);
        l = b;
    }

    private void G() {
        io.netty.util.Recycler.b b = l;
        if (b != null)
            F().a(this, b);
    }

    protected final void D() {
        if (e >= 0L) {
            long l1 = e;
            e = -1L;
            f = null;
            d.a.a(d, l1, i, j);
            G();
        }
    }

    protected final ByteBuffer E() {
        ByteBuffer bytebuffer1 = m;
        ByteBuffer bytebuffer = bytebuffer1;
        if (bytebuffer1 == null) {
            bytebuffer = a(f);
            m = bytebuffer;
        }
        return bytebuffer;
    }

    protected abstract Recycler F();

    public final int H() {
        return h;
    }

    public final i I() {
        return d.a.b;
    }

    public final ByteOrder J() {
        return ByteOrder.BIG_ENDIAN;
    }

    public final h K() {
        return null;
    }

    public final h a(int i1) {
        x();
        if (!d.c) goto _L2; else goto _L1
_L1:
        if (i1 != h) goto _L4; else goto _L3
_L3:
        return this;
_L2:
        if (i1 > h) {
            if (i1 <= i) {
                h = i1;
                continue; /* Loop/switch isn't completed */
            }
        } else {
            if (i1 >= h)
                continue; /* Loop/switch isn't completed */
            if (i1 > i >>> 1)
                if (i <= 512) {
                    if (i1 > i - 16) {
                        h = i1;
                        a(Math.min(b(), i1), Math.min(c(), i1));
                        continue; /* Loop/switch isn't completed */
                    }
                } else {
                    h = i1;
                    a(Math.min(b(), i1), Math.min(c(), i1));
                    continue; /* Loop/switch isn't completed */
                }
        }
_L4:
        d.a.a(this, i1, true);
        if (true) goto _L3; else goto _L5
_L5:
    }

    protected abstract ByteBuffer a(Object obj);

    void a(t t1, int i1) {
        if (!k && t1 == null) {
            throw new AssertionError();
        } else {
            d = t1;
            e = 0L;
            f = t1.b;
            g = 0;
            i = i1;
            h = i1;
            m = null;
            j = null;
            return;
        }
    }

    void a(t t1, long l1, int i1, int j1, int k1, x x1) {
        if (!k && l1 < 0L)
            throw new AssertionError();
        if (!k && t1 == null) {
            throw new AssertionError();
        } else {
            d = t1;
            e = l1;
            f = t1.b;
            g = i1;
            h = j1;
            i = k1;
            m = null;
            j = x1;
            return;
        }
    }

    final void x(int i1) {
        a_(i1);
        w(1);
        l(0, 0);
        y();
    }

    protected final int y(int i1) {
        return g + i1;
    }

    static  {
        boolean flag;
        if (!io/netty/buffer/y.desiredAssertionStatus())
            flag = true;
        else
            flag = false;
        k = flag;
    }
}
