// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.ssl.util;

import io.netty.util.internal.ThreadLocalRandom;
import java.security.SecureRandom;
import java.util.Random;

final class ThreadLocalInsecureRandom extends SecureRandom {

    private static final SecureRandom a = new ThreadLocalInsecureRandom();

    private ThreadLocalInsecureRandom() {
    }

    static SecureRandom a() {
        return a;
    }

    private static Random b() {
        return ThreadLocalRandom.b();
    }

    public byte[] generateSeed(int i) {
        byte abyte0[] = new byte[i];
        b().nextBytes(abyte0);
        return abyte0;
    }

    public String getAlgorithm() {
        return "insecure";
    }

    public boolean nextBoolean() {
        return b().nextBoolean();
    }

    public void nextBytes(byte abyte0[]) {
        b().nextBytes(abyte0);
    }

    public double nextDouble() {
        return b().nextDouble();
    }

    public float nextFloat() {
        return b().nextFloat();
    }

    public double nextGaussian() {
        return b().nextGaussian();
    }

    public int nextInt() {
        return b().nextInt();
    }

    public int nextInt(int i) {
        return b().nextInt(i);
    }

    public long nextLong() {
        return b().nextLong();
    }

    public void setSeed(long l) {
    }

    public void setSeed(byte abyte0[]) {
    }

}
