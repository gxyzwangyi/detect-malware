// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.ssl.util;

import java.math.BigInteger;
import java.security.KeyPair;
import java.security.SecureRandom;
import java.security.cert.CertificateException;
import java.util.Date;
import sun.security.x509.*;

// Referenced classes of package io.netty.handler.ssl.util:
//            c

final class b {

    static String[] a(String s, KeyPair keypair, SecureRandom securerandom, Date date, Date date1) {
        java.security.PrivateKey privatekey = keypair.getPrivate();
        aj aj1 = new aj();
        ah ah1 = new ah((new StringBuilder()).append("CN=").append(s).toString());
        aj1.a("version", new n(2));
        aj1.a("serialNumber", new j(new BigInteger(64, securerandom)));
        try {
            securerandom = JVM INSTR new #62  <Class k>;
            securerandom.k(ah1);
            aj1.a("subject", securerandom);
        }
        // Misplaced declaration of an exception variable
        catch (SecureRandom securerandom) {
            aj1.a("subject", ah1);
        }
        try {
            securerandom = JVM INSTR new #69  <Class h>;
            securerandom.h(ah1);
            aj1.a("issuer", securerandom);
        }
        // Misplaced declaration of an exception variable
        catch (SecureRandom securerandom) {
            aj1.a("issuer", ah1);
        }
        aj1.a("validity", new m(date, date1));
        aj1.a("key", new o(keypair.getPublic()));
        aj1.a("algorithmID", new f(new AlgorithmId(AlgorithmId.q)));
        securerandom = new X509CertImpl(aj1);
        securerandom.a(privatekey, "SHA1withRSA");
        aj1.a("algorithmID.algorithm", securerandom.a("x509.algorithm"));
        securerandom = new X509CertImpl(aj1);
        securerandom.a(privatekey, "SHA1withRSA");
        securerandom.verify(keypair.getPublic());
        return c.a(s, privatekey, securerandom);
    }
}
