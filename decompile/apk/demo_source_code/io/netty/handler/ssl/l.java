// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.ssl;

import io.netty.util.internal.k;
import java.util.LinkedHashSet;
import javax.net.ssl.SSLEngine;
import org.eclipse.jetty.npn.NextProtoNego;

// Referenced classes of package io.netty.handler.ssl:
//            o, h

final class l extends o {

    private static boolean a;

    l(SSLEngine sslengine, h h1, boolean flag) {
        super(sslengine);
        k.a(h1, "applicationNegotiator");
        if (flag)
            NextProtoNego.put(sslengine, new org.eclipse.jetty.npn.NextProtoNego.ServerProvider((h.a)k.a(h1.c().a(this, h1.a()), "protocolListener"), h1) {

                final h.a a;
                final h b;
                final l c;

             {
                c = l.this;
                a = a1;
                b = h1;
                super();
            }
            }
);
        else
            NextProtoNego.put(sslengine, new org.eclipse.jetty.npn.NextProtoNego.ClientProvider((h.c)k.a(h1.d().a(this, new LinkedHashSet(h1.a())), "protocolSelector")) {

                final h.c a;
                final l b;

             {
                b = l.this;
                a = c;
                super();
            }
            }
);
    }

    static boolean a() {
        d();
        return a;
    }

    private static void d() {
        if (!a)
            try {
                Class.forName("sun.security.ssl.NextProtoNegoExtension", true, null);
                a = true;
            }
            catch (Exception exception) { }
    }

    public void closeInbound() {
        NextProtoNego.remove(c());
        super.closeInbound();
    }

    public void closeOutbound() {
        NextProtoNego.remove(c());
        super.closeOutbound();
    }
}
