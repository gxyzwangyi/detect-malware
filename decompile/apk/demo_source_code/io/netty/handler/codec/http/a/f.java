// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.codec.http.a;

import io.netty.util.internal.k;
import java.util.*;

// Referenced classes of package io.netty.handler.codec.http.a:
//            c

public final class f extends c {

    public static final f a = new f(true);
    public static final f b = new f(false);

    private f(boolean flag) {
        super(flag);
    }

    public Set a(String s) {
        int k1 = ((String)k.a(s, "header")).length();
        if (k1 != 0) goto _L2; else goto _L1
_L1:
        s = Collections.emptySet();
_L4:
        return s;
_L2:
        TreeSet treeset = new TreeSet();
        int i;
        int j;
        int l;
        int i1;
        int j1;
        boolean flag;
        int l1;
        e e;
        if (s.regionMatches(true, 0, "$Version", 0, "$Version".length())) {
            i = s.indexOf(';');
            flag = true;
            i++;
        } else {
            flag = false;
            i = 0;
        }
label0:
        {
            for (; i != k1; i = j)
                break label0;

            s = treeset;
        }
        if (true) goto _L4; else goto _L3
_L3:
label1:
        {
            j = s.charAt(i);
            if (j != '\t' && j != '\n' && j != '\013' && j != '\f' && j != '\r' && j != ' ' && j != ',' && j != ';')
                break label1;
            i++;
        }
        break MISSING_BLOCK_LABEL_64;
        if (i == k1)
            break MISSING_BLOCK_LABEL_376;
        j = i;
_L6:
        l = s.charAt(j);
        if (l == 59) {
            j1 = -1;
            i1 = -1;
            l = j;
        } else {
label2:
            {
                if (l != 61)
                    break label2;
                i1 = j + 1;
                if (i1 == k1) {
                    j1 = 0;
                    l = j;
                    j = i1;
                    i1 = 0;
                } else {
                    l = s.indexOf(';', i1);
                    if (l <= 0)
                        l = k1;
                    j1 = l;
                    l1 = j;
                    j = l;
                    l = l1;
                }
            }
        }
_L7:
        if (!flag)
            break MISSING_BLOCK_LABEL_337;
        if (s.regionMatches(i, "$Path", 0, "$Path".length()) || s.regionMatches(i, "$Domain", 0, "$Domain".length()))
            break MISSING_BLOCK_LABEL_371;
        if (!s.regionMatches(i, "$Port", 0, "$Port".length()))
            break MISSING_BLOCK_LABEL_337;
        i = j;
        break MISSING_BLOCK_LABEL_64;
        l = j + 1;
        j = l;
        if (l != k1) goto _L6; else goto _L5
_L5:
        j1 = -1;
        l1 = -1;
        i1 = k1;
        j = l;
        l = i1;
        i1 = l1;
          goto _L7
        e = a(s, i, l, i1, j1);
        if (e != null)
            treeset.add(e);
        i = j;
        break MISSING_BLOCK_LABEL_64;
        j1 = -1;
        i1 = -1;
        l = i;
        j = i;
          goto _L7
    }

}
