// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.codec.http;

import io.netty.buffer.h;
import io.netty.channel.embedded.a;
import io.netty.channel.k;
import io.netty.handler.codec.CodecException;
import io.netty.handler.codec.e;
import java.util.List;

// Referenced classes of package io.netty.handler.codec.http:
//            n, ah, s, a, 
//            d, ac, af, t, 
//            z, h, i, w

public abstract class o extends e {

    protected k a;
    private a b;
    private boolean c;

    public o() {
    }

    private void a(h h1, List list) {
        b.a(new Object[] {
            h1.A()
        });
        b(list);
    }

    private void a(n n1, List list) {
        a(n1.a(), list);
        if (n1 instanceof ah) {
            a(list);
            n1 = ((ah)n1).b();
            if (n1.c())
                list.add(ah.b);
            else
                list.add(new io.netty.handler.codec.http.a(n1));
        }
    }

    private void a(List list) {
        if (b.L())
            b(list);
        b = null;
    }

    private void b() {
        if (b == null) goto _L2; else goto _L1
_L1:
        if (!b.L()) goto _L4; else goto _L3
_L3:
        h h1 = (h)b.K();
        if (h1 != null) goto _L5; else goto _L4
_L4:
        b = null;
_L2:
        return;
_L5:
        h1.B();
        if (true) goto _L3; else goto _L6
_L6:
    }

    private void b(List list) {
        do {
            h h1 = (h)b.K();
            if (h1 == null)
                return;
            if (!h1.e())
                h1.B();
            else
                list.add(new d(h1));
        } while (true);
    }

    protected abstract a a(String s1);

    protected void a(k k, w w1, List list) {
        if (!(w1 instanceof ac) || ((ac)w1).h().a() != 100) goto _L2; else goto _L1
_L1:
        if (!(w1 instanceof ah))
            c = true;
        list.add(io.netty.util.h.a(w1));
_L4:
        return;
_L2:
        if (c) {
            if (w1 instanceof ah)
                c = false;
            list.add(io.netty.util.h.a(w1));
            continue; /* Loop/switch isn't completed */
        }
        if (w1 instanceof t) {
            b();
            t t1 = (t)w1;
            s s1 = t1.j();
            k = s1.b("Content-Encoding");
            if (k != null)
                k = k.trim();
            else
                k = "identity";
            b = a(((String) (k)));
            if (b == null) {
                if (t1 instanceof n)
                    ((n)t1).g();
                list.add(t1);
                continue; /* Loop/switch isn't completed */
            }
            s1.a("Content-Length");
            s1.b("Transfer-Encoding", "chunked");
            k = b(k);
            if ("identity".equals(k))
                s1.a("Content-Encoding");
            else
                s1.b("Content-Encoding", k);
            if (t1 instanceof n) {
                if (t1 instanceof z) {
                    k = (z)t1;
                    k = new io.netty.handler.codec.http.h(k.k(), k.l(), k.m());
                } else
                if (t1 instanceof ac) {
                    k = (ac)t1;
                    k = new i(k.k(), k.h());
                } else {
                    throw new CodecException((new StringBuilder()).append("Object of class ").append(t1.getClass().getName()).append(" is not a HttpRequest or HttpResponse").toString());
                }
                k.j().b(t1.j());
                k.a(t1.f());
                list.add(k);
            } else {
                list.add(t1);
            }
        }
        if (w1 instanceof n) {
            k = (n)w1;
            if (b == null)
                list.add(k.g());
            else
                a(((n) (k)), list);
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    protected volatile void a(k k, Object obj, List list) {
        a(k, (w)obj, list);
    }

    protected String b(String s1) {
        return "identity";
    }

    public void c(k k) {
        a = k;
        super.c(k);
    }

    public void d(k k) {
        b();
        super.d(k);
    }

    public void h(k k) {
        b();
        super.h(k);
    }
}
