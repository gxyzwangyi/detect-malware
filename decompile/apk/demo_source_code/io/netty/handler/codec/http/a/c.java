// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.codec.http.a;

import io.netty.util.internal.logging.b;
import java.nio.CharBuffer;

// Referenced classes of package io.netty.handler.codec.http.a:
//            d, e

public abstract class c {

    private final b a = io.netty.util.internal.logging.c.a(getClass());
    private final boolean b;

    protected c(boolean flag) {
        b = flag;
    }

    protected e a(String s, int i, int j, int k, int l) {
        if (i != -1 && i != j) goto _L2; else goto _L1
_L1:
        a.a("Skipping cookie with null name");
        s = null;
_L4:
        return s;
_L2:
        if (k == -1) {
            a.a("Skipping cookie with null value");
            s = null;
            continue; /* Loop/switch isn't completed */
        }
        CharBuffer charbuffer = CharBuffer.wrap(s, k, l);
        CharSequence charsequence = d.c(charbuffer);
        if (charsequence == null) {
            a.b("Skipping cookie because starting quotes are not properly balanced in '{}'", charbuffer);
            s = null;
            continue; /* Loop/switch isn't completed */
        }
        s = s.substring(i, j);
        if (b) {
            i = d.a(s);
            if (i >= 0) {
                if (a.b())
                    a.b("Skipping cookie because name '{}' contains invalid char '{}'", s, Character.valueOf(s.charAt(i)));
                s = null;
                continue; /* Loop/switch isn't completed */
            }
        }
        boolean flag;
        if (charsequence.length() != l - k)
            flag = true;
        else
            flag = false;
        if (b) {
            i = io.netty.handler.codec.http.a.d.b(charsequence);
            if (i >= 0) {
                if (a.b())
                    a.b("Skipping cookie because value '{}' contains invalid char '{}'", charsequence, Character.valueOf(charsequence.charAt(i)));
                s = null;
                continue; /* Loop/switch isn't completed */
            }
        }
        s = new e(s, charsequence.toString());
        s.a(flag);
        if (true) goto _L4; else goto _L3
_L3:
    }
}
