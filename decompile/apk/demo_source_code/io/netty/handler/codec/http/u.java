// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.codec.http;

import io.netty.util.internal.m;
import java.util.Iterator;

// Referenced classes of package io.netty.handler.codec.http:
//            ac, l, m, z, 
//            k, s, t

final class u {

    static StringBuilder a(StringBuilder stringbuilder, ac ac1) {
        a(stringbuilder, ((t) (ac1)));
        b(stringbuilder, ac1);
        a(stringbuilder, ac1.j());
        a(stringbuilder);
        return stringbuilder;
    }

    static StringBuilder a(StringBuilder stringbuilder, l l1) {
        a(stringbuilder, ((k) (l1)));
        b(stringbuilder, l1);
        a(stringbuilder, l1.j());
        a(stringbuilder, l1.b());
        a(stringbuilder);
        return stringbuilder;
    }

    static StringBuilder a(StringBuilder stringbuilder, io.netty.handler.codec.http.m m1) {
        a(stringbuilder, ((k) (m1)));
        b(stringbuilder, m1);
        a(stringbuilder, m1.j());
        a(stringbuilder, m1.b());
        a(stringbuilder);
        return stringbuilder;
    }

    static StringBuilder a(StringBuilder stringbuilder, z z1) {
        a(stringbuilder, ((t) (z1)));
        b(stringbuilder, z1);
        a(stringbuilder, z1.j());
        a(stringbuilder);
        return stringbuilder;
    }

    private static void a(StringBuilder stringbuilder) {
        stringbuilder.setLength(stringbuilder.length() - m.a.length());
    }

    private static void a(StringBuilder stringbuilder, k k1) {
        stringbuilder.append(m.a(k1));
        stringbuilder.append("(decodeResult: ");
        stringbuilder.append(k1.f());
        stringbuilder.append(", version: ");
        stringbuilder.append(k1.k());
        stringbuilder.append(", content: ");
        stringbuilder.append(k1.a());
        stringbuilder.append(')');
        stringbuilder.append(m.a);
    }

    private static void a(StringBuilder stringbuilder, s s1) {
        for (s1 = s1.iterator(); s1.hasNext(); stringbuilder.append(m.a)) {
            java.util.Map.Entry entry = (java.util.Map.Entry)s1.next();
            stringbuilder.append((String)entry.getKey());
            stringbuilder.append(": ");
            stringbuilder.append((String)entry.getValue());
        }

    }

    private static void a(StringBuilder stringbuilder, t t1) {
        stringbuilder.append(m.a(t1));
        stringbuilder.append("(decodeResult: ");
        stringbuilder.append(t1.f());
        stringbuilder.append(", version: ");
        stringbuilder.append(t1.k());
        stringbuilder.append(')');
        stringbuilder.append(m.a);
    }

    private static void b(StringBuilder stringbuilder, ac ac1) {
        stringbuilder.append(ac1.k());
        stringbuilder.append(' ');
        stringbuilder.append(ac1.h());
        stringbuilder.append(m.a);
    }

    private static void b(StringBuilder stringbuilder, z z1) {
        stringbuilder.append(z1.l());
        stringbuilder.append(' ');
        stringbuilder.append(z1.m());
        stringbuilder.append(' ');
        stringbuilder.append(z1.k());
        stringbuilder.append(m.a);
    }
}
