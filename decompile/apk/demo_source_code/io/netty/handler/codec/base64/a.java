// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.codec.base64;

import io.netty.buffer.h;
import io.netty.buffer.i;

// Referenced classes of package io.netty.handler.codec.base64:
//            Base64Dialect

public final class a {

    private static int a(byte abyte0[], int j, h h1, int k, Base64Dialect base64dialect) {
        base64dialect = b(base64dialect);
        if (abyte0[j + 2] == 61) {
            byte byte0 = base64dialect[abyte0[j]];
            h1.b(k, (byte)(((base64dialect[abyte0[j + 1]] & 0xff) << 12 | (byte0 & 0xff) << 18) >>> 16));
            j = 1;
        } else
        if (abyte0[j + 3] == 61) {
            byte byte3 = base64dialect[abyte0[j]];
            byte byte1 = base64dialect[abyte0[j + 1]];
            j = (base64dialect[abyte0[j + 2]] & 0xff) << 6 | ((byte3 & 0xff) << 18 | (byte1 & 0xff) << 12);
            h1.b(k, (byte)(j >>> 16));
            h1.b(k + 1, (byte)(j >>> 8));
            j = 2;
        } else {
            byte byte4 = base64dialect[abyte0[j]];
            byte byte2 = base64dialect[abyte0[j + 1]];
            byte byte5 = base64dialect[abyte0[j + 2]];
            j = base64dialect[abyte0[j + 3]];
            j = j & 0xff | ((byte4 & 0xff) << 18 | (byte2 & 0xff) << 12 | (byte5 & 0xff) << 6);
            h1.b(k, (byte)(j >> 16));
            h1.b(k + 1, (byte)(j >> 8));
            h1.b(k + 2, (byte)j);
            j = 3;
        }
        return j;
    }

    public static h a(h h1) {
        return a(h1, Base64Dialect.a);
    }

    public static h a(h h1, int j, int k, Base64Dialect base64dialect) {
        return a(h1, j, k, base64dialect, h1.I());
    }

    public static h a(h h1, int j, int k, Base64Dialect base64dialect, i l) {
        int i1;
        int j1;
        int k1;
        byte abyte0[];
        h h2;
        if (h1 == null)
            throw new NullPointerException("src");
        if (base64dialect == null)
            throw new NullPointerException("dialect");
        abyte0 = b(base64dialect);
        h2 = l.a((k * 3) / 4).a(h1.J());
        l = new byte[4];
        k1 = j;
        j1 = 0;
        i1 = 0;
_L9:
        byte byte0;
        int l1;
        if (k1 >= j + k)
            break MISSING_BLOCK_LABEL_261;
        byte0 = (byte)(h1.f(k1) & 0x7f);
        l1 = abyte0[byte0];
        if (l1 < -5) goto _L2; else goto _L1
_L1:
        if (l1 < -1) goto _L4; else goto _L3
_L3:
        l1 = j1 + 1;
        l[j1] = byte0;
        if (l1 <= 3) goto _L6; else goto _L5
_L5:
        j1 = a(((byte []) (l)), 0, h2, i1, base64dialect) + i1;
        if (byte0 != 61) goto _L8; else goto _L7
_L7:
        return h2.i(0, j1);
_L2:
        throw new IllegalArgumentException((new StringBuilder()).append("bad Base64 input character at ").append(k1).append(": ").append(h1.h(k1)).append(" (decimal)").toString());
_L8:
        i1 = 0;
_L10:
        l1 = k1 + 1;
        k1 = j1;
        j1 = i1;
        i1 = k1;
        k1 = l1;
          goto _L9
_L6:
        j1 = i1;
        i1 = l1;
          goto _L10
_L4:
        int i2 = i1;
        i1 = j1;
        j1 = i2;
          goto _L10
        j1 = i1;
          goto _L7
    }

    public static h a(h h1, int j, int k, boolean flag, Base64Dialect base64dialect) {
        return a(h1, j, k, flag, base64dialect, h1.I());
    }

    public static h a(h h1, int j, int k, boolean flag, Base64Dialect base64dialect, i l) {
        if (h1 == null)
            throw new NullPointerException("src");
        if (base64dialect == null)
            throw new NullPointerException("dialect");
        int k1 = (k * 4) / 3;
        int i1;
        int j1;
        if (k % 3 > 0)
            i1 = 4;
        else
            i1 = 0;
        if (flag)
            j1 = k1 / 76;
        else
            j1 = 0;
        l = l.a(j1 + (k1 + i1)).a(h1.J());
        i1 = 0;
        j1 = 0;
        for (k1 = 0; k1 < k - 2; k1 += 3) {
            a(h1, k1 + j, 3, ((h) (l)), i1, base64dialect);
            int i2 = j1 + 4;
            j1 = i2;
            int l1 = i1;
            if (flag) {
                j1 = i2;
                l1 = i1;
                if (i2 == 76) {
                    l.b(i1 + 4, 10);
                    l1 = i1 + 1;
                    j1 = 0;
                }
            }
            i1 = l1 + 4;
        }

        if (k1 < k) {
            a(h1, k1 + j, k - k1, ((h) (l)), i1, base64dialect);
            j = i1 + 4;
        } else {
            j = i1;
        }
        k = j;
        if (j > 1) {
            k = j;
            if (l.f(j - 1) == 10)
                k = j - 1;
        }
        return l.i(0, k);
    }

    public static h a(h h1, Base64Dialect base64dialect) {
        if (h1 == null) {
            throw new NullPointerException("src");
        } else {
            base64dialect = a(h1, h1.b(), h1.f(), base64dialect);
            h1.b(h1.c());
            return base64dialect;
        }
    }

    public static h a(h h1, boolean flag) {
        return a(h1, flag, Base64Dialect.a);
    }

    public static h a(h h1, boolean flag, Base64Dialect base64dialect) {
        if (h1 == null) {
            throw new NullPointerException("src");
        } else {
            base64dialect = a(h1, h1.b(), h1.f(), flag, base64dialect);
            h1.b(h1.c());
            return base64dialect;
        }
    }

    private static void a(h h1, int j, int k, h h2, int l, Base64Dialect base64dialect) {
        int k1 = 0;
        base64dialect = a(base64dialect);
        int i1;
        int j1;
        if (k > 0)
            i1 = (h1.f(j) << 24) >>> 8;
        else
            i1 = 0;
        if (k > 1)
            j1 = (h1.f(j + 1) << 24) >>> 16;
        else
            j1 = 0;
        if (k > 2)
            k1 = (h1.f(j + 2) << 24) >>> 24;
        j = k1 | (j1 | i1);
        k;
        JVM INSTR tableswitch 1 3: default 104
    //                   1 254
    //                   2 188
    //                   3 117;
           goto _L1 _L2 _L3 _L4
_L1:
        return;
_L4:
        h2.b(l, base64dialect[j >>> 18]);
        h2.b(l + 1, base64dialect[j >>> 12 & 0x3f]);
        h2.b(l + 2, base64dialect[j >>> 6 & 0x3f]);
        h2.b(l + 3, base64dialect[j & 0x3f]);
        continue; /* Loop/switch isn't completed */
_L3:
        h2.b(l, base64dialect[j >>> 18]);
        h2.b(l + 1, base64dialect[j >>> 12 & 0x3f]);
        h2.b(l + 2, base64dialect[j >>> 6 & 0x3f]);
        h2.b(l + 3, 61);
        continue; /* Loop/switch isn't completed */
_L2:
        h2.b(l, base64dialect[j >>> 18]);
        h2.b(l + 1, base64dialect[j >>> 12 & 0x3f]);
        h2.b(l + 2, 61);
        h2.b(l + 3, 61);
        if (true) goto _L1; else goto _L5
_L5:
    }

    private static byte[] a(Base64Dialect base64dialect) {
        if (base64dialect == null)
            throw new NullPointerException("dialect");
        else
            return base64dialect.d;
    }

    private static byte[] b(Base64Dialect base64dialect) {
        if (base64dialect == null)
            throw new NullPointerException("dialect");
        else
            return base64dialect.e;
    }
}
