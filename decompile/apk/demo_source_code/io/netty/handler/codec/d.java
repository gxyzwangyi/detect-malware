// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.codec;

import io.netty.util.Signal;

public class d {

    protected static final Signal a;
    protected static final Signal b;
    public static final d c;
    public static final d d;
    private final Throwable e;

    protected d(Throwable throwable) {
        if (throwable == null) {
            throw new NullPointerException("cause");
        } else {
            e = throwable;
            return;
        }
    }

    public static d a(Throwable throwable) {
        if (throwable == null)
            throw new NullPointerException("cause");
        else
            return new d(throwable);
    }

    public boolean a() {
        boolean flag;
        if (e != a)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean b() {
        boolean flag;
        if (e == b)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public boolean c() {
        boolean flag;
        if (e != b && e != a)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public Throwable d() {
        Throwable throwable;
        if (c())
            throwable = e;
        else
            throwable = null;
        return throwable;
    }

    public String toString() {
        String s;
        if (a()) {
            if (b()) {
                s = "success";
            } else {
                s = d().toString();
                s = (new StringBuilder(s.length() + 17)).append("failure(").append(s).append(')').toString();
            }
        } else {
            s = "unfinished";
        }
        return s;
    }

    static  {
        a = Signal.a((new StringBuilder()).append(io/netty/handler/codec/d.getName()).append(".UNFINISHED").toString());
        b = Signal.a((new StringBuilder()).append(io/netty/handler/codec/d.getName()).append(".SUCCESS").toString());
        c = new d(a);
        d = new d(b);
    }
}
