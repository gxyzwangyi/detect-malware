// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.codec;

import io.netty.buffer.ak;
import io.netty.buffer.h;
import io.netty.buffer.i;
import io.netty.buffer.n;
import io.netty.channel.d;
import io.netty.channel.e;
import io.netty.channel.k;
import io.netty.channel.m;
import java.util.List;

// Referenced classes of package io.netty.handler.codec:
//            c, b, DecoderException

public abstract class io.netty.handler.codec.a extends m {
    public static interface a {

        public abstract h a(i l, h h1, h h2);
    }


    public static final a a = new a() {

        public h a(i l, h h1, h h2) {
            h h3;
label0:
            {
                if (h1.c() <= h1.a() - h2.f()) {
                    h3 = h1;
                    if (h1.z() <= 1)
                        break label0;
                }
                h3 = io.netty.handler.codec.a.a(l, h1, h2.f());
            }
            h3.a(h2);
            h2.B();
            return h3;
        }

    }
;
    public static final a b = new a() {

        public h a(i l, h h1, h h2) {
            if (h1.z() > 1) {
                l = io.netty.handler.codec.a.a(l, h1, h2.f());
                l.a(h2);
                h2.B();
            } else {
                if (h1 instanceof n) {
                    l = (n)h1;
                } else {
                    l = l.e(0x7fffffff);
                    l.a(true, h1);
                }
                l.a(true, h2);
            }
            return l;
        }

    }
;
    h c;
    private a d;
    private boolean e;
    private boolean g;
    private boolean h;
    private int i;
    private int j;

    protected io.netty.handler.codec.a() {
        d = a;
        i = 16;
        io.netty.handler.codec.c.a(this);
    }

    static h a(i l, h h1, int i1) {
        l = l.a(h1.f() + i1);
        l.a(h1);
        h1.B();
        return l;
    }

    static void a(k k1, b b1, int l) {
        for (int i1 = 0; i1 < l; i1++)
            k1.b(b1.a(i1));

    }

    static void a(k k1, List list, int l) {
        if (list instanceof b) {
            a(k1, (b)list, l);
        } else {
            int i1 = 0;
            while (i1 < l)  {
                k1.b(list.get(i1));
                i1++;
            }
        }
    }

    private void a(k k1, boolean flag) {
        b b1 = io.netty.handler.codec.b.a();
        a(k1, ((List) (b1)));
        int l;
        if (c != null) {
            c.B();
            c = null;
        }
        l = b1.size();
        a(k1, b1, l);
        if (l <= 0)
            break MISSING_BLOCK_LABEL_56;
        k1.j();
        if (!flag)
            break MISSING_BLOCK_LABEL_67;
        k1.i();
        b1.c();
        return;
        k1;
        b1.c();
        throw k1;
        Object obj;
        obj;
        throw obj;
        obj;
        if (c != null) {
            c.B();
            c = null;
        }
        l = b1.size();
        a(k1, b1, l);
        if (l <= 0)
            break MISSING_BLOCK_LABEL_132;
        k1.j();
        if (!flag)
            break MISSING_BLOCK_LABEL_143;
        k1.i();
        b1.c();
        throw obj;
        Exception exception;
        exception;
        DecoderException decoderexception = JVM INSTR new #87  <Class DecoderException>;
        decoderexception.DecoderException(exception);
        throw decoderexception;
        k1;
        b1.c();
        throw k1;
    }

    protected void a(k k1, h h1, List list) {
_L6:
        if (!h1.e()) goto _L2; else goto _L1
_L1:
        int i1 = list.size();
        int l = i1;
        if (i1 <= 0) goto _L4; else goto _L3
_L3:
        a(k1, list, i1);
        list.clear();
        if (!k1.t()) goto _L5; else goto _L2
_L2:
        return;
_L5:
        l = 0;
_L4:
label0:
        {
            i1 = h1.f();
            b(k1, h1, list);
            if (!k1.t()) {
                if (l != list.size())
                    break label0;
                if (i1 != h1.f())
                    break; /* Loop/switch isn't completed */
            }
        }
          goto _L2
        boolean flag;
        try {
            if (i1 == h1.f()) {
                h1 = JVM INSTR new #87  <Class DecoderException>;
                k1 = JVM INSTR new #128 <Class StringBuilder>;
                k1.StringBuilder();
                h1.DecoderException(k1.append(io.netty.util.internal.m.a(getClass())).append(".decode() did not read anything but decoded a message.").toString());
                throw h1;
            }
        }
        // Misplaced declaration of an exception variable
        catch (k k1) {
            throw k1;
        }
        // Misplaced declaration of an exception variable
        catch (k k1) {
            throw new DecoderException(k1);
        }
        flag = b();
        if (!flag) goto _L6; else goto _L2
    }

    public void a(k k1, Object obj) {
        boolean flag1;
        boolean flag2;
        b b1;
        flag2 = true;
        flag1 = true;
        if (!(obj instanceof h))
            break MISSING_BLOCK_LABEL_334;
        b1 = io.netty.handler.codec.b.a();
        obj = (h)obj;
        boolean flag;
        if (c == null)
            flag = true;
        else
            flag = false;
        h = flag;
        if (!h) goto _L2; else goto _L1
_L1:
        c = ((h) (obj));
_L3:
        a(k1, c, ((List) (b1)));
        int l;
        if (c != null && !c.e()) {
            j = 0;
            c.B();
            c = null;
        } else {
            int i1 = j + 1;
            j = i1;
            if (i1 >= i) {
                j = 0;
                c();
            }
        }
        l = b1.size();
        if (!b1.b())
            flag = flag1;
        else
            flag = false;
        g = flag;
        a(k1, b1, l);
        b1.c();
_L4:
        return;
_L2:
        c = d.a(k1.c(), c, ((h) (obj)));
          goto _L3
        obj;
        throw obj;
        obj;
        Throwable throwable;
        if (c != null && !c.e()) {
            j = 0;
            c.B();
            c = null;
        } else {
            int j1 = j + 1;
            j = j1;
            if (j1 >= i) {
                j = 0;
                c();
            }
        }
        l = b1.size();
        if (!b1.b())
            flag = flag2;
        else
            flag = false;
        g = flag;
        a(k1, b1, l);
        b1.c();
        throw obj;
        throwable;
        obj = JVM INSTR new #87  <Class DecoderException>;
        ((DecoderException) (obj)).DecoderException(throwable);
        throw obj;
        k1.b(obj);
          goto _L4
    }

    void a(k k1, List list) {
        if (c != null) {
            a(k1, c, list);
            c(k1, c, list);
        } else {
            c(k1, ak.c, list);
        }
    }

    public void a(a a1) {
        if (a1 == null) {
            throw new NullPointerException("cumulator");
        } else {
            d = a1;
            return;
        }
    }

    protected abstract void b(k k1, h h1, List list);

    public void b(k k1, Object obj) {
        if (obj instanceof io.netty.channel.b.a)
            a(k1, false);
        super.b(k1, obj);
    }

    public boolean b() {
        return e;
    }

    protected final void c() {
        if (c != null && !h && c.z() == 1)
            c.l();
    }

    protected void c(k k1, h h1, List list) {
        if (h1.e())
            b(k1, h1, list);
    }

    public final void d(k k1) {
        h h1 = c;
        if (h1 != null) {
            c = null;
            int l = h1.f();
            if (l > 0) {
                h h2 = h1.q(l);
                h1.B();
                k1.b(h2);
            } else {
                h1.B();
            }
            j = 0;
            k1.j();
        }
        k(k1);
    }

    public void h(k k1) {
        a(k1, true);
    }

    public void i(k k1) {
        j = 0;
        c();
        if (g) {
            g = false;
            if (!k1.a().E().f())
                k1.m();
        }
        k1.j();
    }

    protected void k(k k1) {
    }

}
