// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.handler.a;

import io.netty.buffer.h;
import io.netty.buffer.j;
import io.netty.channel.d;
import io.netty.channel.e;
import io.netty.channel.f;
import io.netty.channel.k;
import io.netty.channel.q;
import io.netty.channel.w;
import io.netty.util.b;
import io.netty.util.concurrent.i;
import io.netty.util.internal.logging.c;
import java.util.concurrent.TimeUnit;

// Referenced classes of package io.netty.handler.a:
//            d, b, c

public abstract class io.netty.handler.a.a extends f {
    static final class a
        implements Runnable {

        final k a;

        public void run() {
            e e1 = a.a().E();
            if (!e1.f() && io.netty.handler.a.a.l(a)) {
                if (io.netty.handler.a.a.e().b())
                    io.netty.handler.a.a.e().a((new StringBuilder()).append("Not unsuspend: ").append(e1.f()).append(':').append(io.netty.handler.a.a.l(a)).toString());
                a.a(io.netty.handler.a.a.d).set(Boolean.valueOf(false));
            } else {
                if (io.netty.handler.a.a.e().b())
                    if (e1.f() && !io.netty.handler.a.a.l(a))
                        io.netty.handler.a.a.e().a((new StringBuilder()).append("Unsuspend: ").append(e1.f()).append(':').append(io.netty.handler.a.a.l(a)).toString());
                    else
                        io.netty.handler.a.a.e().a((new StringBuilder()).append("Normal unsuspend: ").append(e1.f()).append(':').append(io.netty.handler.a.a.l(a)).toString());
                a.a(io.netty.handler.a.a.d).set(Boolean.valueOf(false));
                e1.a(true);
                a.a().k();
            }
            if (io.netty.handler.a.a.e().b())
                io.netty.handler.a.a.e().a((new StringBuilder()).append("Unsupsend final status => ").append(e1.f()).append(':').append(io.netty.handler.a.a.l(a)).toString());
        }

        a(k k1) {
            a = k1;
        }
    }


    static final io.netty.util.c d = io.netty.util.c.a((new StringBuilder()).append(io/netty/handler/a/a.getName()).append(".READ_SUSPENDED").toString());
    static final io.netty.util.c e = io.netty.util.c.a((new StringBuilder()).append(io/netty/handler/a/a.getName()).append(".REOPEN_TASK").toString());
    private static final io.netty.util.internal.logging.b j = io.netty.util.internal.logging.c.a(io/netty/handler/a/a);
    protected io.netty.handler.a.d a;
    protected volatile long b;
    protected volatile long c;
    volatile long g;
    volatile long h;
    final int i;
    private volatile long k;
    private volatile long l;

    protected io.netty.handler.a.a() {
        this(0L, 0L, 1000L, 15000L);
    }

    protected io.netty.handler.a.a(long l1, long l2, long l3, long l4) {
        b = 15000L;
        c = 1000L;
        g = 4000L;
        h = 0x400000L;
        if (l4 <= 0L) {
            throw new IllegalArgumentException("maxTime must be positive");
        } else {
            i = b();
            k = l1;
            l = l2;
            c = l3;
            b = l4;
            return;
        }
    }

    static io.netty.util.internal.logging.b e() {
        return j;
    }

    protected static boolean l(k k1) {
        k1 = (Boolean)k1.a(d).get();
        boolean flag;
        if (k1 == null || Boolean.FALSE.equals(k1))
            flag = true;
        else
            flag = false;
        return flag;
    }

    long a(k k1, long l1, long l2) {
        return l1;
    }

    protected long a(Object obj) {
        long l1;
        if (obj instanceof h)
            l1 = ((h)obj).f();
        else
        if (obj instanceof j)
            l1 = ((j)obj).a().f();
        else
            l1 = -1L;
        return l1;
    }

    public void a(long l1, long l2) {
        k = l1;
        l = l2;
        if (a != null)
            a.a(io.netty.handler.a.d.a());
    }

    public void a(k k1) {
        if (l(k1))
            k1.m();
    }

    void a(k k1, long l1) {
    }

    public void a(k k1, Object obj) {
        long l2 = a(obj);
        long l1 = io.netty.handler.a.d.a();
        if (l2 > 0L) {
            l2 = a(k1, a.a(l2, l, b, l1), l1);
            if (l2 >= 10L) {
                e e1 = k1.a().E();
                if (j.b())
                    j.a((new StringBuilder()).append("Read suspend: ").append(l2).append(':').append(e1.f()).append(':').append(l(k1)).toString());
                if (e1.f() && l(k1)) {
                    e1.a(false);
                    k1.a(d).set(Boolean.valueOf(true));
                    b b1 = k1.a(e);
                    Runnable runnable = (Runnable)b1.get();
                    Object obj1 = runnable;
                    if (runnable == null) {
                        obj1 = new a(k1);
                        b1.set(obj1);
                    }
                    k1.d().a(((Runnable) (obj1)), l2, TimeUnit.MILLISECONDS);
                    if (j.b())
                        j.a((new StringBuilder()).append("Suspend final status => ").append(e1.f()).append(':').append(l(k1)).append(" will reopened at: ").append(l2).toString());
                }
            }
        }
        a(k1, l1);
        k1.b(obj);
    }

    abstract void a(k k1, Object obj, long l1, long l2, long l3, w w);

    public void a(k k1, Object obj, w w) {
        long l1;
        long l2;
        l1 = a(obj);
        l2 = io.netty.handler.a.d.a();
        if (l1 <= 0L) goto _L2; else goto _L1
_L1:
        long l3 = a.b(l1, k, b, l2);
        if (l3 < 10L) goto _L2; else goto _L3
_L3:
        if (j.b())
            j.a((new StringBuilder()).append("Write suspend: ").append(l3).append(':').append(k1.a().E().f()).append(':').append(l(k1)).toString());
        a(k1, obj, l1, l3, l2, w);
_L5:
        return;
_L2:
        a(k1, obj, l1, 0L, l2, w);
        if (true) goto _L5; else goto _L4
_L4:
    }

    void a(k k1, boolean flag) {
        k1 = k1.a().o().a();
        if (k1 != null)
            k1.a(i, flag);
    }

    void a(io.netty.handler.a.d d1) {
        a = d1;
    }

    int b() {
        byte byte0;
        if (this instanceof io.netty.handler.a.b)
            byte0 = 3;
        else
        if (this instanceof io.netty.handler.a.c)
            byte0 = 2;
        else
            byte0 = 1;
        return byte0;
    }

    void b(k k1, long l1, long l2) {
        if (l2 > h || l1 > g)
            a(k1, false);
    }

    protected void b(io.netty.handler.a.d d1) {
    }

    public long c() {
        return k;
    }

    public long d() {
        return l;
    }

    public void e(k k1) {
        a(k1, true);
        super.e(k1);
    }

    void k(k k1) {
        k1.a(d).set(Boolean.valueOf(false));
        k1.a().E().a(true);
    }

    void m(k k1) {
        a(k1, true);
    }

    public String toString() {
        StringBuilder stringbuilder = (new StringBuilder(290)).append("TrafficShaping with Write Limit: ").append(k).append(" Read Limit: ").append(l).append(" CheckInterval: ").append(c).append(" maxDelay: ").append(g).append(" maxSize: ").append(h).append(" and Counter: ");
        if (a != null)
            stringbuilder.append(a);
        else
            stringbuilder.append("none");
        return stringbuilder.toString();
    }

}
