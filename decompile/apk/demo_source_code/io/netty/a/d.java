// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.a;

import io.netty.channel.ag;
import io.netty.channel.ah;
import io.netty.channel.e;
import io.netty.channel.g;
import io.netty.channel.h;
import io.netty.channel.i;
import io.netty.channel.k;
import io.netty.channel.p;
import io.netty.channel.t;
import io.netty.util.b;
import io.netty.util.concurrent.n;
import io.netty.util.internal.logging.c;
import io.netty.util.internal.m;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.TimeUnit;

// Referenced classes of package io.netty.a:
//            a

public class d extends io.netty.a.a {
    private static class a extends io.netty.channel.m {

        private final ah a;
        private final i b;
        private final java.util.Map.Entry c[];
        private final java.util.Map.Entry d[];

        static void a(io.netty.channel.d d1, Throwable throwable) {
            b(d1, throwable);
        }

        private static void b(io.netty.channel.d d1, Throwable throwable) {
            d1.o().d();
            d.l().b((new StringBuilder()).append("Failed to register an accepted channel: ").append(d1).toString(), throwable);
        }

        public void a(k k1, Object obj) {
            boolean flag = false;
            k1 = (io.netty.channel.d)obj;
            k1.c().a(new i[] {
                b
            });
            obj = c;
            int l1 = obj.length;
            int i1 = 0;
            while (i1 < l1)  {
                java.util.Map.Entry entry = obj[i1];
                try {
                    if (!k1.E().a((p)entry.getKey(), entry.getValue())) {
                        io.netty.util.internal.logging.b b1 = d.l();
                        StringBuilder stringbuilder = JVM INSTR new #54  <Class StringBuilder>;
                        stringbuilder.StringBuilder();
                        b1.c(stringbuilder.append("Unknown channel option: ").append(entry).toString());
                    }
                }
                catch (Throwable throwable) {
                    d.l().b((new StringBuilder()).append("Failed to set a channel option: ").append(k1).toString(), throwable);
                }
                i1++;
            }
            java.util.Map.Entry aentry[] = d;
            l1 = aentry.length;
            for (int j1 = ((flag) ? 1 : 0); j1 < l1; j1++) {
                obj = aentry[j1];
                k1.a((io.netty.util.c)((java.util.Map.Entry) (obj)).getKey()).set(((java.util.Map.Entry) (obj)).getValue());
            }

            obj = a.a(k1);
            h h = JVM INSTR new #9   <Class d$a$1>;
            h._cls1(this, k1);
            ((g) (obj)).a(h);
_L1:
            return;
            obj;
            b(k1, ((Throwable) (obj)));
              goto _L1
        }

        public void a(k k1, Throwable throwable) {
            e e1 = k1.a().E();
            if (e1.f()) {
                e1.a(false);
                k1.a().e().a(new Runnable(this, e1) {

                    final e a;
                    final a b;

                    public void run() {
                        a.a(true);
                    }

             {
                b = a1;
                a = e1;
                super();
            }
                }
, 1L, TimeUnit.SECONDS);
            }
            k1.a(throwable);
        }

        a(ah ah1, i i1, java.util.Map.Entry aentry[], java.util.Map.Entry aentry1[]) {
            a = ah1;
            b = i1;
            c = aentry;
            d = aentry1;
        }
    }


    private static final io.netty.util.internal.logging.b b = io.netty.util.internal.logging.c.a(io/netty/a/d);
    private final Map c;
    private final Map d;
    private volatile ah e;
    private volatile i f;

    public d() {
        c = new LinkedHashMap();
        d = new LinkedHashMap();
    }

    private d(d d1) {
        super(d1);
        c = new LinkedHashMap();
        d = new LinkedHashMap();
        e = d1.e;
        f = d1.f;
        synchronized (d1.c) {
            c.putAll(d1.c);
        }
        synchronized (d1.d) {
            d.putAll(d1.d);
        }
        return;
        d1;
        map;
        JVM INSTR monitorexit ;
        throw d1;
        d1;
        map;
        JVM INSTR monitorexit ;
        throw d1;
    }

    private static java.util.Map.Entry[] a(int i1) {
        return new java.util.Map.Entry[i1];
    }

    private static java.util.Map.Entry[] b(int i1) {
        return new java.util.Map.Entry[i1];
    }

    static io.netty.util.internal.logging.b l() {
        return b;
    }

    public io.netty.a.a a() {
        return j();
    }

    public io.netty.a.a a(ah ah) {
        return b(ah);
    }

    public d a(ah ah, ah ah1) {
        super.a(ah);
        if (ah1 == null)
            throw new NullPointerException("childGroup");
        if (e != null) {
            throw new IllegalStateException("childGroup set already");
        } else {
            e = ah1;
            return this;
        }
    }

    void a(io.netty.channel.d d1) {
        synchronized (h()) {
            d1.E().a(map);
        }
        map = i();
        map;
        JVM INSTR monitorenter ;
        java.util.Map.Entry entry;
        for (Iterator iterator = map.entrySet().iterator(); iterator.hasNext(); d1.a((io.netty.util.c)entry.getKey()).set(entry.getValue()))
            entry = (java.util.Map.Entry)iterator.next();

        break MISSING_BLOCK_LABEL_102;
        d1;
        map;
        JVM INSTR monitorexit ;
        throw d1;
        d1;
        map;
        JVM INSTR monitorexit ;
        throw d1;
        map;
        JVM INSTR monitorexit ;
        t t1 = d1.c();
        ah ah = e;
        d1 = f;
        java.util.Map.Entry aentry[];
        synchronized (c) {
            aentry = (java.util.Map.Entry[])c.entrySet().toArray(a(c.size()));
        }
        java.util.Map.Entry aentry1[];
        synchronized (d) {
            aentry1 = (java.util.Map.Entry[])d.entrySet().toArray(b(d.size()));
        }
        t1.a(new i[] {
            new io.netty.channel.n(ah, d1, aentry, aentry1) {

                final ah a;
                final i b;
                final java.util.Map.Entry c[];
                final java.util.Map.Entry d[];
                final d e;

                public void a(io.netty.channel.d d2) {
                    t t2 = d2.c();
                    i i1 = e.f();
                    if (i1 != null)
                        t2.a(new i[] {
                            i1
                        });
                    d2.e().execute(new Runnable(this, t2) {

                        final t a;
                        final _cls1 b;

                        public void run() {
                            a.a(new i[] {
                                new a(b.a, b.b, b.c, b.d)
                            });
                        }

             {
                b = _pcls1;
                a = t1;
                super();
            }
                    }
);
                }

             {
                e = d.this;
                a = ah;
                b = i1;
                c = aentry;
                d = aentry1;
                super();
            }
            }

        });
        return;
        d1;
        map1;
        JVM INSTR monitorexit ;
        throw d1;
        d1;
        map1;
        JVM INSTR monitorexit ;
        throw d1;
    }

    public io.netty.a.a b() {
        return k();
    }

    public d b(ah ah) {
        return a(ah, ah);
    }

    public d b(i i1) {
        if (i1 == null) {
            throw new NullPointerException("childHandler");
        } else {
            f = i1;
            return this;
        }
    }

    public Object clone() {
        return k();
    }

    public d j() {
        super.a();
        if (f == null)
            throw new IllegalStateException("childHandler not set");
        if (e == null) {
            b.c("childGroup is not set. Using parentGroup instead.");
            e = g();
        }
        return this;
    }

    public d k() {
        return new d(this);
    }

    public String toString() {
        obj = new StringBuilder(super.toString());
        ((StringBuilder) (obj)).setLength(((StringBuilder) (obj)).length() - 1);
        ((StringBuilder) (obj)).append(", ");
        if (e != null) {
            ((StringBuilder) (obj)).append("childGroup: ");
            ((StringBuilder) (obj)).append(m.a(e));
            ((StringBuilder) (obj)).append(", ");
        }
        synchronized (c) {
            if (!c.isEmpty()) {
                ((StringBuilder) (obj)).append("childOptions: ");
                ((StringBuilder) (obj)).append(c);
                ((StringBuilder) (obj)).append(", ");
            }
        }
        synchronized (d) {
            if (!d.isEmpty()) {
                ((StringBuilder) (obj)).append("childAttrs: ");
                ((StringBuilder) (obj)).append(d);
                ((StringBuilder) (obj)).append(", ");
            }
        }
        if (f != null) {
            ((StringBuilder) (obj)).append("childHandler: ");
            ((StringBuilder) (obj)).append(f);
            ((StringBuilder) (obj)).append(", ");
        }
        if (((StringBuilder) (obj)).charAt(((StringBuilder) (obj)).length() - 1) == '(') {
            ((StringBuilder) (obj)).append(')');
        } else {
            ((StringBuilder) (obj)).setCharAt(((StringBuilder) (obj)).length() - 2, ')');
            ((StringBuilder) (obj)).setLength(((StringBuilder) (obj)).length() - 1);
        }
        return ((StringBuilder) (obj)).toString();
        obj;
        map;
        JVM INSTR monitorexit ;
        throw obj;
        obj;
        map;
        JVM INSTR monitorexit ;
        throw obj;
    }


    // Unreferenced inner class io/netty/a/d$a$1

/* anonymous class */
    class a._cls1
        implements h {

        final io.netty.channel.d a;
        final a b;

        public void a(g g1) {
            if (!g1.g_())
                a.a(a, g1.j());
        }

        public volatile void a(n n) {
            a((g)n);
        }

             {
                b = a1;
                a = d1;
                super();
            }
    }

}
