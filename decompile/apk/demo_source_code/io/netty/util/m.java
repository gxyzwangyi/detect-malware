// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.util;

import io.netty.util.internal.k;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.atomic.AtomicInteger;

public class m
    implements Comparable {

    private static final AtomicInteger a = new AtomicInteger();
    private final int b;
    private final String c;

    protected m(String s) {
        c = (String)k.a(s, "name");
        b = a.incrementAndGet();
    }

    public transient m(ConcurrentMap concurrentmap, String s, Object aobj[]) {
        k.a(concurrentmap, "map");
        if (aobj != null && aobj.length > 0)
            a(aobj);
        if (concurrentmap.putIfAbsent(s, Boolean.TRUE) != null) {
            throw new IllegalArgumentException(String.format("'%s' is already in use", new Object[] {
                s
            }));
        } else {
            c = (String)k.a(s, "name");
            b = a.incrementAndGet();
            return;
        }
    }

    public int a(m m1) {
        if (this != m1) goto _L2; else goto _L1
_L1:
        int i = 0;
_L4:
        return i;
_L2:
        int j = c.compareTo(m1.c);
        i = j;
        if (j == 0)
            i = Integer.valueOf(b).compareTo(Integer.valueOf(m1.b));
        if (true) goto _L4; else goto _L3
_L3:
    }

    public final String a() {
        return c;
    }

    protected transient void a(Object aobj[]) {
    }

    public final int b() {
        return b;
    }

    public int compareTo(Object obj) {
        return a((m)obj);
    }

    public final boolean equals(Object obj) {
        return super.equals(obj);
    }

    public final int hashCode() {
        return super.hashCode();
    }

    public String toString() {
        return a();
    }

}
