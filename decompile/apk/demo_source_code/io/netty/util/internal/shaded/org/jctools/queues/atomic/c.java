// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.util.internal.shaded.org.jctools.queues.atomic;

import java.util.Iterator;
import java.util.concurrent.atomic.AtomicLong;

// Referenced classes of package io.netty.util.internal.shaded.org.jctools.queues.atomic:
//            a

public final class c extends a {

    private final AtomicLong c = new AtomicLong();
    private final AtomicLong d = new AtomicLong();
    private volatile long e;

    public c(int i) {
        super(i);
    }

    private long b() {
        return c.get();
    }

    private long c() {
        return d.get();
    }

    protected final long a() {
        return e;
    }

    protected final boolean a(long l, long l1) {
        return d.compareAndSet(l, l1);
    }

    protected final void b(long l) {
        e = l;
    }

    protected void c(long l) {
        c.lazySet(l);
    }

    public volatile void clear() {
        super.clear();
    }

    public boolean isEmpty() {
        boolean flag;
        if (b() == c())
            flag = true;
        else
            flag = false;
        return flag;
    }

    public volatile Iterator iterator() {
        return super.iterator();
    }

    public boolean offer(Object obj) {
        int i;
        long l;
        long l2;
        if (obj == null)
            throw new NullPointerException();
        i = b;
        l2 = i + 1;
        l = a();
_L8:
        long l1;
        long l3;
        long l4;
        l4 = c();
        l3 = l4 - l2;
        l1 = l;
        if (l > l3) goto _L2; else goto _L1
_L1:
        l1 = b();
        if (l1 > l3) goto _L4; else goto _L3
_L3:
        boolean flag = false;
_L6:
        return flag;
_L4:
        b(l1);
_L2:
        l = l1;
        if (!a(l4, 1L + l4))
            continue; /* Loop/switch isn't completed */
        a(a(l4, i), obj);
        flag = true;
        if (true) goto _L6; else goto _L5
_L5:
        if (true) goto _L8; else goto _L7
_L7:
    }

    public Object peek() {
        java.util.concurrent.atomic.AtomicReferenceArray atomicreferencearray = a;
        long l = b();
        int i = a(l);
        Object obj1 = a(atomicreferencearray, i);
        Object obj = obj1;
        if (obj1 == null)
            if (l != c())
                do
                    obj = a(atomicreferencearray, i);
                while (obj == null);
            else
                obj = null;
        return obj;
    }

    public Object poll() {
        int i;
        long l;
        Object obj;
        Object obj1;
        java.util.concurrent.atomic.AtomicReferenceArray atomicreferencearray;
        l = b();
        i = a(l);
        atomicreferencearray = a;
        obj1 = a(atomicreferencearray, i);
        obj = obj1;
        if (obj1 != null) goto _L2; else goto _L1
_L1:
        if (l == c()) goto _L4; else goto _L3
_L3:
        do
            obj = a(atomicreferencearray, i);
        while (obj == null);
_L2:
        a(atomicreferencearray, i, null);
        c(l + 1L);
_L6:
        return obj;
_L4:
        obj = null;
        if (true) goto _L6; else goto _L5
_L5:
    }

    public int size() {
        long l = b();
        do {
            long l2 = c();
            long l1 = b();
            if (l == l1)
                return (int)(l2 - l1);
            l = l1;
        } while (true);
    }
}
