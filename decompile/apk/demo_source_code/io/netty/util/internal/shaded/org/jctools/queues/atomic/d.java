// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.util.internal.shaded.org.jctools.queues.atomic;


// Referenced classes of package io.netty.util.internal.shaded.org.jctools.queues.atomic:
//            b, LinkedQueueAtomicNode

public final class d extends b {

    public d() {
        LinkedQueueAtomicNode linkedqueueatomicnode = new LinkedQueueAtomicNode();
        b(linkedqueueatomicnode);
        a(linkedqueueatomicnode);
    }

    public final boolean offer(Object obj) {
        if (obj == null) {
            throw new NullPointerException();
        } else {
            obj = new LinkedQueueAtomicNode(obj);
            a(((LinkedQueueAtomicNode) (obj))).a(((LinkedQueueAtomicNode) (obj)));
            return true;
        }
    }

    public final Object peek() {
        Object obj = c();
        LinkedQueueAtomicNode linkedqueueatomicnode = ((LinkedQueueAtomicNode) (obj)).c();
        if (linkedqueueatomicnode != null)
            obj = linkedqueueatomicnode.b();
        else
        if (obj != a()) {
            LinkedQueueAtomicNode linkedqueueatomicnode1;
            do
                linkedqueueatomicnode1 = ((LinkedQueueAtomicNode) (obj)).c();
            while (linkedqueueatomicnode1 == null);
            obj = linkedqueueatomicnode1.b();
        } else {
            obj = null;
        }
        return obj;
    }

    public final Object poll() {
        Object obj = c();
        LinkedQueueAtomicNode linkedqueueatomicnode = ((LinkedQueueAtomicNode) (obj)).c();
        if (linkedqueueatomicnode != null)
            obj = a(((LinkedQueueAtomicNode) (obj)), linkedqueueatomicnode);
        else
        if (obj != a()) {
            LinkedQueueAtomicNode linkedqueueatomicnode1;
            do
                linkedqueueatomicnode1 = ((LinkedQueueAtomicNode) (obj)).c();
            while (linkedqueueatomicnode1 == null);
            obj = a(((LinkedQueueAtomicNode) (obj)), linkedqueueatomicnode1);
        } else {
            obj = null;
        }
        return obj;
    }
}
