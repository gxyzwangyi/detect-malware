// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.util.internal.shaded.org.jctools.queues;

import io.netty.util.internal.shaded.org.jctools.a.*;
import java.util.Iterator;
import sun.misc.Unsafe;

// Referenced classes of package io.netty.util.internal.shaded.org.jctools.queues:
//            m, q, l, a

public class k extends m {

    private static final long j;
    private static final long k;
    private static final long l;
    private static final Object m = new Object();

    public k(int i, int i1, boolean flag) {
        if (i < 2)
            throw new IllegalArgumentException("Initial capacity must be 2 or more");
        if (i1 < 4)
            throw new IllegalArgumentException("Max capacity must be 4 or more");
        if (io.netty.util.internal.shaded.org.jctools.a.b.a(i) >= io.netty.util.internal.shaded.org.jctools.a.b.a(i1)) {
            throw new IllegalArgumentException("Initial capacity cannot exceed maximum capacity(both rounded up to a power of 2)");
        } else {
            i = io.netty.util.internal.shaded.org.jctools.a.b.a(i);
            long l1 = i - 1 << 1;
            Object aobj[] = io.netty.util.internal.shaded.org.jctools.queues.a.a(i + 1);
            c = aobj;
            b = l1;
            g = aobj;
            f = l1;
            a = (long)io.netty.util.internal.shaded.org.jctools.a.b.a(i1) << 1;
            e = flag;
            d(l1);
            return;
        }
    }

    private int a(long l1, Object aobj[], long l2, long l3) {
        long l5 = b();
        long l4 = a;
        l1 = a(l1, l4);
        int i = 0;
        if (l5 + l1 > l2) {
            if (!d(l3, l5 + l1))
                i = 1;
        } else
        if (l5 == l2 - l4)
            i = 2;
        else
        if (c(l2, 1L + l2))
            i = 3;
        else
            i = 1;
        return i;
    }

    private long a() {
        return c.b.getLongVolatile(this, j);
    }

    private long a(long l1) {
        return b(2L + l1, 0xffffffffL);
    }

    private void a(long l1, Object aobj[], long l2, long l3, 
            long l4, Object obj) {
        int i = e(aobj, l4);
        Object aobj1[] = io.netty.util.internal.shaded.org.jctools.queues.a.a(i);
        c = aobj1;
        b = i - 2 << 1;
        long l5 = b(l2, l1);
        io.netty.util.internal.shaded.org.jctools.a.d.b(aobj1, b(l2, b), obj);
        io.netty.util.internal.shaded.org.jctools.a.d.b(aobj, a(l1), ((Object) (aobj1)));
        l3 = l4 - (l2 - l3);
        if (l3 <= 0L) {
            throw new IllegalStateException();
        } else {
            d(Math.min(l1, l3) + l2);
            io.netty.util.internal.shaded.org.jctools.a.d.b(aobj, l5, m);
            b(2L + l2);
            return;
        }
    }

    private Object[] a(Object aobj[], long l1) {
        l1 = a(l1);
        Object aobj1[] = (Object[])(Object[])io.netty.util.internal.shaded.org.jctools.a.d.a(aobj, l1);
        io.netty.util.internal.shaded.org.jctools.a.d.b(aobj, l1, null);
        return aobj1;
    }

    private long b() {
        return c.b.getLongVolatile(this, k);
    }

    private static long b(long l1, long l2) {
        return d.a + ((l1 & l2) << d.b - 1);
    }

    private Object b(Object aobj[], long l1) {
        long l2 = d(aobj, l1);
        Object obj = io.netty.util.internal.shaded.org.jctools.a.d.a(aobj, l2);
        if (obj == null) {
            throw new IllegalStateException("new buffer must have at least one element");
        } else {
            io.netty.util.internal.shaded.org.jctools.a.d.b(aobj, l2, null);
            c(2L + l1);
            return obj;
        }
    }

    private void b(long l1) {
        c.b.putOrderedLong(this, j, l1);
    }

    private long c() {
        return d;
    }

    private Object c(Object aobj[], long l1) {
        aobj = ((Object []) (io.netty.util.internal.shaded.org.jctools.a.d.a(aobj, d(aobj, l1))));
        if (aobj == null)
            throw new IllegalStateException("new buffer must have at least one element");
        else
            return ((Object) (aobj));
    }

    private void c(long l1) {
        c.b.putOrderedLong(this, k, l1);
    }

    private boolean c(long l1, long l2) {
        return c.b.compareAndSwapLong(this, j, l1, l2);
    }

    private long d(Object aobj[], long l1) {
        g = aobj;
        f = aobj.length - 2 << 1;
        return b(l1, f);
    }

    private void d(long l1) {
        c.b.putOrderedLong(this, l, l1);
    }

    private boolean d(long l1, long l2) {
        return c.b.compareAndSwapLong(this, l, l1, l2);
    }

    private int e(Object aobj[], long l1) {
        int i = aobj.length;
        if (e) {
            i = aobj.length;
        } else {
            if ((long)(aobj.length - 1) == l1)
                throw new IllegalStateException();
            i = aobj.length * 2 - 1;
        }
        return i;
    }

    protected long a(long l1, long l2) {
        if (!e && 2L + l1 == l2)
            l1 = l2;
        return l1;
    }

    public final Iterator iterator() {
        throw new UnsupportedOperationException();
    }

    public boolean offer(Object obj) {
        if (obj == null)
            throw new NullPointerException();
_L3:
        long l1;
        long l2;
        long l3;
        Object aobj[];
        do {
            l2 = c();
            l3 = a();
        } while ((l3 & 1L) == 1L);
        l1 = b;
        aobj = c;
        if (l2 > l3) goto _L2; else goto _L1
_L1:
        a(l1, aobj, l3, l2);
        JVM INSTR tableswitch 0 3: default 92
    //                   0 92
    //                   1 12
    //                   2 125
    //                   3 131;
           goto _L2 _L2 _L3 _L4 _L5
_L2:
        if (!c(l3, 2L + l3)) goto _L3; else goto _L6
_L6:
        boolean flag;
        io.netty.util.internal.shaded.org.jctools.a.d.b(aobj, b(l3, l1), obj);
        flag = true;
_L8:
        return flag;
_L4:
        flag = false;
        continue; /* Loop/switch isn't completed */
_L5:
        a(l1, aobj, l3, h, a, obj);
        flag = true;
        if (true) goto _L8; else goto _L7
_L7:
    }

    public Object peek() {
        Object aobj[] = g;
        long l1 = h;
        long l2 = f;
        long l3 = b(l1, l2);
        Object obj1 = io.netty.util.internal.shaded.org.jctools.a.d.a(aobj, l3);
        Object obj = obj1;
        if (obj1 == null) {
            obj = obj1;
            if (l1 != a())
                do
                    obj = io.netty.util.internal.shaded.org.jctools.a.d.a(aobj, l3);
                while (obj == null);
        }
        obj1 = obj;
        if (obj == m)
            obj1 = c(a(aobj, l2), l1);
        return obj1;
    }

    public Object poll() {
label0:
        {
            {
                Object aobj[] = g;
                long l1 = h;
                long l2 = f;
                long l3 = b(l1, l2);
                Object obj1 = io.netty.util.internal.shaded.org.jctools.a.d.a(aobj, l3);
                Object obj = obj1;
                if (obj1 == null) {
                    if (l1 == a())
                        break label0;
                    do
                        obj = io.netty.util.internal.shaded.org.jctools.a.d.a(aobj, l3);
                    while (obj == null);
                }
                if (obj == m) {
                    obj = b(a(aobj, l2), l1);
                } else {
                    io.netty.util.internal.shaded.org.jctools.a.d.b(aobj, l3, null);
                    c(2L + l1);
                }
            }
            return obj;
        }
        obj = null;
        if (false)
            ;
        else
            break MISSING_BLOCK_LABEL_86;
    }

    public final int size() {
        long l1 = b();
        do {
            long l3 = a();
            long l2 = b();
            if (l1 == l2)
                return (int)(l3 - l2) >> 1;
            l1 = l2;
        } while (true);
    }

    static  {
        try {
            java.lang.reflect.Field field = io/netty/util/internal/shaded/org/jctools/queues/q.getDeclaredField("i");
            j = c.b.objectFieldOffset(field);
        }
        catch (NoSuchFieldException nosuchfieldexception) {
            throw new RuntimeException(nosuchfieldexception);
        }
        try {
            java.lang.reflect.Field field1 = io/netty/util/internal/shaded/org/jctools/queues/m.getDeclaredField("h");
            k = c.b.objectFieldOffset(field1);
        }
        catch (NoSuchFieldException nosuchfieldexception1) {
            throw new RuntimeException(nosuchfieldexception1);
        }
        try {
            java.lang.reflect.Field field2 = io/netty/util/internal/shaded/org/jctools/queues/l.getDeclaredField("d");
            l = c.b.objectFieldOffset(field2);
        }
        catch (NoSuchFieldException nosuchfieldexception2) {
            throw new RuntimeException(nosuchfieldexception2);
        }
    }
}
