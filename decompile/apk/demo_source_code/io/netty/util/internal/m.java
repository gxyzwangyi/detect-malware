// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.util.internal;

import java.util.Formatter;

// Referenced classes of package io.netty.util.internal:
//            k

public final class m {

    public static final String a;
    static final boolean b;
    private static final String c[];
    private static final String d[];

    private m() {
    }

    public static String a(int i) {
        return c[i & 0xff];
    }

    public static String a(Class class1) {
        String s = ((Class)k.a(class1, "clazz")).getName();
        int i = s.lastIndexOf('.');
        class1 = s;
        if (i > -1)
            class1 = s.substring(i + 1);
        return class1;
    }

    public static String a(Object obj) {
        if (obj == null)
            obj = "null_object";
        else
            obj = a(obj.getClass());
        return ((String) (obj));
    }

    public static boolean a(String s) {
        boolean flag;
        if (s == null || s.isEmpty())
            flag = true;
        else
            flag = false;
        return flag;
    }

    static  {
        int i;
        Object obj;
        Formatter formatter;
        int j;
        boolean flag;
        if (!io/netty/util/internal/m.desiredAssertionStatus())
            flag = true;
        else
            flag = false;
        b = flag;
        c = new String[256];
        d = new String[256];
        formatter = new Formatter();
        obj = formatter.format("%n", new Object[0]).toString();
        formatter.close();
_L2:
        a = ((String) (obj));
        j = 0;
        do {
            i = j;
            if (j >= 10)
                break;
            obj = new StringBuilder(2);
            ((StringBuilder) (obj)).append('0');
            ((StringBuilder) (obj)).append(j);
            c[j] = ((StringBuilder) (obj)).toString();
            d[j] = String.valueOf(j);
            j++;
        } while (true);
        break; /* Loop/switch isn't completed */
        Object obj1;
        obj1;
        obj1 = "\n";
        formatter.close();
        if (true) goto _L2; else goto _L1
        obj1;
        formatter.close();
        throw obj1;
_L1:
        int l;
        do {
            l = i;
            if (i >= 16)
                break;
            StringBuilder stringbuilder = new StringBuilder(2);
            char c1 = (char)((i + 97) - 10);
            stringbuilder.append('0');
            stringbuilder.append(c1);
            c[i] = stringbuilder.toString();
            d[i] = String.valueOf(c1);
            i++;
        } while (true);
        for (; l < c.length; l++) {
            Object obj2 = new StringBuilder(2);
            ((StringBuilder) (obj2)).append(Integer.toHexString(l));
            obj2 = ((StringBuilder) (obj2)).toString();
            c[l] = ((String) (obj2));
            d[l] = ((String) (obj2));
        }

    }
}
