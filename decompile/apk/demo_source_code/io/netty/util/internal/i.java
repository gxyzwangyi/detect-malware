// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.util.internal;

import io.netty.util.internal.logging.b;
import io.netty.util.internal.logging.c;
import java.io.*;
import java.net.URL;
import java.util.Arrays;
import java.util.Locale;

// Referenced classes of package io.netty.util.internal:
//            n

public final class i {

    private static final b a;
    private static final String b;
    private static final File c;

    private i() {
    }

    private static File a() {
        Object obj = a(io.netty.util.internal.n.b("io.netty.tmpdir"));
        if (obj == null) goto _L2; else goto _L1
_L1:
        b b1 = a;
        StringBuilder stringbuilder1 = JVM INSTR new #72  <Class StringBuilder>;
        stringbuilder1.StringBuilder();
        b1.a(stringbuilder1.append("-Dio.netty.tmpdir: ").append(obj).toString());
_L5:
        return ((File) (obj));
_L2:
        obj = a(io.netty.util.internal.n.b("java.io.tmpdir"));
        if (obj == null) goto _L4; else goto _L3
_L3:
        b b2 = a;
        StringBuilder stringbuilder = JVM INSTR new #72  <Class StringBuilder>;
        stringbuilder.StringBuilder();
        b2.a(stringbuilder.append("-Dio.netty.tmpdir: ").append(obj).append(" (java.io.tmpdir)").toString());
          goto _L5
        obj;
_L7:
        Object obj1;
        Object obj2;
        if (b())
            obj = new File("C:\\Windows\\Temp");
        else
            obj = new File("/tmp");
        a.c((new StringBuilder()).append("Failed to get the temporary directory; falling back to: ").append(obj).toString());
          goto _L5
_L4:
        if (!b())
            break MISSING_BLOCK_LABEL_349;
        obj = a(System.getenv("TEMP"));
        if (obj == null)
            break MISSING_BLOCK_LABEL_203;
        obj1 = a;
        obj2 = JVM INSTR new #72  <Class StringBuilder>;
        ((StringBuilder) (obj2)).StringBuilder();
        ((b) (obj1)).a(((StringBuilder) (obj2)).append("-Dio.netty.tmpdir: ").append(obj).append(" (%TEMP%)").toString());
          goto _L5
        obj1 = System.getenv("USERPROFILE");
        if (obj1 == null) goto _L7; else goto _L6
_L6:
        obj = JVM INSTR new #72  <Class StringBuilder>;
        ((StringBuilder) (obj)).StringBuilder();
        obj = a(((StringBuilder) (obj)).append(((String) (obj1))).append("\\AppData\\Local\\Temp").toString());
        if (obj == null)
            break MISSING_BLOCK_LABEL_281;
        obj2 = a;
        obj1 = JVM INSTR new #72  <Class StringBuilder>;
        ((StringBuilder) (obj1)).StringBuilder();
        ((b) (obj2)).a(((StringBuilder) (obj1)).append("-Dio.netty.tmpdir: ").append(obj).append(" (%USERPROFILE%\\AppData\\Local\\Temp)").toString());
          goto _L5
        obj = JVM INSTR new #72  <Class StringBuilder>;
        ((StringBuilder) (obj)).StringBuilder();
        obj = a(((StringBuilder) (obj)).append(((String) (obj1))).append("\\Local Settings\\Temp").toString());
        if (obj == null) goto _L7; else goto _L8
_L8:
        obj1 = a;
        obj2 = JVM INSTR new #72  <Class StringBuilder>;
        ((StringBuilder) (obj2)).StringBuilder();
        ((b) (obj1)).a(((StringBuilder) (obj2)).append("-Dio.netty.tmpdir: ").append(obj).append(" (%USERPROFILE%\\Local Settings\\Temp)").toString());
          goto _L5
        obj = a(System.getenv("TMPDIR"));
        if (obj == null) goto _L7; else goto _L9
_L9:
        obj2 = a;
        obj1 = JVM INSTR new #72  <Class StringBuilder>;
        ((StringBuilder) (obj1)).StringBuilder();
        ((b) (obj2)).a(((StringBuilder) (obj1)).append("-Dio.netty.tmpdir: ").append(obj).append(" ($TMPDIR)").toString());
          goto _L5
    }

    private static File a(String s) {
        Object obj = null;
        if (s != null) goto _L2; else goto _L1
_L1:
        s = obj;
_L4:
        return s;
_L2:
        File file = new File(s);
        file.mkdirs();
        s = obj;
        if (file.isDirectory())
            try {
                s = file.getAbsoluteFile();
            }
            // Misplaced declaration of an exception variable
            catch (String s) {
                s = file;
            }
        if (true) goto _L4; else goto _L3
_L3:
    }

    public static transient void a(ClassLoader classloader, String as[]) {
        int k = as.length;
        for (int j = 0; j < k; j++) {
            String s = as[j];
            try {
                a(s, classloader);
                return;
            }
            catch (Throwable throwable) {
                a.a((new StringBuilder()).append("Unable to load the library: ").append(s).append('.').toString(), throwable);
            }
        }

        throw new IllegalArgumentException((new StringBuilder()).append("Failed to load any of the given libraries: ").append(Arrays.toString(as)).toString());
    }

    public static void a(String s, ClassLoader classloader) {
        Object obj;
        Object obj2;
        Object obj3;
        String s1;
        obj3 = null;
        obj2 = null;
        s1 = System.mapLibraryName(s);
        String s2 = (new StringBuilder()).append("META-INF/native/").append(s1).toString();
        URL url = classloader.getResource(s2);
        obj = url;
        if (url == null) {
            obj = url;
            if (c())
                if (s2.endsWith(".jnilib"))
                    obj = classloader.getResource((new StringBuilder()).append("META-INF/native/lib").append(s).append(".dynlib").toString());
                else
                    obj = classloader.getResource((new StringBuilder()).append("META-INF/native/lib").append(s).append(".jnilib").toString());
        }
        if (obj != null) goto _L2; else goto _L1
_L1:
        System.loadLibrary(s);
_L6:
        return;
_L2:
        Object obj1;
        int j = s1.lastIndexOf('.');
        classloader = s1.substring(0, j);
        obj1 = s1.substring(j, s1.length());
        obj1 = File.createTempFile(classloader, ((String) (obj1)), c);
        classloader = ((URL) (obj)).openStream();
        obj = JVM INSTR new #220 <Class FileOutputStream>;
        ((FileOutputStream) (obj)).FileOutputStream(((File) (obj1)));
        byte abyte0[] = new byte[8192];
_L5:
        int k = classloader.read(abyte0);
        if (k <= 0) goto _L4; else goto _L3
_L3:
        ((OutputStream) (obj)).write(abyte0, 0, k);
          goto _L5
        obj3;
        obj2 = obj;
        obj = obj3;
_L8:
        UnsatisfiedLinkError unsatisfiedlinkerror = JVM INSTR new #237 <Class UnsatisfiedLinkError>;
        obj3 = JVM INSTR new #72  <Class StringBuilder>;
        ((StringBuilder) (obj3)).StringBuilder();
        unsatisfiedlinkerror.UnsatisfiedLinkError(((StringBuilder) (obj3)).append("could not load a native library: ").append(s).toString());
        throw (UnsatisfiedLinkError)unsatisfiedlinkerror.initCause(((Throwable) (obj)));
        s;
_L7:
        if (classloader != null)
            try {
                classloader.close();
            }
            // Misplaced declaration of an exception variable
            catch (ClassLoader classloader) { }
        if (obj2 != null)
            try {
                ((OutputStream) (obj2)).close();
            }
            // Misplaced declaration of an exception variable
            catch (ClassLoader classloader) { }
        if (obj1 != null && !((File) (obj1)).delete())
            ((File) (obj1)).deleteOnExit();
        throw s;
_L4:
        ((OutputStream) (obj)).flush();
        ((OutputStream) (obj)).close();
        System.load(((File) (obj1)).getPath());
        if (classloader != null)
            try {
                classloader.close();
            }
            // Misplaced declaration of an exception variable
            catch (String s) { }
        if (false)
            try {
                throw new NullPointerException();
            }
            // Misplaced declaration of an exception variable
            catch (String s) { }
        if (obj1 != null)
            ((File) (obj1)).deleteOnExit();
          goto _L6
        s;
        obj1 = null;
        classloader = null;
        obj2 = obj3;
          goto _L7
        s;
        classloader = null;
        obj2 = obj3;
          goto _L7
        s;
        obj2 = obj3;
          goto _L7
        s;
        obj2 = obj;
          goto _L7
        obj;
        obj1 = null;
        classloader = null;
          goto _L8
        obj;
        classloader = null;
          goto _L8
        obj;
          goto _L8
    }

    private static boolean b() {
        return b.startsWith("windows");
    }

    private static boolean c() {
        boolean flag;
        if (b.startsWith("macosx") || b.startsWith("osx"))
            flag = true;
        else
            flag = false;
        return flag;
    }

    static  {
        Object obj;
        a = io.netty.util.internal.logging.c.a(io/netty/util/internal/i);
        b = n.a("os.name", "").toLowerCase(Locale.US).replaceAll("[^a-z0-9]+", "");
        obj = io.netty.util.internal.n.b("io.netty.native.workdir");
        if (obj == null) goto _L2; else goto _L1
_L1:
        obj = new File(((String) (obj)));
        ((File) (obj)).mkdirs();
        File file = ((File) (obj)).getAbsoluteFile();
        obj = file;
_L6:
        c = ((File) (obj));
        a.a((new StringBuilder()).append("-Dio.netty.native.workdir: ").append(c).toString());
_L4:
        return;
_L2:
        c = a();
        a.a((new StringBuilder()).append("-Dio.netty.native.workdir: ").append(c).append(" (io.netty.tmpdir)").toString());
        if (true) goto _L4; else goto _L3
_L3:
        Exception exception;
        exception;
        if (true) goto _L6; else goto _L5
_L5:
    }
}
