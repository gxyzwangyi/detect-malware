// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.util.concurrent;

import io.netty.util.internal.PlatformDependent;
import io.netty.util.internal.e;
import java.util.*;

public class l {

    private static final int a = io.netty.util.internal.e.d();
    private final int b = io.netty.util.internal.e.d();

    public l() {
    }

    private static void a(e e1, l l1) {
        Object obj = e1.c(a);
        if (obj == e.a || obj == null) {
            obj = Collections.newSetFromMap(new IdentityHashMap());
            e1.a(a, obj);
            e1 = ((e) (obj));
        } else {
            e1 = (Set)obj;
        }
        e1.add(l1);
    }

    private static void b(e e1, l l1) {
        e1 = ((e) (e1.c(a)));
        if (e1 != e.a && e1 != null)
            ((Set)e1).remove(l1);
    }

    private Object c(e e1) {
        Object obj = null;
        Object obj1 = b();
        obj = obj1;
_L2:
        e1.a(b, obj);
        a(e1, this);
        return obj;
        Exception exception;
        exception;
        PlatformDependent.a(exception);
        if (true) goto _L2; else goto _L1
_L1:
    }

    public static void c() {
        e e1 = io.netty.util.internal.e.a();
        if (e1 != null) goto _L2; else goto _L1
_L1:
        return;
_L2:
        Object obj = e1.c(a);
        if (obj == null) goto _L4; else goto _L3
_L3:
        if (obj == e.a) goto _L4; else goto _L5
_L5:
        int j;
        l al[];
        obj = (Set)obj;
        al = (l[])((Set) (obj)).toArray(new l[((Set) (obj)).size()]);
        j = al.length;
        int i = 0;
_L6:
        if (i >= j)
            break; /* Loop/switch isn't completed */
        al[i].b(e1);
        i++;
        if (true) goto _L6; else goto _L4
_L4:
        io.netty.util.internal.e.c();
        if (true) goto _L1; else goto _L7
_L7:
        Exception exception;
        exception;
        io.netty.util.internal.e.c();
        throw exception;
    }

    public final Object a(e e1) {
        Object obj = e1.c(b);
        if (obj != e.a)
            e1 = ((e) (obj));
        else
            e1 = ((e) (c(e1)));
        return e1;
    }

    public final void a(e e1, Object obj) {
        if (obj != e.a) {
            if (e1.a(b, obj))
                a(e1, this);
        } else {
            b(e1);
        }
    }

    protected void a(Object obj) {
    }

    protected Object b() {
        return null;
    }

    public final void b(e e1) {
        if (e1 != null) goto _L2; else goto _L1
_L1:
        return;
_L2:
        Object obj = e1.d(b);
        b(e1, this);
        if (obj != e.a)
            try {
                a(obj);
            }
            // Misplaced declaration of an exception variable
            catch (e e1) {
                PlatformDependent.a(e1);
            }
        if (true) goto _L1; else goto _L3
_L3:
    }

    public final void b(Object obj) {
        if (obj != e.a)
            a(io.netty.util.internal.e.b(), obj);
        else
            e();
    }

    public final Object d() {
        return a(io.netty.util.internal.e.b());
    }

    public final void e() {
        b(io.netty.util.internal.e.a());
    }

}
