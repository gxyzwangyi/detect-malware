// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.util.concurrent;

import io.netty.util.internal.k;
import io.netty.util.internal.logging.b;
import io.netty.util.internal.logging.c;

// Referenced classes of package io.netty.util.concurrent:
//            p, n, y

public class aa
    implements p {

    private static final b a = c.a(io/netty/util/concurrent/aa);
    private final y b[];

    public transient aa(y ay[]) {
        k.a(ay, "promises");
        int j = ay.length;
        for (int i = 0; i < j; i++)
            if (ay[i] == null)
                throw new IllegalArgumentException("promises contains null Promise");

        b = (y[])ay.clone();
    }

    public void a(n n1) {
        int i1 = 0;
        int i = 0;
        if (n1.g_()) {
            n1 = ((n) (n1.get()));
            y ay[] = b;
            for (i1 = ay.length; i < i1; i++) {
                y y2 = ay[i];
                if (!y2.b(n1))
                    a.c("Failed to mark a promise as success because it is done already: {}", y2);
            }

        } else
        if (n1.isCancelled()) {
            n1 = b;
            i1 = n1.length;
            for (int j = 0; j < i1; j++) {
                y y1 = n1[j];
                if (!y1.cancel(false))
                    a.c("Failed to cancel a promise because it is done already: {}", y1);
            }

        } else {
            n1 = n1.j();
            y ay1[] = b;
            int j1 = ay1.length;
            for (int l = i1; l < j1; l++) {
                y y3 = ay1[l];
                if (!y3.b(n1))
                    a.d("Failed to mark a promise as failure because it's done already: {}", y3, n1);
            }

        }
    }

}
