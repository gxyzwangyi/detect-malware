// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.channel.b.a;

import io.netty.buffer.h;
import io.netty.channel.ChannelException;
import io.netty.channel.a.a;
import io.netty.channel.aj;
import io.netty.channel.b.c;
import io.netty.channel.b.g;
import io.netty.channel.d;
import io.netty.channel.e;
import io.netty.channel.o;
import io.netty.channel.q;
import io.netty.channel.w;
import io.netty.util.concurrent.r;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketAddress;
import java.nio.channels.SelectableChannel;
import java.nio.channels.SelectionKey;
import java.nio.channels.SocketChannel;
import java.nio.channels.spi.SelectorProvider;
import java.util.concurrent.Executor;

public class io.netty.channel.b.a.b extends io.netty.channel.a.a
    implements g {
    private final class a extends c {

        final io.netty.channel.b.a.b c;

        protected void k() {
            io.netty.channel.b.a.b.a(c, false);
        }

        private a(io.netty.channel.b.a.b b2, Socket socket) {
            c = io.netty.channel.b.a.b.this;
            super(b2, socket);
        }

    }

    private final class b extends io.netty.channel.a.a.a {

        final io.netty.channel.b.a.b f;

        protected Executor j() {
            if (!f.T().isOpen() || f.S().n() <= 0) goto _L2; else goto _L1
_L1:
            Object obj;
            io.netty.channel.b.a.b.a(f);
            obj = r.a;
_L4:
            return ((Executor) (obj));
            obj;
_L2:
            obj = null;
            if (true) goto _L4; else goto _L3
_L3:
        }

        private b() {
            f = io.netty.channel.b.a.b.this;
            super(io.netty.channel.b.a.b.this);
        }

    }


    private static final o d = new o(false);
    private static final SelectorProvider e = SelectorProvider.provider();
    private final io.netty.channel.b.h f;

    public io.netty.channel.b.a.b() {
        this(a(e));
    }

    public io.netty.channel.b.a.b(d d1, SocketChannel socketchannel) {
        super(d1, socketchannel);
        f = new a(this, socketchannel.socket());
    }

    public io.netty.channel.b.a.b(SocketChannel socketchannel) {
        this(null, socketchannel);
    }

    private static SocketChannel a(SelectorProvider selectorprovider) {
        try {
            selectorprovider = selectorprovider.openSocketChannel();
        }
        // Misplaced declaration of an exception variable
        catch (SelectorProvider selectorprovider) {
            throw new ChannelException("Failed to open a socket.", selectorprovider);
        }
        return selectorprovider;
    }

    static void a(io.netty.channel.b.a.b b1) {
        b1.w();
    }

    static void a(io.netty.channel.b.a.b b1, w w1) {
        b1.b(w1);
    }

    static void a(io.netty.channel.b.a.b b1, boolean flag) {
        b1.b(flag);
    }

    private void b(w w1) {
        T().socket().shutdownOutput();
        w1.b();
_L1:
        return;
        Throwable throwable;
        throwable;
        w1.a(throwable);
          goto _L1
    }

    public e E() {
        return S();
    }

    public boolean G() {
        SocketChannel socketchannel = T();
        boolean flag;
        if (socketchannel.isOpen() && socketchannel.isConnected())
            flag = true;
        else
            flag = false;
        return flag;
    }

    public o H() {
        return d;
    }

    protected io.netty.channel.a.a I() {
        return new b();
    }

    protected SelectableChannel M() {
        return T();
    }

    protected void R() {
        if (!T().finishConnect())
            throw new Error();
        else
            return;
    }

    public io.netty.channel.b.h S() {
        return f;
    }

    protected SocketChannel T() {
        return (SocketChannel)super.M();
    }

    public InetSocketAddress U() {
        return (InetSocketAddress)super.f();
    }

    public InetSocketAddress V() {
        return (InetSocketAddress)super.g();
    }

    protected int a(h h1) {
        return h1.a(T(), h1.g());
    }

    protected long a(aj aj1) {
        long l = aj1.a();
        return aj1.a(T(), l);
    }

    protected void a(q q1) {
_L11:
        if (q1.h() != 0) goto _L2; else goto _L1
_L1:
        K();
_L12:
        return;
_L2:
        boolean flag;
        int l;
        long l1;
        boolean flag2;
        SocketChannel socketchannel;
        java.nio.ByteBuffer abytebuffer[];
        flag = false;
        flag2 = false;
        abytebuffer = q1.d();
        l = q1.e();
        l1 = q1.f();
        socketchannel = T();
        l;
        JVM INSTR tableswitch 0 1: default 68
    //                   0 152
    //                   1 160;
           goto _L3 _L4 _L5
_L3:
        int k;
        long l2;
        long l3;
        int i = S().c();
        l2 = 0L;
        k = i - 1;
        l3 = l1;
_L21:
        int j;
        boolean flag1;
        flag1 = flag2;
        j = ((flag) ? 1 : 0);
        l1 = l2;
        if (k < 0) goto _L7; else goto _L6
_L6:
        l1 = socketchannel.write(abytebuffer, 0, l);
        if (l1 != 0L) goto _L9; else goto _L8
_L8:
        flag1 = true;
        l1 = l2;
        j = ((flag) ? 1 : 0);
_L7:
        q1.d(l1);
        if (j != 0) goto _L11; else goto _L10
_L10:
        a(flag1);
          goto _L12
_L4:
        super.a(q1);
          goto _L12
_L5:
        java.nio.ByteBuffer bytebuffer;
        bytebuffer = abytebuffer[0];
        j = S().c();
        l2 = 0L;
        k = j - 1;
        l3 = l1;
_L18:
        flag1 = flag2;
        j = ((flag) ? 1 : 0);
        l1 = l2;
        if (k < 0) goto _L7; else goto _L13
_L13:
        j = socketchannel.write(bytebuffer);
        if (j != 0) goto _L15; else goto _L14
_L14:
        flag1 = true;
        j = ((flag) ? 1 : 0);
        l1 = l2;
          goto _L7
_L15:
        l3 -= j;
        l1 = l2 + (long)j;
        if (l3 != 0L) goto _L17; else goto _L16
_L16:
        j = 1;
        flag1 = flag2;
          goto _L7
_L17:
        k--;
        l2 = l1;
          goto _L18
_L9:
        l3 -= l1;
        l1 = l2 + l1;
        if (l3 != 0L) goto _L20; else goto _L19
_L19:
        j = 1;
        flag1 = flag2;
          goto _L7
_L20:
        k--;
        l2 = l1;
          goto _L21
    }

    protected void a(SocketAddress socketaddress) {
        T().socket().bind(socketaddress);
    }

    protected boolean a(SocketAddress socketaddress, SocketAddress socketaddress1) {
        if (socketaddress1 != null)
            T().socket().bind(socketaddress1);
        boolean flag = T().connect(socketaddress);
        if (flag)
            break MISSING_BLOCK_LABEL_38;
        O().interestOps(8);
        return flag;
        socketaddress;
        v();
        throw socketaddress;
    }

    protected int b(h h1) {
        int i = h1.f();
        return h1.a(T(), i);
    }

    public SocketAddress f() {
        return U();
    }

    public SocketAddress g() {
        return V();
    }

    protected io.netty.channel.a.a p() {
        return I();
    }

    protected SocketAddress r() {
        return T().socket().getLocalSocketAddress();
    }

    protected SocketAddress s() {
        return T().socket().getRemoteSocketAddress();
    }

    protected void u() {
        v();
    }

    protected void v() {
        super.v();
        T().close();
    }


    // Unreferenced inner class io/netty/channel/b/a/b$1

/* anonymous class */
    class _cls1
        implements Runnable {

        final w a;
        final io.netty.channel.b.a.b b;

        public void run() {
            io.netty.channel.b.a.b.a(b, a);
        }
    }

}
