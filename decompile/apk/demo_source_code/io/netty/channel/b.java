// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.channel;

import io.netty.util.DefaultAttributeMap;
import io.netty.util.Recycler;
import io.netty.util.concurrent.i;
import io.netty.util.concurrent.v;
import io.netty.util.h;
import io.netty.util.internal.PlatformDependent;
import io.netty.util.internal.k;
import io.netty.util.internal.m;
import io.netty.util.internal.n;
import io.netty.util.internal.o;
import java.net.SocketAddress;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;

// Referenced classes of package io.netty.channel:
//            k, l, r, ab, 
//            w, au, ac, i, 
//            d, o, e, g, 
//            t, q

abstract class io.netty.channel.b extends DefaultAttributeMap
    implements io.netty.channel.k {
    static abstract class a
        implements Runnable {

        private static final boolean a = io.netty.util.internal.n.a("io.netty.transport.estimateSizeOnSubmit", true);
        private static final int b = io.netty.util.internal.n.a("io.netty.transport.writeTaskSizeOverhead", 48);
        private final io.netty.util.Recycler.b c;
        private io.netty.channel.b d;
        private Object e;
        private w f;
        private int g;

        protected static void a(a a1, io.netty.channel.b b1, Object obj, w w1) {
            a1.d = b1;
            a1.e = obj;
            a1.f = w1;
            if (a) {
                w1 = b1.a().o().a();
                if (w1 != null) {
                    a1.g = io.netty.channel.b.o(b1).e().a(obj) + b;
                    w1.a(a1.g);
                } else {
                    a1.g = 0;
                }
            } else {
                a1.g = 0;
            }
        }

        protected void a(io.netty.channel.b b1, Object obj, w w1) {
            io.netty.channel.b.a(b1, obj, w1);
        }

        protected abstract void a(io.netty.util.Recycler.b b1);

        public final void run() {
            q q1 = d.a().o().a();
            if (!a || q1 == null)
                break MISSING_BLOCK_LABEL_37;
            q1.b(g);
            a(d, e, f);
            d = null;
            e = null;
            f = null;
            a(c);
            return;
            Exception exception;
            exception;
            d = null;
            e = null;
            f = null;
            a(c);
            throw exception;
        }


        private a(io.netty.util.Recycler.b b1) {
            c = b1;
        }

    }

    static final class b extends a {

        private static final Recycler a = new Recycler() {

            protected b a(io.netty.util.Recycler.b b1) {
                return new b(b1);
            }

            protected Object b(io.netty.util.Recycler.b b1) {
                return a(b1);
            }

        }
;

        static b b(io.netty.channel.b b1, Object obj, w w1) {
            return c(b1, obj, w1);
        }

        private static b c(io.netty.channel.b b1, Object obj, w w1) {
            b b2 = (b)a.a();
            a(b2, b1, obj, w1);
            return b2;
        }

        public void a(io.netty.channel.b b1, Object obj, w w1) {
            super.a(b1, obj, w1);
            io.netty.channel.b.n(b1);
        }

        protected void a(io.netty.util.Recycler.b b1) {
            a.a(this, b1);
        }


        private b(io.netty.util.Recycler.b b1) {
            super(b1);
        }

    }

    static final class c extends a
        implements as.a {

        private static final Recycler a = new Recycler() {

            protected c a(io.netty.util.Recycler.b b1) {
                return new c(b1);
            }

            protected Object b(io.netty.util.Recycler.b b1) {
                return a(b1);
            }

        }
;

        static c b(io.netty.channel.b b1, Object obj, w w1) {
            return c(b1, obj, w1);
        }

        private static c c(io.netty.channel.b b1, Object obj, w w1) {
            c c1 = (c)a.a();
            a(c1, b1, obj, w1);
            return c1;
        }

        protected void a(io.netty.util.Recycler.b b1) {
            a.a(this, b1);
        }


        private c(io.netty.util.Recycler.b b1) {
            super(b1);
        }

    }


    static final boolean d;
    private static final AtomicIntegerFieldUpdater e;
    volatile io.netty.channel.b a;
    volatile io.netty.channel.b b;
    final i c;
    private final boolean f;
    private final boolean g;
    private final ab h;
    private final String i;
    private final boolean j;
    private Runnable k;
    private Runnable l;
    private Runnable m;
    private Runnable n;
    private volatile int o;

    io.netty.channel.b(ab ab1, i i1, String s1, boolean flag, boolean flag1) {
        o = 0;
        i = (String)io.netty.util.internal.k.a(s1, "name");
        h = ab1;
        c = i1;
        f = flag;
        g = flag1;
        if (i1 == null || (i1 instanceof v))
            flag = true;
        else
            flag = false;
        j = flag;
    }

    private void A() {
        if (!G())
            break MISSING_BLOCK_LABEL_30;
        ((l)u()).j(this);
_L1:
        return;
        Throwable throwable;
        throwable;
        c(throwable);
          goto _L1
        k();
          goto _L1
    }

    private void B() {
        if (!G())
            break MISSING_BLOCK_LABEL_30;
        ((r)u()).a(this);
_L1:
        return;
        Throwable throwable;
        throwable;
        c(throwable);
          goto _L1
        m();
          goto _L1
    }

    private void C() {
        if (G())
            D();
        else
            n();
    }

    private void D() {
        ((r)u()).b(this);
_L1:
        return;
        Throwable throwable;
        throwable;
        c(throwable);
          goto _L1
    }

    private io.netty.channel.b E() {
        io.netty.channel.b b1 = this;
        io.netty.channel.b b2;
        do {
            b2 = b1.a;
            b1 = b2;
        } while (!b2.f);
        return b2;
    }

    private io.netty.channel.b F() {
        io.netty.channel.b b1 = this;
        io.netty.channel.b b2;
        do {
            b2 = b1.b;
            b1 = b2;
        } while (!b2.g);
        return b2;
    }

    private boolean G() {
        boolean flag1 = true;
        int i1 = o;
        boolean flag = flag1;
        if (i1 != 2)
            if (!j && i1 == 1)
                flag = flag1;
            else
                flag = false;
        return flag;
    }

    static void a(io.netty.channel.b b1) {
        i i1 = b1.d();
        if (i1.f())
            b1.v();
        else
            i1.execute(new Runnable(b1) {

                final io.netty.channel.b a;

                public void run() {
                    io.netty.channel.b.g(a);
                }

             {
                a = b1;
                super();
            }
            }
);
    }

    static void a(io.netty.channel.b b1, w w1) {
        b1.d(w1);
    }

    static void a(io.netty.channel.b b1, Object obj) {
        io.netty.util.internal.k.a(obj, "event");
        i i1 = b1.d();
        if (i1.f())
            b1.e(obj);
        else
            i1.execute(new Runnable(b1, obj) {

                final io.netty.channel.b a;
                final Object b;

                public void run() {
                    io.netty.channel.b.c(a, b);
                }

             {
                a = b1;
                b = obj;
                super();
            }
            }
);
    }

    static void a(io.netty.channel.b b1, Object obj, w w1) {
        b1.c(obj, w1);
    }

    static void a(io.netty.channel.b b1, Throwable throwable) {
        i i1;
        io.netty.util.internal.k.a(throwable, "cause");
        i1 = b1.d();
        if (!i1.f()) goto _L2; else goto _L1
_L1:
        b1.b(throwable);
_L4:
        return;
_L2:
        try {
            Runnable runnable = JVM INSTR new #12  <Class b$11>;
            runnable._cls11(b1, throwable);
            i1.execute(runnable);
        }
        // Misplaced declaration of an exception variable
        catch (io.netty.channel.b b1) {
            if (ab.a.c()) {
                ab.a.b("Failed to submit an exceptionCaught() event.", b1);
                ab.a.b("The exceptionCaught() event that was failed to submit was:", throwable);
            }
        }
        if (true) goto _L4; else goto _L3
_L3:
    }

    static void a(io.netty.channel.b b1, SocketAddress socketaddress, w w1) {
        b1.c(socketaddress, w1);
    }

    static void a(io.netty.channel.b b1, SocketAddress socketaddress, SocketAddress socketaddress1, w w1) {
        b1.b(socketaddress, socketaddress1, w1);
    }

    private static void a(i i1, Runnable runnable, w w1, Object obj) {
        i1.execute(runnable);
_L1:
        return;
        i1;
        w1.a(i1);
        if (obj != null)
            io.netty.util.h.b(obj);
          goto _L1
        i1;
        if (obj != null)
            io.netty.util.h.b(obj);
        throw i1;
    }

    private void a(Object obj, boolean flag, w w1) {
        Object obj1 = F();
        i i1 = ((io.netty.channel.b) (obj1)).d();
        if (i1.f()) {
            if (flag)
                ((io.netty.channel.b) (obj1)).e(obj, w1);
            else
                ((io.netty.channel.b) (obj1)).c(obj, w1);
        } else {
            if (flag)
                obj1 = b.b(((io.netty.channel.b) (obj1)), obj, w1);
            else
                obj1 = c.b(((io.netty.channel.b) (obj1)), obj, w1);
            a(i1, ((Runnable) (obj1)), w1, obj);
        }
    }

    private static void a(Throwable throwable, w w1) {
        if (!w1.b(throwable) && !(w1 instanceof au) && ab.a.c())
            ab.a.d("Failed to fail the promise because it's done already: {}", w1, throwable);
    }

    private boolean a(w w1, boolean flag) {
        boolean flag1;
        flag1 = false;
        if (w1 == null)
            throw new NullPointerException("promise");
        if (!w1.isDone()) goto _L2; else goto _L1
_L1:
        if (!w1.isCancelled()) goto _L4; else goto _L3
_L3:
        flag = flag1;
_L6:
        return flag;
_L4:
        throw new IllegalArgumentException((new StringBuilder()).append("promise already done: ").append(w1).toString());
_L2:
        if (w1.e() != a())
            throw new IllegalArgumentException(String.format("promise.channel does not match: %s (expected: %s)", new Object[] {
                w1.e(), a()
            }));
        if (w1.getClass() == io/netty/channel/ac) {
            flag = true;
        } else {
            if (!flag && (w1 instanceof au))
                throw new IllegalArgumentException((new StringBuilder()).append(io.netty.util.internal.m.a(io/netty/channel/au)).append(" not allowed for this operation").toString());
            if (w1 instanceof a.b)
                throw new IllegalArgumentException((new StringBuilder()).append(io.netty.util.internal.m.a(io/netty/channel/a$b)).append(" not allowed in a pipeline").toString());
            flag = true;
        }
        if (true) goto _L6; else goto _L5
_L5:
    }

    static void b(io.netty.channel.b b1) {
        i i1 = b1.d();
        if (i1.f())
            b1.w();
        else
            i1.execute(new Runnable(b1) {

                final io.netty.channel.b a;

                public void run() {
                    io.netty.channel.b.h(a);
                }

             {
                a = b1;
                super();
            }
            }
);
    }

    static void b(io.netty.channel.b b1, w w1) {
        b1.c(w1);
    }

    static void b(io.netty.channel.b b1, Object obj) {
        io.netty.util.internal.k.a(obj, "msg");
        i i1 = b1.d();
        if (i1.f())
            b1.f(obj);
        else
            i1.execute(new Runnable(b1, obj) {

                final io.netty.channel.b a;
                final Object b;

                public void run() {
                    io.netty.channel.b.d(a, b);
                }

             {
                a = b1;
                b = obj;
                super();
            }
            }
);
    }

    static void b(io.netty.channel.b b1, Throwable throwable) {
        b1.b(throwable);
    }

    private void b(Throwable throwable) {
        if (!G())
            break MISSING_BLOCK_LABEL_77;
        u().a(this, throwable);
_L1:
        return;
        Throwable throwable1;
        throwable1;
        if (ab.a.b())
            ab.a.b("An exception {}was thrown by a user handler's exceptionCaught() method while handling the following exception:", io.netty.util.internal.o.a(throwable1), throwable);
        else
        if (ab.a.c())
            ab.a.d("An exception '{}' [enable DEBUG level for full stacktrace] was thrown by a user handler's exceptionCaught() method while handling the following exception:", throwable1, throwable);
          goto _L1
        a(throwable);
          goto _L1
    }

    private void b(SocketAddress socketaddress, SocketAddress socketaddress1, w w1) {
        if (!G())
            break MISSING_BLOCK_LABEL_33;
        ((r)u()).a(this, socketaddress, socketaddress1, w1);
_L1:
        return;
        socketaddress;
        a(socketaddress, w1);
          goto _L1
        a(socketaddress, socketaddress1, w1);
          goto _L1
    }

    static void c(io.netty.channel.b b1) {
        i i1 = b1.d();
        if (i1.f())
            b1.x();
        else
            i1.execute(new Runnable(b1) {

                final io.netty.channel.b a;

                public void run() {
                    io.netty.channel.b.i(a);
                }

             {
                a = b1;
                super();
            }
            }
);
    }

    static void c(io.netty.channel.b b1, Object obj) {
        b1.e(obj);
    }

    private void c(w w1) {
        if (!G())
            break MISSING_BLOCK_LABEL_31;
        ((r)u()).a(this, w1);
_L1:
        return;
        Throwable throwable;
        throwable;
        a(throwable, w1);
          goto _L1
        a(w1);
          goto _L1
    }

    private void c(Object obj, w w1) {
        if (G())
            d(obj, w1);
        else
            a(obj, w1);
    }

    private void c(Throwable throwable) {
        if (d(throwable)) {
            if (ab.a.c())
                ab.a.b("An exception was thrown by a user handler while handling an exceptionCaught event", throwable);
        } else {
            b(throwable);
        }
    }

    private void c(SocketAddress socketaddress, w w1) {
        if (!G())
            break MISSING_BLOCK_LABEL_32;
        ((r)u()).a(this, socketaddress, w1);
_L1:
        return;
        socketaddress;
        a(socketaddress, w1);
          goto _L1
        a(socketaddress, w1);
          goto _L1
    }

    static void d(io.netty.channel.b b1) {
        i i1 = b1.d();
        if (i1.f())
            b1.y();
        else
            i1.execute(new Runnable(b1) {

                final io.netty.channel.b a;

                public void run() {
                    io.netty.channel.b.j(a);
                }

             {
                a = b1;
                super();
            }
            }
);
    }

    static void d(io.netty.channel.b b1, Object obj) {
        b1.f(obj);
    }

    private void d(w w1) {
        if (!G())
            break MISSING_BLOCK_LABEL_31;
        ((r)u()).b(this, w1);
_L1:
        return;
        Throwable throwable;
        throwable;
        a(throwable, w1);
          goto _L1
        b(w1);
          goto _L1
    }

    private void d(Object obj, w w1) {
        ((r)u()).a(this, obj, w1);
_L1:
        return;
        obj;
        a(((Throwable) (obj)), w1);
          goto _L1
    }

    private static boolean d(Throwable throwable) {
        boolean flag = false;
_L6:
        StackTraceElement astacktraceelement[] = throwable.getStackTrace();
        if (astacktraceelement == null) goto _L2; else goto _L1
_L1:
        int i1;
        int j1;
        j1 = astacktraceelement.length;
        i1 = 0;
_L8:
        if (i1 >= j1) goto _L2; else goto _L3
_L3:
        StackTraceElement stacktraceelement = astacktraceelement[i1];
        if (stacktraceelement != null) goto _L4; else goto _L2
_L2:
        Throwable throwable1;
        throwable1 = throwable.getCause();
        throwable = throwable1;
        if (throwable1 != null) goto _L6; else goto _L5
_L5:
        return flag;
_L4:
        if (!"exceptionCaught".equals(stacktraceelement.getMethodName()))
            break; /* Loop/switch isn't completed */
        flag = true;
        if (true) goto _L5; else goto _L7
_L7:
        i1++;
          goto _L8
    }

    static void e(io.netty.channel.b b1) {
        i i1 = b1.d();
        if (i1.f()) {
            b1.z();
        } else {
            Runnable runnable1 = b1.k;
            Runnable runnable = runnable1;
            if (runnable1 == null) {
                runnable = new Runnable(b1) {

                    final io.netty.channel.b a;

                    public void run() {
                        io.netty.channel.b.k(a);
                    }

             {
                a = b1;
                super();
            }
                }
;
                b1.k = runnable;
            }
            i1.execute(runnable);
        }
    }

    private void e(Object obj) {
        if (!G())
            break MISSING_BLOCK_LABEL_31;
        ((l)u()).b(this, obj);
_L1:
        return;
        obj;
        c(((Throwable) (obj)));
          goto _L1
        a(obj);
          goto _L1
    }

    private void e(Object obj, w w1) {
        if (G()) {
            d(obj, w1);
            D();
        } else {
            b(obj, w1);
        }
    }

    static void f(io.netty.channel.b b1) {
        i i1 = b1.d();
        if (i1.f()) {
            b1.A();
        } else {
            Runnable runnable1 = b1.m;
            Runnable runnable = runnable1;
            if (runnable1 == null) {
                runnable = new Runnable(b1) {

                    final io.netty.channel.b a;

                    public void run() {
                        io.netty.channel.b.l(a);
                    }

             {
                a = b1;
                super();
            }
                }
;
                b1.m = runnable;
            }
            i1.execute(runnable);
        }
    }

    private void f(Object obj) {
        if (!G())
            break MISSING_BLOCK_LABEL_31;
        ((l)u()).a(this, obj);
_L1:
        return;
        obj;
        c(((Throwable) (obj)));
          goto _L1
        b(obj);
          goto _L1
    }

    static void g(io.netty.channel.b b1) {
        b1.v();
    }

    static void h(io.netty.channel.b b1) {
        b1.w();
    }

    static void i(io.netty.channel.b b1) {
        b1.x();
    }

    static void j(io.netty.channel.b b1) {
        b1.y();
    }

    static void k(io.netty.channel.b b1) {
        b1.z();
    }

    static void l(io.netty.channel.b b1) {
        b1.A();
    }

    static void m(io.netty.channel.b b1) {
        b1.B();
    }

    static void n(io.netty.channel.b b1) {
        b1.C();
    }

    static ab o(io.netty.channel.b b1) {
        return b1.h;
    }

    private void v() {
        if (!G())
            break MISSING_BLOCK_LABEL_30;
        ((l)u()).e(this);
_L1:
        return;
        Throwable throwable;
        throwable;
        c(throwable);
          goto _L1
        f();
          goto _L1
    }

    private void w() {
        if (!G())
            break MISSING_BLOCK_LABEL_30;
        ((l)u()).f(this);
_L1:
        return;
        Throwable throwable;
        throwable;
        c(throwable);
          goto _L1
        g();
          goto _L1
    }

    private void x() {
        if (!G())
            break MISSING_BLOCK_LABEL_30;
        ((l)u()).g(this);
_L1:
        return;
        Throwable throwable;
        throwable;
        c(throwable);
          goto _L1
        h();
          goto _L1
    }

    private void y() {
        if (!G())
            break MISSING_BLOCK_LABEL_30;
        ((l)u()).h(this);
_L1:
        return;
        Throwable throwable;
        throwable;
        c(throwable);
          goto _L1
        i();
          goto _L1
    }

    private void z() {
        if (!G())
            break MISSING_BLOCK_LABEL_30;
        ((l)u()).i(this);
_L1:
        return;
        Throwable throwable;
        throwable;
        c(throwable);
          goto _L1
        j();
          goto _L1
    }

    public d a() {
        return h.f();
    }

    public g a(w w1) {
        if (a(w1, false)) {
            io.netty.channel.b b1 = F();
            i i1 = b1.d();
            if (i1.f()) {
                if (!a().H().a())
                    b1.d(w1);
                else
                    b1.c(w1);
            } else {
                a(i1, new Runnable(b1, w1) {

                    final io.netty.channel.b a;
                    final w b;
                    final io.netty.channel.b c;

                    public void run() {
                        if (!c.a().H().a())
                            io.netty.channel.b.a(a, b);
                        else
                            io.netty.channel.b.b(a, b);
                    }

             {
                c = io.netty.channel.b.this;
                a = b2;
                b = w1;
                super();
            }
                }
, w1, null);
            }
        }
        return w1;
    }

    public g a(Object obj, w w1) {
        if (obj == null)
            throw new NullPointerException("msg");
        if (a(w1, true)) goto _L2; else goto _L1
_L1:
        io.netty.util.h.b(obj);
_L4:
        return w1;
        w1;
        io.netty.util.h.b(obj);
        throw w1;
_L2:
        a(obj, false, w1);
        if (true) goto _L4; else goto _L3
_L3:
    }

    public g a(SocketAddress socketaddress, w w1) {
        if (socketaddress == null)
            throw new NullPointerException("localAddress");
        if (a(w1, false)) {
            io.netty.channel.b b1 = F();
            i i1 = b1.d();
            if (i1.f())
                b1.c(socketaddress, w1);
            else
                a(i1, new Runnable(b1, socketaddress, w1) {

                    final io.netty.channel.b a;
                    final SocketAddress b;
                    final w c;
                    final io.netty.channel.b d;

                    public void run() {
                        io.netty.channel.b.a(a, b, c);
                    }

             {
                d = io.netty.channel.b.this;
                a = b2;
                b = socketaddress;
                c = w1;
                super();
            }
                }
, w1, null);
        }
        return w1;
    }

    public g a(SocketAddress socketaddress, SocketAddress socketaddress1, w w1) {
        if (socketaddress == null)
            throw new NullPointerException("remoteAddress");
        if (a(w1, false)) {
            io.netty.channel.b b1 = F();
            i i1 = b1.d();
            if (i1.f())
                b1.b(socketaddress, socketaddress1, w1);
            else
                a(i1, new Runnable(b1, socketaddress, socketaddress1, w1) {

                    final io.netty.channel.b a;
                    final SocketAddress b;
                    final SocketAddress c;
                    final w d;
                    final io.netty.channel.b e;

                    public void run() {
                        io.netty.channel.b.a(a, b, c, d);
                    }

             {
                e = io.netty.channel.b.this;
                a = b2;
                b = socketaddress;
                c = socketaddress1;
                d = w1;
                super();
            }
                }
, w1, null);
        }
        return w1;
    }

    public io.netty.channel.k a(Object obj) {
        a(E(), obj);
        return this;
    }

    public io.netty.channel.k a(Throwable throwable) {
        a(a, throwable);
        return this;
    }

    public g b(w w1) {
        if (a(w1, false)) {
            io.netty.channel.b b1 = F();
            i i1 = b1.d();
            if (i1.f())
                b1.d(w1);
            else
                a(i1, new Runnable(b1, w1) {

                    final io.netty.channel.b a;
                    final w b;
                    final io.netty.channel.b c;

                    public void run() {
                        io.netty.channel.b.a(a, b);
                    }

             {
                c = io.netty.channel.b.this;
                a = b2;
                b = w1;
                super();
            }
                }
, w1, null);
        }
        return w1;
    }

    public g b(Object obj, w w1) {
        if (obj == null)
            throw new NullPointerException("msg");
        if (!a(w1, true))
            io.netty.util.h.b(obj);
        else
            a(obj, true, w1);
        return w1;
    }

    public g b(SocketAddress socketaddress, w w1) {
        return a(socketaddress, ((SocketAddress) (null)), w1);
    }

    public io.netty.channel.k b(Object obj) {
        b(E(), obj);
        return this;
    }

    public t b() {
        return h;
    }

    public io.netty.buffer.i c() {
        return a().E().d();
    }

    public g c(Object obj) {
        return a(obj, o());
    }

    public g d(Object obj) {
        return b(obj, o());
    }

    public i d() {
        Object obj;
        if (c == null)
            obj = a().e();
        else
            obj = c;
        return ((i) (obj));
    }

    public String e() {
        return i;
    }

    public io.netty.channel.k f() {
        a(E());
        return this;
    }

    public io.netty.channel.k g() {
        b(E());
        return this;
    }

    public io.netty.channel.k h() {
        c(E());
        return this;
    }

    public io.netty.channel.k i() {
        d(E());
        return this;
    }

    public io.netty.channel.k j() {
        e(E());
        return this;
    }

    public io.netty.channel.k k() {
        f(E());
        return this;
    }

    public g l() {
        return b(o());
    }

    public io.netty.channel.k m() {
        io.netty.channel.b b1 = F();
        i i1 = b1.d();
        if (i1.f()) {
            b1.B();
        } else {
            Runnable runnable1 = b1.l;
            Runnable runnable = runnable1;
            if (runnable1 == null) {
                runnable = new Runnable(b1) {

                    final io.netty.channel.b a;
                    final io.netty.channel.b b;

                    public void run() {
                        io.netty.channel.b.m(a);
                    }

             {
                b = io.netty.channel.b.this;
                a = b2;
                super();
            }
                }
;
                b1.l = runnable;
            }
            i1.execute(runnable);
        }
        return this;
    }

    public io.netty.channel.k n() {
        io.netty.channel.b b1 = F();
        i i1 = b1.d();
        if (i1.f()) {
            b1.C();
        } else {
            Runnable runnable1 = b1.n;
            Runnable runnable = runnable1;
            if (runnable1 == null) {
                runnable = new Runnable(b1) {

                    final io.netty.channel.b a;
                    final io.netty.channel.b b;

                    public void run() {
                        io.netty.channel.b.n(a);
                    }

             {
                b = io.netty.channel.b.this;
                a = b2;
                super();
            }
                }
;
                b1.n = runnable;
            }
            a(i1, runnable, a().q(), null);
        }
        return this;
    }

    public w o() {
        return new ac(a(), d());
    }

    public w p() {
        return a().q();
    }

    final void q() {
        o = 3;
    }

    final void r() {
        int i1;
        do
            i1 = o;
        while (i1 != 3 && !e.compareAndSet(this, i1, 2));
    }

    final void s() {
        boolean flag = e.compareAndSet(this, 0, 1);
        if (!d && !flag)
            throw new AssertionError();
        else
            return;
    }

    public boolean t() {
        boolean flag;
        if (o == 3)
            flag = true;
        else
            flag = false;
        return flag;
    }

    static  {
        boolean flag;
        AtomicIntegerFieldUpdater atomicintegerfieldupdater;
        AtomicIntegerFieldUpdater atomicintegerfieldupdater1;
        if (!io/netty/channel/b.desiredAssertionStatus())
            flag = true;
        else
            flag = false;
        d = flag;
        atomicintegerfieldupdater1 = PlatformDependent.b(io/netty/channel/b, "o");
        atomicintegerfieldupdater = atomicintegerfieldupdater1;
        if (atomicintegerfieldupdater1 == null)
            atomicintegerfieldupdater = AtomicIntegerFieldUpdater.newUpdater(io/netty/channel/b, "o");
        e = atomicintegerfieldupdater;
    }

    // Unreferenced inner class io/netty/channel/b$11

/* anonymous class */
    static final class _cls11
        implements Runnable {

        final io.netty.channel.b a;
        final Throwable b;

        public void run() {
            io.netty.channel.b.b(a, b);
        }

             {
                a = b1;
                b = throwable;
                super();
            }
    }

}
