// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.channel;

import io.netty.util.Recycler;
import io.netty.util.concurrent.i;
import io.netty.util.concurrent.z;
import io.netty.util.h;
import io.netty.util.internal.logging.b;
import io.netty.util.internal.logging.c;

// Referenced classes of package io.netty.channel:
//            k, d, e, ak, 
//            q, au, w, g

public final class am {
    static final class a {

        private static final Recycler a = new Recycler() {

            protected a a(io.netty.util.Recycler.b b1) {
                return new a(b1);
            }

            protected Object b(io.netty.util.Recycler.b b1) {
                return a(b1);
            }

        }
;
        private final io.netty.util.Recycler.b b;
        private a c;
        private long d;
        private w e;
        private Object f;

        static long a(a a1) {
            return a1.d;
        }

        static a a(a a1, a a2) {
            a1.c = a2;
            return a2;
        }

        static a a(Object obj, int j, w w1) {
            a a1 = (a)a.a();
            a1.d = j;
            a1.f = obj;
            a1.e = w1;
            return a1;
        }

        private void a() {
            d = 0L;
            c = null;
            f = null;
            e = null;
            a.a(this, b);
        }

        static a b(a a1) {
            return a1.c;
        }

        static Object c(a a1) {
            return a1.f;
        }

        static w d(a a1) {
            return a1.e;
        }

        static void e(a a1) {
            a1.a();
        }


        private a(io.netty.util.Recycler.b b1) {
            b = b1;
        }

    }


    static final boolean a;
    private static final b b = io.netty.util.internal.logging.c.a(io/netty/channel/am);
    private final k c;
    private final q d;
    private final ak.a e;
    private a f;
    private a g;
    private int h;
    private long i;

    public am(k k1) {
        if (k1 == null) {
            throw new NullPointerException("ctx");
        } else {
            c = k1;
            d = k1.a().o().a();
            e = k1.a().E().j().a();
            return;
        }
    }

    private void a(a a1, boolean flag) {
        a a2 = io.netty.channel.a.b(a1);
        long l = a.a(a1);
        if (flag)
            if (a2 == null) {
                g = null;
                f = null;
                h = 0;
                i = 0L;
            } else {
                f = a2;
                h = h - 1;
                i = i - l;
                if (!a && (h <= 0 || i < 0L))
                    throw new AssertionError();
            }
        a.e(a1);
        if (d != null)
            d.b(l);
    }

    private static void a(w w1, Throwable throwable) {
        if (!(w1 instanceof au) && !w1.b(throwable))
            b.d("Failed to mark a promise as failure because it's done already: {}", w1, throwable);
    }

    private void f() {
        if (!a && (g != null || f != null || h != 0))
            throw new AssertionError();
        else
            return;
    }

    public void a(Object obj, w w1) {
        if (!a && !c.d().f())
            throw new AssertionError();
        if (obj == null)
            throw new NullPointerException("msg");
        if (w1 == null)
            throw new NullPointerException("promise");
        int l = e.a(obj);
        int j = l;
        if (l < 0)
            j = 0;
        obj = a.a(obj, j, w1);
        w1 = g;
        if (w1 == null) {
            f = ((a) (obj));
            g = ((a) (obj));
        } else {
            a.a(w1, ((a) (obj)));
            g = ((a) (obj));
        }
        h = h + 1;
        i = i + (long)j;
        if (d != null)
            d.a(a.a(((a) (obj))));
    }

    public void a(Throwable throwable) {
        if (!a && !c.d().f())
            throw new AssertionError();
        if (throwable == null)
            throw new NullPointerException("cause");
        for (a a1 = f; a1 != null; a1 = f) {
            g = null;
            f = null;
            h = 0;
            i = 0L;
            a a2;
            for (; a1 != null; a1 = a2) {
                a2 = io.netty.channel.a.b(a1);
                io.netty.util.h.c(io.netty.channel.a.c(a1));
                w w1 = a.d(a1);
                a(a1, false);
                a(w1, throwable);
            }

        }

        f();
    }

    public boolean a() {
        if (!a && !c.d().f())
            throw new AssertionError();
        boolean flag;
        if (f == null)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public g b() {
        Object obj;
        obj = null;
        if (!a && !c.d().f())
            throw new AssertionError();
        if (h != 1) goto _L2; else goto _L1
_L1:
        obj = c();
_L6:
        return ((g) (obj));
_L2:
        w w1;
        z z1;
        a a1 = f;
        if (a1 == null)
            continue; /* Loop/switch isn't completed */
        g = null;
        f = null;
        h = 0;
        i = 0L;
        w1 = c.o();
        z1 = new z();
        obj = a1;
_L4:
        if (obj == null)
            break; /* Loop/switch isn't completed */
        a a2;
        a2 = io.netty.channel.a.b(((a) (obj)));
        Object obj1 = io.netty.channel.a.c(((a) (obj)));
        w w2 = a.d(((a) (obj)));
        a(((a) (obj)), false);
        z1.a(w2);
        c.a(obj1, w2);
        obj = a2;
        if (true) goto _L4; else goto _L3
_L3:
        f();
        z1.b(w1);
        obj = w1;
        continue; /* Loop/switch isn't completed */
        Throwable throwable;
        throwable;
        w1.a(throwable);
        throwable = w1;
        if (true) goto _L6; else goto _L5
_L5:
    }

    public g c() {
        if (!a && !c.d().f())
            throw new AssertionError();
        a a1 = f;
        Object obj;
        if (a1 == null) {
            obj = null;
        } else {
            obj = io.netty.channel.a.c(a1);
            w w1 = a.d(a1);
            a(a1, true);
            obj = c.a(obj, w1);
        }
        return ((g) (obj));
    }

    public w d() {
        if (!a && !c.d().f())
            throw new AssertionError();
        a a1 = f;
        w w1;
        if (a1 == null) {
            w1 = null;
        } else {
            w1 = a.d(a1);
            io.netty.util.h.c(io.netty.channel.a.c(a1));
            a(a1, true);
        }
        return w1;
    }

    public Object e() {
        if (!a && !c.d().f())
            throw new AssertionError();
        Object obj = f;
        if (obj == null)
            obj = null;
        else
            obj = io.netty.channel.a.c(((a) (obj)));
        return obj;
    }

    static  {
        boolean flag;
        if (!io/netty/channel/am.desiredAssertionStatus())
            flag = true;
        else
            flag = false;
        a = flag;
    }
}
