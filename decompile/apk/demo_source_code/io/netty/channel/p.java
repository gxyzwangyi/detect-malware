// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.channel;

import io.netty.util.internal.PlatformDependent;
import io.netty.util.internal.k;
import io.netty.util.m;
import java.util.concurrent.ConcurrentMap;

public class p extends m {

    public static final p A = a("AIO_WRITE_TIMEOUT");
    public static final p B = a("DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION");
    public static final p C = a("SINGLE_EVENTEXECUTOR_PER_GROUP");
    private static final ConcurrentMap D = PlatformDependent.k();
    public static final p a = a("ALLOCATOR");
    public static final p b = a("RCVBUF_ALLOCATOR");
    public static final p c = a("MESSAGE_SIZE_ESTIMATOR");
    public static final p d = a("CONNECT_TIMEOUT_MILLIS");
    public static final p e = a("MAX_MESSAGES_PER_READ");
    public static final p f = a("WRITE_SPIN_COUNT");
    public static final p g = a("WRITE_BUFFER_HIGH_WATER_MARK");
    public static final p h = a("WRITE_BUFFER_LOW_WATER_MARK");
    public static final p i = a("ALLOW_HALF_CLOSURE");
    public static final p j = a("AUTO_READ");
    public static final p k = a("AUTO_CLOSE");
    public static final p l = a("SO_BROADCAST");
    public static final p m = a("SO_KEEPALIVE");
    public static final p n = a("SO_SNDBUF");
    public static final p o = a("SO_RCVBUF");
    public static final p p = a("SO_REUSEADDR");
    public static final p q = a("SO_LINGER");
    public static final p r = a("SO_BACKLOG");
    public static final p s = a("SO_TIMEOUT");
    public static final p t = a("IP_TOS");
    public static final p u = a("IP_MULTICAST_ADDR");
    public static final p v = a("IP_MULTICAST_IF");
    public static final p w = a("IP_MULTICAST_TTL");
    public static final p x = a("IP_MULTICAST_LOOP_DISABLED");
    public static final p y = a("TCP_NODELAY");
    public static final p z = a("AIO_READ_TIMEOUT");

    protected p(String s1) {
        super(s1);
    }

    public static p a(String s1) {
        io.netty.util.internal.k.a(s1, "name");
        p p1 = (p)D.get(s1);
        Object obj = p1;
        if (p1 == null) {
            obj = new p(s1);
            s1 = (p)D.putIfAbsent(s1, obj);
            if (s1 != null)
                obj = s1;
        }
        return ((p) (obj));
    }

    public void a(Object obj) {
        if (obj == null)
            throw new NullPointerException("value");
        else
            return;
    }

}
