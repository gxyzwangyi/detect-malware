// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) fieldsfirst nonlb space 

package io.netty.channel;

import io.netty.buffer.ak;
import io.netty.buffer.h;
import io.netty.buffer.j;
import io.netty.util.Recycler;
import io.netty.util.concurrent.l;
import io.netty.util.internal.PlatformDependent;
import io.netty.util.internal.e;
import io.netty.util.internal.logging.b;
import io.netty.util.internal.logging.c;
import io.netty.util.internal.o;
import java.nio.ByteBuffer;
import java.nio.channels.ClosedChannelException;
import java.util.Arrays;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
import java.util.concurrent.atomic.AtomicLongFieldUpdater;

// Referenced classes of package io.netty.channel:
//            aj, d, e, au, 
//            w, ag, t, v, 
//            a

public final class q {
    static final class a {

        private static final Recycler k = new Recycler() {

            protected a a(io.netty.util.Recycler.b b1) {
                return new a(b1);
            }

            protected Object b(io.netty.util.Recycler.b b1) {
                return a(b1);
            }

        }
;
        a a;
        Object b;
        ByteBuffer c[];
        ByteBuffer d;
        w e;
        long f;
        long g;
        int h;
        int i;
        boolean j;
        private final io.netty.util.Recycler.b l;

        static a a(Object obj, int i1, long l1, w w1) {
            a a1 = (a)k.a();
            a1.b = obj;
            a1.h = i1;
            a1.g = l1;
            a1.e = w1;
            return a1;
        }

        int a() {
            int i1;
            if (!j) {
                j = true;
                i1 = h;
                io.netty.util.h.c(b);
                b = ak.c;
                h = 0;
                g = 0L;
                f = 0L;
                c = null;
                d = null;
            } else {
                i1 = 0;
            }
            return i1;
        }

        void b() {
            a = null;
            c = null;
            d = null;
            b = null;
            e = null;
            f = 0L;
            g = 0L;
            h = 0;
            i = -1;
            j = false;
            k.a(this, l);
        }

        a c() {
            a a1 = a;
            b();
            return a1;
        }


        private a(io.netty.util.Recycler.b b1) {
            i = -1;
            l = b1;
        }

    }


    static final boolean a;
    private static final b b = io.netty.util.internal.logging.c.a(io/netty/channel/q);
    private static final l c = new l() {

        protected ByteBuffer[] a() {
            return new ByteBuffer[1024];
        }

        protected Object b() {
            return a();
        }

    }
;
    private static final AtomicLongFieldUpdater l;
    private static final AtomicIntegerFieldUpdater n;
    private final d d;
    private a e;
    private a f;
    private a g;
    private int h;
    private int i;
    private long j;
    private boolean k;
    private volatile long m;
    private volatile int o;
    private volatile Runnable p;

    q(io.netty.channel.a a1) {
        d = a1;
    }

    private static int a(ByteBuffer abytebuffer[], ByteBuffer abytebuffer1[], int i1) {
        int k1 = abytebuffer.length;
        int j1 = 0;
        do {
            ByteBuffer bytebuffer;
label0:
            {
                if (j1 < k1) {
                    bytebuffer = abytebuffer[j1];
                    if (bytebuffer != null)
                        break label0;
                }
                return i1;
            }
            abytebuffer1[i1] = bytebuffer;
            j1++;
            i1++;
        } while (true);
    }

    private static long a(Object obj) {
        long l1;
        if (obj instanceof h)
            l1 = ((h)obj).f();
        else
        if (obj instanceof aj)
            l1 = ((aj)obj).b();
        else
        if (obj instanceof j)
            l1 = ((j)obj).a().f();
        else
            l1 = -1L;
        return l1;
    }

    private void a(int i1) {
        i1 = c(i1);
        int j1;
        int k1;
        do {
            j1 = o;
            k1 = j1 & ~i1;
        } while (!n.compareAndSet(this, j1, k1));
        if (j1 != 0 && k1 == 0)
            c(true);
    }

    private void a(long l1, boolean flag) {
        if (l1 != 0L && l.addAndGet(this, l1) >= (long)d.E().h())
            b(flag);
    }

    private void a(long l1, boolean flag, boolean flag1) {
        if (l1 != 0L) goto _L2; else goto _L1
_L1:
        return;
_L2:
        l1 = l.addAndGet(this, -l1);
        if (flag1 && (l1 == 0L || l1 <= (long)d.E().i()))
            a(flag);
        if (true) goto _L1; else goto _L3
_L3:
    }

    private void a(a a1) {
        int i1 = h - 1;
        h = i1;
        if (i1 == 0) {
            e = null;
            if (a1 == g) {
                g = null;
                f = null;
            }
        } else {
            e = a1.a;
        }
    }

    private static void a(w w1) {
        if (!(w1 instanceof au) && !w1.c()) {
            Throwable throwable = w1.j();
            if (throwable == null)
                b.c("Failed to mark a promise as success because it has succeeded already: {}", w1);
            else
                b.d("Failed to mark a promise as success because it has failed already: {}, unnotified cause {}", w1, io.netty.util.internal.o.a(throwable));
        }
    }

    private static void a(w w1, Throwable throwable) {
        if (!(w1 instanceof au) && !w1.b(throwable)) {
            Throwable throwable1 = w1.j();
            if (throwable1 == null)
                b.d("Failed to mark a promise as failure because it has succeeded already: {}", w1, throwable);
            else
                b.b("Failed to mark a promise as failure because it has failed already: {}, unnotified cause {}", new Object[] {
                    w1, io.netty.util.internal.o.a(throwable1), throwable
                });
        }
    }

    private void a(boolean flag) {
        int i1;
        int j1;
        do {
            j1 = o;
            i1 = j1 & -2;
        } while (!n.compareAndSet(this, j1, i1));
        if (j1 != 0 && i1 == 0)
            c(flag);
    }

    private static ByteBuffer[] a(ByteBuffer abytebuffer[], int i1, int j1) {
        int k1 = abytebuffer.length;
        int l1;
        do {
            l1 = k1 << 1;
            if (l1 < 0)
                throw new IllegalStateException();
            k1 = l1;
        } while (i1 > l1);
        ByteBuffer abytebuffer1[] = new ByteBuffer[l1];
        System.arraycopy(abytebuffer, 0, abytebuffer1, 0, j1);
        return abytebuffer1;
    }

    private void b(int i1) {
        i1 = c(i1);
        int j1;
        int k1;
        do {
            j1 = o;
            k1 = j1 | i1;
        } while (!n.compareAndSet(this, j1, k1));
        if (j1 == 0 && k1 != 0)
            c(true);
    }

    private void b(boolean flag) {
        int i1;
        int j1;
        do {
            j1 = o;
            i1 = j1 | 1;
        } while (!n.compareAndSet(this, j1, i1));
        if (j1 == 0 && i1 != 0)
            c(flag);
    }

    private boolean b(a a1) {
        boolean flag;
        if (a1 != null && a1 != f)
            flag = true;
        else
            flag = false;
        return flag;
    }

    private boolean b(Throwable throwable, boolean flag) {
        boolean flag1 = false;
        a a1 = e;
        if (a1 == null) {
            j();
            flag = flag1;
        } else {
            Object obj = a1.b;
            w w1 = a1.e;
            int i1 = a1.h;
            a(a1);
            if (!a1.j) {
                io.netty.util.h.c(obj);
                a(w1, throwable);
                a(i1, false, flag);
            }
            a1.b();
            flag = true;
        }
        return flag;
    }

    private static int c(int i1) {
        if (i1 < 1 || i1 > 31)
            throw new IllegalArgumentException((new StringBuilder()).append("index: ").append(i1).append(" (expected: 1~31)").toString());
        else
            return 1 << i1;
    }

    private void c(boolean flag) {
        t t1 = d.c();
        if (flag) {
            Runnable runnable1 = p;
            Runnable runnable = runnable1;
            if (runnable1 == null) {
                runnable = new Runnable(t1) {

                    final t a;
                    final q b;

                    public void run() {
                        a.d();
                    }

             {
                b = q.this;
                a = t1;
                super();
            }
                }
;
                p = runnable;
            }
            d.e().execute(runnable);
        } else {
            t1.d();
        }
    }

    private void j() {
        int i1 = i;
        if (i1 > 0) {
            i = 0;
            Arrays.fill((Object[])c.d(), 0, i1, null);
        }
    }

    public void a() {
        a a2 = f;
        if (a2 != null) {
            a a1 = a2;
            if (e == null) {
                e = a2;
                a1 = a2;
            }
            do {
                h = h + 1;
                if (!a1.e.f_())
                    a(a1.a(), false, true);
                a2 = a1.a;
                a1 = a2;
            } while (a2 != null);
            f = null;
        }
    }

    public void a(int i1, boolean flag) {
        if (flag)
            a(i1);
        else
            b(i1);
    }

    void a(long l1) {
        a(l1, true);
    }

    public void a(Object obj, int i1, w w1) {
        obj = a.a(obj, i1, a(obj), w1);
        if (g == null) {
            e = null;
            g = ((a) (obj));
        } else {
            g.a = ((a) (obj));
            g = ((a) (obj));
        }
        if (f == null)
            f = ((a) (obj));
        a(i1, false);
    }

    void a(Throwable throwable, boolean flag) {
        if (!k) goto _L2; else goto _L1
_L1:
        return;
_L2:
        k = true;
        boolean flag1;
        do
            flag1 = b(throwable, flag);
        while (flag1);
        k = false;
        if (true) goto _L1; else goto _L3
_L3:
        throwable;
        k = false;
        throw throwable;
    }

    void a(ClosedChannelException closedchannelexception) {
        if (!k) goto _L2; else goto _L1
_L1:
        d.e().execute(new Runnable(closedchannelexception) {

            final ClosedChannelException a;
            final q b;

            public void run() {
                b.a(a);
            }

             {
                b = q.this;
                a = closedchannelexception;
                super();
            }
        }
);
_L6:
        return;
_L2:
        k = true;
        if (d.F())
            throw new IllegalStateException("close() must be invoked after the channel is closed.");
        if (!i())
            throw new IllegalStateException("close() must be invoked after all flushed writes are handled.");
        a a1 = f;
_L4:
        if (a1 == null)
            break; /* Loop/switch isn't completed */
        int i1 = a1.h;
        l.addAndGet(this, -i1);
        if (!a1.j) {
            io.netty.util.h.c(a1.b);
            a(a1.e, ((Throwable) (closedchannelexception)));
        }
        a1 = a1.c();
        if (true) goto _L4; else goto _L3
_L3:
        k = false;
        j();
        if (true) goto _L6; else goto _L5
_L5:
        closedchannelexception;
        k = false;
        throw closedchannelexception;
    }

    public boolean a(Throwable throwable) {
        return b(throwable, true);
    }

    public Object b() {
        Object obj = e;
        if (obj == null)
            obj = null;
        else
            obj = ((a) (obj)).b;
        return obj;
    }

    void b(long l1) {
        a(l1, true, true);
    }

    public void c(long l1) {
        a a1 = e;
        if (!a && a1 == null)
            throw new AssertionError();
        w w1 = a1.e;
        if (w1 instanceof v) {
            l1 = a1.f + l1;
            a1.f = l1;
            ((v)w1).a(l1, a1.g);
        }
    }

    public boolean c() {
        boolean flag = false;
        a a1 = e;
        if (a1 == null) {
            j();
        } else {
            Object obj = a1.b;
            w w1 = a1.e;
            int i1 = a1.h;
            a(a1);
            if (!a1.j) {
                io.netty.util.h.c(obj);
                a(w1);
                a(i1, false, true);
            }
            a1.b();
            flag = true;
        }
        return flag;
    }

    public void d(long l1) {
label0:
        {
            int i1;
            Object obj;
            do {
                obj = b();
                if (!(obj instanceof h)) {
                    if (!a && l1 != 0L)
                        throw new AssertionError();
                    break label0;
                }
                obj = (h)obj;
                i1 = ((h) (obj)).b();
                int j1 = ((h) (obj)).c() - i1;
                if ((long)j1 > l1)
                    break;
                long l2 = l1;
                if (l1 != 0L) {
                    c(j1);
                    l2 = l1 - (long)j1;
                }
                c();
                l1 = l2;
            } while (true);
            if (l1 != 0L) {
                ((h) (obj)).b(i1 + (int)l1);
                c(l1);
            }
        }
        j();
    }

    public ByteBuffer[] d() {
        int j1;
        long l3;
        ByteBuffer abytebuffer1[];
        a a1;
        e e1;
        l3 = 0L;
        e1 = io.netty.util.internal.e.b();
        abytebuffer1 = (ByteBuffer[])c.a(e1);
        a1 = e;
        j1 = 0;
_L2:
label0:
        do {
label1:
            {
                int i1;
                int l1;
                int i2;
                long l2;
                ByteBuffer abytebuffer[];
                h h1;
label2:
                {
                    if (b(a1) && (a1.b instanceof h)) {
                        abytebuffer = abytebuffer1;
                        i1 = j1;
                        l2 = l3;
                        if (a1.j)
                            break label1;
                        h1 = (h)a1.b;
                        i2 = h1.b();
                        l1 = h1.c() - i2;
                        abytebuffer = abytebuffer1;
                        i1 = j1;
                        l2 = l3;
                        if (l1 <= 0)
                            break label1;
                        if ((long)(0x7fffffff - l1) >= l3)
                            break label2;
                    }
                    i = j1;
                    j = l3;
                    return abytebuffer1;
                }
                l2 = (long)l1 + l3;
                int k1 = a1.i;
                i1 = k1;
                if (k1 == -1) {
                    i1 = h1.h_();
                    a1.i = i1;
                }
                k1 = j1 + i1;
                if (k1 > abytebuffer1.length) {
                    abytebuffer = a(abytebuffer1, k1, j1);
                    c.a(e1, abytebuffer);
                } else {
                    abytebuffer = abytebuffer1;
                }
                if (i1 != 1)
                    break label0;
                abytebuffer1 = a1.d;
                if (abytebuffer1 == null) {
                    abytebuffer1 = h1.m(i2, l1);
                    a1.d = abytebuffer1;
                }
                abytebuffer[j1] = abytebuffer1;
                i1 = j1 + 1;
            }
            a1 = a1.a;
            abytebuffer1 = abytebuffer;
            j1 = i1;
            l3 = l2;
        } while (true);
        abytebuffer1 = a1.c;
        if (abytebuffer1 == null) {
            abytebuffer1 = h1.w();
            a1.c = abytebuffer1;
        }
        i1 = a(abytebuffer1, abytebuffer, j1);
        break label1;
        if (true) goto _L2; else goto _L1
_L1:
    }

    public int e() {
        return i;
    }

    public long f() {
        return j;
    }

    public boolean g() {
        boolean flag;
        if (o == 0)
            flag = true;
        else
            flag = false;
        return flag;
    }

    public int h() {
        return h;
    }

    public boolean i() {
        boolean flag;
        if (h == 0)
            flag = true;
        else
            flag = false;
        return flag;
    }

    static  {
        boolean flag;
        Object obj;
        Object obj1;
        if (!io/netty/channel/q.desiredAssertionStatus())
            flag = true;
        else
            flag = false;
        a = flag;
        obj1 = PlatformDependent.b(io/netty/channel/q, "o");
        obj = obj1;
        if (obj1 == null)
            obj = AtomicIntegerFieldUpdater.newUpdater(io/netty/channel/q, "o");
        n = ((AtomicIntegerFieldUpdater) (obj));
        obj1 = PlatformDependent.c(io/netty/channel/q, "m");
        obj = obj1;
        if (obj1 == null)
            obj = AtomicLongFieldUpdater.newUpdater(io/netty/channel/q, "m");
        l = ((AtomicLongFieldUpdater) (obj));
    }
}
