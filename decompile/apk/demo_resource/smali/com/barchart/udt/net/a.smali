.class public Lcom/barchart/udt/net/a;
.super Ljava/io/InputStream;


# static fields
.field static final synthetic b:Z


# instance fields
.field protected final a:Lcom/barchart/udt/SocketUDT;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const-class v0, Lcom/barchart/udt/net/a;

    invoke-virtual {v0}, Ljava/lang/Class;->desiredAssertionStatus()Z

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    sput-boolean v0, Lcom/barchart/udt/net/a;->b:Z

    return-void

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public constructor <init>(Lcom/barchart/udt/SocketUDT;)V
    .locals 1

    invoke-direct {p0}, Ljava/io/InputStream;-><init>()V

    invoke-virtual {p1}, Lcom/barchart/udt/SocketUDT;->o()Z

    move-result v0

    if-nez v0, :cond_0

    new-instance v0, Ljava/nio/channels/IllegalBlockingModeException;

    invoke-direct {v0}, Ljava/nio/channels/IllegalBlockingModeException;-><init>()V

    throw v0

    :cond_0
    iput-object p1, p0, Lcom/barchart/udt/net/a;->a:Lcom/barchart/udt/SocketUDT;

    return-void
.end method


# virtual methods
.method public available()I
    .locals 1

    const/4 v0, 0x0

    return v0
.end method

.method public close()V
    .locals 1

    iget-object v0, p0, Lcom/barchart/udt/net/a;->a:Lcom/barchart/udt/SocketUDT;

    invoke-virtual {v0}, Lcom/barchart/udt/SocketUDT;->b()V

    return-void
.end method

.method public mark(I)V
    .locals 2

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "mark not supported"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public markSupported()Z
    .locals 1

    const/4 v0, 0x0

    return v0
.end method

.method public read()I
    .locals 4

    const/4 v3, 0x1

    new-array v0, v3, [B

    invoke-virtual {p0, v0}, Lcom/barchart/udt/net/a;->read([B)I

    move-result v1

    sget-boolean v2, Lcom/barchart/udt/net/a;->b:Z

    if-nez v2, :cond_0

    if-eq v1, v3, :cond_0

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0

    :cond_0
    const/4 v1, 0x0

    aget-byte v0, v0, v1

    return v0
.end method

.method public read([B)I
    .locals 2

    const/4 v0, 0x0

    array-length v1, p1

    invoke-virtual {p0, p1, v0, v1}, Lcom/barchart/udt/net/a;->read([BII)I

    move-result v0

    return v0
.end method

.method public read([BII)I
    .locals 4

    iget-object v0, p0, Lcom/barchart/udt/net/a;->a:Lcom/barchart/udt/SocketUDT;

    add-int v1, p2, p3

    invoke-virtual {v0, p1, p2, v1}, Lcom/barchart/udt/SocketUDT;->a([BII)I

    move-result v0

    if-lez v0, :cond_0

    sget-boolean v1, Lcom/barchart/udt/net/a;->b:Z

    if-nez v1, :cond_2

    if-le v0, p3, :cond_2

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0

    :cond_0
    if-nez v0, :cond_1

    new-instance v0, Lcom/barchart/udt/net/NetInputStreamUDT$1;

    iget-object v1, p0, Lcom/barchart/udt/net/a;->a:Lcom/barchart/udt/SocketUDT;

    invoke-virtual {v1}, Lcom/barchart/udt/SocketUDT;->n()I

    move-result v1

    sget-object v2, Lcom/barchart/udt/ErrorUDT;->N:Lcom/barchart/udt/ErrorUDT;

    const-string v3, "UDT receive time out"

    invoke-direct {v0, p0, v1, v2, v3}, Lcom/barchart/udt/net/NetInputStreamUDT$1;-><init>(Lcom/barchart/udt/net/a;ILcom/barchart/udt/ErrorUDT;Ljava/lang/String;)V

    throw v0

    :cond_1
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "should not happen"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_2
    return v0
.end method

.method public reset()V
    .locals 2

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "reset not supported"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public skip(J)J
    .locals 11

    const-wide/16 v0, 0x0

    cmp-long v2, p1, v0

    if-gtz v2, :cond_0

    :goto_0
    return-wide v0

    :cond_0
    const-wide/16 v2, 0x400

    invoke-static {v2, v3, p1, p2}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v2

    long-to-int v4, v2

    new-array v5, v4, [B

    move-wide v2, p1

    :goto_1
    cmp-long v6, v2, v0

    if-lez v6, :cond_1

    const/4 v6, 0x0

    int-to-long v8, v4

    invoke-static {v8, v9, v2, v3}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v8

    long-to-int v7, v8

    invoke-virtual {p0, v5, v6, v7}, Lcom/barchart/udt/net/a;->read([BII)I

    move-result v6

    if-gez v6, :cond_2

    :cond_1
    sub-long v0, p1, v2

    goto :goto_0

    :cond_2
    int-to-long v6, v6

    sub-long/2addr v2, v6

    goto :goto_1
.end method
