.class public Lcom/barchart/udt/nio/k;
.super Ljava/nio/channels/SocketChannel;

# interfaces
.implements Lcom/barchart/udt/nio/a;


# static fields
.field protected static final a:Lorg/slf4j/b;


# instance fields
.field protected final b:Ljava/lang/Object;

.field protected volatile c:Z

.field protected volatile d:Z

.field protected volatile e:Z

.field protected f:Lcom/barchart/udt/nio/e;

.field protected final g:Lcom/barchart/udt/SocketUDT;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const-class v0, Lcom/barchart/udt/nio/k;

    invoke-static {v0}, Lorg/slf4j/c;->a(Ljava/lang/Class;)Lorg/slf4j/b;

    move-result-object v0

    sput-object v0, Lcom/barchart/udt/nio/k;->a:Lorg/slf4j/b;

    return-void
.end method

.method protected constructor <init>(Lcom/barchart/udt/nio/h;Lcom/barchart/udt/SocketUDT;)V
    .locals 2

    invoke-direct {p0, p1}, Ljava/nio/channels/SocketChannel;-><init>(Ljava/nio/channels/spi/SelectorProvider;)V

    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lcom/barchart/udt/nio/k;->b:Ljava/lang/Object;

    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->isBlocking()Z

    move-result v0

    iput-boolean v0, p0, Lcom/barchart/udt/nio/k;->c:Z

    iput-object p2, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    iget-object v0, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/barchart/udt/SocketUDT;->a(Z)V

    return-void
.end method

.method protected constructor <init>(Lcom/barchart/udt/nio/h;Lcom/barchart/udt/SocketUDT;Z)V
    .locals 2

    const/4 v1, 0x1

    const/4 v0, 0x0

    invoke-direct {p0, p1, p2}, Lcom/barchart/udt/nio/k;-><init>(Lcom/barchart/udt/nio/h;Lcom/barchart/udt/SocketUDT;)V

    if-eqz p3, :cond_0

    iput-boolean v1, p0, Lcom/barchart/udt/nio/k;->d:Z

    iput-boolean v0, p0, Lcom/barchart/udt/nio/k;->e:Z

    :goto_0
    return-void

    :cond_0
    iput-boolean v0, p0, Lcom/barchart/udt/nio/k;->d:Z

    iput-boolean v1, p0, Lcom/barchart/udt/nio/k;->e:Z

    goto :goto_0
.end method


# virtual methods
.method public a(Ljava/net/SocketAddress;)Lcom/barchart/udt/nio/k;
    .locals 1

    iget-object v0, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    check-cast p1, Ljava/net/InetSocketAddress;

    invoke-virtual {v0, p1}, Lcom/barchart/udt/SocketUDT;->a(Ljava/net/InetSocketAddress;)V

    return-object p0
.end method

.method public a()Z
    .locals 1

    iget-boolean v0, p0, Lcom/barchart/udt/nio/k;->d:Z

    return v0
.end method

.method public b()Lcom/barchart/udt/nio/KindUDT;
    .locals 1

    sget-object v0, Lcom/barchart/udt/nio/KindUDT;->b:Lcom/barchart/udt/nio/KindUDT;

    return-object v0
.end method

.method public c()Lcom/barchart/udt/SocketUDT;
    .locals 1

    iget-object v0, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    return-object v0
.end method

.method public connect(Ljava/net/SocketAddress;)Z
    .locals 4

    const/4 v1, 0x0

    const/4 v0, 0x1

    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->isOpen()Z

    move-result v2

    if-nez v2, :cond_0

    new-instance v0, Ljava/nio/channels/ClosedChannelException;

    invoke-direct {v0}, Ljava/nio/channels/ClosedChannelException;-><init>()V

    throw v0

    :cond_0
    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->isConnected()Z

    move-result v2

    if-eqz v2, :cond_1

    sget-object v1, Lcom/barchart/udt/nio/k;->a:Lorg/slf4j/b;

    const-string v2, "already connected; ignoring remote={}"

    invoke-interface {v1, v2, p1}, Lorg/slf4j/b;->d(Ljava/lang/String;Ljava/lang/Object;)V

    :goto_0
    return v0

    :cond_1
    if-nez p1, :cond_2

    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->close()V

    sget-object v0, Lcom/barchart/udt/nio/k;->a:Lorg/slf4j/b;

    const-string v1, "remote == null"

    invoke-interface {v0, v1}, Lorg/slf4j/b;->d(Ljava/lang/String;)V

    new-instance v0, Ljava/lang/NullPointerException;

    invoke-direct {v0}, Ljava/lang/NullPointerException;-><init>()V

    throw v0

    :cond_2
    move-object v0, p1

    check-cast v0, Ljava/net/InetSocketAddress;

    invoke-virtual {v0}, Ljava/net/InetSocketAddress;->isUnresolved()Z

    move-result v2

    if-eqz v2, :cond_3

    sget-object v0, Lcom/barchart/udt/nio/k;->a:Lorg/slf4j/b;

    const-string v1, "can not use unresolved address: remote={}"

    invoke-interface {v0, v1, p1}, Lorg/slf4j/b;->e(Ljava/lang/String;Ljava/lang/Object;)V

    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->close()V

    new-instance v0, Ljava/nio/channels/UnresolvedAddressException;

    invoke-direct {v0}, Ljava/nio/channels/UnresolvedAddressException;-><init>()V

    throw v0

    :cond_3
    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->isBlocking()Z

    move-result v2

    if-eqz v2, :cond_5

    iget-object v1, p0, Lcom/barchart/udt/nio/k;->b:Ljava/lang/Object;

    monitor-enter v1

    :try_start_0
    iget-boolean v2, p0, Lcom/barchart/udt/nio/k;->e:Z

    if-eqz v2, :cond_4

    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->close()V

    new-instance v0, Ljava/nio/channels/ConnectionPendingException;

    invoke-direct {v0}, Ljava/nio/channels/ConnectionPendingException;-><init>()V

    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception v0

    const/4 v2, 0x1

    :try_start_1
    invoke-virtual {p0, v2}, Lcom/barchart/udt/nio/k;->end(Z)V

    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/barchart/udt/nio/k;->e:Z

    iget-object v2, p0, Lcom/barchart/udt/nio/k;->b:Ljava/lang/Object;

    invoke-virtual {v2}, Ljava/lang/Object;->notifyAll()V

    throw v0

    :catchall_1
    move-exception v0

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    throw v0

    :cond_4
    const/4 v2, 0x1

    :try_start_2
    iput-boolean v2, p0, Lcom/barchart/udt/nio/k;->e:Z

    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->begin()V

    iget-object v2, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    invoke-virtual {v2, v0}, Lcom/barchart/udt/SocketUDT;->b(Ljava/net/InetSocketAddress;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    const/4 v0, 0x1

    :try_start_3
    invoke-virtual {p0, v0}, Lcom/barchart/udt/nio/k;->end(Z)V

    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/barchart/udt/nio/k;->e:Z

    iget-object v0, p0, Lcom/barchart/udt/nio/k;->b:Ljava/lang/Object;

    invoke-virtual {v0}, Ljava/lang/Object;->notifyAll()V

    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    iget-object v0, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    invoke-virtual {v0}, Lcom/barchart/udt/SocketUDT;->r()Z

    move-result v0

    goto :goto_0

    :cond_5
    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->isRegistered()Z

    move-result v2

    if-nez v2, :cond_6

    sget-object v0, Lcom/barchart/udt/nio/k;->a:Lorg/slf4j/b;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "UDT channel is in NON blocking mode; must register with a selector before trying to connect(); socketId="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    invoke-virtual {v2}, Lcom/barchart/udt/SocketUDT;->n()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, v1}, Lorg/slf4j/b;->d(Ljava/lang/String;)V

    new-instance v0, Ljava/nio/channels/IllegalBlockingModeException;

    invoke-direct {v0}, Ljava/nio/channels/IllegalBlockingModeException;-><init>()V

    throw v0

    :cond_6
    iget-object v2, p0, Lcom/barchart/udt/nio/k;->b:Ljava/lang/Object;

    monitor-enter v2

    :try_start_4
    iget-boolean v3, p0, Lcom/barchart/udt/nio/k;->e:Z

    if-eqz v3, :cond_7

    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->close()V

    sget-object v0, Lcom/barchart/udt/nio/k;->a:Lorg/slf4j/b;

    const-string v1, "connection already in progress"

    invoke-interface {v0, v1}, Lorg/slf4j/b;->d(Ljava/lang/String;)V

    new-instance v0, Ljava/nio/channels/ConnectionPendingException;

    invoke-direct {v0}, Ljava/nio/channels/ConnectionPendingException;-><init>()V

    throw v0

    :catchall_2
    move-exception v0

    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v0

    :cond_7
    const/4 v3, 0x0

    :try_start_5
    iput-boolean v3, p0, Lcom/barchart/udt/nio/k;->d:Z

    const/4 v3, 0x1

    iput-boolean v3, p0, Lcom/barchart/udt/nio/k;->e:Z

    iget-object v3, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    invoke-virtual {v3, v0}, Lcom/barchart/udt/SocketUDT;->b(Ljava/net/InetSocketAddress;)V

    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    move v0, v1

    goto/16 :goto_0
.end method

.method public d()Lcom/barchart/udt/TypeUDT;
    .locals 1

    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->e()Lcom/barchart/udt/nio/h;

    move-result-object v0

    invoke-virtual {v0}, Lcom/barchart/udt/nio/h;->a()Lcom/barchart/udt/TypeUDT;

    move-result-object v0

    return-object v0
.end method

.method public e()Lcom/barchart/udt/nio/h;
    .locals 1

    invoke-super {p0}, Ljava/nio/channels/SocketChannel;->provider()Ljava/nio/channels/spi/SelectorProvider;

    move-result-object v0

    check-cast v0, Lcom/barchart/udt/nio/h;

    return-object v0
.end method

.method public declared-synchronized f()Lcom/barchart/udt/nio/e;
    .locals 3

    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/barchart/udt/nio/k;->f:Lcom/barchart/udt/nio/e;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_0

    :try_start_1
    new-instance v0, Lcom/barchart/udt/nio/e;

    invoke-direct {v0, p0}, Lcom/barchart/udt/nio/e;-><init>(Lcom/barchart/udt/nio/k;)V

    iput-object v0, p0, Lcom/barchart/udt/nio/k;->f:Lcom/barchart/udt/nio/e;
    :try_end_1
    .catch Lcom/barchart/udt/ExceptionUDT; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_0
    :goto_0
    :try_start_2
    iget-object v0, p0, Lcom/barchart/udt/nio/k;->f:Lcom/barchart/udt/nio/e;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    monitor-exit p0

    return-object v0

    :catch_0
    move-exception v0

    :try_start_3
    sget-object v1, Lcom/barchart/udt/nio/k;->a:Lorg/slf4j/b;

    const-string v2, "failed to make socket"

    invoke-interface {v1, v2, v0}, Lorg/slf4j/b;->d(Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public finishConnect()Z
    .locals 3

    const/4 v2, 0x1

    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->isOpen()Z

    move-result v0

    if-nez v0, :cond_0

    new-instance v0, Ljava/nio/channels/ClosedChannelException;

    invoke-direct {v0}, Ljava/nio/channels/ClosedChannelException;-><init>()V

    throw v0

    :cond_0
    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->isBlocking()Z

    move-result v0

    if-eqz v0, :cond_2

    iget-object v1, p0, Lcom/barchart/udt/nio/k;->b:Ljava/lang/Object;

    monitor-enter v1

    :goto_0
    :try_start_0
    iget-boolean v0, p0, Lcom/barchart/udt/nio/k;->e:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v0, :cond_1

    :try_start_1
    iget-object v0, p0, Lcom/barchart/udt/nio/k;->b:Ljava/lang/Object;

    invoke-virtual {v0}, Ljava/lang/Object;->wait()V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    :catch_0
    move-exception v0

    :try_start_2
    new-instance v2, Ljava/io/IOException;

    invoke-direct {v2, v0}, Ljava/io/IOException;-><init>(Ljava/lang/Throwable;)V

    throw v2

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v0

    :cond_1
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :cond_2
    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->isConnected()Z

    move-result v0

    if-eqz v0, :cond_3

    iput-boolean v2, p0, Lcom/barchart/udt/nio/k;->d:Z

    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/barchart/udt/nio/k;->e:Z

    return v2

    :cond_3
    sget-object v0, Lcom/barchart/udt/nio/k;->a:Lorg/slf4j/b;

    const-string v1, "connect failure : {}"

    iget-object v2, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    invoke-interface {v0, v1, v2}, Lorg/slf4j/b;->e(Ljava/lang/String;Ljava/lang/Object;)V

    new-instance v0, Ljava/io/IOException;

    invoke-direct {v0}, Ljava/io/IOException;-><init>()V

    throw v0
.end method

.method protected implCloseSelectableChannel()V
    .locals 1

    iget-object v0, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    invoke-virtual {v0}, Lcom/barchart/udt/SocketUDT;->b()V

    return-void
.end method

.method protected implConfigureBlocking(Z)V
    .locals 1

    iget-object v0, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    invoke-virtual {v0, p1}, Lcom/barchart/udt/SocketUDT;->a(Z)V

    iput-boolean p1, p0, Lcom/barchart/udt/nio/k;->c:Z

    return-void
.end method

.method public isConnected()Z
    .locals 1

    iget-object v0, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    invoke-virtual {v0}, Lcom/barchart/udt/SocketUDT;->r()Z

    move-result v0

    return v0
.end method

.method public isConnectionPending()Z
    .locals 1

    iget-boolean v0, p0, Lcom/barchart/udt/nio/k;->e:Z

    return v0
.end method

.method public read(Ljava/nio/ByteBuffer;)I
    .locals 8

    const/4 v7, 0x1

    const/4 v0, 0x0

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v2

    if-gtz v2, :cond_1

    :cond_0
    :goto_0
    return v0

    :cond_1
    iget-object v3, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    iget-boolean v4, p0, Lcom/barchart/udt/nio/k;->c:Z

    if-eqz v4, :cond_2

    :try_start_0
    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->begin()V

    :cond_2
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->isDirect()Z

    move-result v1

    if-eqz v1, :cond_5

    invoke-virtual {v3, p1}, Lcom/barchart/udt/SocketUDT;->a(Ljava/nio/ByteBuffer;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v1

    :cond_3
    :goto_1
    if-eqz v4, :cond_4

    invoke-virtual {p0, v7}, Lcom/barchart/udt/nio/k;->end(Z)V

    :cond_4
    if-ltz v1, :cond_0

    if-eqz v1, :cond_0

    if-gt v1, v2, :cond_7

    move v0, v1

    goto :goto_0

    :cond_5
    :try_start_1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->array()[B

    move-result-object v1

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v5

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->limit()I

    move-result v6

    invoke-virtual {v3, v1, v5, v6}, Lcom/barchart/udt/SocketUDT;->a([BII)I

    move-result v1

    if-lez v1, :cond_3

    if-gt v1, v2, :cond_3

    add-int/2addr v5, v1

    invoke-virtual {p1, v5}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    :catchall_0
    move-exception v0

    if-eqz v4, :cond_6

    invoke-virtual {p0, v7}, Lcom/barchart/udt/nio/k;->end(Z)V

    :cond_6
    throw v0

    :cond_7
    sget-object v1, Lcom/barchart/udt/nio/k;->a:Lorg/slf4j/b;

    const-string v2, "should not happen: socket={}"

    invoke-interface {v1, v2, v3}, Lorg/slf4j/b;->e(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_0
.end method

.method public read([Ljava/nio/ByteBuffer;II)J
    .locals 2

    new-instance v0, Ljava/lang/RuntimeException;

    const-string v1, "feature not available"

    invoke-direct {v0, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public synthetic socket()Ljava/net/Socket;
    .locals 1

    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->f()Lcom/barchart/udt/nio/e;

    move-result-object v0

    return-object v0
.end method

.method public toString()Ljava/lang/String;
    .locals 1

    iget-object v0, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    invoke-virtual {v0}, Lcom/barchart/udt/SocketUDT;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public write(Ljava/nio/ByteBuffer;)I
    .locals 12

    const/4 v10, 0x1

    const/4 v0, 0x0

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "buffer == null"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v4

    if-gtz v4, :cond_2

    :cond_1
    :goto_0
    return v0

    :cond_2
    iget-object v5, p0, Lcom/barchart/udt/nio/k;->g:Lcom/barchart/udt/SocketUDT;

    iget-boolean v6, p0, Lcom/barchart/udt/nio/k;->c:Z

    if-eqz v6, :cond_3

    :try_start_0
    invoke-virtual {p0}, Lcom/barchart/udt/nio/k;->begin()V

    :cond_3
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->isDirect()Z

    move-result v1

    if-eqz v1, :cond_7

    move v2, v0

    :cond_4
    invoke-virtual {v5, p1}, Lcom/barchart/udt/SocketUDT;->b(Ljava/nio/ByteBuffer;)I

    move-result v1

    if-lez v1, :cond_5

    add-int/2addr v2, v1

    :cond_5
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->hasRemaining()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v3

    if-eqz v3, :cond_9

    if-nez v6, :cond_4

    move v11, v1

    move v1, v2

    move v2, v11

    :goto_1
    if-eqz v6, :cond_6

    invoke-virtual {p0, v10}, Lcom/barchart/udt/nio/k;->end(Z)V

    :cond_6
    if-ltz v2, :cond_1

    if-eqz v2, :cond_1

    if-gt v1, v4, :cond_b

    move v0, v1

    goto :goto_0

    :cond_7
    :try_start_1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->array()[B

    move-result-object v7

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v2

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->limit()I

    move-result v8

    move v3, v0

    :goto_2
    invoke-virtual {v5, v7, v2, v8}, Lcom/barchart/udt/SocketUDT;->b([BII)I

    move-result v1

    if-lez v1, :cond_8

    if-gt v1, v4, :cond_8

    add-int/2addr v3, v1

    add-int/2addr v2, v1

    invoke-virtual {p1, v2}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;

    :cond_8
    move v11, v2

    move v2, v3

    move v3, v11

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->hasRemaining()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v9

    if-eqz v9, :cond_9

    if-nez v6, :cond_c

    :cond_9
    move v11, v1

    move v1, v2

    move v2, v11

    goto :goto_1

    :catchall_0
    move-exception v0

    if-eqz v6, :cond_a

    invoke-virtual {p0, v10}, Lcom/barchart/udt/nio/k;->end(Z)V

    :cond_a
    throw v0

    :cond_b
    sget-object v1, Lcom/barchart/udt/nio/k;->a:Lorg/slf4j/b;

    const-string v2, "should not happen; socket={}"

    invoke-interface {v1, v2, v5}, Lorg/slf4j/b;->e(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_0

    :cond_c
    move v11, v3

    move v3, v2

    move v2, v11

    goto :goto_2
.end method

.method public write([Ljava/nio/ByteBuffer;II)J
    .locals 6

    const-wide/16 v0, 0x0

    move-wide v2, v0

    move v0, p2

    :goto_0
    add-int v1, p2, p3

    if-ge v0, v1, :cond_1

    :try_start_0
    aget-object v1, p1, v0

    invoke-virtual {v1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v4

    invoke-virtual {p0, v1}, Lcom/barchart/udt/nio/k;->write(Ljava/nio/ByteBuffer;)I

    move-result v1

    if-ne v4, v1, :cond_0

    int-to-long v4, v1

    add-long/2addr v2, v4

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "failed to write buffer in array"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/io/IOException;

    const-string v2, "failed to write buffer array"

    invoke-direct {v1, v2, v0}, Ljava/io/IOException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1

    :cond_1
    return-wide v2
.end method
