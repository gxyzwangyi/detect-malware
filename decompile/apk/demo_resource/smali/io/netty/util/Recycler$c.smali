.class final Lio/netty/util/Recycler$c;
.super Ljava/lang/Object;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lio/netty/util/Recycler;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x18
    name = "c"
.end annotation

.annotation system Ldalvik/annotation/Signature;
    value = {
        "<T:",
        "Ljava/lang/Object;",
        ">",
        "Ljava/lang/Object;"
    }
.end annotation


# instance fields
.field final a:Lio/netty/util/Recycler;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lio/netty/util/Recycler",
            "<TT;>;"
        }
    .end annotation
.end field

.field final b:Ljava/lang/Thread;

.field final c:Ljava/util/concurrent/atomic/AtomicInteger;

.field private d:[Lio/netty/util/Recycler$a;

.field private final e:I

.field private f:I

.field private volatile g:Lio/netty/util/Recycler$WeakOrderQueue;

.field private h:Lio/netty/util/Recycler$WeakOrderQueue;

.field private i:Lio/netty/util/Recycler$WeakOrderQueue;


# direct methods
.method constructor <init>(Lio/netty/util/Recycler;Ljava/lang/Thread;II)V
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/netty/util/Recycler",
            "<TT;>;",
            "Ljava/lang/Thread;",
            "II)V"
        }
    .end annotation

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Lio/netty/util/Recycler$c;->a:Lio/netty/util/Recycler;

    iput-object p2, p0, Lio/netty/util/Recycler$c;->b:Ljava/lang/Thread;

    iput p3, p0, Lio/netty/util/Recycler$c;->e:I

    new-instance v0, Ljava/util/concurrent/atomic/AtomicInteger;

    div-int v1, p3, p4

    invoke-static {}, Lio/netty/util/Recycler;->c()I

    move-result v2

    invoke-static {v1, v2}, Ljava/lang/Math;->max(II)I

    move-result v1

    invoke-direct {v0, v1}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v0, p0, Lio/netty/util/Recycler$c;->c:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-static {}, Lio/netty/util/Recycler;->e()I

    move-result v0

    invoke-static {v0, p3}, Ljava/lang/Math;->min(II)I

    move-result v0

    new-array v0, v0, [Lio/netty/util/Recycler$a;

    iput-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    return-void
.end method

.method static synthetic a(Lio/netty/util/Recycler$c;I)I
    .locals 0

    iput p1, p0, Lio/netty/util/Recycler$c;->f:I

    return p1
.end method

.method static synthetic a(Lio/netty/util/Recycler$c;Lio/netty/util/Recycler$WeakOrderQueue;)Lio/netty/util/Recycler$WeakOrderQueue;
    .locals 0

    iput-object p1, p0, Lio/netty/util/Recycler$c;->g:Lio/netty/util/Recycler$WeakOrderQueue;

    return-object p1
.end method

.method static synthetic a(Lio/netty/util/Recycler$c;)[Lio/netty/util/Recycler$a;
    .locals 1

    iget-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    return-object v0
.end method

.method static synthetic b(Lio/netty/util/Recycler$c;)I
    .locals 1

    iget v0, p0, Lio/netty/util/Recycler$c;->f:I

    return v0
.end method

.method static synthetic c(Lio/netty/util/Recycler$c;)Lio/netty/util/Recycler$WeakOrderQueue;
    .locals 1

    iget-object v0, p0, Lio/netty/util/Recycler$c;->g:Lio/netty/util/Recycler$WeakOrderQueue;

    return-object v0
.end method


# virtual methods
.method a(I)I
    .locals 2

    iget-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    array-length v0, v0

    iget v1, p0, Lio/netty/util/Recycler$c;->e:I

    :cond_0
    shl-int/lit8 v0, v0, 0x1

    if-ge v0, p1, :cond_1

    if-lt v0, v1, :cond_0

    :cond_1
    invoke-static {v0, v1}, Ljava/lang/Math;->min(II)I

    move-result v1

    iget-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    array-length v0, v0

    if-eq v1, v0, :cond_2

    iget-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    invoke-static {v0, v1}, Ljava/util/Arrays;->copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lio/netty/util/Recycler$a;

    iput-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    :cond_2
    return v1
.end method

.method a()Lio/netty/util/Recycler$a;
    .locals 5

    const/4 v1, 0x0

    const/4 v4, 0x0

    iget v0, p0, Lio/netty/util/Recycler$c;->f:I

    if-nez v0, :cond_1

    invoke-virtual {p0}, Lio/netty/util/Recycler$c;->b()Z

    move-result v0

    if-nez v0, :cond_0

    move-object v0, v1

    :goto_0
    return-object v0

    :cond_0
    iget v0, p0, Lio/netty/util/Recycler$c;->f:I

    :cond_1
    add-int/lit8 v2, v0, -0x1

    iget-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    aget-object v0, v0, v2

    iget-object v3, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    aput-object v1, v3, v2

    invoke-static {v0}, Lio/netty/util/Recycler$a;->d(Lio/netty/util/Recycler$a;)I

    move-result v1

    invoke-static {v0}, Lio/netty/util/Recycler$a;->c(Lio/netty/util/Recycler$a;)I

    move-result v3

    if-eq v1, v3, :cond_2

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "recycled multiple times"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_2
    invoke-static {v0, v4}, Lio/netty/util/Recycler$a;->b(Lio/netty/util/Recycler$a;I)I

    invoke-static {v0, v4}, Lio/netty/util/Recycler$a;->a(Lio/netty/util/Recycler$a;I)I

    iput v2, p0, Lio/netty/util/Recycler$c;->f:I

    goto :goto_0
.end method

.method a(Lio/netty/util/Recycler$a;)V
    .locals 4

    invoke-static {p1}, Lio/netty/util/Recycler$a;->c(Lio/netty/util/Recycler$a;)I

    move-result v0

    invoke-static {p1}, Lio/netty/util/Recycler$a;->d(Lio/netty/util/Recycler$a;)I

    move-result v1

    or-int/2addr v0, v1

    if-eqz v0, :cond_0

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "recycled already"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-static {}, Lio/netty/util/Recycler;->f()I

    move-result v0

    invoke-static {p1, v0}, Lio/netty/util/Recycler$a;->a(Lio/netty/util/Recycler$a;I)I

    move-result v0

    invoke-static {p1, v0}, Lio/netty/util/Recycler$a;->b(Lio/netty/util/Recycler$a;I)I

    iget v1, p0, Lio/netty/util/Recycler$c;->f:I

    iget v0, p0, Lio/netty/util/Recycler$c;->e:I

    if-lt v1, v0, :cond_1

    :goto_0
    return-void

    :cond_1
    iget-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    array-length v0, v0

    if-ne v1, v0, :cond_2

    iget-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    shl-int/lit8 v2, v1, 0x1

    iget v3, p0, Lio/netty/util/Recycler$c;->e:I

    invoke-static {v2, v3}, Ljava/lang/Math;->min(II)I

    move-result v2

    invoke-static {v0, v2}, Ljava/util/Arrays;->copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lio/netty/util/Recycler$a;

    iput-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    :cond_2
    iget-object v0, p0, Lio/netty/util/Recycler$c;->d:[Lio/netty/util/Recycler$a;

    aput-object p1, v0, v1

    add-int/lit8 v0, v1, 0x1

    iput v0, p0, Lio/netty/util/Recycler$c;->f:I

    goto :goto_0
.end method

.method b()Z
    .locals 1

    invoke-virtual {p0}, Lio/netty/util/Recycler$c;->c()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    iput-object v0, p0, Lio/netty/util/Recycler$c;->i:Lio/netty/util/Recycler$WeakOrderQueue;

    iget-object v0, p0, Lio/netty/util/Recycler$c;->g:Lio/netty/util/Recycler$WeakOrderQueue;

    iput-object v0, p0, Lio/netty/util/Recycler$c;->h:Lio/netty/util/Recycler$WeakOrderQueue;

    const/4 v0, 0x0

    goto :goto_0
.end method

.method c()Z
    .locals 7

    const/4 v4, 0x1

    const/4 v2, 0x0

    iget-object v0, p0, Lio/netty/util/Recycler$c;->h:Lio/netty/util/Recycler$WeakOrderQueue;

    if-nez v0, :cond_0

    iget-object v0, p0, Lio/netty/util/Recycler$c;->g:Lio/netty/util/Recycler$WeakOrderQueue;

    if-nez v0, :cond_0

    :goto_0
    return v2

    :cond_0
    iget-object v1, p0, Lio/netty/util/Recycler$c;->i:Lio/netty/util/Recycler$WeakOrderQueue;

    move-object v6, v1

    move v1, v2

    move-object v2, v0

    move-object v0, v6

    :goto_1
    invoke-virtual {v2, p0}, Lio/netty/util/Recycler$WeakOrderQueue;->a(Lio/netty/util/Recycler$c;)Z

    move-result v3

    if-eqz v3, :cond_2

    move v1, v4

    move-object v3, v2

    :cond_1
    iput-object v0, p0, Lio/netty/util/Recycler$c;->i:Lio/netty/util/Recycler$WeakOrderQueue;

    iput-object v3, p0, Lio/netty/util/Recycler$c;->h:Lio/netty/util/Recycler$WeakOrderQueue;

    move v2, v1

    goto :goto_0

    :cond_2
    invoke-static {v2}, Lio/netty/util/Recycler$WeakOrderQueue;->a(Lio/netty/util/Recycler$WeakOrderQueue;)Lio/netty/util/Recycler$WeakOrderQueue;

    move-result-object v3

    invoke-static {v2}, Lio/netty/util/Recycler$WeakOrderQueue;->b(Lio/netty/util/Recycler$WeakOrderQueue;)Ljava/lang/ref/WeakReference;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v5

    if-nez v5, :cond_5

    invoke-virtual {v2}, Lio/netty/util/Recycler$WeakOrderQueue;->a()Z

    move-result v5

    if-eqz v5, :cond_3

    :goto_2
    invoke-virtual {v2, p0}, Lio/netty/util/Recycler$WeakOrderQueue;->a(Lio/netty/util/Recycler$c;)Z

    move-result v5

    if-eqz v5, :cond_3

    move v1, v4

    goto :goto_2

    :cond_3
    if-eqz v0, :cond_4

    invoke-static {v0, v3}, Lio/netty/util/Recycler$WeakOrderQueue;->a(Lio/netty/util/Recycler$WeakOrderQueue;Lio/netty/util/Recycler$WeakOrderQueue;)Lio/netty/util/Recycler$WeakOrderQueue;

    :cond_4
    :goto_3
    if-eqz v3, :cond_1

    if-nez v1, :cond_1

    move-object v2, v3

    goto :goto_1

    :cond_5
    move-object v0, v2

    goto :goto_3
.end method

.method d()Lio/netty/util/Recycler$a;
    .locals 1

    new-instance v0, Lio/netty/util/Recycler$a;

    invoke-direct {v0, p0}, Lio/netty/util/Recycler$a;-><init>(Lio/netty/util/Recycler$c;)V

    return-object v0
.end method
