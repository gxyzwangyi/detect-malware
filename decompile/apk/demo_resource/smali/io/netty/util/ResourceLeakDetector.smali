.class public Lio/netty/util/ResourceLeakDetector;
.super Ljava/lang/Object;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lio/netty/util/ResourceLeakDetector$a;,
        Lio/netty/util/ResourceLeakDetector$Level;
    }
.end annotation

.annotation system Ldalvik/annotation/Signature;
    value = {
        "<T:",
        "Ljava/lang/Object;",
        ">",
        "Ljava/lang/Object;"
    }
.end annotation


# static fields
.field private static final a:Lio/netty/util/ResourceLeakDetector$Level;

.field private static final b:I

.field private static c:Lio/netty/util/ResourceLeakDetector$Level;

.field private static final d:Lio/netty/util/internal/logging/b;

.field private static final p:[Ljava/lang/String;


# instance fields
.field private final e:Lio/netty/util/ResourceLeakDetector$a;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lio/netty/util/ResourceLeakDetector",
            "<TT;>.a;"
        }
    .end annotation
.end field

.field private final f:Lio/netty/util/ResourceLeakDetector$a;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lio/netty/util/ResourceLeakDetector",
            "<TT;>.a;"
        }
    .end annotation
.end field

.field private final g:Ljava/lang/ref/ReferenceQueue;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/lang/ref/ReferenceQueue",
            "<",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private final h:Ljava/util/concurrent/ConcurrentMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/concurrent/ConcurrentMap",
            "<",
            "Ljava/lang/String;",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field private final i:Ljava/lang/String;

.field private final j:I

.field private final k:I

.field private final l:J

.field private m:J

.field private final n:Ljava/util/concurrent/atomic/AtomicBoolean;

.field private o:J


# direct methods
.method static constructor <clinit>()V
    .locals 6

    const/4 v2, 0x0

    sget-object v0, Lio/netty/util/ResourceLeakDetector$Level;->b:Lio/netty/util/ResourceLeakDetector$Level;

    sput-object v0, Lio/netty/util/ResourceLeakDetector;->a:Lio/netty/util/ResourceLeakDetector$Level;

    const-class v0, Lio/netty/util/ResourceLeakDetector;

    invoke-static {v0}, Lio/netty/util/internal/logging/c;->a(Ljava/lang/Class;)Lio/netty/util/internal/logging/b;

    move-result-object v0

    sput-object v0, Lio/netty/util/ResourceLeakDetector;->d:Lio/netty/util/internal/logging/b;

    const-string v0, "io.netty.noResourceLeakDetection"

    invoke-static {v0}, Lio/netty/util/internal/n;->b(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_1

    const-string v0, "io.netty.noResourceLeakDetection"

    invoke-static {v0, v2}, Lio/netty/util/internal/n;->a(Ljava/lang/String;Z)Z

    move-result v0

    sget-object v1, Lio/netty/util/ResourceLeakDetector;->d:Lio/netty/util/internal/logging/b;

    const-string v3, "-Dio.netty.noResourceLeakDetection: {}"

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v4

    invoke-interface {v1, v3, v4}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;)V

    sget-object v1, Lio/netty/util/ResourceLeakDetector;->d:Lio/netty/util/internal/logging/b;

    const-string v3, "-Dio.netty.noResourceLeakDetection is deprecated. Use \'-D{}={}\' instead."

    const-string v4, "io.netty.leakDetection.level"

    sget-object v5, Lio/netty/util/ResourceLeakDetector;->a:Lio/netty/util/ResourceLeakDetector$Level;

    invoke-virtual {v5}, Lio/netty/util/ResourceLeakDetector$Level;->name()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v5

    invoke-interface {v1, v3, v4, v5}, Lio/netty/util/internal/logging/b;->d(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    :goto_0
    if-eqz v0, :cond_2

    sget-object v0, Lio/netty/util/ResourceLeakDetector$Level;->a:Lio/netty/util/ResourceLeakDetector$Level;

    :goto_1
    const-string v1, "io.netty.leakDetectionLevel"

    invoke-virtual {v0}, Lio/netty/util/ResourceLeakDetector$Level;->name()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Lio/netty/util/internal/n;->a(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->toUpperCase()Ljava/lang/String;

    move-result-object v0

    const-string v1, "io.netty.leakDetection.level"

    invoke-static {v1, v0}, Lio/netty/util/internal/n;->a(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->toUpperCase()Ljava/lang/String;

    move-result-object v3

    sget-object v0, Lio/netty/util/ResourceLeakDetector;->a:Lio/netty/util/ResourceLeakDetector$Level;

    const-class v1, Lio/netty/util/ResourceLeakDetector$Level;

    invoke-static {v1}, Ljava/util/EnumSet;->allOf(Ljava/lang/Class;)Ljava/util/EnumSet;

    move-result-object v1

    invoke-virtual {v1}, Ljava/util/EnumSet;->iterator()Ljava/util/Iterator;

    move-result-object v4

    move-object v1, v0

    :goto_2
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lio/netty/util/ResourceLeakDetector$Level;

    invoke-virtual {v0}, Lio/netty/util/ResourceLeakDetector$Level;->name()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_0

    invoke-virtual {v0}, Lio/netty/util/ResourceLeakDetector$Level;->ordinal()I

    move-result v5

    invoke-static {v5}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_5

    :cond_0
    :goto_3
    move-object v1, v0

    goto :goto_2

    :cond_1
    move v0, v2

    goto :goto_0

    :cond_2
    sget-object v0, Lio/netty/util/ResourceLeakDetector;->a:Lio/netty/util/ResourceLeakDetector$Level;

    goto :goto_1

    :cond_3
    const-string v0, "io.netty.leakDetection.maxRecords"

    const/4 v3, 0x4

    invoke-static {v0, v3}, Lio/netty/util/internal/n;->a(Ljava/lang/String;I)I

    move-result v0

    sput v0, Lio/netty/util/ResourceLeakDetector;->b:I

    sput-object v1, Lio/netty/util/ResourceLeakDetector;->c:Lio/netty/util/ResourceLeakDetector$Level;

    sget-object v0, Lio/netty/util/ResourceLeakDetector;->d:Lio/netty/util/internal/logging/b;

    invoke-interface {v0}, Lio/netty/util/internal/logging/b;->b()Z

    move-result v0

    if-eqz v0, :cond_4

    sget-object v0, Lio/netty/util/ResourceLeakDetector;->d:Lio/netty/util/internal/logging/b;

    const-string v3, "-D{}: {}"

    const-string v4, "io.netty.leakDetection.level"

    invoke-virtual {v1}, Lio/netty/util/ResourceLeakDetector$Level;->name()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, v3, v4, v1}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    sget-object v0, Lio/netty/util/ResourceLeakDetector;->d:Lio/netty/util/internal/logging/b;

    const-string v1, "-D{}: {}"

    const-string v3, "io.netty.leakDetection.maxRecords"

    sget v4, Lio/netty/util/ResourceLeakDetector;->b:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v0, v1, v3, v4}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    :cond_4
    const/4 v0, 0x2

    new-array v0, v0, [Ljava/lang/String;

    const-string v1, "io.netty.buffer.AbstractByteBufAllocator.toLeakAwareBuffer("

    aput-object v1, v0, v2

    const/4 v1, 0x1

    const-string v2, "io.netty.buffer.AdvancedLeakAwareByteBuf.recordLeakNonRefCountingOperation("

    aput-object v2, v0, v1

    sput-object v0, Lio/netty/util/ResourceLeakDetector;->p:[Ljava/lang/String;

    return-void

    :cond_5
    move-object v0, v1

    goto :goto_3
.end method

.method public constructor <init>(Ljava/lang/Class;IJ)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/Class",
            "<*>;IJ)V"
        }
    .end annotation

    invoke-static {p1}, Lio/netty/util/internal/m;->a(Ljava/lang/Class;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0, p2, p3, p4}, Lio/netty/util/ResourceLeakDetector;-><init>(Ljava/lang/String;IJ)V

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;IJ)V
    .locals 3
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    const/4 v1, 0x0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    new-instance v0, Lio/netty/util/ResourceLeakDetector$a;

    invoke-direct {v0, p0, v1}, Lio/netty/util/ResourceLeakDetector$a;-><init>(Lio/netty/util/ResourceLeakDetector;Ljava/lang/Object;)V

    iput-object v0, p0, Lio/netty/util/ResourceLeakDetector;->e:Lio/netty/util/ResourceLeakDetector$a;

    new-instance v0, Lio/netty/util/ResourceLeakDetector$a;

    invoke-direct {v0, p0, v1}, Lio/netty/util/ResourceLeakDetector$a;-><init>(Lio/netty/util/ResourceLeakDetector;Ljava/lang/Object;)V

    iput-object v0, p0, Lio/netty/util/ResourceLeakDetector;->f:Lio/netty/util/ResourceLeakDetector$a;

    new-instance v0, Ljava/lang/ref/ReferenceQueue;

    invoke-direct {v0}, Ljava/lang/ref/ReferenceQueue;-><init>()V

    iput-object v0, p0, Lio/netty/util/ResourceLeakDetector;->g:Ljava/lang/ref/ReferenceQueue;

    invoke-static {}, Lio/netty/util/internal/PlatformDependent;->k()Ljava/util/concurrent/ConcurrentMap;

    move-result-object v0

    iput-object v0, p0, Lio/netty/util/ResourceLeakDetector;->h:Ljava/util/concurrent/ConcurrentMap;

    new-instance v0, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>()V

    iput-object v0, p0, Lio/netty/util/ResourceLeakDetector;->n:Ljava/util/concurrent/atomic/AtomicBoolean;

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "resourceType"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    if-gtz p2, :cond_1

    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "samplingInterval: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " (expected: 1+)"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    const-wide/16 v0, 0x0

    cmp-long v0, p3, v0

    if-gtz v0, :cond_2

    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "maxActive: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3, p4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " (expected: 1+)"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_2
    iput-object p1, p0, Lio/netty/util/ResourceLeakDetector;->i:Ljava/lang/String;

    invoke-static {p2}, Lio/netty/util/internal/h;->a(I)I

    move-result v0

    iput v0, p0, Lio/netty/util/ResourceLeakDetector;->j:I

    iget v0, p0, Lio/netty/util/ResourceLeakDetector;->j:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lio/netty/util/ResourceLeakDetector;->k:I

    iput-wide p3, p0, Lio/netty/util/ResourceLeakDetector;->l:J

    iget-object v0, p0, Lio/netty/util/ResourceLeakDetector;->e:Lio/netty/util/ResourceLeakDetector$a;

    iget-object v1, p0, Lio/netty/util/ResourceLeakDetector;->f:Lio/netty/util/ResourceLeakDetector$a;

    invoke-static {v0, v1}, Lio/netty/util/ResourceLeakDetector$a;->a(Lio/netty/util/ResourceLeakDetector$a;Lio/netty/util/ResourceLeakDetector$a;)Lio/netty/util/ResourceLeakDetector$a;

    iget-object v0, p0, Lio/netty/util/ResourceLeakDetector;->f:Lio/netty/util/ResourceLeakDetector$a;

    iget-object v1, p0, Lio/netty/util/ResourceLeakDetector;->e:Lio/netty/util/ResourceLeakDetector$a;

    invoke-static {v0, v1}, Lio/netty/util/ResourceLeakDetector$a;->b(Lio/netty/util/ResourceLeakDetector$a;Lio/netty/util/ResourceLeakDetector$a;)Lio/netty/util/ResourceLeakDetector$a;

    return-void
.end method

.method public static a()Lio/netty/util/ResourceLeakDetector$Level;
    .locals 1

    sget-object v0, Lio/netty/util/ResourceLeakDetector;->c:Lio/netty/util/ResourceLeakDetector$Level;

    return-object v0
.end method

.method static a(I)Ljava/lang/String;
    .locals 11

    const/4 v2, 0x0

    new-instance v4, Ljava/lang/StringBuilder;

    const/16 v0, 0x1000

    invoke-direct {v4, v0}, Ljava/lang/StringBuilder;-><init>(I)V

    new-instance v0, Ljava/lang/Throwable;

    invoke-direct {v0}, Ljava/lang/Throwable;-><init>()V

    invoke-virtual {v0}, Ljava/lang/Throwable;->getStackTrace()[Ljava/lang/StackTraceElement;

    move-result-object v5

    array-length v6, v5

    move v3, v2

    move v0, p0

    :goto_0
    if-ge v3, v6, :cond_3

    aget-object v1, v5, v3

    if-lez v0, :cond_1

    add-int/lit8 v0, v0, -0x1

    :cond_0
    :goto_1
    add-int/lit8 v1, v3, 0x1

    move v3, v1

    goto :goto_0

    :cond_1
    invoke-virtual {v1}, Ljava/lang/StackTraceElement;->toString()Ljava/lang/String;

    move-result-object v7

    sget-object v8, Lio/netty/util/ResourceLeakDetector;->p:[Ljava/lang/String;

    array-length v9, v8

    move v1, v2

    :goto_2
    if-ge v1, v9, :cond_4

    aget-object v10, v8, v1

    invoke-virtual {v7, v10}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_2

    const/4 v1, 0x1

    :goto_3
    if-nez v1, :cond_0

    const/16 v1, 0x9

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v1, Lio/netty/util/internal/m;->a:Ljava/lang/String;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_1

    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    :cond_3
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0

    :cond_4
    move v1, v2

    goto :goto_3
.end method

.method static synthetic a(Lio/netty/util/ResourceLeakDetector;)Ljava/lang/ref/ReferenceQueue;
    .locals 1

    iget-object v0, p0, Lio/netty/util/ResourceLeakDetector;->g:Ljava/lang/ref/ReferenceQueue;

    return-object v0
.end method

.method private a(Lio/netty/util/ResourceLeakDetector$Level;)V
    .locals 6

    const/4 v1, 0x1

    sget-object v0, Lio/netty/util/ResourceLeakDetector;->d:Lio/netty/util/internal/logging/b;

    invoke-interface {v0}, Lio/netty/util/internal/logging/b;->d()Z

    move-result v0

    if-nez v0, :cond_2

    :goto_0
    iget-object v0, p0, Lio/netty/util/ResourceLeakDetector;->g:Ljava/lang/ref/ReferenceQueue;

    invoke-virtual {v0}, Ljava/lang/ref/ReferenceQueue;->poll()Ljava/lang/ref/Reference;

    move-result-object v0

    check-cast v0, Lio/netty/util/ResourceLeakDetector$a;

    if-nez v0, :cond_1

    :cond_0
    return-void

    :cond_1
    invoke-virtual {v0}, Lio/netty/util/ResourceLeakDetector$a;->b()Z

    goto :goto_0

    :cond_2
    sget-object v0, Lio/netty/util/ResourceLeakDetector$Level;->d:Lio/netty/util/ResourceLeakDetector$Level;

    if-ne p1, v0, :cond_4

    move v0, v1

    :goto_1
    iget-wide v2, p0, Lio/netty/util/ResourceLeakDetector;->m:J

    int-to-long v4, v0

    mul-long/2addr v2, v4

    iget-wide v4, p0, Lio/netty/util/ResourceLeakDetector;->l:J

    cmp-long v0, v2, v4

    if-lez v0, :cond_3

    iget-object v0, p0, Lio/netty/util/ResourceLeakDetector;->n:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v2, 0x0

    invoke-virtual {v0, v2, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->compareAndSet(ZZ)Z

    move-result v0

    if-eqz v0, :cond_3

    iget-object v0, p0, Lio/netty/util/ResourceLeakDetector;->i:Ljava/lang/String;

    invoke-virtual {p0, v0}, Lio/netty/util/ResourceLeakDetector;->b(Ljava/lang/String;)V

    :cond_3
    :goto_2
    iget-object v0, p0, Lio/netty/util/ResourceLeakDetector;->g:Ljava/lang/ref/ReferenceQueue;

    invoke-virtual {v0}, Ljava/lang/ref/ReferenceQueue;->poll()Ljava/lang/ref/Reference;

    move-result-object v0

    check-cast v0, Lio/netty/util/ResourceLeakDetector$a;

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lio/netty/util/ResourceLeakDetector$a;->clear()V

    invoke-virtual {v0}, Lio/netty/util/ResourceLeakDetector$a;->b()Z

    move-result v1

    if-eqz v1, :cond_3

    invoke-virtual {v0}, Lio/netty/util/ResourceLeakDetector$a;->toString()Ljava/lang/String;

    move-result-object v0

    iget-object v1, p0, Lio/netty/util/ResourceLeakDetector;->h:Ljava/util/concurrent/ConcurrentMap;

    sget-object v2, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    invoke-interface {v1, v0, v2}, Ljava/util/concurrent/ConcurrentMap;->putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    if-nez v1, :cond_3

    invoke-virtual {v0}, Ljava/lang/String;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_5

    iget-object v0, p0, Lio/netty/util/ResourceLeakDetector;->i:Ljava/lang/String;

    invoke-virtual {p0, v0}, Lio/netty/util/ResourceLeakDetector;->a(Ljava/lang/String;)V

    goto :goto_2

    :cond_4
    iget v0, p0, Lio/netty/util/ResourceLeakDetector;->j:I

    goto :goto_1

    :cond_5
    iget-object v1, p0, Lio/netty/util/ResourceLeakDetector;->i:Ljava/lang/String;

    invoke-virtual {p0, v1, v0}, Lio/netty/util/ResourceLeakDetector;->a(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_2
.end method

.method static synthetic b()I
    .locals 1

    sget v0, Lio/netty/util/ResourceLeakDetector;->b:I

    return v0
.end method

.method static synthetic b(Lio/netty/util/ResourceLeakDetector;)Lio/netty/util/ResourceLeakDetector$a;
    .locals 1

    iget-object v0, p0, Lio/netty/util/ResourceLeakDetector;->e:Lio/netty/util/ResourceLeakDetector$a;

    return-object v0
.end method

.method static synthetic c(Lio/netty/util/ResourceLeakDetector;)J
    .locals 4

    iget-wide v0, p0, Lio/netty/util/ResourceLeakDetector;->m:J

    const-wide/16 v2, 0x1

    add-long/2addr v2, v0

    iput-wide v2, p0, Lio/netty/util/ResourceLeakDetector;->m:J

    return-wide v0
.end method

.method static synthetic d(Lio/netty/util/ResourceLeakDetector;)J
    .locals 4

    iget-wide v0, p0, Lio/netty/util/ResourceLeakDetector;->m:J

    const-wide/16 v2, 0x1

    sub-long v2, v0, v2

    iput-wide v2, p0, Lio/netty/util/ResourceLeakDetector;->m:J

    return-wide v0
.end method


# virtual methods
.method public final a(Ljava/lang/Object;)Lio/netty/util/j;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(TT;)",
            "Lio/netty/util/j;"
        }
    .end annotation

    const/4 v0, 0x0

    sget-object v1, Lio/netty/util/ResourceLeakDetector;->c:Lio/netty/util/ResourceLeakDetector$Level;

    sget-object v2, Lio/netty/util/ResourceLeakDetector$Level;->a:Lio/netty/util/ResourceLeakDetector$Level;

    if-ne v1, v2, :cond_1

    :cond_0
    :goto_0
    return-object v0

    :cond_1
    invoke-virtual {v1}, Lio/netty/util/ResourceLeakDetector$Level;->ordinal()I

    move-result v2

    sget-object v3, Lio/netty/util/ResourceLeakDetector$Level;->d:Lio/netty/util/ResourceLeakDetector$Level;

    invoke-virtual {v3}, Lio/netty/util/ResourceLeakDetector$Level;->ordinal()I

    move-result v3

    if-ge v2, v3, :cond_2

    iget-wide v2, p0, Lio/netty/util/ResourceLeakDetector;->o:J

    const-wide/16 v4, 0x1

    add-long/2addr v4, v2

    iput-wide v4, p0, Lio/netty/util/ResourceLeakDetector;->o:J

    iget v4, p0, Lio/netty/util/ResourceLeakDetector;->k:I

    int-to-long v4, v4

    and-long/2addr v2, v4

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-nez v2, :cond_0

    invoke-direct {p0, v1}, Lio/netty/util/ResourceLeakDetector;->a(Lio/netty/util/ResourceLeakDetector$Level;)V

    new-instance v0, Lio/netty/util/ResourceLeakDetector$a;

    invoke-direct {v0, p0, p1}, Lio/netty/util/ResourceLeakDetector$a;-><init>(Lio/netty/util/ResourceLeakDetector;Ljava/lang/Object;)V

    goto :goto_0

    :cond_2
    invoke-direct {p0, v1}, Lio/netty/util/ResourceLeakDetector;->a(Lio/netty/util/ResourceLeakDetector$Level;)V

    new-instance v0, Lio/netty/util/ResourceLeakDetector$a;

    invoke-direct {v0, p0, p1}, Lio/netty/util/ResourceLeakDetector$a;-><init>(Lio/netty/util/ResourceLeakDetector;Ljava/lang/Object;)V

    goto :goto_0
.end method

.method protected a(Ljava/lang/String;)V
    .locals 5

    sget-object v0, Lio/netty/util/ResourceLeakDetector;->d:Lio/netty/util/internal/logging/b;

    const-string v1, "LEAK: {}.release() was not called before it\'s garbage-collected. Enable advanced leak reporting to find out where the leak occurred. To enable advanced leak reporting, specify the JVM option \'-D{}={}\' or call {}.setLevel() See http://netty.io/wiki/reference-counted-objects.html for more information."

    const/4 v2, 0x4

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, 0x0

    aput-object p1, v2, v3

    const/4 v3, 0x1

    const-string v4, "io.netty.leakDetection.level"

    aput-object v4, v2, v3

    const/4 v3, 0x2

    sget-object v4, Lio/netty/util/ResourceLeakDetector$Level;->c:Lio/netty/util/ResourceLeakDetector$Level;

    invoke-virtual {v4}, Lio/netty/util/ResourceLeakDetector$Level;->name()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v4

    aput-object v4, v2, v3

    const/4 v3, 0x3

    invoke-static {p0}, Lio/netty/util/internal/m;->a(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    aput-object v4, v2, v3

    invoke-interface {v0, v1, v2}, Lio/netty/util/internal/logging/b;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    return-void
.end method

.method protected a(Ljava/lang/String;Ljava/lang/String;)V
    .locals 2

    sget-object v0, Lio/netty/util/ResourceLeakDetector;->d:Lio/netty/util/internal/logging/b;

    const-string v1, "LEAK: {}.release() was not called before it\'s garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.{}"

    invoke-interface {v0, v1, p1, p2}, Lio/netty/util/internal/logging/b;->e(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    return-void
.end method

.method protected b(Ljava/lang/String;)V
    .locals 3

    sget-object v0, Lio/netty/util/ResourceLeakDetector;->d:Lio/netty/util/internal/logging/b;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "LEAK: You are creating too many "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " instances.  "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " is a shared resource that must be reused across the JVM,"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "so that only a few instances are created."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, v1}, Lio/netty/util/internal/logging/b;->d(Ljava/lang/String;)V

    return-void
.end method
