.class public abstract Lio/netty/util/concurrent/ag;
.super Lio/netty/util/concurrent/d;

# interfaces
.implements Lio/netty/util/concurrent/v;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lio/netty/util/concurrent/ag$a;
    }
.end annotation


# static fields
.field private static final a:Lio/netty/util/internal/logging/b;

.field private static final b:Ljava/lang/Runnable;

.field static final e:I

.field static final synthetic f:Z

.field private static final g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater",
            "<",
            "Lio/netty/util/concurrent/ag;",
            ">;"
        }
    .end annotation
.end field

.field private static final w:J


# instance fields
.field private final h:Lio/netty/util/concurrent/j;

.field private final i:Ljava/util/Queue;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Queue",
            "<",
            "Ljava/lang/Runnable;",
            ">;"
        }
    .end annotation
.end field

.field private final j:Ljava/lang/Thread;

.field private final k:Lio/netty/util/concurrent/ah;

.field private final l:Ljava/util/concurrent/Semaphore;

.field private final m:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set",
            "<",
            "Ljava/lang/Runnable;",
            ">;"
        }
    .end annotation
.end field

.field private final n:Z

.field private final o:I

.field private final p:Lio/netty/util/concurrent/ac;

.field private q:J

.field private volatile r:I

.field private volatile s:J

.field private volatile t:J

.field private u:J

.field private final v:Lio/netty/util/concurrent/y;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lio/netty/util/concurrent/y",
            "<*>;"
        }
    .end annotation
.end field


# direct methods
.method static constructor <clinit>()V
    .locals 4

    const-class v0, Lio/netty/util/concurrent/ag;

    invoke-virtual {v0}, Ljava/lang/Class;->desiredAssertionStatus()Z

    move-result v0

    if-nez v0, :cond_1

    const/4 v0, 0x1

    :goto_0
    sput-boolean v0, Lio/netty/util/concurrent/ag;->f:Z

    const/16 v0, 0x10

    const-string v1, "io.netty.eventexecutor.maxPendingTasks"

    const v2, 0x7fffffff

    invoke-static {v1, v2}, Lio/netty/util/internal/n;->a(Ljava/lang/String;I)I

    move-result v1

    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    move-result v0

    sput v0, Lio/netty/util/concurrent/ag;->e:I

    const-class v0, Lio/netty/util/concurrent/ag;

    invoke-static {v0}, Lio/netty/util/internal/logging/c;->a(Ljava/lang/Class;)Lio/netty/util/internal/logging/b;

    move-result-object v0

    sput-object v0, Lio/netty/util/concurrent/ag;->a:Lio/netty/util/internal/logging/b;

    new-instance v0, Lio/netty/util/concurrent/ag$1;

    invoke-direct {v0}, Lio/netty/util/concurrent/ag$1;-><init>()V

    sput-object v0, Lio/netty/util/concurrent/ag;->b:Ljava/lang/Runnable;

    const-class v0, Lio/netty/util/concurrent/ag;

    const-string v1, "r"

    invoke-static {v0, v1}, Lio/netty/util/internal/PlatformDependent;->b(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    move-result-object v0

    if-nez v0, :cond_0

    const-class v0, Lio/netty/util/concurrent/ag;

    const-string v1, "r"

    invoke-static {v0, v1}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->newUpdater(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    move-result-object v0

    :cond_0
    sput-object v0, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    sget-object v0, Ljava/util/concurrent/TimeUnit;->SECONDS:Ljava/util/concurrent/TimeUnit;

    const-wide/16 v2, 0x1

    invoke-virtual {v0, v2, v3}, Ljava/util/concurrent/TimeUnit;->toNanos(J)J

    move-result-wide v0

    sput-wide v0, Lio/netty/util/concurrent/ag;->w:J

    return-void

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method protected constructor <init>(Lio/netty/util/concurrent/j;Ljava/util/concurrent/ThreadFactory;ZILio/netty/util/concurrent/ac;)V
    .locals 2

    invoke-direct {p0}, Lio/netty/util/concurrent/d;-><init>()V

    new-instance v0, Ljava/util/concurrent/Semaphore;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Ljava/util/concurrent/Semaphore;-><init>(I)V

    iput-object v0, p0, Lio/netty/util/concurrent/ag;->l:Ljava/util/concurrent/Semaphore;

    new-instance v0, Ljava/util/LinkedHashSet;

    invoke-direct {v0}, Ljava/util/LinkedHashSet;-><init>()V

    iput-object v0, p0, Lio/netty/util/concurrent/ag;->m:Ljava/util/Set;

    const/4 v0, 0x1

    iput v0, p0, Lio/netty/util/concurrent/ag;->r:I

    new-instance v0, Lio/netty/util/concurrent/g;

    sget-object v1, Lio/netty/util/concurrent/r;->a:Lio/netty/util/concurrent/r;

    invoke-direct {v0, v1}, Lio/netty/util/concurrent/g;-><init>(Lio/netty/util/concurrent/i;)V

    iput-object v0, p0, Lio/netty/util/concurrent/ag;->v:Lio/netty/util/concurrent/y;

    if-nez p2, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "threadFactory"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iput-object p1, p0, Lio/netty/util/concurrent/ag;->h:Lio/netty/util/concurrent/j;

    iput-boolean p3, p0, Lio/netty/util/concurrent/ag;->n:Z

    new-instance v0, Lio/netty/util/concurrent/ag$2;

    invoke-direct {v0, p0}, Lio/netty/util/concurrent/ag$2;-><init>(Lio/netty/util/concurrent/ag;)V

    invoke-interface {p2, v0}, Ljava/util/concurrent/ThreadFactory;->newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;

    move-result-object v0

    iput-object v0, p0, Lio/netty/util/concurrent/ag;->j:Ljava/lang/Thread;

    new-instance v0, Lio/netty/util/concurrent/ag$a;

    iget-object v1, p0, Lio/netty/util/concurrent/ag;->j:Ljava/lang/Thread;

    invoke-direct {v0, v1}, Lio/netty/util/concurrent/ag$a;-><init>(Ljava/lang/Thread;)V

    iput-object v0, p0, Lio/netty/util/concurrent/ag;->k:Lio/netty/util/concurrent/ah;

    const/16 v0, 0x10

    invoke-static {v0, p4}, Ljava/lang/Math;->max(II)I

    move-result v0

    iput v0, p0, Lio/netty/util/concurrent/ag;->o:I

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->r()Ljava/util/Queue;

    move-result-object v0

    iput-object v0, p0, Lio/netty/util/concurrent/ag;->i:Ljava/util/Queue;

    const-string v0, "rejectedHandler"

    invoke-static {p5, v0}, Lio/netty/util/internal/k;->a(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lio/netty/util/concurrent/ac;

    iput-object v0, p0, Lio/netty/util/concurrent/ag;->p:Lio/netty/util/concurrent/ac;

    return-void
.end method

.method static synthetic a(Lio/netty/util/concurrent/ag;)J
    .locals 2

    iget-wide v0, p0, Lio/netty/util/concurrent/ag;->u:J

    return-wide v0
.end method

.method private a(Ljava/lang/String;)V
    .locals 3

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->f()Z

    move-result v0

    if-eqz v0, :cond_0

    new-instance v0, Ljava/util/concurrent/RejectedExecutionException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Calling "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " from within the EventLoop is not allowed"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/util/concurrent/RejectedExecutionException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    return-void
.end method

.method private a()Z
    .locals 4

    invoke-static {}, Lio/netty/util/concurrent/d;->m()J

    move-result-wide v2

    invoke-virtual {p0, v2, v3}, Lio/netty/util/concurrent/ag;->a(J)Ljava/lang/Runnable;

    move-result-object v0

    :goto_0
    if-eqz v0, :cond_1

    iget-object v1, p0, Lio/netty/util/concurrent/ag;->i:Ljava/util/Queue;

    invoke-interface {v1, v0}, Ljava/util/Queue;->offer(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_0

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->n()Ljava/util/Queue;

    move-result-object v1

    check-cast v0, Lio/netty/util/concurrent/af;

    invoke-interface {v1, v0}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    const/4 v0, 0x0

    :goto_1
    return v0

    :cond_0
    invoke-virtual {p0, v2, v3}, Lio/netty/util/concurrent/ag;->a(J)Ljava/lang/Runnable;

    move-result-object v0

    goto :goto_0

    :cond_1
    const/4 v0, 0x1

    goto :goto_1
.end method

.method static synthetic b(Lio/netty/util/concurrent/ag;)Ljava/util/concurrent/Semaphore;
    .locals 1

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->l:Ljava/util/concurrent/Semaphore;

    return-object v0
.end method

.method static synthetic c(Lio/netty/util/concurrent/ag;)Ljava/util/Queue;
    .locals 1

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->i:Ljava/util/Queue;

    return-object v0
.end method

.method static synthetic d(Lio/netty/util/concurrent/ag;)Lio/netty/util/concurrent/y;
    .locals 1

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->v:Lio/netty/util/concurrent/y;

    return-object v0
.end method

.method private g()Z
    .locals 5

    const/4 v1, 0x1

    const/4 v0, 0x0

    :cond_0
    iget-object v2, p0, Lio/netty/util/concurrent/ag;->m:Ljava/util/Set;

    invoke-interface {v2}, Ljava/util/Set;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_1

    new-instance v2, Ljava/util/ArrayList;

    iget-object v3, p0, Lio/netty/util/concurrent/ag;->m:Ljava/util/Set;

    invoke-direct {v2, v3}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    iget-object v3, p0, Lio/netty/util/concurrent/ag;->m:Ljava/util/Set;

    invoke-interface {v3}, Ljava/util/Set;->clear()V

    invoke-interface {v2}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Runnable;

    :try_start_0
    invoke-interface {v0}, Ljava/lang/Runnable;->run()V
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :goto_1
    move v0, v1

    goto :goto_0

    :catch_0
    move-exception v0

    :try_start_1
    sget-object v3, Lio/netty/util/concurrent/ag;->a:Lio/netty/util/internal/logging/b;

    const-string v4, "Shutdown hook raised an exception."

    invoke-interface {v3, v4, v0}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    :catchall_0
    move-exception v0

    throw v0

    :cond_1
    if-eqz v0, :cond_2

    invoke-static {}, Lio/netty/util/concurrent/af;->c()J

    move-result-wide v2

    iput-wide v2, p0, Lio/netty/util/concurrent/ag;->q:J

    :cond_2
    return v0
.end method

.method private k()V
    .locals 3

    const/4 v2, 0x1

    sget-object v0, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    invoke-virtual {v0, p0}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->get(Ljava/lang/Object;)I

    move-result v0

    if-ne v0, v2, :cond_0

    sget-object v0, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    const/4 v1, 0x2

    invoke-virtual {v0, p0, v2, v1}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->compareAndSet(Ljava/lang/Object;II)Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->j:Ljava/lang/Thread;

    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    :cond_0
    return-void
.end method

.method protected static x()V
    .locals 2

    new-instance v0, Ljava/util/concurrent/RejectedExecutionException;

    const-string v1, "event executor terminated"

    invoke-direct {v0, v1}, Ljava/util/concurrent/RejectedExecutionException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method static synthetic y()Lio/netty/util/internal/logging/b;
    .locals 1

    sget-object v0, Lio/netty/util/concurrent/ag;->a:Lio/netty/util/internal/logging/b;

    return-object v0
.end method

.method static synthetic z()Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
    .locals 1

    sget-object v0, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    return-object v0
.end method


# virtual methods
.method public a(JJLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/n;
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(JJ",
            "Ljava/util/concurrent/TimeUnit;",
            ")",
            "Lio/netty/util/concurrent/n",
            "<*>;"
        }
    .end annotation

    const/4 v1, 0x3

    const/4 v4, 0x1

    const-wide/16 v2, 0x0

    cmp-long v0, p1, v2

    if-gez v0, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "quietPeriod: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " (expected >= 0)"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    cmp-long v0, p3, p1

    if-gez v0, :cond_1

    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "timeout: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3, p4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " (expected >= quietPeriod ("

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "))"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    if-nez p5, :cond_2

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "unit"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_2
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->v()Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->e()Lio/netty/util/concurrent/n;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_3
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->f()Z

    move-result v5

    :cond_4
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->v()Z

    move-result v0

    if-eqz v0, :cond_5

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->e()Lio/netty/util/concurrent/n;

    move-result-object v0

    goto :goto_0

    :cond_5
    sget-object v0, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    invoke-virtual {v0, p0}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->get(Ljava/lang/Object;)I

    move-result v2

    if-eqz v5, :cond_8

    move v0, v1

    move v3, v4

    :goto_1
    sget-object v6, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    invoke-virtual {v6, p0, v2, v0}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->compareAndSet(Ljava/lang/Object;II)Z

    move-result v0

    if-eqz v0, :cond_4

    invoke-virtual {p5, p1, p2}, Ljava/util/concurrent/TimeUnit;->toNanos(J)J

    move-result-wide v0

    iput-wide v0, p0, Lio/netty/util/concurrent/ag;->s:J

    invoke-virtual {p5, p3, p4}, Ljava/util/concurrent/TimeUnit;->toNanos(J)J

    move-result-wide v0

    iput-wide v0, p0, Lio/netty/util/concurrent/ag;->t:J

    if-ne v2, v4, :cond_6

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->j:Ljava/lang/Thread;

    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    :cond_6
    if-eqz v3, :cond_7

    invoke-virtual {p0, v5}, Lio/netty/util/concurrent/ag;->a(Z)V

    :cond_7
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->e()Lio/netty/util/concurrent/n;

    move-result-object v0

    goto :goto_0

    :cond_8
    packed-switch v2, :pswitch_data_0

    const/4 v0, 0x0

    move v3, v0

    move v0, v2

    goto :goto_1

    :pswitch_0
    move v0, v1

    move v3, v4

    goto :goto_1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method protected a(I)Ljava/util/Queue;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/Queue",
            "<",
            "Ljava/lang/Runnable;",
            ">;"
        }
    .end annotation

    new-instance v0, Ljava/util/concurrent/LinkedBlockingQueue;

    invoke-direct {v0, p1}, Ljava/util/concurrent/LinkedBlockingQueue;-><init>(I)V

    return-object v0
.end method

.method protected a(Z)V
    .locals 2

    if-eqz p1, :cond_0

    sget-object v0, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    invoke-virtual {v0, p0}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->get(Ljava/lang/Object;)I

    move-result v0

    const/4 v1, 0x3

    if-ne v0, v1, :cond_1

    :cond_0
    iget-object v0, p0, Lio/netty/util/concurrent/ag;->i:Ljava/util/Queue;

    sget-object v1, Lio/netty/util/concurrent/ag;->b:Ljava/lang/Runnable;

    invoke-interface {v0, v1}, Ljava/util/Queue;->offer(Ljava/lang/Object;)Z

    :cond_1
    return-void
.end method

.method protected a(Ljava/lang/Runnable;)Z
    .locals 1

    const/4 v0, 0x1

    return v0
.end method

.method public a(Ljava/lang/Thread;)Z
    .locals 1

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->j:Ljava/lang/Thread;

    if-ne p1, v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
    .locals 3

    if-nez p3, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "unit"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->f()Z

    move-result v0

    if-eqz v0, :cond_1

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "cannot await termination of the current thread"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    iget-object v0, p0, Lio/netty/util/concurrent/ag;->l:Ljava/util/concurrent/Semaphore;

    invoke-virtual {v0, p1, p2, p3}, Ljava/util/concurrent/Semaphore;->tryAcquire(JLjava/util/concurrent/TimeUnit;)Z

    move-result v0

    if-eqz v0, :cond_2

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->l:Ljava/util/concurrent/Semaphore;

    invoke-virtual {v0}, Ljava/util/concurrent/Semaphore;->release()V

    :cond_2
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->isTerminated()Z

    move-result v0

    return v0
.end method

.method public b()I
    .locals 1

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->i:Ljava/util/Queue;

    invoke-interface {v0}, Ljava/util/Queue;->size()I

    move-result v0

    return v0
.end method

.method protected b(J)Z
    .locals 11

    const-wide/16 v2, 0x0

    invoke-direct {p0}, Lio/netty/util/concurrent/ag;->a()Z

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->j()Ljava/lang/Runnable;

    move-result-object v0

    if-nez v0, :cond_0

    const/4 v0, 0x0

    :goto_0
    return v0

    :cond_0
    invoke-static {}, Lio/netty/util/concurrent/af;->c()J

    move-result-wide v4

    add-long v6, v4, p1

    move-object v4, v0

    move-wide v0, v2

    :goto_1
    :try_start_0
    invoke-interface {v4}, Ljava/lang/Runnable;->run()V
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    :goto_2
    const-wide/16 v4, 0x1

    add-long/2addr v4, v0

    const-wide/16 v0, 0x3f

    and-long/2addr v0, v4

    cmp-long v0, v0, v2

    if-nez v0, :cond_1

    invoke-static {}, Lio/netty/util/concurrent/af;->c()J

    move-result-wide v0

    cmp-long v8, v0, v6

    if-ltz v8, :cond_1

    :goto_3
    iput-wide v0, p0, Lio/netty/util/concurrent/ag;->q:J

    const/4 v0, 0x1

    goto :goto_0

    :catch_0
    move-exception v4

    sget-object v5, Lio/netty/util/concurrent/ag;->a:Lio/netty/util/internal/logging/b;

    const-string v8, "A task raised an exception."

    invoke-interface {v5, v8, v4}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_2

    :cond_1
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->j()Ljava/lang/Runnable;

    move-result-object v0

    if-nez v0, :cond_2

    invoke-static {}, Lio/netty/util/concurrent/af;->c()J

    move-result-wide v0

    goto :goto_3

    :cond_2
    move-wide v9, v4

    move-object v4, v0

    move-wide v0, v9

    goto :goto_1
.end method

.method protected c(J)J
    .locals 3

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->p()Lio/netty/util/concurrent/af;

    move-result-object v0

    if-nez v0, :cond_0

    sget-wide v0, Lio/netty/util/concurrent/ag;->w:J

    :goto_0
    return-wide v0

    :cond_0
    invoke-virtual {v0, p1, p2}, Lio/netty/util/concurrent/af;->b(J)J

    move-result-wide v0

    goto :goto_0
.end method

.method protected c(Ljava/lang/Runnable;)V
    .locals 2

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "task"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-virtual {p0, p1}, Lio/netty/util/concurrent/ag;->d(Ljava/lang/Runnable;)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->p:Lio/netty/util/concurrent/ac;

    invoke-interface {v0, p1, p0}, Lio/netty/util/concurrent/ac;->a(Ljava/lang/Runnable;Lio/netty/util/concurrent/ag;)V

    :cond_1
    return-void
.end method

.method final d(Ljava/lang/Runnable;)Z
    .locals 1

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->isShutdown()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-static {}, Lio/netty/util/concurrent/ag;->x()V

    :cond_0
    iget-object v0, p0, Lio/netty/util/concurrent/ag;->i:Ljava/util/Queue;

    invoke-interface {v0, p1}, Ljava/util/Queue;->offer(Ljava/lang/Object;)Z

    move-result v0

    return v0
.end method

.method public e()Lio/netty/util/concurrent/n;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Lio/netty/util/concurrent/n",
            "<*>;"
        }
    .end annotation

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->v:Lio/netty/util/concurrent/y;

    return-object v0
.end method

.method protected e(Ljava/lang/Runnable;)Z
    .locals 2

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "task"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iget-object v0, p0, Lio/netty/util/concurrent/ag;->i:Ljava/util/Queue;

    invoke-interface {v0, p1}, Ljava/util/Queue;->remove(Ljava/lang/Object;)Z

    move-result v0

    return v0
.end method

.method public execute(Ljava/lang/Runnable;)V
    .locals 2

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "task"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->f()Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-virtual {p0, p1}, Lio/netty/util/concurrent/ag;->c(Ljava/lang/Runnable;)V

    :cond_1
    :goto_0
    iget-boolean v1, p0, Lio/netty/util/concurrent/ag;->n:Z

    if-nez v1, :cond_2

    invoke-virtual {p0, p1}, Lio/netty/util/concurrent/ag;->a(Ljava/lang/Runnable;)Z

    move-result v1

    if-eqz v1, :cond_2

    invoke-virtual {p0, v0}, Lio/netty/util/concurrent/ag;->a(Z)V

    :cond_2
    return-void

    :cond_3
    invoke-direct {p0}, Lio/netty/util/concurrent/ag;->k()V

    invoke-virtual {p0, p1}, Lio/netty/util/concurrent/ag;->c(Ljava/lang/Runnable;)V

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->isShutdown()Z

    move-result v1

    if-eqz v1, :cond_1

    invoke-virtual {p0, p1}, Lio/netty/util/concurrent/ag;->e(Ljava/lang/Runnable;)Z

    move-result v1

    if-eqz v1, :cond_1

    invoke-static {}, Lio/netty/util/concurrent/ag;->x()V

    goto :goto_0
.end method

.method protected abstract h()V
.end method

.method protected i()V
    .locals 0

    return-void
.end method

.method public invokeAll(Ljava/util/Collection;)Ljava/util/List;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T:",
            "Ljava/lang/Object;",
            ">(",
            "Ljava/util/Collection",
            "<+",
            "Ljava/util/concurrent/Callable",
            "<TT;>;>;)",
            "Ljava/util/List",
            "<",
            "Ljava/util/concurrent/Future",
            "<TT;>;>;"
        }
    .end annotation

    const-string v0, "invokeAll"

    invoke-direct {p0, v0}, Lio/netty/util/concurrent/ag;->a(Ljava/lang/String;)V

    invoke-super {p0, p1}, Lio/netty/util/concurrent/d;->invokeAll(Ljava/util/Collection;)Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T:",
            "Ljava/lang/Object;",
            ">(",
            "Ljava/util/Collection",
            "<+",
            "Ljava/util/concurrent/Callable",
            "<TT;>;>;J",
            "Ljava/util/concurrent/TimeUnit;",
            ")",
            "Ljava/util/List",
            "<",
            "Ljava/util/concurrent/Future",
            "<TT;>;>;"
        }
    .end annotation

    const-string v0, "invokeAll"

    invoke-direct {p0, v0}, Lio/netty/util/concurrent/ag;->a(Ljava/lang/String;)V

    invoke-super {p0, p1, p2, p3, p4}, Lio/netty/util/concurrent/d;->invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T:",
            "Ljava/lang/Object;",
            ">(",
            "Ljava/util/Collection",
            "<+",
            "Ljava/util/concurrent/Callable",
            "<TT;>;>;)TT;"
        }
    .end annotation

    const-string v0, "invokeAny"

    invoke-direct {p0, v0}, Lio/netty/util/concurrent/ag;->a(Ljava/lang/String;)V

    invoke-super {p0, p1}, Lio/netty/util/concurrent/d;->invokeAny(Ljava/util/Collection;)Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method public invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "<T:",
            "Ljava/lang/Object;",
            ">(",
            "Ljava/util/Collection",
            "<+",
            "Ljava/util/concurrent/Callable",
            "<TT;>;>;J",
            "Ljava/util/concurrent/TimeUnit;",
            ")TT;"
        }
    .end annotation

    const-string v0, "invokeAny"

    invoke-direct {p0, v0}, Lio/netty/util/concurrent/ag;->a(Ljava/lang/String;)V

    invoke-super {p0, p1, p2, p3, p4}, Lio/netty/util/concurrent/d;->invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;

    move-result-object v0

    return-object v0
.end method

.method public isShutdown()Z
    .locals 2

    sget-object v0, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    invoke-virtual {v0, p0}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->get(Ljava/lang/Object;)I

    move-result v0

    const/4 v1, 0x4

    if-lt v0, v1, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isTerminated()Z
    .locals 2

    sget-object v0, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    invoke-virtual {v0, p0}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->get(Ljava/lang/Object;)I

    move-result v0

    const/4 v1, 0x5

    if-ne v0, v1, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method protected j()Ljava/lang/Runnable;
    .locals 2

    sget-boolean v0, Lio/netty/util/concurrent/ag;->f:Z

    if-nez v0, :cond_0

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->f()Z

    move-result v0

    if-nez v0, :cond_0

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0

    :cond_0
    iget-object v0, p0, Lio/netty/util/concurrent/ag;->i:Ljava/util/Queue;

    invoke-interface {v0}, Ljava/util/Queue;->poll()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Runnable;

    sget-object v1, Lio/netty/util/concurrent/ag;->b:Ljava/lang/Runnable;

    if-eq v0, v1, :cond_0

    return-object v0
.end method

.method protected r()Ljava/util/Queue;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Queue",
            "<",
            "Ljava/lang/Runnable;",
            ">;"
        }
    .end annotation

    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    iget v0, p0, Lio/netty/util/concurrent/ag;->o:I

    invoke-virtual {p0, v0}, Lio/netty/util/concurrent/ag;->a(I)Ljava/util/Queue;

    move-result-object v0

    return-object v0
.end method

.method protected s()Z
    .locals 1

    sget-boolean v0, Lio/netty/util/concurrent/ag;->f:Z

    if-nez v0, :cond_0

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->f()Z

    move-result v0

    if-nez v0, :cond_0

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0

    :cond_0
    iget-object v0, p0, Lio/netty/util/concurrent/ag;->i:Ljava/util/Queue;

    invoke-interface {v0}, Ljava/util/Queue;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_1

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public shutdown()V
    .locals 7
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    const/4 v1, 0x4

    const/4 v4, 0x1

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->isShutdown()Z

    move-result v0

    if-eqz v0, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->f()Z

    move-result v5

    :cond_2
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->v()Z

    move-result v0

    if-nez v0, :cond_0

    sget-object v0, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    invoke-virtual {v0, p0}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->get(Ljava/lang/Object;)I

    move-result v2

    if-eqz v5, :cond_4

    move v0, v1

    move v3, v4

    :goto_1
    sget-object v6, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    invoke-virtual {v6, p0, v2, v0}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->compareAndSet(Ljava/lang/Object;II)Z

    move-result v0

    if-eqz v0, :cond_2

    if-ne v2, v4, :cond_3

    iget-object v0, p0, Lio/netty/util/concurrent/ag;->j:Ljava/lang/Thread;

    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    :cond_3
    if-eqz v3, :cond_0

    invoke-virtual {p0, v5}, Lio/netty/util/concurrent/ag;->a(Z)V

    goto :goto_0

    :cond_4
    packed-switch v2, :pswitch_data_0

    const/4 v0, 0x0

    move v3, v0

    move v0, v2

    goto :goto_1

    :pswitch_0
    move v0, v1

    move v3, v4

    goto :goto_1

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method protected t()Z
    .locals 4

    :cond_0
    invoke-direct {p0}, Lio/netty/util/concurrent/ag;->a()Z

    move-result v1

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->j()Ljava/lang/Runnable;

    move-result-object v0

    if-nez v0, :cond_1

    const/4 v0, 0x0

    :goto_0
    return v0

    :cond_1
    :try_start_0
    invoke-interface {v0}, Ljava/lang/Runnable;->run()V
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    :goto_1
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->j()Ljava/lang/Runnable;

    move-result-object v0

    if-nez v0, :cond_1

    if-eqz v1, :cond_0

    invoke-static {}, Lio/netty/util/concurrent/af;->c()J

    move-result-wide v0

    iput-wide v0, p0, Lio/netty/util/concurrent/ag;->q:J

    const/4 v0, 0x1

    goto :goto_0

    :catch_0
    move-exception v0

    sget-object v2, Lio/netty/util/concurrent/ag;->a:Lio/netty/util/internal/logging/b;

    const-string v3, "A task raised an exception."

    invoke-interface {v2, v3, v0}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_1
.end method

.method protected u()V
    .locals 2

    invoke-static {}, Lio/netty/util/concurrent/af;->c()J

    move-result-wide v0

    iput-wide v0, p0, Lio/netty/util/concurrent/ag;->q:J

    return-void
.end method

.method public v()Z
    .locals 2

    sget-object v0, Lio/netty/util/concurrent/ag;->g:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    invoke-virtual {v0, p0}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->get(Ljava/lang/Object;)I

    move-result v0

    const/4 v1, 0x3

    if-lt v0, v1, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method protected w()Z
    .locals 8

    const/4 v0, 0x0

    const/4 v1, 0x1

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->v()Z

    move-result v2

    if-nez v2, :cond_0

    :goto_0
    return v0

    :cond_0
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->f()Z

    move-result v2

    if-nez v2, :cond_1

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "must be invoked from an event loop"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->d()V

    iget-wide v2, p0, Lio/netty/util/concurrent/ag;->u:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-nez v2, :cond_2

    invoke-static {}, Lio/netty/util/concurrent/af;->c()J

    move-result-wide v2

    iput-wide v2, p0, Lio/netty/util/concurrent/ag;->u:J

    :cond_2
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->t()Z

    move-result v2

    if-nez v2, :cond_3

    invoke-direct {p0}, Lio/netty/util/concurrent/ag;->g()Z

    move-result v2

    if-eqz v2, :cond_5

    :cond_3
    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->isShutdown()Z

    move-result v2

    if-eqz v2, :cond_4

    move v0, v1

    goto :goto_0

    :cond_4
    invoke-virtual {p0, v1}, Lio/netty/util/concurrent/ag;->a(Z)V

    goto :goto_0

    :cond_5
    invoke-static {}, Lio/netty/util/concurrent/af;->c()J

    move-result-wide v2

    invoke-virtual {p0}, Lio/netty/util/concurrent/ag;->isShutdown()Z

    move-result v4

    if-nez v4, :cond_6

    iget-wide v4, p0, Lio/netty/util/concurrent/ag;->u:J

    sub-long v4, v2, v4

    iget-wide v6, p0, Lio/netty/util/concurrent/ag;->t:J

    cmp-long v4, v4, v6

    if-lez v4, :cond_7

    :cond_6
    move v0, v1

    goto :goto_0

    :cond_7
    iget-wide v4, p0, Lio/netty/util/concurrent/ag;->q:J

    sub-long/2addr v2, v4

    iget-wide v4, p0, Lio/netty/util/concurrent/ag;->s:J

    cmp-long v2, v2, v4

    if-gtz v2, :cond_8

    invoke-virtual {p0, v1}, Lio/netty/util/concurrent/ag;->a(Z)V

    const-wide/16 v2, 0x64

    :try_start_0
    invoke-static {v2, v3}, Ljava/lang/Thread;->sleep(J)V
    :try_end_0
    .catch Ljava/lang/InterruptedException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v1

    goto :goto_0

    :cond_8
    move v0, v1

    goto :goto_0
.end method
