.class Lio/netty/util/concurrent/z$1;
.super Ljava/lang/Object;

# interfaces
.implements Lio/netty/util/concurrent/p;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lio/netty/util/concurrent/z;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x0
    name = null
.end annotation

.annotation system Ldalvik/annotation/Signature;
    value = {
        "Ljava/lang/Object;",
        "Lio/netty/util/concurrent/p",
        "<",
        "Lio/netty/util/concurrent/n",
        "<*>;>;"
    }
.end annotation


# instance fields
.field final synthetic a:Lio/netty/util/concurrent/z;


# direct methods
.method constructor <init>(Lio/netty/util/concurrent/z;)V
    .locals 0

    iput-object p1, p0, Lio/netty/util/concurrent/z$1;->a:Lio/netty/util/concurrent/z;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method


# virtual methods
.method public a(Lio/netty/util/concurrent/n;)V
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/netty/util/concurrent/n",
            "<*>;)V"
        }
    .end annotation

    iget-object v0, p0, Lio/netty/util/concurrent/z$1;->a:Lio/netty/util/concurrent/z;

    invoke-static {v0}, Lio/netty/util/concurrent/z;->a(Lio/netty/util/concurrent/z;)I

    invoke-interface {p1}, Lio/netty/util/concurrent/n;->g_()Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lio/netty/util/concurrent/z$1;->a:Lio/netty/util/concurrent/z;

    invoke-static {v0}, Lio/netty/util/concurrent/z;->b(Lio/netty/util/concurrent/z;)Ljava/lang/Throwable;

    move-result-object v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lio/netty/util/concurrent/z$1;->a:Lio/netty/util/concurrent/z;

    invoke-interface {p1}, Lio/netty/util/concurrent/n;->j()Ljava/lang/Throwable;

    move-result-object v1

    invoke-static {v0, v1}, Lio/netty/util/concurrent/z;->a(Lio/netty/util/concurrent/z;Ljava/lang/Throwable;)Ljava/lang/Throwable;

    :cond_0
    iget-object v0, p0, Lio/netty/util/concurrent/z$1;->a:Lio/netty/util/concurrent/z;

    invoke-static {v0}, Lio/netty/util/concurrent/z;->c(Lio/netty/util/concurrent/z;)I

    move-result v0

    iget-object v1, p0, Lio/netty/util/concurrent/z$1;->a:Lio/netty/util/concurrent/z;

    invoke-static {v1}, Lio/netty/util/concurrent/z;->d(Lio/netty/util/concurrent/z;)I

    move-result v1

    if-ne v0, v1, :cond_1

    iget-object v0, p0, Lio/netty/util/concurrent/z$1;->a:Lio/netty/util/concurrent/z;

    invoke-static {v0}, Lio/netty/util/concurrent/z;->e(Lio/netty/util/concurrent/z;)Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lio/netty/util/concurrent/z$1;->a:Lio/netty/util/concurrent/z;

    invoke-static {v0}, Lio/netty/util/concurrent/z;->f(Lio/netty/util/concurrent/z;)Z

    :cond_1
    return-void
.end method
