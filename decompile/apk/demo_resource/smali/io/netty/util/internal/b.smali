.class final Lio/netty/util/internal/b;
.super Ljava/lang/Object;


# static fields
.field static final synthetic a:Z

.field private static final b:J

.field private static final c:Ljava/lang/reflect/Method;

.field private static final d:Lio/netty/util/internal/logging/b;


# direct methods
.method static constructor <clinit>()V
    .locals 12

    const/4 v4, 0x0

    const-wide/16 v8, -0x1

    const/4 v3, 0x1

    const/4 v2, 0x0

    const-class v5, Lio/netty/util/internal/b;

    invoke-virtual {v5}, Ljava/lang/Class;->desiredAssertionStatus()Z

    move-result v5

    if-nez v5, :cond_0

    move v2, v3

    :cond_0
    sput-boolean v2, Lio/netty/util/internal/b;->a:Z

    const-class v2, Lio/netty/util/internal/b;

    invoke-static {v2}, Lio/netty/util/internal/logging/c;->a(Ljava/lang/Class;)Lio/netty/util/internal/logging/b;

    move-result-object v2

    sput-object v2, Lio/netty/util/internal/b;->d:Lio/netty/util/internal/logging/b;

    invoke-static {v3}, Ljava/nio/ByteBuffer;->allocateDirect(I)Ljava/nio/ByteBuffer;

    move-result-object v10

    invoke-static {}, Lio/netty/util/internal/l;->b()Z

    move-result v2

    if-eqz v2, :cond_2

    :try_start_0
    invoke-virtual {v10}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v2

    const-string v3, "cleaner"

    invoke-virtual {v2, v3}, Ljava/lang/Class;->getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field;

    move-result-object v2

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Ljava/lang/reflect/Field;->setAccessible(Z)V

    invoke-static {v2}, Lio/netty/util/internal/l;->a(Ljava/lang/reflect/Field;)J

    move-result-wide v6

    invoke-virtual {v2, v10}, Ljava/lang/reflect/Field;->get(Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_1

    move-result-object v3

    :try_start_1
    move-object v0, v3

    check-cast v0, Ljava/lang/Runnable;

    move-object v2, v0

    const-class v2, Ljava/lang/Runnable;

    const-string v5, "run"

    const/4 v11, 0x0

    new-array v11, v11, [Ljava/lang/Class;

    invoke-virtual {v2, v5, v11}, Ljava/lang/Class;->getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    :try_end_1
    .catch Ljava/lang/ClassCastException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/Throwable; {:try_start_1 .. :try_end_1} :catch_1

    move-result-object v2

    :goto_0
    const/4 v5, 0x0

    :try_start_2
    new-array v5, v5, [Ljava/lang/Object;

    invoke-virtual {v2, v3, v5}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_2
    .catch Ljava/lang/Throwable; {:try_start_2 .. :try_end_2} :catch_1

    move-wide v4, v6

    :goto_1
    sget-object v6, Lio/netty/util/internal/b;->d:Lio/netty/util/internal/logging/b;

    const-string v7, "java.nio.ByteBuffer.cleaner(): {}"

    cmp-long v3, v4, v8

    if-eqz v3, :cond_1

    const-string v3, "available"

    :goto_2
    invoke-interface {v6, v7, v3}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;)V

    sput-wide v4, Lio/netty/util/internal/b;->b:J

    sput-object v2, Lio/netty/util/internal/b;->c:Ljava/lang/reflect/Method;

    invoke-static {v10}, Lio/netty/util/internal/b;->a(Ljava/nio/ByteBuffer;)V

    return-void

    :catch_0
    move-exception v2

    :try_start_3
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v2

    const-string v5, "clean"

    const/4 v11, 0x0

    new-array v11, v11, [Ljava/lang/Class;

    invoke-virtual {v2, v5, v11}, Ljava/lang/Class;->getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    :try_end_3
    .catch Ljava/lang/Throwable; {:try_start_3 .. :try_end_3} :catch_1

    move-result-object v2

    goto :goto_0

    :catch_1
    move-exception v2

    move-object v2, v4

    move-wide v4, v8

    goto :goto_1

    :cond_1
    const-string v3, "unavailable"

    goto :goto_2

    :cond_2
    move-object v2, v4

    move-wide v4, v8

    goto :goto_1
.end method

.method private constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method static a(Ljava/nio/ByteBuffer;)V
    .locals 4

    sget-wide v0, Lio/netty/util/internal/b;->b:J

    const-wide/16 v2, -0x1

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    invoke-virtual {p0}, Ljava/nio/ByteBuffer;->isDirect()Z

    move-result v0

    if-nez v0, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    sget-boolean v0, Lio/netty/util/internal/b;->a:Z

    if-nez v0, :cond_2

    sget-object v0, Lio/netty/util/internal/b;->c:Ljava/lang/reflect/Method;

    if-nez v0, :cond_2

    new-instance v0, Ljava/lang/AssertionError;

    const-string v1, "CLEANER_FIELD_OFFSET != -1 implies CLEAN_METHOD != null"

    invoke-direct {v0, v1}, Ljava/lang/AssertionError;-><init>(Ljava/lang/Object;)V

    throw v0

    :cond_2
    :try_start_0
    sget-wide v0, Lio/netty/util/internal/b;->b:J

    invoke-static {p0, v0, v1}, Lio/netty/util/internal/l;->a(Ljava/lang/Object;J)Ljava/lang/Object;

    move-result-object v0

    if-eqz v0, :cond_0

    sget-object v1, Lio/netty/util/internal/b;->c:Ljava/lang/reflect/Method;

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {v1, v0, v2}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    goto :goto_0
.end method
