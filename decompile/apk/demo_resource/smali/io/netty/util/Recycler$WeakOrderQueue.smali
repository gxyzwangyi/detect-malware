.class final Lio/netty/util/Recycler$WeakOrderQueue;
.super Ljava/lang/Object;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lio/netty/util/Recycler;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x1a
    name = "WeakOrderQueue"
.end annotation

.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lio/netty/util/Recycler$WeakOrderQueue$Link;
    }
.end annotation


# static fields
.field static final synthetic a:Z


# instance fields
.field private b:Lio/netty/util/Recycler$WeakOrderQueue$Link;

.field private c:Lio/netty/util/Recycler$WeakOrderQueue$Link;

.field private d:Lio/netty/util/Recycler$WeakOrderQueue;

.field private final e:Ljava/lang/ref/WeakReference;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/lang/ref/WeakReference",
            "<",
            "Ljava/lang/Thread;",
            ">;"
        }
    .end annotation
.end field

.field private final f:I

.field private final g:Ljava/util/concurrent/atomic/AtomicInteger;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const-class v0, Lio/netty/util/Recycler;

    invoke-virtual {v0}, Ljava/lang/Class;->desiredAssertionStatus()Z

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    sput-boolean v0, Lio/netty/util/Recycler$WeakOrderQueue;->a:Z

    return-void

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private constructor <init>(Lio/netty/util/Recycler$c;Ljava/lang/Thread;)V
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/netty/util/Recycler$c",
            "<*>;",
            "Ljava/lang/Thread;",
            ")V"
        }
    .end annotation

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    invoke-static {}, Lio/netty/util/Recycler;->d()Ljava/util/concurrent/atomic/AtomicInteger;

    move-result-object v0

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->getAndIncrement()I

    move-result v0

    iput v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->f:I

    new-instance v0, Lio/netty/util/Recycler$WeakOrderQueue$Link;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Lio/netty/util/Recycler$WeakOrderQueue$Link;-><init>(Lio/netty/util/Recycler$1;)V

    iput-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->c:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    iput-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->b:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    new-instance v0, Ljava/lang/ref/WeakReference;

    invoke-direct {v0, p2}, Ljava/lang/ref/WeakReference;-><init>(Ljava/lang/Object;)V

    iput-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->e:Ljava/lang/ref/WeakReference;

    monitor-enter p1

    :try_start_0
    invoke-static {p1}, Lio/netty/util/Recycler$c;->c(Lio/netty/util/Recycler$c;)Lio/netty/util/Recycler$WeakOrderQueue;

    move-result-object v0

    iput-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->d:Lio/netty/util/Recycler$WeakOrderQueue;

    invoke-static {p1, p0}, Lio/netty/util/Recycler$c;->a(Lio/netty/util/Recycler$c;Lio/netty/util/Recycler$WeakOrderQueue;)Lio/netty/util/Recycler$WeakOrderQueue;

    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    iget-object v0, p1, Lio/netty/util/Recycler$c;->c:Ljava/util/concurrent/atomic/AtomicInteger;

    iput-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->g:Ljava/util/concurrent/atomic/AtomicInteger;

    return-void

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method static synthetic a(Lio/netty/util/Recycler$WeakOrderQueue;)Lio/netty/util/Recycler$WeakOrderQueue;
    .locals 1

    iget-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->d:Lio/netty/util/Recycler$WeakOrderQueue;

    return-object v0
.end method

.method static synthetic a(Lio/netty/util/Recycler$WeakOrderQueue;Lio/netty/util/Recycler$WeakOrderQueue;)Lio/netty/util/Recycler$WeakOrderQueue;
    .locals 0

    iput-object p1, p0, Lio/netty/util/Recycler$WeakOrderQueue;->d:Lio/netty/util/Recycler$WeakOrderQueue;

    return-object p1
.end method

.method static a(Lio/netty/util/Recycler$c;Ljava/lang/Thread;)Lio/netty/util/Recycler$WeakOrderQueue;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/netty/util/Recycler$c",
            "<*>;",
            "Ljava/lang/Thread;",
            ")",
            "Lio/netty/util/Recycler$WeakOrderQueue;"
        }
    .end annotation

    iget-object v0, p0, Lio/netty/util/Recycler$c;->c:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-static {}, Lio/netty/util/Recycler;->c()I

    move-result v1

    invoke-static {v0, v1}, Lio/netty/util/Recycler$WeakOrderQueue;->a(Ljava/util/concurrent/atomic/AtomicInteger;I)Z

    move-result v0

    if-eqz v0, :cond_0

    new-instance v0, Lio/netty/util/Recycler$WeakOrderQueue;

    invoke-direct {v0, p0, p1}, Lio/netty/util/Recycler$WeakOrderQueue;-><init>(Lio/netty/util/Recycler$c;Ljava/lang/Thread;)V

    :goto_0
    return-object v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private a(I)V
    .locals 1

    sget-boolean v0, Lio/netty/util/Recycler$WeakOrderQueue;->a:Z

    if-nez v0, :cond_0

    if-gez p1, :cond_0

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0

    :cond_0
    iget-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->g:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0, p1}, Ljava/util/concurrent/atomic/AtomicInteger;->addAndGet(I)I

    return-void
.end method

.method private static a(Ljava/util/concurrent/atomic/AtomicInteger;I)Z
    .locals 2

    sget-boolean v0, Lio/netty/util/Recycler$WeakOrderQueue;->a:Z

    if-nez v0, :cond_0

    if-gez p1, :cond_0

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0

    :cond_0
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v0

    if-ge v0, p1, :cond_1

    const/4 v0, 0x0

    :goto_0
    return v0

    :cond_1
    sub-int v1, v0, p1

    invoke-virtual {p0, v0, v1}, Ljava/util/concurrent/atomic/AtomicInteger;->compareAndSet(II)Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0
.end method

.method static synthetic b(Lio/netty/util/Recycler$WeakOrderQueue;)Ljava/lang/ref/WeakReference;
    .locals 1

    iget-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->e:Ljava/lang/ref/WeakReference;

    return-object v0
.end method


# virtual methods
.method a(Lio/netty/util/Recycler$a;)V
    .locals 4

    const/4 v3, 0x0

    iget v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->f:I

    invoke-static {p1, v0}, Lio/netty/util/Recycler$a;->a(Lio/netty/util/Recycler$a;I)I

    iget-object v1, p0, Lio/netty/util/Recycler$WeakOrderQueue;->c:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    invoke-virtual {v1}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->get()I

    move-result v0

    invoke-static {}, Lio/netty/util/Recycler;->c()I

    move-result v2

    if-ne v0, v2, :cond_1

    iget-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->g:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-static {}, Lio/netty/util/Recycler;->c()I

    move-result v2

    invoke-static {v0, v2}, Lio/netty/util/Recycler$WeakOrderQueue;->a(Ljava/util/concurrent/atomic/AtomicInteger;I)Z

    move-result v0

    if-nez v0, :cond_0

    :goto_0
    return-void

    :cond_0
    new-instance v0, Lio/netty/util/Recycler$WeakOrderQueue$Link;

    invoke-direct {v0, v3}, Lio/netty/util/Recycler$WeakOrderQueue$Link;-><init>(Lio/netty/util/Recycler$1;)V

    invoke-static {v1, v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->a(Lio/netty/util/Recycler$WeakOrderQueue$Link;Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;

    move-result-object v1

    iput-object v1, p0, Lio/netty/util/Recycler$WeakOrderQueue;->c:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    invoke-virtual {v1}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->get()I

    move-result v0

    :cond_1
    invoke-static {v1}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->a(Lio/netty/util/Recycler$WeakOrderQueue$Link;)[Lio/netty/util/Recycler$a;

    move-result-object v2

    aput-object p1, v2, v0

    invoke-static {p1, v3}, Lio/netty/util/Recycler$a;->a(Lio/netty/util/Recycler$a;Lio/netty/util/Recycler$c;)Lio/netty/util/Recycler$c;

    add-int/lit8 v0, v0, 0x1

    invoke-virtual {v1, v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->lazySet(I)V

    goto :goto_0
.end method

.method a()Z
    .locals 2

    iget-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->c:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    invoke-static {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->b(Lio/netty/util/Recycler$WeakOrderQueue$Link;)I

    move-result v0

    iget-object v1, p0, Lio/netty/util/Recycler$WeakOrderQueue;->c:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    invoke-virtual {v1}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->get()I

    move-result v1

    if-eq v0, v1, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method a(Lio/netty/util/Recycler$c;)Z
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/netty/util/Recycler$c",
            "<*>;)Z"
        }
    .end annotation

    const/4 v1, 0x0

    iget-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->b:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    if-nez v0, :cond_0

    move v0, v1

    :goto_0
    return v0

    :cond_0
    invoke-static {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->b(Lio/netty/util/Recycler$WeakOrderQueue$Link;)I

    move-result v2

    invoke-static {}, Lio/netty/util/Recycler;->c()I

    move-result v3

    if-ne v2, v3, :cond_2

    invoke-static {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->c(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;

    move-result-object v2

    if-nez v2, :cond_1

    move v0, v1

    goto :goto_0

    :cond_1
    invoke-static {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->c(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;

    move-result-object v0

    iput-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->b:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    :cond_2
    invoke-static {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->b(Lio/netty/util/Recycler$WeakOrderQueue$Link;)I

    move-result v2

    invoke-virtual {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->get()I

    move-result v4

    sub-int v5, v4, v2

    if-nez v5, :cond_3

    move v0, v1

    goto :goto_0

    :cond_3
    invoke-static {p1}, Lio/netty/util/Recycler$c;->b(Lio/netty/util/Recycler$c;)I

    move-result v3

    add-int/2addr v5, v3

    invoke-static {p1}, Lio/netty/util/Recycler$c;->a(Lio/netty/util/Recycler$c;)[Lio/netty/util/Recycler$a;

    move-result-object v6

    array-length v6, v6

    if-le v5, v6, :cond_4

    invoke-virtual {p1, v5}, Lio/netty/util/Recycler$c;->a(I)I

    move-result v5

    add-int/2addr v5, v2

    sub-int/2addr v5, v3

    invoke-static {v5, v4}, Ljava/lang/Math;->min(II)I

    move-result v4

    :cond_4
    if-eq v2, v4, :cond_9

    invoke-static {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->a(Lio/netty/util/Recycler$WeakOrderQueue$Link;)[Lio/netty/util/Recycler$a;

    move-result-object v5

    invoke-static {p1}, Lio/netty/util/Recycler$c;->a(Lio/netty/util/Recycler$c;)[Lio/netty/util/Recycler$a;

    move-result-object v6

    move v1, v2

    move v2, v3

    :goto_1
    if-ge v1, v4, :cond_7

    aget-object v7, v5, v1

    invoke-static {v7}, Lio/netty/util/Recycler$a;->c(Lio/netty/util/Recycler$a;)I

    move-result v3

    if-nez v3, :cond_6

    invoke-static {v7}, Lio/netty/util/Recycler$a;->d(Lio/netty/util/Recycler$a;)I

    move-result v3

    invoke-static {v7, v3}, Lio/netty/util/Recycler$a;->b(Lio/netty/util/Recycler$a;I)I

    :cond_5
    invoke-static {v7, p1}, Lio/netty/util/Recycler$a;->a(Lio/netty/util/Recycler$a;Lio/netty/util/Recycler$c;)Lio/netty/util/Recycler$c;

    add-int/lit8 v3, v2, 0x1

    aput-object v7, v6, v2

    const/4 v2, 0x0

    aput-object v2, v5, v1

    add-int/lit8 v1, v1, 0x1

    move v2, v3

    goto :goto_1

    :cond_6
    invoke-static {v7}, Lio/netty/util/Recycler$a;->c(Lio/netty/util/Recycler$a;)I

    move-result v3

    invoke-static {v7}, Lio/netty/util/Recycler$a;->d(Lio/netty/util/Recycler$a;)I

    move-result v8

    if-eq v3, v8, :cond_5

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "recycled already"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_7
    invoke-static {p1, v2}, Lio/netty/util/Recycler$c;->a(Lio/netty/util/Recycler$c;I)I

    invoke-static {}, Lio/netty/util/Recycler;->c()I

    move-result v1

    if-ne v4, v1, :cond_8

    invoke-static {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->c(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;

    move-result-object v1

    if-eqz v1, :cond_8

    invoke-static {}, Lio/netty/util/Recycler;->c()I

    move-result v1

    invoke-direct {p0, v1}, Lio/netty/util/Recycler$WeakOrderQueue;->a(I)V

    invoke-static {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->c(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;

    move-result-object v1

    iput-object v1, p0, Lio/netty/util/Recycler$WeakOrderQueue;->b:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    :cond_8
    invoke-static {v0, v4}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->a(Lio/netty/util/Recycler$WeakOrderQueue$Link;I)I

    const/4 v0, 0x1

    goto/16 :goto_0

    :cond_9
    move v0, v1

    goto/16 :goto_0
.end method

.method protected finalize()V
    .locals 3

    :try_start_0
    invoke-super {p0}, Ljava/lang/Object;->finalize()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    iget-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->b:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    :goto_0
    if-eqz v0, :cond_1

    invoke-static {}, Lio/netty/util/Recycler;->c()I

    move-result v1

    invoke-direct {p0, v1}, Lio/netty/util/Recycler$WeakOrderQueue;->a(I)V

    invoke-static {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->c(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;

    move-result-object v0

    goto :goto_0

    :catchall_0
    move-exception v1

    iget-object v0, p0, Lio/netty/util/Recycler$WeakOrderQueue;->b:Lio/netty/util/Recycler$WeakOrderQueue$Link;

    :goto_1
    if-eqz v0, :cond_0

    invoke-static {}, Lio/netty/util/Recycler;->c()I

    move-result v2

    invoke-direct {p0, v2}, Lio/netty/util/Recycler$WeakOrderQueue;->a(I)V

    invoke-static {v0}, Lio/netty/util/Recycler$WeakOrderQueue$Link;->c(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;

    move-result-object v0

    goto :goto_1

    :cond_0
    throw v1

    :cond_1
    return-void
.end method
