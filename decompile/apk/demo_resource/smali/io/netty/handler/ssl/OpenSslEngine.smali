.class public final Lio/netty/handler/ssl/OpenSslEngine;
.super Ljavax/net/ssl/SSLEngine;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lio/netty/handler/ssl/OpenSslEngine$1;,
        Lio/netty/handler/ssl/OpenSslEngine$a;,
        Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;
    }
.end annotation


# static fields
.field static final synthetic b:Z

.field private static final c:Lio/netty/util/internal/logging/b;

.field private static final d:[Ljava/security/cert/Certificate;

.field private static final e:[Ljavax/security/cert/X509Certificate;

.field private static final f:Ljavax/net/ssl/SSLException;

.field private static final g:Ljavax/net/ssl/SSLException;

.field private static final h:Ljavax/net/ssl/SSLException;

.field private static final i:Ljavax/net/ssl/SSLException;

.field private static final j:Ljava/lang/Class;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/lang/Class",
            "<*>;"
        }
    .end annotation
.end field

.field private static final k:Ljava/lang/reflect/Method;

.field private static final l:Ljava/lang/reflect/Method;

.field private static final m:Ljava/lang/reflect/Method;

.field private static final n:Ljava/lang/reflect/Method;

.field private static final o:Ljava/lang/reflect/Method;

.field private static final p:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater",
            "<",
            "Lio/netty/handler/ssl/OpenSslEngine;",
            ">;"
        }
    .end annotation
.end field

.field private static final q:J

.field private static final r:Ljavax/net/ssl/SSLEngineResult;

.field private static final s:Ljavax/net/ssl/SSLEngineResult;

.field private static final t:Ljavax/net/ssl/SSLEngineResult;

.field private static final u:Ljavax/net/ssl/SSLEngineResult;

.field private static final v:Ljavax/net/ssl/SSLEngineResult;


# instance fields
.field private A:Z

.field private volatile B:I

.field private volatile C:Lio/netty/handler/ssl/ClientAuth;

.field private volatile D:J

.field private E:Ljava/lang/String;

.field private F:Ljava/lang/Object;

.field private G:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<*>;"
        }
    .end annotation
.end field

.field private H:Z

.field private I:Z

.field private J:Z

.field private final K:Z

.field private final L:Lio/netty/buffer/i;

.field private final M:Lio/netty/handler/ssl/w;

.field private final N:Lio/netty/handler/ssl/s;

.field private final O:Z

.field private final P:Lio/netty/handler/ssl/OpenSslEngine$a;

.field private final Q:[Ljava/security/cert/Certificate;

.field private final R:[Ljava/nio/ByteBuffer;

.field private final S:[Ljava/nio/ByteBuffer;

.field private final T:Lio/netty/handler/ssl/z;

.field a:Ljavax/net/ssl/SSLHandshakeException;

.field private w:J

.field private x:J

.field private y:Z

.field private z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;


# direct methods
.method static constructor <clinit>()V
    .locals 12

    const/4 v0, 0x1

    const/4 v3, 0x0

    const/4 v1, 0x0

    const-class v2, Lio/netty/handler/ssl/OpenSslEngine;

    invoke-virtual {v2}, Ljava/lang/Class;->desiredAssertionStatus()Z

    move-result v2

    if-nez v2, :cond_1

    :goto_0
    sput-boolean v0, Lio/netty/handler/ssl/OpenSslEngine;->b:Z

    const-class v0, Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/util/internal/logging/c;->a(Ljava/lang/Class;)Lio/netty/util/internal/logging/b;

    move-result-object v0

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->c:Lio/netty/util/internal/logging/b;

    sget-object v0, Lio/netty/util/internal/c;->n:[Ljava/security/cert/Certificate;

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->d:[Ljava/security/cert/Certificate;

    sget-object v0, Lio/netty/util/internal/c;->p:[Ljavax/security/cert/X509Certificate;

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->e:[Ljavax/security/cert/X509Certificate;

    new-instance v0, Ljavax/net/ssl/SSLException;

    const-string v2, "engine closed"

    invoke-direct {v0, v2}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;)V

    const-class v2, Lio/netty/handler/ssl/OpenSslEngine;

    const-string v4, "beginHandshake()"

    invoke-static {v0, v2, v4}, Lio/netty/util/internal/o;->a(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;

    move-result-object v0

    check-cast v0, Ljavax/net/ssl/SSLException;

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->f:Ljavax/net/ssl/SSLException;

    new-instance v0, Ljavax/net/ssl/SSLException;

    const-string v2, "engine closed"

    invoke-direct {v0, v2}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;)V

    const-class v2, Lio/netty/handler/ssl/OpenSslEngine;

    const-string v4, "handshake()"

    invoke-static {v0, v2, v4}, Lio/netty/util/internal/o;->a(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;

    move-result-object v0

    check-cast v0, Ljavax/net/ssl/SSLException;

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->g:Ljavax/net/ssl/SSLException;

    new-instance v0, Ljavax/net/ssl/SSLException;

    const-string v2, "renegotiation unsupported"

    invoke-direct {v0, v2}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;)V

    const-class v2, Lio/netty/handler/ssl/OpenSslEngine;

    const-string v4, "beginHandshake()"

    invoke-static {v0, v2, v4}, Lio/netty/util/internal/o;->a(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;

    move-result-object v0

    check-cast v0, Ljavax/net/ssl/SSLException;

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->h:Ljavax/net/ssl/SSLException;

    new-instance v0, Ljavax/net/ssl/SSLException;

    const-string v2, "encrypted packet oversized"

    invoke-direct {v0, v2}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;)V

    const-class v2, Lio/netty/handler/ssl/OpenSslEngine;

    const-string v4, "unwrap(...)"

    invoke-static {v0, v2, v4}, Lio/netty/util/internal/o;->a(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;

    move-result-object v0

    check-cast v0, Ljavax/net/ssl/SSLException;

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->i:Ljavax/net/ssl/SSLException;

    const-class v0, Lio/netty/handler/ssl/OpenSslEngine;

    const-string v2, "B"

    invoke-static {v0, v2}, Lio/netty/util/internal/PlatformDependent;->b(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    move-result-object v0

    if-nez v0, :cond_0

    const-class v0, Lio/netty/handler/ssl/OpenSslEngine;

    const-string v2, "B"

    invoke-static {v0, v2}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->newUpdater(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    move-result-object v0

    :cond_0
    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->p:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    invoke-static {}, Lio/netty/util/internal/PlatformDependent;->d()I

    move-result v0

    const/16 v2, 0x8

    if-lt v0, v2, :cond_2

    :try_start_0
    const-class v0, Ljavax/net/ssl/SSLParameters;

    const-string v2, "getUseCipherSuitesOrder"

    const/4 v4, 0x0

    new-array v4, v4, [Ljava/lang/Class;

    invoke-virtual {v0, v2, v4}, Ljava/lang/Class;->getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v8

    new-instance v2, Ljavax/net/ssl/SSLParameters;

    invoke-direct {v2}, Ljavax/net/ssl/SSLParameters;-><init>()V

    const/4 v0, 0x0

    new-array v0, v0, [Ljava/lang/Object;

    invoke-virtual {v8, v2, v0}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Boolean;

    const-class v0, Ljavax/net/ssl/SSLParameters;

    const-string v4, "setUseCipherSuitesOrder"

    const/4 v5, 0x1

    new-array v5, v5, [Ljava/lang/Class;

    const/4 v6, 0x0

    sget-object v7, Ljava/lang/Boolean;->TYPE:Ljava/lang/Class;

    aput-object v7, v5, v6

    invoke-virtual {v0, v4, v5}, Ljava/lang/Class;->getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v7

    const/4 v0, 0x1

    new-array v0, v0, [Ljava/lang/Object;

    const/4 v4, 0x0

    const/4 v5, 0x1

    invoke-static {v5}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v5

    aput-object v5, v0, v4

    invoke-virtual {v7, v2, v0}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    :goto_1
    :try_start_1
    const-string v0, "javax.net.ssl.SNIHostName"

    const/4 v2, 0x0

    const-class v4, Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v4}, Lio/netty/util/internal/PlatformDependent;->a(Ljava/lang/Class;)Ljava/lang/ClassLoader;

    move-result-object v4

    invoke-static {v0, v2, v4}, Ljava/lang/Class;->forName(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;

    move-result-object v6

    const/4 v0, 0x1

    new-array v0, v0, [Ljava/lang/Class;

    const/4 v2, 0x0

    const-class v4, Ljava/lang/String;

    aput-object v4, v0, v2

    invoke-virtual {v6, v0}, Ljava/lang/Class;->getConstructor([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;

    move-result-object v0

    const/4 v2, 0x1

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v4, 0x0

    const-string v5, "netty.io"

    aput-object v5, v2, v4

    invoke-virtual {v0, v2}, Ljava/lang/reflect/Constructor;->newInstance([Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    const-string v2, "getAsciiName"

    const/4 v4, 0x0

    new-array v4, v4, [Ljava/lang/Class;

    invoke-virtual {v6, v2, v4}, Ljava/lang/Class;->getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v5

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {v5, v0, v2}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    const-class v0, Ljavax/net/ssl/SSLParameters;

    const-string v2, "getServerNames"

    const/4 v4, 0x0

    new-array v4, v4, [Ljava/lang/Class;

    invoke-virtual {v0, v2, v4}, Ljava/lang/Class;->getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v4

    const-class v0, Ljavax/net/ssl/SSLParameters;

    const-string v2, "setServerNames"

    const/4 v9, 0x1

    new-array v9, v9, [Ljava/lang/Class;

    const/4 v10, 0x0

    const-class v11, Ljava/util/List;

    aput-object v11, v9, v10

    invoke-virtual {v0, v2, v9}, Ljava/lang/Class;->getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v2

    new-instance v9, Ljavax/net/ssl/SSLParameters;

    invoke-direct {v9}, Ljavax/net/ssl/SSLParameters;-><init>()V

    const/4 v0, 0x0

    new-array v0, v0, [Ljava/lang/Object;

    invoke-virtual {v4, v9, v0}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/List;

    const/4 v0, 0x1

    new-array v0, v0, [Ljava/lang/Object;

    const/4 v10, 0x0

    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v11

    aput-object v11, v0, v10

    invoke-virtual {v2, v9, v0}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_1
    .catch Ljava/lang/Throwable; {:try_start_1 .. :try_end_1} :catch_1

    move-object v0, v2

    move-object v3, v4

    move-object v2, v5

    move-object v4, v6

    move-object v5, v7

    move-object v6, v8

    :goto_2
    sput-object v6, Lio/netty/handler/ssl/OpenSslEngine;->n:Ljava/lang/reflect/Method;

    sput-object v5, Lio/netty/handler/ssl/OpenSslEngine;->o:Ljava/lang/reflect/Method;

    sput-object v4, Lio/netty/handler/ssl/OpenSslEngine;->j:Ljava/lang/Class;

    sput-object v2, Lio/netty/handler/ssl/OpenSslEngine;->m:Ljava/lang/reflect/Method;

    sput-object v3, Lio/netty/handler/ssl/OpenSslEngine;->k:Ljava/lang/reflect/Method;

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->l:Ljava/lang/reflect/Method;

    sget-object v0, Lio/netty/buffer/ak;->c:Lio/netty/buffer/h;

    invoke-virtual {v0}, Lio/netty/buffer/h;->v()Ljava/nio/ByteBuffer;

    move-result-object v0

    invoke-static {v0}, Lorg/apache/tomcat/jni/Buffer;->address(Ljava/nio/ByteBuffer;)J

    move-result-wide v2

    sput-wide v2, Lio/netty/handler/ssl/OpenSslEngine;->q:J

    new-instance v0, Ljavax/net/ssl/SSLEngineResult;

    sget-object v2, Ljavax/net/ssl/SSLEngineResult$Status;->OK:Ljavax/net/ssl/SSLEngineResult$Status;

    sget-object v3, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_UNWRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    invoke-direct {v0, v2, v3, v1, v1}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->r:Ljavax/net/ssl/SSLEngineResult;

    new-instance v0, Ljavax/net/ssl/SSLEngineResult;

    sget-object v2, Ljavax/net/ssl/SSLEngineResult$Status;->CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;

    sget-object v3, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_UNWRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    invoke-direct {v0, v2, v3, v1, v1}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->s:Ljavax/net/ssl/SSLEngineResult;

    new-instance v0, Ljavax/net/ssl/SSLEngineResult;

    sget-object v2, Ljavax/net/ssl/SSLEngineResult$Status;->OK:Ljavax/net/ssl/SSLEngineResult$Status;

    sget-object v3, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_WRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    invoke-direct {v0, v2, v3, v1, v1}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->t:Ljavax/net/ssl/SSLEngineResult;

    new-instance v0, Ljavax/net/ssl/SSLEngineResult;

    sget-object v2, Ljavax/net/ssl/SSLEngineResult$Status;->CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;

    sget-object v3, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_WRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    invoke-direct {v0, v2, v3, v1, v1}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->u:Ljavax/net/ssl/SSLEngineResult;

    new-instance v0, Ljavax/net/ssl/SSLEngineResult;

    sget-object v2, Ljavax/net/ssl/SSLEngineResult$Status;->CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;

    sget-object v3, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    invoke-direct {v0, v2, v3, v1, v1}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    sput-object v0, Lio/netty/handler/ssl/OpenSslEngine;->v:Ljavax/net/ssl/SSLEngineResult;

    return-void

    :cond_1
    move v0, v1

    goto/16 :goto_0

    :catch_0
    move-exception v0

    move-object v7, v3

    move-object v8, v3

    goto/16 :goto_1

    :catch_1
    move-exception v0

    move-object v0, v3

    move-object v2, v3

    move-object v4, v3

    move-object v5, v7

    move-object v6, v8

    goto :goto_2

    :cond_2
    move-object v0, v3

    move-object v2, v3

    move-object v4, v3

    move-object v5, v3

    move-object v6, v3

    goto :goto_2
.end method

.method constructor <init>(Lio/netty/handler/ssl/u;Lio/netty/buffer/i;Ljava/lang/String;I)V
    .locals 4

    const/4 v1, 0x1

    invoke-direct {p0, p3, p4}, Ljavax/net/ssl/SSLEngine;-><init>(Ljava/lang/String;I)V

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->a:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v0, Lio/netty/handler/ssl/ClientAuth;->a:Lio/netty/handler/ssl/ClientAuth;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->C:Lio/netty/handler/ssl/ClientAuth;

    const-wide/16 v2, -0x1

    iput-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->D:J

    new-array v0, v1, [Ljava/nio/ByteBuffer;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->R:[Ljava/nio/ByteBuffer;

    new-array v0, v1, [Ljava/nio/ByteBuffer;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->S:[Ljava/nio/ByteBuffer;

    invoke-static {}, Lio/netty/handler/ssl/r;->b()V

    const-string v0, "alloc"

    invoke-static {p2, v0}, Lio/netty/util/internal/k;->a(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lio/netty/buffer/i;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->L:Lio/netty/buffer/i;

    invoke-virtual {p1}, Lio/netty/handler/ssl/u;->d()Lio/netty/handler/ssl/a;

    move-result-object v0

    check-cast v0, Lio/netty/handler/ssl/s;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->N:Lio/netty/handler/ssl/s;

    iget-wide v2, p1, Lio/netty/handler/ssl/u;->a:J

    invoke-virtual {p1}, Lio/netty/handler/ssl/u;->b()Z

    move-result v0

    if-nez v0, :cond_1

    move v0, v1

    :goto_0
    invoke-static {v2, v3, v0}, Lorg/apache/tomcat/jni/SSL;->newSSL(JZ)J

    move-result-wide v0

    iput-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    new-instance v0, Lio/netty/handler/ssl/OpenSslEngine$a;

    invoke-virtual {p1}, Lio/netty/handler/ssl/u;->a()Lio/netty/handler/ssl/ac;

    move-result-object v1

    invoke-direct {v0, p0, v1}, Lio/netty/handler/ssl/OpenSslEngine$a;-><init>(Lio/netty/handler/ssl/OpenSslEngine;Lio/netty/handler/ssl/ac;)V

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->P:Lio/netty/handler/ssl/OpenSslEngine$a;

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->makeNetworkBIO(J)J

    move-result-wide v0

    iput-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-virtual {p1}, Lio/netty/handler/ssl/u;->b()Z

    move-result v0

    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->K:Z

    iget-object v0, p1, Lio/netty/handler/ssl/u;->e:Lio/netty/handler/ssl/w;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->M:Lio/netty/handler/ssl/w;

    iget-boolean v0, p1, Lio/netty/handler/ssl/u;->f:Z

    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->O:Z

    iget-object v0, p1, Lio/netty/handler/ssl/u;->c:[Ljava/security/cert/Certificate;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->Q:[Ljava/security/cert/Certificate;

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->K:Z

    if-eqz v0, :cond_2

    sget-object v0, Lio/netty/handler/ssl/ClientAuth;->a:Lio/netty/handler/ssl/ClientAuth;

    :goto_1
    invoke-direct {p0, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Lio/netty/handler/ssl/ClientAuth;)V

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->K:Z

    if-eqz v0, :cond_0

    if-eqz p3, :cond_0

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1, p3}, Lorg/apache/tomcat/jni/SSL;->setTlsExtHostName(JLjava/lang/String;)V

    :cond_0
    invoke-virtual {p1}, Lio/netty/handler/ssl/u;->c()Lio/netty/handler/ssl/z;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->T:Lio/netty/handler/ssl/z;

    return-void

    :cond_1
    const/4 v0, 0x0

    goto :goto_0

    :cond_2
    iget-object v0, p1, Lio/netty/handler/ssl/u;->d:Lio/netty/handler/ssl/ClientAuth;

    goto :goto_1
.end method

.method private a(Ljava/nio/ByteBuffer;)I
    .locals 8

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v1

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->limit()I

    move-result v0

    sub-int v2, v0, v1

    const/16 v3, 0x4000

    invoke-static {v2, v3}, Ljava/lang/Math;->min(II)I

    move-result v2

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->isDirect()Z

    move-result v3

    if-eqz v3, :cond_1

    invoke-static {p1}, Lorg/apache/tomcat/jni/Buffer;->address(Ljava/nio/ByteBuffer;)J

    move-result-wide v4

    int-to-long v6, v1

    add-long/2addr v4, v6

    iget-wide v6, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v6, v7, v4, v5, v2}, Lorg/apache/tomcat/jni/SSL;->writeToSSL(JJI)I

    move-result v0

    if-lez v0, :cond_0

    add-int/2addr v1, v0

    invoke-virtual {p1, v1}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;

    :cond_0
    :goto_0
    return v0

    :cond_1
    iget-object v3, p0, Lio/netty/handler/ssl/OpenSslEngine;->L:Lio/netty/buffer/i;

    invoke-interface {v3, v2}, Lio/netty/buffer/i;->d(I)Lio/netty/buffer/h;

    move-result-object v3

    :try_start_0
    invoke-static {v3}, Lio/netty/handler/ssl/r;->a(Lio/netty/buffer/h;)J

    move-result-wide v4

    add-int v6, v1, v2

    invoke-virtual {p1, v6}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    const/4 v6, 0x0

    invoke-virtual {v3, v6, p1}, Lio/netty/buffer/h;->b(ILjava/nio/ByteBuffer;)Lio/netty/buffer/h;

    invoke-virtual {p1, v0}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    iget-wide v6, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v6, v7, v4, v5, v2}, Lorg/apache/tomcat/jni/SSL;->writeToSSL(JJI)I

    move-result v0

    if-lez v0, :cond_2

    add-int/2addr v1, v0

    invoke-virtual {p1, v1}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :goto_1
    invoke-virtual {v3}, Lio/netty/buffer/h;->B()Z

    goto :goto_0

    :cond_2
    :try_start_1
    invoke-virtual {p1, v1}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    :catchall_0
    move-exception v0

    invoke-virtual {v3}, Lio/netty/buffer/h;->B()Z

    throw v0
.end method

.method private a(Ljava/nio/ByteBuffer;I)I
    .locals 6

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->isDirect()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v0

    if-lt v0, p2, :cond_1

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v1

    invoke-static {p1}, Lorg/apache/tomcat/jni/Buffer;->address(Ljava/nio/ByteBuffer;)J

    move-result-wide v2

    int-to-long v4, v1

    add-long/2addr v2, v4

    iget-wide v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-static {v4, v5, v2, v3, p2}, Lorg/apache/tomcat/jni/SSL;->readFromBIO(JJI)I

    move-result v0

    if-lez v0, :cond_0

    add-int/2addr v1, v0

    invoke-virtual {p1, v1}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;

    :cond_0
    :goto_0
    return v0

    :cond_1
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->L:Lio/netty/buffer/i;

    invoke-interface {v0, p2}, Lio/netty/buffer/i;->d(I)Lio/netty/buffer/h;

    move-result-object v1

    :try_start_0
    invoke-static {v1}, Lio/netty/handler/ssl/r;->a(Lio/netty/buffer/h;)J

    move-result-wide v2

    iget-wide v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-static {v4, v5, v2, v3, p2}, Lorg/apache/tomcat/jni/SSL;->readFromBIO(JJI)I

    move-result v0

    if-lez v0, :cond_2

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->limit()I

    move-result v2

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v3

    add-int/2addr v3, v0

    invoke-virtual {p1, v3}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    const/4 v3, 0x0

    invoke-virtual {v1, v3, p1}, Lio/netty/buffer/h;->a(ILjava/nio/ByteBuffer;)Lio/netty/buffer/h;

    invoke-virtual {p1, v2}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-virtual {v1}, Lio/netty/buffer/h;->B()Z

    goto :goto_0

    :cond_2
    invoke-virtual {v1}, Lio/netty/buffer/h;->B()Z

    goto :goto_0

    :catchall_0
    move-exception v0

    invoke-virtual {v1}, Lio/netty/buffer/h;->B()Z

    throw v0
.end method

.method static synthetic a(Lio/netty/handler/ssl/OpenSslEngine;Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;)Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;
    .locals 0

    iput-object p1, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    return-object p1
.end method

.method static synthetic a(Lio/netty/handler/ssl/OpenSslEngine;Ljava/lang/String;)Ljava/lang/String;
    .locals 1

    invoke-direct {p0, p1}, Lio/netty/handler/ssl/OpenSslEngine;->b(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method private static a(I)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
    .locals 1

    if-lez p0, :cond_0

    sget-object v0, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_WRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    :goto_0
    return-object v0

    :cond_0
    sget-object v0, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_UNWRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    goto :goto_0
.end method

.method private a(Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
    .locals 2

    sget-object v0, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    if-ne p1, v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v1, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->d:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-eq v0, v1, :cond_0

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->j()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object p1

    :cond_0
    return-object p1
.end method

.method private a(III)Ljavax/net/ssl/SSLEngineResult;
    .locals 4

    int-to-long v0, p1

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->getErrorString(J)Ljava/lang/String;

    move-result-object v0

    iget-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->pendingWrittenBytesInBIO(J)I

    move-result v1

    if-lez v1, :cond_1

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->a:Ljavax/net/ssl/SSLHandshakeException;

    if-nez v1, :cond_0

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v2, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->d:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-eq v1, v2, :cond_0

    new-instance v1, Ljavax/net/ssl/SSLHandshakeException;

    invoke-direct {v1, v0}, Ljavax/net/ssl/SSLHandshakeException;-><init>(Ljava/lang/String;)V

    iput-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->a:Ljavax/net/ssl/SSLHandshakeException;

    :cond_0
    new-instance v0, Ljavax/net/ssl/SSLEngineResult;

    sget-object v1, Ljavax/net/ssl/SSLEngineResult$Status;->OK:Ljavax/net/ssl/SSLEngineResult$Status;

    sget-object v2, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_WRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    invoke-direct {v0, v1, v2, p2, p3}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    return-object v0

    :cond_1
    const-string v1, "SSL_read"

    invoke-direct {p0, v1, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/SSLException;

    move-result-object v0

    throw v0
.end method

.method private a(IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;
    .locals 3

    new-instance v0, Ljavax/net/ssl/SSLEngineResult;

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->k()Ljavax/net/ssl/SSLEngineResult$Status;

    move-result-object v1

    sget-object v2, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    if-eq p3, v2, :cond_0

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->getHandshakeStatus()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object p3

    :cond_0
    invoke-direct {p0, p3}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v2

    invoke-direct {v0, v1, v2, p1, p2}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    return-object v0
.end method

.method private a(Ljava/nio/ByteBuffer;IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;
    .locals 4

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->pendingWrittenBytesInBIO(J)I

    move-result v0

    if-lez v0, :cond_5

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v1

    if-ge v1, v0, :cond_1

    new-instance v1, Ljavax/net/ssl/SSLEngineResult;

    sget-object v2, Ljavax/net/ssl/SSLEngineResult$Status;->BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;

    sget-object v3, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    if-eq p4, v3, :cond_0

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(I)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object p4

    :cond_0
    invoke-direct {p0, p4}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v0

    invoke-direct {v1, v2, v0, p2, p3}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    move-object v0, v1

    :goto_0
    return-object v0

    :cond_1
    invoke-direct {p0, p1, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/nio/ByteBuffer;I)I

    move-result v1

    if-gtz v1, :cond_4

    invoke-static {}, Lorg/apache/tomcat/jni/SSL;->clearError()V

    :goto_1
    iget-boolean v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->I:Z

    if-eqz v1, :cond_2

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V

    :cond_2
    new-instance v1, Ljavax/net/ssl/SSLEngineResult;

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->k()Ljavax/net/ssl/SSLEngineResult$Status;

    move-result-object v2

    sget-object v3, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    if-eq p4, v3, :cond_3

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(I)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object p4

    :cond_3
    invoke-direct {p0, p4}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v0

    invoke-direct {v1, v2, v0, p2, p3}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    move-object v0, v1

    goto :goto_0

    :cond_4
    add-int/2addr p3, v1

    sub-int/2addr v0, v1

    goto :goto_1

    :cond_5
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private a(Ljava/lang/String;)Ljavax/net/ssl/SSLException;
    .locals 1

    invoke-static {}, Lorg/apache/tomcat/jni/SSL;->getLastError()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, p1, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/SSLException;

    move-result-object v0

    return-object v0
.end method

.method private a(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/SSLException;
    .locals 2

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->c:Lio/netty/util/internal/logging/b;

    invoke-interface {v0}, Lio/netty/util/internal/logging/b;->b()Z

    move-result v0

    if-eqz v0, :cond_0

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->c:Lio/netty/util/internal/logging/b;

    const-string v1, "{} failed: OpenSSL error: {}"

    invoke-interface {v0, v1, p1, p2}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    :cond_0
    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v1, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->d:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-ne v0, v1, :cond_1

    new-instance v0, Ljavax/net/ssl/SSLException;

    invoke-direct {v0, p2}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;)V

    :goto_0
    return-object v0

    :cond_1
    new-instance v0, Ljavax/net/ssl/SSLHandshakeException;

    invoke-direct {v0, p2}, Ljavax/net/ssl/SSLHandshakeException;-><init>(Ljava/lang/String;)V

    goto :goto_0
.end method

.method private a(Lio/netty/handler/ssl/ClientAuth;)V
    .locals 4

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->K:Z

    if-eqz v0, :cond_0

    :goto_0
    return-void

    :cond_0
    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->C:Lio/netty/handler/ssl/ClientAuth;

    if-ne v0, p1, :cond_1

    monitor-exit p0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    :cond_1
    :try_start_1
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine$1;->b:[I

    invoke-virtual {p1}, Lio/netty/handler/ssl/ClientAuth;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_0

    :goto_1
    iput-object p1, p0, Lio/netty/handler/ssl/OpenSslEngine;->C:Lio/netty/handler/ssl/ClientAuth;

    monitor-exit p0

    goto :goto_0

    :pswitch_0
    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    const/4 v2, 0x0

    const/16 v3, 0xa

    invoke-static {v0, v1, v2, v3}, Lorg/apache/tomcat/jni/SSL;->setVerify(JII)V

    goto :goto_1

    :pswitch_1
    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    const/4 v2, 0x2

    const/16 v3, 0xa

    invoke-static {v0, v1, v2, v3}, Lorg/apache/tomcat/jni/SSL;->setVerify(JII)V

    goto :goto_1

    :pswitch_2
    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    const/4 v2, 0x1

    const/16 v3, 0xa

    invoke-static {v0, v1, v2, v3}, Lorg/apache/tomcat/jni/SSL;->setVerify(JII)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method private a(Ljavax/net/ssl/SSLException;)V
    .locals 1

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->J:Z

    if-nez v0, :cond_0

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z

    move-result v0

    if-eqz v0, :cond_1

    :cond_0
    throw p1

    :cond_1
    return-void
.end method

.method static synthetic a(Lio/netty/handler/ssl/OpenSslEngine;)Z
    .locals 1

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z

    move-result v0

    return v0
.end method

.method private b(Ljava/nio/ByteBuffer;)I
    .locals 8

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v1

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v0

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->isDirect()Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-static {p1}, Lorg/apache/tomcat/jni/Buffer;->address(Ljava/nio/ByteBuffer;)J

    move-result-wide v2

    int-to-long v4, v1

    add-long/2addr v2, v4

    iget-wide v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-static {v4, v5, v2, v3, v0}, Lorg/apache/tomcat/jni/SSL;->writeToBIO(JJI)I

    move-result v0

    if-ltz v0, :cond_0

    add-int/2addr v1, v0

    invoke-virtual {p1, v1}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;

    :cond_0
    :goto_0
    return v0

    :cond_1
    iget-object v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->L:Lio/netty/buffer/i;

    invoke-interface {v2, v0}, Lio/netty/buffer/i;->d(I)Lio/netty/buffer/h;

    move-result-object v2

    :try_start_0
    invoke-static {v2}, Lio/netty/handler/ssl/r;->a(Lio/netty/buffer/h;)J

    move-result-wide v4

    const/4 v3, 0x0

    invoke-virtual {v2, v3, p1}, Lio/netty/buffer/h;->b(ILjava/nio/ByteBuffer;)Lio/netty/buffer/h;

    iget-wide v6, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-static {v6, v7, v4, v5, v0}, Lorg/apache/tomcat/jni/SSL;->writeToBIO(JJI)I

    move-result v0

    if-ltz v0, :cond_2

    add-int/2addr v1, v0

    invoke-virtual {p1, v1}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :goto_1
    invoke-virtual {v2}, Lio/netty/buffer/h;->B()Z

    goto :goto_0

    :cond_2
    :try_start_1
    invoke-virtual {p1, v1}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    :catchall_0
    move-exception v0

    invoke-virtual {v2}, Lio/netty/buffer/h;->B()Z

    throw v0
.end method

.method static synthetic b(Lio/netty/handler/ssl/OpenSslEngine;)J
    .locals 2

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    return-wide v0
.end method

.method private b(Ljava/lang/String;)Ljava/lang/String;
    .locals 2

    if-nez p1, :cond_0

    const/4 v0, 0x0

    :goto_0
    return-object v0

    :cond_0
    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->getVersion(J)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->c(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0}, Lio/netty/handler/ssl/c;->a(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    goto :goto_0
.end method

.method private b(I)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
    .locals 1

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->l()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-static {p1}, Lio/netty/handler/ssl/OpenSslEngine;->a(I)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    sget-object v0, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    goto :goto_0
.end method

.method private c(Ljava/nio/ByteBuffer;)I
    .locals 8

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->isDirect()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v1

    invoke-static {p1}, Lorg/apache/tomcat/jni/Buffer;->address(Ljava/nio/ByteBuffer;)J

    move-result-wide v2

    int-to-long v4, v1

    add-long/2addr v2, v4

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->limit()I

    move-result v0

    sub-int/2addr v0, v1

    iget-wide v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v4, v5, v2, v3, v0}, Lorg/apache/tomcat/jni/SSL;->readFromSSL(JJI)I

    move-result v0

    if-lez v0, :cond_0

    add-int/2addr v1, v0

    invoke-virtual {p1, v1}, Ljava/nio/ByteBuffer;->position(I)Ljava/nio/Buffer;

    :cond_0
    :goto_0
    return v0

    :cond_1
    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->position()I

    move-result v1

    invoke-virtual {p1}, Ljava/nio/ByteBuffer;->limit()I

    move-result v2

    const/16 v0, 0x4919

    sub-int v3, v2, v1

    invoke-static {v0, v3}, Ljava/lang/Math;->min(II)I

    move-result v0

    iget-object v3, p0, Lio/netty/handler/ssl/OpenSslEngine;->L:Lio/netty/buffer/i;

    invoke-interface {v3, v0}, Lio/netty/buffer/i;->d(I)Lio/netty/buffer/h;

    move-result-object v3

    :try_start_0
    invoke-static {v3}, Lio/netty/handler/ssl/r;->a(Lio/netty/buffer/h;)J

    move-result-wide v4

    iget-wide v6, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v6, v7, v4, v5, v0}, Lorg/apache/tomcat/jni/SSL;->readFromSSL(JJI)I

    move-result v0

    if-lez v0, :cond_2

    add-int/2addr v1, v0

    invoke-virtual {p1, v1}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;

    const/4 v1, 0x0

    invoke-virtual {v3, v1, p1}, Lio/netty/buffer/h;->a(ILjava/nio/ByteBuffer;)Lio/netty/buffer/h;

    invoke-virtual {p1, v2}, Ljava/nio/ByteBuffer;->limit(I)Ljava/nio/Buffer;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_2
    invoke-virtual {v3}, Lio/netty/buffer/h;->B()Z

    goto :goto_0

    :catchall_0
    move-exception v0

    invoke-virtual {v3}, Lio/netty/buffer/h;->B()Z

    throw v0
.end method

.method static synthetic c(Lio/netty/handler/ssl/OpenSslEngine;)J
    .locals 2

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->D:J

    return-wide v0
.end method

.method private static c(Ljava/lang/String;)Ljava/lang/String;
    .locals 2

    const/4 v0, 0x0

    if-eqz p0, :cond_0

    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v1

    if-nez v1, :cond_1

    :cond_0
    :goto_0
    packed-switch v0, :pswitch_data_0

    const-string v0, "UNKNOWN"

    :goto_1
    return-object v0

    :cond_1
    invoke-virtual {p0, v0}, Ljava/lang/String;->charAt(I)C

    move-result v0

    goto :goto_0

    :pswitch_0
    const-string v0, "TLS"

    goto :goto_1

    :pswitch_1
    const-string v0, "SSL"

    goto :goto_1

    :pswitch_data_0
    .packed-switch 0x53
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method static synthetic c()[Ljava/security/cert/Certificate;
    .locals 1

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->d:[Ljava/security/cert/Certificate;

    return-object v0
.end method

.method static synthetic d(Lio/netty/handler/ssl/OpenSslEngine;)Z
    .locals 1

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->K:Z

    return v0
.end method

.method private d(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer;
    .locals 2

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->R:[Ljava/nio/ByteBuffer;

    const/4 v1, 0x0

    aput-object p1, v0, v1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->R:[Ljava/nio/ByteBuffer;

    return-object v0
.end method

.method static synthetic d()[Ljavax/security/cert/X509Certificate;
    .locals 1

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->e:[Ljavax/security/cert/X509Certificate;

    return-object v0
.end method

.method private e()I
    .locals 2

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v1, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->d:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-ne v0, v1, :cond_0

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->pendingReadableBytesInSSL(J)I

    move-result v0

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method static synthetic e(Lio/netty/handler/ssl/OpenSslEngine;)Lio/netty/handler/ssl/s;
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->N:Lio/netty/handler/ssl/s;

    return-object v0
.end method

.method private e(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer;
    .locals 2

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->S:[Ljava/nio/ByteBuffer;

    const/4 v1, 0x0

    aput-object p1, v0, v1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->S:[Ljava/nio/ByteBuffer;

    return-object v0
.end method

.method private f()V
    .locals 1

    const/4 v0, 0x1

    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->A:Z

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->closeOutbound()V

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->closeInbound()V

    return-void
.end method

.method static synthetic f(Lio/netty/handler/ssl/OpenSslEngine;)[Ljava/security/cert/Certificate;
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->Q:[Ljava/security/cert/Certificate;

    return-object v0
.end method

.method private g()V
    .locals 2

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->O:Z

    if-eqz v0, :cond_0

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->getHandshakeCount(J)I

    move-result v0

    const/4 v1, 0x1

    if-le v0, v1, :cond_0

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V

    new-instance v0, Ljavax/net/ssl/SSLHandshakeException;

    const-string v1, "remote-initiated renegotation not allowed"

    invoke-direct {v0, v1}, Ljavax/net/ssl/SSLHandshakeException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    return-void
.end method

.method private h()V
    .locals 3

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->R:[Ljava/nio/ByteBuffer;

    const/4 v1, 0x0

    const/4 v2, 0x0

    aput-object v2, v0, v1

    return-void
.end method

.method private i()V
    .locals 3

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->S:[Ljava/nio/ByteBuffer;

    const/4 v1, 0x0

    const/4 v2, 0x0

    aput-object v2, v0, v1

    return-void
.end method

.method private j()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
    .locals 5

    const/4 v4, 0x0

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v1, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->d:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-ne v0, v1, :cond_0

    sget-object v0, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    :goto_0
    return-object v0

    :cond_0
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->g:Ljavax/net/ssl/SSLException;

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljavax/net/ssl/SSLException;)V

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->a:Ljavax/net/ssl/SSLHandshakeException;

    if-eqz v0, :cond_2

    iget-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->pendingWrittenBytesInBIO(J)I

    move-result v1

    if-lez v1, :cond_1

    sget-object v0, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_WRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    goto :goto_0

    :cond_1
    iput-object v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->a:Ljavax/net/ssl/SSLHandshakeException;

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V

    throw v0

    :cond_2
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->M:Lio/netty/handler/ssl/w;

    invoke-interface {v0, p0}, Lio/netty/handler/ssl/w;->a(Lio/netty/handler/ssl/OpenSslEngine;)V

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->D:J

    const-wide/16 v2, -0x1

    cmp-long v0, v0, v2

    if-nez v0, :cond_3

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->D:J

    :cond_3
    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->y:Z

    if-nez v0, :cond_4

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->T:Lio/netty/handler/ssl/z;

    if-eqz v0, :cond_4

    const/4 v0, 0x1

    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->y:Z

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->T:Lio/netty/handler/ssl/z;

    invoke-virtual {v0, p0}, Lio/netty/handler/ssl/z;->a(Lio/netty/handler/ssl/OpenSslEngine;)V

    :cond_4
    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->doHandshake(J)I

    move-result v0

    if-gtz v0, :cond_6

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->a:Ljavax/net/ssl/SSLHandshakeException;

    if-eqz v1, :cond_5

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->a:Ljavax/net/ssl/SSLHandshakeException;

    iput-object v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->a:Ljavax/net/ssl/SSLHandshakeException;

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V

    throw v0

    :cond_5
    iget-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v2, v3, v0}, Lorg/apache/tomcat/jni/SSL;->getError(JI)I

    move-result v0

    packed-switch v0, :pswitch_data_0

    const-string v0, "SSL_do_handshake"

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/lang/String;)Ljavax/net/ssl/SSLException;

    move-result-object v0

    throw v0

    :pswitch_0
    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->pendingWrittenBytesInBIO(J)I

    move-result v0

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(I)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v0

    goto :goto_0

    :cond_6
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->P:Lio/netty/handler/ssl/OpenSslEngine$a;

    invoke-virtual {v0}, Lio/netty/handler/ssl/OpenSslEngine$a;->a()V

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->M:Lio/netty/handler/ssl/w;

    iget-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-interface {v0, v2, v3}, Lio/netty/handler/ssl/w;->a(J)Lio/netty/handler/ssl/OpenSslEngine;

    sget-object v0, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    goto :goto_0

    nop

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method private k()Ljavax/net/ssl/SSLEngineResult$Status;
    .locals 1

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->J:Z

    if-eqz v0, :cond_0

    sget-object v0, Ljavax/net/ssl/SSLEngineResult$Status;->CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;

    :goto_0
    return-object v0

    :cond_0
    sget-object v0, Ljavax/net/ssl/SSLEngineResult$Status;->OK:Ljavax/net/ssl/SSLEngineResult$Status;

    goto :goto_0
.end method

.method private l()Z
    .locals 2

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v1, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->a:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-eq v0, v1, :cond_1

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v1, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->d:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-ne v0, v1, :cond_0

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->J:Z

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private m()Z
    .locals 1

    iget v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->B:I

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method


# virtual methods
.method public declared-synchronized a()J
    .locals 2

    monitor-enter p0

    :try_start_0
    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    return-wide v0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public a([Ljava/nio/ByteBuffer;II[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
    .locals 12

    if-nez p1, :cond_0

    new-instance v2, Ljava/lang/NullPointerException;

    const-string v3, "srcs"

    invoke-direct {v2, v3}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_0
    array-length v2, p1

    if-ge p2, v2, :cond_1

    add-int v2, p2, p3

    array-length v3, p1

    if-le v2, v3, :cond_2

    :cond_1
    new-instance v2, Ljava/lang/IndexOutOfBoundsException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "offset: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ", length: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " (expected: offset <= offset + length <= srcs.length ("

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    array-length v4, p1

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "))"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_2
    if-nez p4, :cond_3

    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "dsts is null"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_3
    move-object/from16 v0, p4

    array-length v2, v0

    move/from16 v0, p5

    if-ge v0, v2, :cond_4

    add-int v2, p5, p6

    move-object/from16 v0, p4

    array-length v3, v0

    if-le v2, v3, :cond_5

    :cond_4
    new-instance v2, Ljava/lang/IndexOutOfBoundsException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "offset: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ", length: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, p6

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " (expected: offset <= offset + length <= dsts.length ("

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p4

    array-length v4, v0

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "))"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_5
    const-wide/16 v2, 0x0

    add-int v8, p5, p6

    move-wide v6, v2

    move/from16 v2, p5

    :goto_0
    if-ge v2, v8, :cond_8

    aget-object v3, p4, v2

    if-nez v3, :cond_6

    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "dsts["

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, "] is null"

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v3, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    :cond_6
    invoke-virtual {v3}, Ljava/nio/ByteBuffer;->isReadOnly()Z

    move-result v4

    if-eqz v4, :cond_7

    new-instance v2, Ljava/nio/ReadOnlyBufferException;

    invoke-direct {v2}, Ljava/nio/ReadOnlyBufferException;-><init>()V

    throw v2

    :cond_7
    invoke-virtual {v3}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v3

    int-to-long v4, v3

    add-long/2addr v4, v6

    add-int/lit8 v2, v2, 0x1

    move-wide v6, v4

    goto :goto_0

    :cond_8
    add-int v9, p2, p3

    const-wide/16 v2, 0x0

    move-wide v4, v2

    move v2, p2

    :goto_1
    if-ge v2, v9, :cond_a

    aget-object v3, p1, v2

    if-nez v3, :cond_9

    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "srcs["

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, "] is null"

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v3, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    :cond_9
    invoke-virtual {v3}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v3

    int-to-long v10, v3

    add-long/2addr v4, v10

    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_a
    monitor-enter p0

    :try_start_0
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z

    move-result v2

    if-eqz v2, :cond_b

    sget-object v2, Lio/netty/handler/ssl/OpenSslEngine;->v:Ljavax/net/ssl/SSLEngineResult;

    monitor-exit p0

    :goto_2
    return-object v2

    :cond_b
    const-wide/16 v2, 0x4919

    cmp-long v2, v4, v2

    if-lez v2, :cond_c

    const/4 v2, 0x1

    iput-boolean v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->H:Z

    const/4 v2, 0x1

    iput-boolean v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->I:Z

    const/4 v2, 0x1

    iput-boolean v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->J:Z

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V

    sget-object v2, Lio/netty/handler/ssl/OpenSslEngine;->i:Ljavax/net/ssl/SSLException;

    throw v2

    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    :cond_c
    :try_start_1
    sget-object v3, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    iget-object v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v4, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->d:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-eq v2, v4, :cond_f

    iget-object v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v3, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->c:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-eq v2, v3, :cond_d

    sget-object v2, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->b:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    iput-object v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    :cond_d
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->j()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v3

    sget-object v2, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_WRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    if-ne v3, v2, :cond_e

    sget-object v2, Lio/netty/handler/ssl/OpenSslEngine;->t:Ljavax/net/ssl/SSLEngineResult;

    monitor-exit p0

    goto :goto_2

    :cond_e
    iget-boolean v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->J:Z

    if-eqz v2, :cond_f

    sget-object v2, Lio/netty/handler/ssl/OpenSslEngine;->u:Ljavax/net/ssl/SSLEngineResult;

    monitor-exit p0

    goto :goto_2

    :cond_f
    const/4 v2, 0x0

    if-ge p2, v9, :cond_10

    :goto_3
    aget-object v4, p1, p2

    invoke-virtual {v4}, Ljava/nio/ByteBuffer;->remaining()I

    move-result v5

    if-nez v5, :cond_11

    add-int/lit8 v4, p2, 0x1

    :goto_4
    if-lt v4, v9, :cond_1d

    :cond_10
    move v5, v2

    :goto_5
    const/4 v2, 0x0

    const-wide/16 v10, 0x0

    cmp-long v4, v6, v10

    if-lez v4, :cond_19

    :goto_6
    move/from16 v0, p5

    if-ge v0, v8, :cond_17

    aget-object v4, p4, p5

    invoke-virtual {v4}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v6

    if-nez v6, :cond_13

    add-int/lit8 p5, p5, 0x1

    goto :goto_6

    :cond_11
    invoke-direct {p0, v4}, Lio/netty/handler/ssl/OpenSslEngine;->b(Ljava/nio/ByteBuffer;)I

    move-result v4

    if-lez v4, :cond_12

    add-int/2addr v2, v4

    if-ne v4, v5, :cond_10

    add-int/lit8 v4, p2, 0x1

    goto :goto_4

    :cond_12
    invoke-static {}, Lorg/apache/tomcat/jni/SSL;->clearError()V

    move v5, v2

    goto :goto_5

    :cond_13
    invoke-direct {p0, v4}, Lio/netty/handler/ssl/OpenSslEngine;->c(Ljava/nio/ByteBuffer;)I

    move-result v6

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->g()V

    if-lez v6, :cond_15

    add-int/2addr v2, v6

    invoke-virtual {v4}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v4

    if-nez v4, :cond_14

    add-int/lit8 p5, p5, 0x1

    goto :goto_6

    :cond_14
    invoke-direct {p0, v5, v2, v3}, Lio/netty/handler/ssl/OpenSslEngine;->a(IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v2

    monitor-exit p0

    goto/16 :goto_2

    :cond_15
    iget-wide v8, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v8, v9, v6}, Lorg/apache/tomcat/jni/SSL;->getError(JI)I

    move-result v4

    packed-switch v4, :pswitch_data_0

    :pswitch_0
    invoke-static {}, Lorg/apache/tomcat/jni/SSL;->getLastErrorNumber()I

    move-result v3

    invoke-direct {p0, v3, v5, v2}, Lio/netty/handler/ssl/OpenSslEngine;->a(III)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v2

    monitor-exit p0

    goto/16 :goto_2

    :pswitch_1
    iget-boolean v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->A:Z

    if-nez v4, :cond_16

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->f()V

    :cond_16
    :pswitch_2
    invoke-direct {p0, v5, v2, v3}, Lio/netty/handler/ssl/OpenSslEngine;->a(IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v2

    monitor-exit p0

    goto/16 :goto_2

    :cond_17
    move v4, v2

    :goto_7
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->e()I

    move-result v2

    if-lez v2, :cond_1a

    new-instance v2, Ljavax/net/ssl/SSLEngineResult;

    sget-object v6, Ljavax/net/ssl/SSLEngineResult$Status;->BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;

    sget-object v7, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    if-eq v3, v7, :cond_18

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->getHandshakeStatus()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v3

    :cond_18
    invoke-direct {p0, v3}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v3

    invoke-direct {v2, v6, v3, v5, v4}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    monitor-exit p0

    goto/16 :goto_2

    :cond_19
    iget-wide v6, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    sget-wide v8, Lio/netty/handler/ssl/OpenSslEngine;->q:J

    const/4 v4, 0x0

    invoke-static {v6, v7, v8, v9, v4}, Lorg/apache/tomcat/jni/SSL;->readFromSSL(JJI)I

    move-result v4

    if-gtz v4, :cond_1c

    invoke-static {}, Lorg/apache/tomcat/jni/SSL;->getLastErrorNumber()I

    move-result v4

    int-to-long v6, v4

    invoke-static {v6, v7}, Lio/netty/handler/ssl/r;->a(J)Z

    move-result v6

    if-eqz v6, :cond_1c

    invoke-direct {p0, v4, v5, v2}, Lio/netty/handler/ssl/OpenSslEngine;->a(III)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v2

    monitor-exit p0

    goto/16 :goto_2

    :cond_1a
    iget-boolean v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->A:Z

    if-nez v2, :cond_1b

    iget-wide v6, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v6, v7}, Lorg/apache/tomcat/jni/SSL;->getShutdown(J)I

    move-result v2

    and-int/lit8 v2, v2, 0x2

    const/4 v6, 0x2

    if-ne v2, v6, :cond_1b

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->f()V

    :cond_1b
    invoke-direct {p0, v5, v4, v3}, Lio/netty/handler/ssl/OpenSslEngine;->a(IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto/16 :goto_2

    :cond_1c
    move v4, v2

    goto :goto_7

    :cond_1d
    move p2, v4

    goto/16 :goto_3

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_2
        :pswitch_2
        :pswitch_0
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public a([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
    .locals 7

    const/4 v2, 0x0

    array-length v3, p1

    array-length v6, p2

    move-object v0, p0

    move-object v1, p1

    move-object v4, p2

    move v5, v2

    invoke-virtual/range {v0 .. v6}, Lio/netty/handler/ssl/OpenSslEngine;->a([Ljava/nio/ByteBuffer;II[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v0

    return-object v0
.end method

.method public declared-synchronized b()V
    .locals 4

    monitor-enter p0

    :try_start_0
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->p:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    const/4 v1, 0x0

    const/4 v2, 0x1

    invoke-virtual {v0, p0, v1, v2}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->compareAndSet(Ljava/lang/Object;II)Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->M:Lio/netty/handler/ssl/w;

    iget-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-interface {v0, v2, v3}, Lio/netty/handler/ssl/w;->a(J)Lio/netty/handler/ssl/OpenSslEngine;

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->freeSSL(J)V

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->freeBIO(J)V

    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    iput-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    const/4 v0, 0x1

    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->J:Z

    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->I:Z

    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->H:Z

    :cond_0
    invoke-static {}, Lorg/apache/tomcat/jni/SSL;->clearError()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public declared-synchronized beginHandshake()V
    .locals 3

    const/4 v2, 0x1

    monitor-enter p0

    :try_start_0
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine$1;->a:[I

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    invoke-virtual {v1}, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_0

    new-instance v0, Ljava/lang/Error;

    invoke-direct {v0}, Ljava/lang/Error;-><init>()V

    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    :pswitch_0
    :try_start_1
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->f:Ljavax/net/ssl/SSLException;

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljavax/net/ssl/SSLException;)V

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->c:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :goto_0
    :pswitch_1
    monitor-exit p0

    return-void

    :pswitch_2
    :try_start_2
    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->K:Z

    if-eqz v0, :cond_0

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->h:Ljavax/net/ssl/SSLException;

    throw v0

    :cond_0
    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->renegotiate(J)I

    move-result v0

    if-ne v0, v2, :cond_1

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->doHandshake(J)I

    move-result v0

    if-eq v0, v2, :cond_2

    :cond_1
    const-string v0, "renegotiation failed"

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/lang/String;)Ljavax/net/ssl/SSLException;

    move-result-object v0

    throw v0

    :cond_2
    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    const/16 v2, 0x2000

    invoke-static {v0, v1, v2}, Lorg/apache/tomcat/jni/SSL;->setState(JI)V

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->D:J

    :pswitch_3
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->c:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->j()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_3
        :pswitch_2
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public declared-synchronized closeInbound()V
    .locals 2

    monitor-enter p0

    :try_start_0
    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->H:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v0, :cond_1

    :cond_0
    monitor-exit p0

    return-void

    :cond_1
    const/4 v0, 0x1

    :try_start_1
    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->H:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->J:Z

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v1, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->a:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-eq v0, v1, :cond_0

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->A:Z

    if-nez v0, :cond_0

    new-instance v0, Ljavax/net/ssl/SSLException;

    const-string v1, "Inbound closed before receiving peer\'s close_notify: possible truncation attack?"

    invoke-direct {v0, v1}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public declared-synchronized closeOutbound()V
    .locals 4

    const/4 v2, 0x1

    monitor-enter p0

    :try_start_0
    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->I:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v0, :cond_1

    :cond_0
    :goto_0
    :pswitch_0
    monitor-exit p0

    return-void

    :cond_1
    const/4 v0, 0x1

    :try_start_1
    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->I:Z

    const/4 v0, 0x1

    iput-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->J:Z

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v1, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->a:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-eq v0, v1, :cond_3

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z

    move-result v0

    if-nez v0, :cond_3

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->getShutdown(J)I

    move-result v0

    and-int/lit8 v0, v0, 0x1

    if-eq v0, v2, :cond_0

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->shutdownSSL(J)I

    move-result v0

    if-gez v0, :cond_0

    iget-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v2, v3, v0}, Lorg/apache/tomcat/jni/SSL;->getError(JI)I

    move-result v0

    packed-switch v0, :pswitch_data_0

    invoke-static {}, Lorg/apache/tomcat/jni/SSL;->clearError()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    :pswitch_1
    :try_start_2
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->c:Lio/netty/util/internal/logging/b;

    invoke-interface {v0}, Lio/netty/util/internal/logging/b;->b()Z

    move-result v0

    if-eqz v0, :cond_2

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->c:Lio/netty/util/internal/logging/b;

    const-string v1, "SSL_shutdown failed: OpenSSL error: {}"

    invoke-static {}, Lorg/apache/tomcat/jni/SSL;->getLastError()Ljava/lang/String;

    move-result-object v2

    invoke-interface {v0, v1, v2}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;)V

    :cond_2
    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V

    goto :goto_0

    :cond_3
    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_1
        :pswitch_0
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method protected finalize()V
    .locals 0

    invoke-super {p0}, Ljava/lang/Object;->finalize()V

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V

    return-void
.end method

.method public getDelegatedTask()Ljava/lang/Runnable;
    .locals 1

    const/4 v0, 0x0

    return-object v0
.end method

.method public getEnableSessionCreation()Z
    .locals 1

    const/4 v0, 0x0

    return v0
.end method

.method public getEnabledCipherSuites()[Ljava/lang/String;
    .locals 3

    monitor-enter p0

    :try_start_0
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z

    move-result v0

    if-nez v0, :cond_0

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->getCiphers(J)[Ljava/lang/String;

    move-result-object v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v1, :cond_1

    sget-object v0, Lio/netty/util/internal/c;->k:[Ljava/lang/String;

    :goto_0
    return-object v0

    :cond_0
    :try_start_1
    sget-object v0, Lio/netty/util/internal/c;->k:[Ljava/lang/String;

    monitor-exit p0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    :cond_1
    const/4 v0, 0x0

    :goto_1
    array-length v2, v1

    if-ge v0, v2, :cond_3

    aget-object v2, v1, v0

    invoke-direct {p0, v2}, Lio/netty/handler/ssl/OpenSslEngine;->b(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_2

    aput-object v2, v1, v0

    :cond_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_3
    move-object v0, v1

    goto :goto_0
.end method

.method public getEnabledProtocols()[Ljava/lang/String;
    .locals 4

    invoke-static {}, Lio/netty/util/internal/e;->b()Lio/netty/util/internal/e;

    move-result-object v0

    invoke-virtual {v0}, Lio/netty/util/internal/e;->h()Ljava/util/ArrayList;

    move-result-object v0

    const-string v1, "SSLv2Hello"

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    monitor-enter p0

    :try_start_0
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z

    move-result v1

    if-nez v1, :cond_5

    iget-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->getOptions(J)I

    move-result v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/high16 v2, 0x4000000

    and-int/2addr v2, v1

    if-nez v2, :cond_0

    const-string v2, "TLSv1"

    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :cond_0
    const/high16 v2, 0x10000000

    and-int/2addr v2, v1

    if-nez v2, :cond_1

    const-string v2, "TLSv1.1"

    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :cond_1
    const/high16 v2, 0x8000000

    and-int/2addr v2, v1

    if-nez v2, :cond_2

    const-string v2, "TLSv1.2"

    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :cond_2
    const/high16 v2, 0x1000000

    and-int/2addr v2, v1

    if-nez v2, :cond_3

    const-string v2, "SSLv2"

    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :cond_3
    const/high16 v2, 0x2000000

    and-int/2addr v1, v2

    if-nez v1, :cond_4

    const-string v1, "SSLv3"

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :cond_4
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v1

    new-array v1, v1, [Ljava/lang/String;

    invoke-interface {v0, v1}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    :goto_0
    return-object v0

    :cond_5
    const/4 v1, 0x1

    :try_start_1
    new-array v1, v1, [Ljava/lang/String;

    invoke-interface {v0, v1}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    monitor-exit p0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method public declared-synchronized getHandshakeSession()Ljavax/net/ssl/SSLSession;
    .locals 2

    monitor-enter p0

    :try_start_0
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine$1;->a:[I

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    invoke-virtual {v1}, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_0

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->P:Lio/netty/handler/ssl/OpenSslEngine$a;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :goto_0
    monitor-exit p0

    return-object v0

    :pswitch_0
    const/4 v0, 0x0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method public declared-synchronized getHandshakeStatus()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
    .locals 2

    monitor-enter p0

    :try_start_0
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->l()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->x:J

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->pendingWrittenBytesInBIO(J)I

    move-result v0

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(I)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    :goto_0
    monitor-exit p0

    return-object v0

    :cond_0
    :try_start_1
    sget-object v0, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getNeedClientAuth()Z
    .locals 2

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->C:Lio/netty/handler/ssl/ClientAuth;

    sget-object v1, Lio/netty/handler/ssl/ClientAuth;->c:Lio/netty/handler/ssl/ClientAuth;

    if-ne v0, v1, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public declared-synchronized getSSLParameters()Ljavax/net/ssl/SSLParameters;
    .locals 8

    const/4 v0, 0x1

    const/4 v1, 0x0

    monitor-enter p0

    :try_start_0
    invoke-super {p0}, Ljavax/net/ssl/SSLEngine;->getSSLParameters()Ljavax/net/ssl/SSLParameters;

    move-result-object v2

    invoke-static {}, Lio/netty/util/internal/PlatformDependent;->d()I

    move-result v3

    const/4 v4, 0x7

    if-lt v3, v4, :cond_1

    iget-object v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->E:Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljavax/net/ssl/SSLParameters;->setEndpointIdentificationAlgorithm(Ljava/lang/String;)V

    iget-object v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->F:Ljava/lang/Object;

    invoke-static {v2, v4}, Lio/netty/handler/ssl/al;->a(Ljavax/net/ssl/SSLParameters;Ljava/lang/Object;)V

    const/16 v4, 0x8

    if-lt v3, v4, :cond_1

    sget-object v3, Lio/netty/handler/ssl/OpenSslEngine;->l:Ljava/lang/reflect/Method;

    if-eqz v3, :cond_0

    iget-object v3, p0, Lio/netty/handler/ssl/OpenSslEngine;->G:Ljava/util/List;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v3, :cond_0

    :try_start_1
    sget-object v3, Lio/netty/handler/ssl/OpenSslEngine;->l:Ljava/lang/reflect/Method;

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    iget-object v6, p0, Lio/netty/handler/ssl/OpenSslEngine;->G:Ljava/util/List;

    aput-object v6, v4, v5

    invoke-virtual {v3, v2, v4}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_1
    .catch Ljava/lang/IllegalAccessException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/reflect/InvocationTargetException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_0
    :try_start_2
    sget-object v3, Lio/netty/handler/ssl/OpenSslEngine;->o:Ljava/lang/reflect/Method;

    if-eqz v3, :cond_1

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v3

    if-nez v3, :cond_1

    :try_start_3
    sget-object v3, Lio/netty/handler/ssl/OpenSslEngine;->o:Ljava/lang/reflect/Method;

    const/4 v4, 0x1

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    iget-wide v6, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v6, v7}, Lorg/apache/tomcat/jni/SSL;->getOptions(J)I

    move-result v6

    const/high16 v7, 0x400000

    and-int/2addr v6, v7

    if-eqz v6, :cond_2

    :goto_0
    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v0

    aput-object v0, v4, v5

    invoke-virtual {v3, v2, v4}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_3
    .catch Ljava/lang/IllegalAccessException; {:try_start_3 .. :try_end_3} :catch_2
    .catch Ljava/lang/reflect/InvocationTargetException; {:try_start_3 .. :try_end_3} :catch_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :cond_1
    monitor-exit p0

    return-object v2

    :catch_0
    move-exception v0

    :try_start_4
    new-instance v1, Ljava/lang/Error;

    invoke-direct {v1, v0}, Ljava/lang/Error;-><init>(Ljava/lang/Throwable;)V

    throw v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    :catch_1
    move-exception v0

    :try_start_5
    new-instance v1, Ljava/lang/Error;

    invoke-direct {v1, v0}, Ljava/lang/Error;-><init>(Ljava/lang/Throwable;)V

    throw v1

    :cond_2
    move v0, v1

    goto :goto_0

    :catch_2
    move-exception v0

    new-instance v1, Ljava/lang/Error;

    invoke-direct {v1, v0}, Ljava/lang/Error;-><init>(Ljava/lang/Throwable;)V

    throw v1

    :catch_3
    move-exception v0

    new-instance v1, Ljava/lang/Error;

    invoke-direct {v1, v0}, Ljava/lang/Error;-><init>(Ljava/lang/Throwable;)V

    throw v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0
.end method

.method public getSession()Ljavax/net/ssl/SSLSession;
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->P:Lio/netty/handler/ssl/OpenSslEngine$a;

    return-object v0
.end method

.method public getSupportedCipherSuites()[Ljava/lang/String;
    .locals 2

    sget-object v0, Lio/netty/handler/ssl/r;->a:Ljava/util/Set;

    sget-object v1, Lio/netty/handler/ssl/r;->a:Ljava/util/Set;

    invoke-interface {v1}, Ljava/util/Set;->size()I

    move-result v1

    new-array v1, v1, [Ljava/lang/String;

    invoke-interface {v0, v1}, Ljava/util/Set;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    return-object v0
.end method

.method public getSupportedProtocols()[Ljava/lang/String;
    .locals 2

    sget-object v0, Lio/netty/handler/ssl/r;->b:Ljava/util/Set;

    sget-object v1, Lio/netty/handler/ssl/r;->b:Ljava/util/Set;

    invoke-interface {v1}, Ljava/util/Set;->size()I

    move-result v1

    new-array v1, v1, [Ljava/lang/String;

    invoke-interface {v0, v1}, Ljava/util/Set;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    return-object v0
.end method

.method public getUseClientMode()Z
    .locals 1

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->K:Z

    return v0
.end method

.method public getWantClientAuth()Z
    .locals 2

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->C:Lio/netty/handler/ssl/ClientAuth;

    sget-object v1, Lio/netty/handler/ssl/ClientAuth;->b:Lio/netty/handler/ssl/ClientAuth;

    if-ne v0, v1, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public declared-synchronized isInboundDone()Z
    .locals 1

    monitor-enter p0

    :try_start_0
    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->H:Z

    if-nez v0, :cond_0

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->J:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    monitor-exit p0

    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public declared-synchronized isOutboundDone()Z
    .locals 1

    monitor-enter p0

    :try_start_0
    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->I:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setEnableSessionCreation(Z)V
    .locals 1

    if-eqz p1, :cond_0

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    invoke-direct {v0}, Ljava/lang/UnsupportedOperationException;-><init>()V

    throw v0

    :cond_0
    return-void
.end method

.method public setEnabledCipherSuites([Ljava/lang/String;)V
    .locals 6

    const-string v0, "cipherSuites"

    invoke-static {p1, v0}, Lio/netty/util/internal/k;->a(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    array-length v4, p1

    const/4 v0, 0x0

    move v2, v0

    :goto_0
    if-ge v2, v4, :cond_0

    aget-object v1, p1, v2

    if-nez v1, :cond_1

    :cond_0
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->length()I

    move-result v0

    if-nez v0, :cond_4

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "empty cipher suites"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    invoke-static {v1}, Lio/netty/handler/ssl/c;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_2

    move-object v0, v1

    :cond_2
    invoke-static {v0}, Lio/netty/handler/ssl/r;->a(Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_3

    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "unsupported cipher suite: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const/16 v3, 0x28

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const/16 v1, 0x29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_3
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v0, 0x3a

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    add-int/lit8 v0, v2, 0x1

    move v2, v0

    goto :goto_0

    :cond_4
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->length()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->setLength(I)V

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    monitor-enter p0

    :try_start_0
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    if-nez v0, :cond_5

    :try_start_1
    iget-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v2, v3, v1}, Lorg/apache/tomcat/jni/SSL;->setCipherSuites(JLjava/lang/String;)Z
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0

    return-void

    :catch_0
    move-exception v0

    new-instance v2, Ljava/lang/IllegalStateException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "failed to enable cipher suites: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v2, v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v2

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v0

    :cond_5
    :try_start_3
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "failed to enable cipher suites: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0
.end method

.method public setEnabledProtocols([Ljava/lang/String;)V
    .locals 11

    const/4 v1, 0x1

    const/4 v6, 0x0

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    invoke-direct {v0}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v0

    :cond_0
    array-length v8, p1

    move v7, v6

    move v0, v6

    move v2, v6

    move v3, v6

    move v4, v6

    move v5, v6

    :goto_0
    if-ge v7, v8, :cond_7

    aget-object v9, p1, v7

    sget-object v10, Lio/netty/handler/ssl/r;->b:Ljava/util/Set;

    invoke-interface {v10, v9}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v10

    if-nez v10, :cond_1

    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Protocol "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " is not supported."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    const-string v10, "SSLv2"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_3

    move v5, v1

    :cond_2
    :goto_1
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    :cond_3
    const-string v10, "SSLv3"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_4

    move v4, v1

    goto :goto_1

    :cond_4
    const-string v10, "TLSv1"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_5

    move v3, v1

    goto :goto_1

    :cond_5
    const-string v10, "TLSv1.1"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_6

    move v2, v1

    goto :goto_1

    :cond_6
    const-string v10, "TLSv1.2"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_2

    move v0, v1

    goto :goto_1

    :cond_7
    monitor-enter p0

    :try_start_0
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z

    move-result v1

    if-nez v1, :cond_b

    iget-wide v8, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    const/16 v1, 0xfff

    invoke-static {v8, v9, v1}, Lorg/apache/tomcat/jni/SSL;->setOptions(JI)V

    iget-wide v8, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    const/high16 v1, 0x1f000000

    invoke-static {v8, v9, v1}, Lorg/apache/tomcat/jni/SSL;->clearOptions(JI)V

    if-nez v5, :cond_d

    const/high16 v1, 0x1000000

    :goto_2
    if-nez v4, :cond_8

    const/high16 v4, 0x2000000

    or-int/2addr v1, v4

    :cond_8
    if-nez v3, :cond_9

    const/high16 v3, 0x4000000

    or-int/2addr v1, v3

    :cond_9
    if-nez v2, :cond_a

    const/high16 v2, 0x10000000

    or-int/2addr v1, v2

    :cond_a
    if-nez v0, :cond_c

    const/high16 v0, 0x8000000

    or-int/2addr v0, v1

    :goto_3
    iget-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v2, v3, v0}, Lorg/apache/tomcat/jni/SSL;->setOptions(JI)V

    monitor-exit p0

    return-void

    :cond_b
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "failed to enable protocols: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {p1}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    :cond_c
    move v0, v1

    goto :goto_3

    :cond_d
    move v1, v6

    goto :goto_2
.end method

.method public setNeedClientAuth(Z)V
    .locals 1

    if-eqz p1, :cond_0

    sget-object v0, Lio/netty/handler/ssl/ClientAuth;->c:Lio/netty/handler/ssl/ClientAuth;

    :goto_0
    invoke-direct {p0, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Lio/netty/handler/ssl/ClientAuth;)V

    return-void

    :cond_0
    sget-object v0, Lio/netty/handler/ssl/ClientAuth;->a:Lio/netty/handler/ssl/ClientAuth;

    goto :goto_0
.end method

.method public declared-synchronized setSSLParameters(Ljavax/net/ssl/SSLParameters;)V
    .locals 7

    monitor-enter p0

    :try_start_0
    invoke-super {p0, p1}, Ljavax/net/ssl/SSLEngine;->setSSLParameters(Ljavax/net/ssl/SSLParameters;)V

    invoke-static {}, Lio/netty/util/internal/PlatformDependent;->d()I

    move-result v0

    const/4 v1, 0x7

    if-lt v0, v1, :cond_5

    invoke-virtual {p1}, Ljavax/net/ssl/SSLParameters;->getEndpointIdentificationAlgorithm()Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->E:Ljava/lang/String;

    invoke-virtual {p1}, Ljavax/net/ssl/SSLParameters;->getAlgorithmConstraints()Ljava/security/AlgorithmConstraints;

    move-result-object v1

    iput-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->F:Ljava/lang/Object;

    const/16 v1, 0x8

    if-lt v0, v1, :cond_5

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->j:Ljava/lang/Class;

    if-eqz v0, :cond_4

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->K:Z

    if-eqz v0, :cond_4

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z

    move-result v0

    if-nez v0, :cond_4

    sget-boolean v0, Lio/netty/handler/ssl/OpenSslEngine;->b:Z

    if-nez v0, :cond_0

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->k:Ljava/lang/reflect/Method;

    if-nez v0, :cond_0

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    :cond_0
    :try_start_1
    sget-boolean v0, Lio/netty/handler/ssl/OpenSslEngine;->b:Z

    if-nez v0, :cond_1

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->m:Ljava/lang/reflect/Method;

    if-nez v0, :cond_1

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :cond_1
    :try_start_2
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->k:Ljava/lang/reflect/Method;

    const/4 v1, 0x0

    new-array v1, v1, [Ljava/lang/Object;

    invoke-virtual {v0, p1, v1}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/List;

    if-eqz v0, :cond_3

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_3

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    sget-object v3, Lio/netty/handler/ssl/OpenSslEngine;->j:Ljava/lang/Class;

    invoke-virtual {v3, v1}, Ljava/lang/Class;->isInstance(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    iget-wide v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    sget-object v3, Lio/netty/handler/ssl/OpenSslEngine;->m:Ljava/lang/reflect/Method;

    const/4 v6, 0x0

    new-array v6, v6, [Ljava/lang/Object;

    invoke-virtual {v3, v1, v6}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-static {v4, v5, v1}, Lorg/apache/tomcat/jni/SSL;->setTlsExtHostName(JLjava/lang/String;)V
    :try_end_2
    .catch Ljava/lang/IllegalAccessException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Ljava/lang/reflect/InvocationTargetException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    :catch_0
    move-exception v0

    :try_start_3
    new-instance v1, Ljava/lang/Error;

    invoke-direct {v1, v0}, Ljava/lang/Error;-><init>(Ljava/lang/Throwable;)V

    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :cond_2
    :try_start_4
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Only "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    sget-object v3, Lio/netty/handler/ssl/OpenSslEngine;->j:Ljava/lang/Class;

    invoke-virtual {v3}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " instances are supported, but found: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_4
    .catch Ljava/lang/IllegalAccessException; {:try_start_4 .. :try_end_4} :catch_0
    .catch Ljava/lang/reflect/InvocationTargetException; {:try_start_4 .. :try_end_4} :catch_1
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :catch_1
    move-exception v0

    :try_start_5
    new-instance v1, Ljava/lang/Error;

    invoke-direct {v1, v0}, Ljava/lang/Error;-><init>(Ljava/lang/Throwable;)V

    throw v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :cond_3
    :try_start_6
    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->G:Ljava/util/List;
    :try_end_6
    .catch Ljava/lang/IllegalAccessException; {:try_start_6 .. :try_end_6} :catch_0
    .catch Ljava/lang/reflect/InvocationTargetException; {:try_start_6 .. :try_end_6} :catch_1
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :cond_4
    :try_start_7
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->n:Ljava/lang/reflect/Method;

    if-eqz v0, :cond_5

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    move-result v0

    if-nez v0, :cond_5

    :try_start_8
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->n:Ljava/lang/reflect/Method;

    const/4 v1, 0x0

    new-array v1, v1, [Ljava/lang/Object;

    invoke-virtual {v0, p1, v1}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Boolean;

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    if-eqz v0, :cond_6

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    const/high16 v2, 0x400000

    invoke-static {v0, v1, v2}, Lorg/apache/tomcat/jni/SSL;->setOptions(JI)V
    :try_end_8
    .catch Ljava/lang/IllegalAccessException; {:try_start_8 .. :try_end_8} :catch_2
    .catch Ljava/lang/reflect/InvocationTargetException; {:try_start_8 .. :try_end_8} :catch_3
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    :cond_5
    :goto_1
    monitor-exit p0

    return-void

    :cond_6
    :try_start_9
    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    const/high16 v2, 0x400000

    invoke-static {v0, v1, v2}, Lorg/apache/tomcat/jni/SSL;->clearOptions(JI)V
    :try_end_9
    .catch Ljava/lang/IllegalAccessException; {:try_start_9 .. :try_end_9} :catch_2
    .catch Ljava/lang/reflect/InvocationTargetException; {:try_start_9 .. :try_end_9} :catch_3
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    goto :goto_1

    :catch_2
    move-exception v0

    :try_start_a
    new-instance v1, Ljava/lang/Error;

    invoke-direct {v1, v0}, Ljava/lang/Error;-><init>(Ljava/lang/Throwable;)V

    throw v1

    :catch_3
    move-exception v0

    new-instance v1, Ljava/lang/Error;

    invoke-direct {v1, v0}, Ljava/lang/Error;-><init>(Ljava/lang/Throwable;)V

    throw v1
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0
.end method

.method public setUseClientMode(Z)V
    .locals 1

    iget-boolean v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->K:Z

    if-eq p1, v0, :cond_0

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    invoke-direct {v0}, Ljava/lang/UnsupportedOperationException;-><init>()V

    throw v0

    :cond_0
    return-void
.end method

.method public setWantClientAuth(Z)V
    .locals 1

    if-eqz p1, :cond_0

    sget-object v0, Lio/netty/handler/ssl/ClientAuth;->b:Lio/netty/handler/ssl/ClientAuth;

    :goto_0
    invoke-direct {p0, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Lio/netty/handler/ssl/ClientAuth;)V

    return-void

    :cond_0
    sget-object v0, Lio/netty/handler/ssl/ClientAuth;->a:Lio/netty/handler/ssl/ClientAuth;

    goto :goto_0
.end method

.method public declared-synchronized unwrap(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
    .locals 2

    monitor-enter p0

    :try_start_0
    invoke-direct {p0, p1}, Lio/netty/handler/ssl/OpenSslEngine;->d(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer;

    move-result-object v0

    invoke-direct {p0, p2}, Lio/netty/handler/ssl/OpenSslEngine;->e(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer;

    move-result-object v1

    invoke-virtual {p0, v0, v1}, Lio/netty/handler/ssl/OpenSslEngine;->a([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    :try_start_1
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->h()V

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->i()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    monitor-exit p0

    return-object v0

    :catchall_0
    move-exception v0

    :try_start_2
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->h()V

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->i()V

    throw v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :catchall_1
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public declared-synchronized unwrap(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
    .locals 1

    monitor-enter p0

    :try_start_0
    invoke-direct {p0, p1}, Lio/netty/handler/ssl/OpenSslEngine;->d(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer;

    move-result-object v0

    invoke-virtual {p0, v0, p2}, Lio/netty/handler/ssl/OpenSslEngine;->a([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    :try_start_1
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->h()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    monitor-exit p0

    return-object v0

    :catchall_0
    move-exception v0

    :try_start_2
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->h()V

    throw v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :catchall_1
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public declared-synchronized unwrap(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
    .locals 7

    monitor-enter p0

    :try_start_0
    invoke-direct {p0, p1}, Lio/netty/handler/ssl/OpenSslEngine;->d(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer;

    move-result-object v1

    const/4 v2, 0x0

    const/4 v3, 0x1

    move-object v0, p0

    move-object v4, p2

    move v5, p3

    move v6, p4

    invoke-virtual/range {v0 .. v6}, Lio/netty/handler/ssl/OpenSslEngine;->a([Ljava/nio/ByteBuffer;II[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    :try_start_1
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->h()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    monitor-exit p0

    return-object v0

    :catchall_0
    move-exception v0

    :try_start_2
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->h()V

    throw v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :catchall_1
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public declared-synchronized wrap(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
    .locals 1

    monitor-enter p0

    :try_start_0
    invoke-direct {p0, p1}, Lio/netty/handler/ssl/OpenSslEngine;->d(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer;

    move-result-object v0

    invoke-virtual {p0, v0, p2}, Lio/netty/handler/ssl/OpenSslEngine;->wrap([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    :try_start_1
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->h()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    monitor-exit p0

    return-object v0

    :catchall_0
    move-exception v0

    :try_start_2
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->h()V

    throw v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :catchall_1
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public wrap([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
    .locals 7

    const/4 v2, 0x0

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "srcs is null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    if-nez p4, :cond_1

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "dst is null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    array-length v0, p1

    if-ge p2, v0, :cond_2

    add-int v0, p2, p3

    array-length v1, p1

    if-le v0, v1, :cond_3

    :cond_2
    new-instance v0, Ljava/lang/IndexOutOfBoundsException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "offset: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", length: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " (expected: offset <= offset + length <= srcs.length ("

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    array-length v2, p1

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "))"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IndexOutOfBoundsException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_3
    invoke-virtual {p4}, Ljava/nio/ByteBuffer;->isReadOnly()Z

    move-result v0

    if-eqz v0, :cond_4

    new-instance v0, Ljava/nio/ReadOnlyBufferException;

    invoke-direct {v0}, Ljava/nio/ReadOnlyBufferException;-><init>()V

    throw v0

    :cond_4
    monitor-enter p0

    :try_start_0
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->m()Z

    move-result v0

    if-eqz v0, :cond_5

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->v:Ljavax/net/ssl/SSLEngineResult;

    monitor-exit p0

    :goto_0
    return-object v0

    :cond_5
    sget-object v0, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v3, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->d:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-eq v1, v3, :cond_8

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    sget-object v1, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->c:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    if-eq v0, v1, :cond_6

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->b:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine;->z:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    :cond_6
    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->j()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v0

    sget-object v1, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_UNWRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    if-ne v0, v1, :cond_7

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->r:Ljavax/net/ssl/SSLEngineResult;

    monitor-exit p0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    :cond_7
    :try_start_1
    iget-boolean v1, p0, Lio/netty/handler/ssl/OpenSslEngine;->J:Z

    if-eqz v1, :cond_8

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->s:Ljavax/net/ssl/SSLEngineResult;

    monitor-exit p0

    goto :goto_0

    :cond_8
    add-int v4, p2, p3

    move v3, v2

    :goto_1
    if-ge p2, v4, :cond_11

    aget-object v5, p1, p2

    if-nez v5, :cond_13

    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "srcs["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "] is null"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_9
    invoke-virtual {v2}, Ljavax/net/ssl/SSLEngineResult;->bytesProduced()I

    move-result v1

    :cond_a
    move v2, v3

    :goto_2
    invoke-virtual {v5}, Ljava/nio/ByteBuffer;->hasRemaining()Z

    move-result v3

    if-eqz v3, :cond_10

    invoke-direct {p0, v5}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/nio/ByteBuffer;)I

    move-result v3

    if-lez v3, :cond_b

    add-int/2addr v3, v2

    invoke-direct {p0, p4, v3, v1, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/nio/ByteBuffer;IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v2

    if-eqz v2, :cond_a

    invoke-virtual {v2}, Ljavax/net/ssl/SSLEngineResult;->getStatus()Ljavax/net/ssl/SSLEngineResult$Status;

    move-result-object v1

    sget-object v6, Ljavax/net/ssl/SSLEngineResult$Status;->OK:Ljavax/net/ssl/SSLEngineResult$Status;

    if-eq v1, v6, :cond_9

    monitor-exit p0

    move-object v0, v2

    goto :goto_0

    :cond_b
    iget-wide v4, p0, Lio/netty/handler/ssl/OpenSslEngine;->w:J

    invoke-static {v4, v5, v3}, Lorg/apache/tomcat/jni/SSL;->getError(JI)I

    move-result v3

    packed-switch v3, :pswitch_data_0

    :pswitch_0
    const-string v0, "SSL_write"

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/lang/String;)Ljavax/net/ssl/SSLException;

    move-result-object v0

    throw v0

    :pswitch_1
    iget-boolean v3, p0, Lio/netty/handler/ssl/OpenSslEngine;->A:Z

    if-nez v3, :cond_c

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->f()V

    :cond_c
    invoke-direct {p0, p4, v2, v1, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/nio/ByteBuffer;IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v0

    if-eqz v0, :cond_d

    :goto_3
    monitor-exit p0

    goto/16 :goto_0

    :cond_d
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->v:Ljavax/net/ssl/SSLEngineResult;

    goto :goto_3

    :pswitch_2
    invoke-direct {p0, p4, v2, v1, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/nio/ByteBuffer;IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v0

    if-eqz v0, :cond_e

    :goto_4
    monitor-exit p0

    goto/16 :goto_0

    :cond_e
    new-instance v0, Ljavax/net/ssl/SSLEngineResult;

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine;->k()Ljavax/net/ssl/SSLEngineResult$Status;

    move-result-object v3

    sget-object v4, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_UNWRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    invoke-direct {v0, v3, v4, v2, v1}, Ljavax/net/ssl/SSLEngineResult;-><init>(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V

    goto :goto_4

    :pswitch_3
    invoke-direct {p0, p4, v2, v1, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/nio/ByteBuffer;IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v0

    if-eqz v0, :cond_f

    :goto_5
    monitor-exit p0

    goto/16 :goto_0

    :cond_f
    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine;->u:Ljavax/net/ssl/SSLEngineResult;

    goto :goto_5

    :cond_10
    add-int/lit8 p2, p2, 0x1

    move v3, v1

    goto/16 :goto_1

    :cond_11
    if-nez v2, :cond_12

    const/4 v1, 0x0

    invoke-direct {p0, p4, v1, v3, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Ljava/nio/ByteBuffer;IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v1

    if-eqz v1, :cond_12

    monitor-exit p0

    move-object v0, v1

    goto/16 :goto_0

    :cond_12
    invoke-direct {p0, v2, v3, v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto/16 :goto_0

    :cond_13
    move v1, v3

    goto :goto_2

    nop

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_2
        :pswitch_3
        :pswitch_0
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method
