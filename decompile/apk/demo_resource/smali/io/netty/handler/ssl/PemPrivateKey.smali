.class public final Lio/netty/handler/ssl/PemPrivateKey;
.super Lio/netty/util/a;

# interfaces
.implements Lio/netty/handler/ssl/ae;
.implements Ljava/security/PrivateKey;


# static fields
.field private static final a:[B

.field private static final b:[B


# instance fields
.field private final c:Lio/netty/buffer/h;


# direct methods
.method static constructor <clinit>()V
    .locals 2

    const-string v0, "-----BEGIN PRIVATE KEY-----\n"

    sget-object v1, Lio/netty/util/e;->f:Ljava/nio/charset/Charset;

    invoke-virtual {v0, v1}, Ljava/lang/String;->getBytes(Ljava/nio/charset/Charset;)[B

    move-result-object v0

    sput-object v0, Lio/netty/handler/ssl/PemPrivateKey;->a:[B

    const-string v0, "\n-----END PRIVATE KEY-----\n"

    sget-object v1, Lio/netty/util/e;->f:Ljava/nio/charset/Charset;

    invoke-virtual {v0, v1}, Ljava/lang/String;->getBytes(Ljava/nio/charset/Charset;)[B

    move-result-object v0

    sput-object v0, Lio/netty/handler/ssl/PemPrivateKey;->b:[B

    return-void
.end method

.method static a(Lio/netty/buffer/i;ZLjava/security/PrivateKey;)Lio/netty/handler/ssl/ae;
    .locals 5

    instance-of v0, p2, Lio/netty/handler/ssl/ae;

    if-eqz v0, :cond_0

    check-cast p2, Lio/netty/handler/ssl/ae;

    invoke-interface {p2}, Lio/netty/handler/ssl/ae;->c()Lio/netty/handler/ssl/ae;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    invoke-interface {p2}, Ljava/security/PrivateKey;->getEncoded()[B

    move-result-object v0

    invoke-static {v0}, Lio/netty/buffer/ak;->a([B)Lio/netty/buffer/h;

    move-result-object v2

    :try_start_0
    invoke-static {p0, v2}, Lio/netty/handler/ssl/am;->a(Lio/netty/buffer/i;Lio/netty/buffer/h;)Lio/netty/buffer/h;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    move-result-object v3

    :try_start_1
    sget-object v0, Lio/netty/handler/ssl/PemPrivateKey;->a:[B

    array-length v0, v0

    invoke-virtual {v3}, Lio/netty/buffer/h;->f()I

    move-result v1

    add-int/2addr v0, v1

    sget-object v1, Lio/netty/handler/ssl/PemPrivateKey;->b:[B

    array-length v1, v1

    add-int/2addr v0, v1

    if-eqz p1, :cond_1

    invoke-interface {p0, v0}, Lio/netty/buffer/i;->d(I)Lio/netty/buffer/h;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    move-result-object v0

    :goto_1
    :try_start_2
    sget-object v1, Lio/netty/handler/ssl/PemPrivateKey;->a:[B

    invoke-virtual {v0, v1}, Lio/netty/buffer/h;->b([B)Lio/netty/buffer/h;

    invoke-virtual {v0, v3}, Lio/netty/buffer/h;->a(Lio/netty/buffer/h;)Lio/netty/buffer/h;

    sget-object v1, Lio/netty/handler/ssl/PemPrivateKey;->b:[B

    invoke-virtual {v0, v1}, Lio/netty/buffer/h;->b([B)Lio/netty/buffer/h;

    new-instance v1, Lio/netty/handler/ssl/ag;

    const/4 v4, 0x1

    invoke-direct {v1, v0, v4}, Lio/netty/handler/ssl/ag;-><init>(Lio/netty/buffer/h;Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {v3}, Lio/netty/handler/ssl/am;->b(Lio/netty/buffer/h;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    invoke-static {v2}, Lio/netty/handler/ssl/am;->b(Lio/netty/buffer/h;)V

    move-object v0, v1

    goto :goto_0

    :cond_1
    :try_start_4
    invoke-interface {p0, v0}, Lio/netty/buffer/i;->a(I)Lio/netty/buffer/h;

    move-result-object v0

    goto :goto_1

    :catchall_0
    move-exception v1

    invoke-static {v0}, Lio/netty/handler/ssl/am;->b(Lio/netty/buffer/h;)V

    throw v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :catchall_1
    move-exception v0

    :try_start_5
    invoke-static {v3}, Lio/netty/handler/ssl/am;->b(Lio/netty/buffer/h;)V

    throw v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    :catchall_2
    move-exception v0

    invoke-static {v2}, Lio/netty/handler/ssl/am;->b(Lio/netty/buffer/h;)V

    throw v0
.end method


# virtual methods
.method public synthetic C()Lio/netty/util/i;
    .locals 1

    invoke-virtual {p0}, Lio/netty/handler/ssl/PemPrivateKey;->d()Lio/netty/handler/ssl/PemPrivateKey;

    move-result-object v0

    return-object v0
.end method

.method public a()Lio/netty/buffer/h;
    .locals 2

    invoke-virtual {p0}, Lio/netty/handler/ssl/PemPrivateKey;->z()I

    move-result v0

    if-gtz v0, :cond_0

    new-instance v1, Lio/netty/util/IllegalReferenceCountException;

    invoke-direct {v1, v0}, Lio/netty/util/IllegalReferenceCountException;-><init>(I)V

    throw v1

    :cond_0
    iget-object v0, p0, Lio/netty/handler/ssl/PemPrivateKey;->c:Lio/netty/buffer/h;

    return-object v0
.end method

.method public b()Z
    .locals 1

    const/4 v0, 0x1

    return v0
.end method

.method public synthetic c()Lio/netty/handler/ssl/ae;
    .locals 1

    invoke-virtual {p0}, Lio/netty/handler/ssl/PemPrivateKey;->d()Lio/netty/handler/ssl/PemPrivateKey;

    move-result-object v0

    return-object v0
.end method

.method public d()Lio/netty/handler/ssl/PemPrivateKey;
    .locals 1

    invoke-super {p0}, Lio/netty/util/a;->C()Lio/netty/util/i;

    move-result-object v0

    check-cast v0, Lio/netty/handler/ssl/PemPrivateKey;

    return-object v0
.end method

.method protected e()V
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/PemPrivateKey;->c:Lio/netty/buffer/h;

    invoke-static {v0}, Lio/netty/handler/ssl/am;->b(Lio/netty/buffer/h;)V

    return-void
.end method

.method public getAlgorithm()Ljava/lang/String;
    .locals 1

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    invoke-direct {v0}, Ljava/lang/UnsupportedOperationException;-><init>()V

    throw v0
.end method

.method public getEncoded()[B
    .locals 1

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    invoke-direct {v0}, Ljava/lang/UnsupportedOperationException;-><init>()V

    throw v0
.end method

.method public getFormat()Ljava/lang/String;
    .locals 1

    const-string v0, "PKCS#8"

    return-object v0
.end method
