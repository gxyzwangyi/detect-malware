.class public abstract Lio/netty/handler/ssl/u;
.super Lio/netty/handler/ssl/ah;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lio/netty/handler/ssl/u$3;,
        Lio/netty/handler/ssl/u$b;,
        Lio/netty/handler/ssl/u$a;
    }
.end annotation


# static fields
.field static final g:Lio/netty/handler/ssl/s;

.field private static final i:Lio/netty/util/internal/logging/b;

.field private static final j:Z

.field private static final k:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private static final l:Ljava/lang/Integer;


# instance fields
.field protected volatile a:J

.field b:J

.field final c:[Ljava/security/cert/Certificate;

.field final d:Lio/netty/handler/ssl/ClientAuth;

.field final e:Lio/netty/handler/ssl/w;

.field volatile f:Z

.field private final m:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private final n:J

.field private final o:J

.field private final p:Lio/netty/handler/ssl/s;

.field private final q:I


# direct methods
.method static constructor <clinit>()V
    .locals 5

    const/4 v3, 0x0

    const-class v0, Lio/netty/handler/ssl/u;

    invoke-static {v0}, Lio/netty/util/internal/logging/c;->a(Ljava/lang/Class;)Lio/netty/util/internal/logging/b;

    move-result-object v0

    sput-object v0, Lio/netty/handler/ssl/u;->i:Lio/netty/util/internal/logging/b;

    const-string v0, "jdk.tls.rejectClientInitiatedRenegotiation"

    invoke-static {v0, v3}, Lio/netty/util/internal/n;->a(Ljava/lang/String;Z)Z

    move-result v0

    sput-boolean v0, Lio/netty/handler/ssl/u;->j:Z

    new-instance v0, Lio/netty/handler/ssl/u$1;

    invoke-direct {v0}, Lio/netty/handler/ssl/u$1;-><init>()V

    sput-object v0, Lio/netty/handler/ssl/u;->g:Lio/netty/handler/ssl/s;

    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    const/4 v1, 0x7

    new-array v1, v1, [Ljava/lang/String;

    const-string v2, "ECDHE-RSA-AES128-GCM-SHA256"

    aput-object v2, v1, v3

    const/4 v2, 0x1

    const-string v3, "ECDHE-RSA-AES128-SHA"

    aput-object v3, v1, v2

    const/4 v2, 0x2

    const-string v3, "ECDHE-RSA-AES256-SHA"

    aput-object v3, v1, v2

    const/4 v2, 0x3

    const-string v3, "AES128-GCM-SHA256"

    aput-object v3, v1, v2

    const/4 v2, 0x4

    const-string v3, "AES128-SHA"

    aput-object v3, v1, v2

    const/4 v2, 0x5

    const-string v3, "AES256-SHA"

    aput-object v3, v1, v2

    const/4 v2, 0x6

    const-string v3, "DES-CBC3-SHA"

    aput-object v3, v1, v2

    invoke-static {v0, v1}, Ljava/util/Collections;->addAll(Ljava/util/Collection;[Ljava/lang/Object;)Z

    invoke-static {v0}, Ljava/util/Collections;->unmodifiableList(Ljava/util/List;)Ljava/util/List;

    move-result-object v1

    sput-object v1, Lio/netty/handler/ssl/u;->k:Ljava/util/List;

    sget-object v1, Lio/netty/handler/ssl/u;->i:Lio/netty/util/internal/logging/b;

    invoke-interface {v1}, Lio/netty/util/internal/logging/b;->b()Z

    move-result v1

    if-eqz v1, :cond_0

    sget-object v1, Lio/netty/handler/ssl/u;->i:Lio/netty/util/internal/logging/b;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Default cipher suite (OpenSSL): "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-interface {v1, v0}, Lio/netty/util/internal/logging/b;->a(Ljava/lang/String;)V

    :cond_0
    const/4 v1, 0x0

    :try_start_0
    new-instance v0, Lio/netty/handler/ssl/u$2;

    invoke-direct {v0}, Lio/netty/handler/ssl/u$2;-><init>()V

    invoke-static {v0}, Ljava/security/AccessController;->doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_1

    if-eqz v0, :cond_1

    :try_start_1
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/Throwable; {:try_start_1 .. :try_end_1} :catch_1

    move-result-object v0

    :goto_0
    sput-object v0, Lio/netty/handler/ssl/u;->l:Ljava/lang/Integer;

    return-void

    :catch_0
    move-exception v2

    :try_start_2
    sget-object v2, Lio/netty/handler/ssl/u;->i:Lio/netty/util/internal/logging/b;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "OpenSslContext only support -Djdk.tls.ephemeralDHKeySize={int}, but got: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-interface {v2, v0}, Lio/netty/util/internal/logging/b;->a(Ljava/lang/String;)V
    :try_end_2
    .catch Ljava/lang/Throwable; {:try_start_2 .. :try_end_2} :catch_1

    :cond_1
    move-object v0, v1

    goto :goto_0

    :catch_1
    move-exception v0

    move-object v0, v1

    goto :goto_0
.end method

.method constructor <init>(Ljava/lang/Iterable;Lio/netty/handler/ssl/d;Lio/netty/handler/ssl/ApplicationProtocolConfig;JJI[Ljava/security/cert/Certificate;Lio/netty/handler/ssl/ClientAuth;)V
    .locals 12
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/Iterable",
            "<",
            "Ljava/lang/String;",
            ">;",
            "Lio/netty/handler/ssl/d;",
            "Lio/netty/handler/ssl/ApplicationProtocolConfig;",
            "JJI[",
            "Ljava/security/cert/Certificate;",
            "Lio/netty/handler/ssl/ClientAuth;",
            ")V"
        }
    .end annotation

    invoke-static {p3}, Lio/netty/handler/ssl/u;->a(Lio/netty/handler/ssl/ApplicationProtocolConfig;)Lio/netty/handler/ssl/s;

    move-result-object v3

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-wide/from16 v4, p4

    move-wide/from16 v6, p6

    move/from16 v8, p8

    move-object/from16 v9, p9

    move-object/from16 v10, p10

    invoke-direct/range {v0 .. v10}, Lio/netty/handler/ssl/u;-><init>(Ljava/lang/Iterable;Lio/netty/handler/ssl/d;Lio/netty/handler/ssl/s;JJI[Ljava/security/cert/Certificate;Lio/netty/handler/ssl/ClientAuth;)V

    return-void
.end method

.method constructor <init>(Ljava/lang/Iterable;Lio/netty/handler/ssl/d;Lio/netty/handler/ssl/s;JJI[Ljava/security/cert/Certificate;Lio/netty/handler/ssl/ClientAuth;)V
    .locals 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/Iterable",
            "<",
            "Ljava/lang/String;",
            ">;",
            "Lio/netty/handler/ssl/d;",
            "Lio/netty/handler/ssl/s;",
            "JJI[",
            "Ljava/security/cert/Certificate;",
            "Lio/netty/handler/ssl/ClientAuth;",
            ")V"
        }
    .end annotation

    invoke-direct {p0}, Lio/netty/handler/ssl/ah;-><init>()V

    new-instance v2, Lio/netty/handler/ssl/u$b;

    const/4 v3, 0x0

    invoke-direct {v2, v3}, Lio/netty/handler/ssl/u$b;-><init>(Lio/netty/handler/ssl/u$1;)V

    iput-object v2, p0, Lio/netty/handler/ssl/u;->e:Lio/netty/handler/ssl/w;

    invoke-static {}, Lio/netty/handler/ssl/r;->b()V

    const/4 v2, 0x1

    move/from16 v0, p8

    if-eq v0, v2, :cond_0

    if-eqz p8, :cond_0

    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "mode most be either SSL.SSL_MODE_SERVER or SSL.SSL_MODE_CLIENT"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_0
    move/from16 v0, p8

    iput v0, p0, Lio/netty/handler/ssl/u;->q:I

    invoke-virtual {p0}, Lio/netty/handler/ssl/u;->i()Z

    move-result v2

    if-eqz v2, :cond_3

    const-string v2, "clientAuth"

    move-object/from16 v0, p10

    invoke-static {v0, v2}, Lio/netty/util/internal/k;->a(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lio/netty/handler/ssl/ClientAuth;

    :goto_0
    iput-object v2, p0, Lio/netty/handler/ssl/u;->d:Lio/netty/handler/ssl/ClientAuth;

    const/4 v2, 0x1

    move/from16 v0, p8

    if-ne v0, v2, :cond_1

    sget-boolean v2, Lio/netty/handler/ssl/u;->j:Z

    iput-boolean v2, p0, Lio/netty/handler/ssl/u;->f:Z

    :cond_1
    if-nez p9, :cond_4

    const/4 v2, 0x0

    :goto_1
    iput-object v2, p0, Lio/netty/handler/ssl/u;->c:[Ljava/security/cert/Certificate;

    if-nez p1, :cond_5

    const/4 v2, 0x0

    move-object v3, v2

    :goto_2
    const-string v2, "cipherFilter"

    invoke-static {p2, v2}, Lio/netty/util/internal/k;->a(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lio/netty/handler/ssl/d;

    sget-object v4, Lio/netty/handler/ssl/u;->k:Ljava/util/List;

    invoke-static {}, Lio/netty/handler/ssl/r;->c()Ljava/util/Set;

    move-result-object v5

    invoke-interface {v2, v3, v4, v5}, Lio/netty/handler/ssl/d;->a(Ljava/lang/Iterable;Ljava/util/List;Ljava/util/Set;)[Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v2

    iput-object v2, p0, Lio/netty/handler/ssl/u;->m:Ljava/util/List;

    const-string v2, "apn"

    invoke-static {p3, v2}, Lio/netty/util/internal/k;->a(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lio/netty/handler/ssl/s;

    iput-object v2, p0, Lio/netty/handler/ssl/u;->p:Lio/netty/handler/ssl/s;

    const-wide/16 v2, 0x0

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/Pool;->create(J)J

    move-result-wide v2

    iput-wide v2, p0, Lio/netty/handler/ssl/u;->b:J

    :try_start_0
    const-class v3, Lio/netty/handler/ssl/u;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    iget-wide v4, p0, Lio/netty/handler/ssl/u;->b:J

    const/16 v2, 0x1f

    move/from16 v0, p8

    invoke-static {v4, v5, v2, v0}, Lorg/apache/tomcat/jni/SSLContext;->make(JII)J

    move-result-wide v4

    iput-wide v4, p0, Lio/netty/handler/ssl/u;->a:J
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    const/16 v2, 0xfff

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setOptions(JI)V

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    const/high16 v2, 0x1000000

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setOptions(JI)V

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    const/high16 v2, 0x2000000

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setOptions(JI)V

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    const/high16 v2, 0x400000

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setOptions(JI)V

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    const/high16 v2, 0x80000

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setOptions(JI)V

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    const/high16 v2, 0x100000

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setOptions(JI)V

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    const/high16 v2, 0x10000

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setOptions(JI)V

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    const/16 v2, 0x4000

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setOptions(JI)V

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    iget-wide v6, p0, Lio/netty/handler/ssl/u;->a:J

    invoke-static {v6, v7}, Lorg/apache/tomcat/jni/SSLContext;->getMode(J)I

    move-result v2

    or-int/lit8 v2, v2, 0x2

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setMode(JI)I

    sget-object v2, Lio/netty/handler/ssl/u;->l:Ljava/lang/Integer;

    if-eqz v2, :cond_2

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    sget-object v2, Lio/netty/handler/ssl/u;->l:Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setTmpDHLength(JI)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :cond_2
    :try_start_3
    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    iget-object v2, p0, Lio/netty/handler/ssl/u;->m:Ljava/util/List;

    invoke-static {v2}, Lio/netty/handler/ssl/c;->a(Ljava/lang/Iterable;)Ljava/lang/String;

    move-result-object v2

    invoke-static {v4, v5, v2}, Lorg/apache/tomcat/jni/SSLContext;->setCipherSuite(JLjava/lang/String;)Z
    :try_end_3
    .catch Ljavax/net/ssl/SSLException; {:try_start_3 .. :try_end_3} :catch_1
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_2
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-interface {p3}, Lio/netty/handler/ssl/s;->a()Ljava/util/List;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/List;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_8

    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v4

    new-array v4, v4, [Ljava/lang/String;

    invoke-interface {v2, v4}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    check-cast v2, [Ljava/lang/String;

    invoke-interface {p3}, Lio/netty/handler/ssl/s;->c()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;

    move-result-object v4

    invoke-static {v4}, Lio/netty/handler/ssl/u;->a(Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;)I

    move-result v4

    sget-object v5, Lio/netty/handler/ssl/u$3;->a:[I

    invoke-interface {p3}, Lio/netty/handler/ssl/s;->b()Lio/netty/handler/ssl/ApplicationProtocolConfig$Protocol;

    move-result-object v6

    invoke-virtual {v6}, Lio/netty/handler/ssl/ApplicationProtocolConfig$Protocol;->ordinal()I

    move-result v6

    aget v5, v5, v6

    packed-switch v5, :pswitch_data_0

    new-instance v2, Ljava/lang/Error;

    invoke-direct {v2}, Ljava/lang/Error;-><init>()V

    throw v2

    :catchall_0
    move-exception v2

    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :catchall_1
    move-exception v2

    invoke-virtual {p0}, Lio/netty/handler/ssl/u;->e()V

    throw v2

    :cond_3
    sget-object v2, Lio/netty/handler/ssl/ClientAuth;->a:Lio/netty/handler/ssl/ClientAuth;

    goto/16 :goto_0

    :cond_4
    invoke-virtual/range {p9 .. p9}, [Ljava/security/cert/Certificate;->clone()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, [Ljava/security/cert/Certificate;

    goto/16 :goto_1

    :cond_5
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    invoke-interface {p1}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_3
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_b

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    if-nez v2, :cond_6

    move-object v3, v4

    goto/16 :goto_2

    :cond_6
    invoke-static {v2}, Lio/netty/handler/ssl/c;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_7

    move-object v2, v3

    :cond_7
    invoke-interface {v4, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_3

    :catch_0
    move-exception v2

    :try_start_6
    new-instance v4, Ljavax/net/ssl/SSLException;

    const-string v5, "failed to create an SSL_CTX"

    invoke-direct {v4, v5, v2}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v4

    :catch_1
    move-exception v2

    throw v2

    :catch_2
    move-exception v2

    new-instance v4, Ljavax/net/ssl/SSLException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "failed to set cipher suite: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, p0, Lio/netty/handler/ssl/u;->m:Ljava/util/List;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5, v2}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v4

    :pswitch_0
    iget-wide v6, p0, Lio/netty/handler/ssl/u;->a:J

    invoke-static {v6, v7, v2, v4}, Lorg/apache/tomcat/jni/SSLContext;->setNpnProtos(J[Ljava/lang/String;I)V

    :cond_8
    :goto_4
    const-wide/16 v4, 0x0

    cmp-long v2, p4, v4

    if-lez v2, :cond_9

    iput-wide p4, p0, Lio/netty/handler/ssl/u;->n:J

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    invoke-static {v4, v5, p4, p5}, Lorg/apache/tomcat/jni/SSLContext;->setSessionCacheSize(JJ)J

    :goto_5
    const-wide/16 v4, 0x0

    cmp-long v2, p6, v4

    if-lez v2, :cond_a

    iput-wide p6, p0, Lio/netty/handler/ssl/u;->o:J

    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    invoke-static {v4, v5, p6, p7}, Lorg/apache/tomcat/jni/SSLContext;->setSessionCacheTimeout(JJ)J

    :goto_6
    monitor-exit v3

    return-void

    :pswitch_1
    iget-wide v6, p0, Lio/netty/handler/ssl/u;->a:J

    invoke-static {v6, v7, v2, v4}, Lorg/apache/tomcat/jni/SSLContext;->setAlpnProtos(J[Ljava/lang/String;I)V

    goto :goto_4

    :pswitch_2
    iget-wide v6, p0, Lio/netty/handler/ssl/u;->a:J

    invoke-static {v6, v7, v2, v4}, Lorg/apache/tomcat/jni/SSLContext;->setNpnProtos(J[Ljava/lang/String;I)V

    iget-wide v6, p0, Lio/netty/handler/ssl/u;->a:J

    invoke-static {v6, v7, v2, v4}, Lorg/apache/tomcat/jni/SSLContext;->setAlpnProtos(J[Ljava/lang/String;I)V

    goto :goto_4

    :cond_9
    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    const-wide/16 v6, 0x5000

    invoke-static {v4, v5, v6, v7}, Lorg/apache/tomcat/jni/SSLContext;->setSessionCacheSize(JJ)J

    move-result-wide v4

    iput-wide v4, p0, Lio/netty/handler/ssl/u;->n:J

    iget-wide v6, p0, Lio/netty/handler/ssl/u;->a:J

    invoke-static {v6, v7, v4, v5}, Lorg/apache/tomcat/jni/SSLContext;->setSessionCacheSize(JJ)J

    goto :goto_5

    :cond_a
    iget-wide v4, p0, Lio/netty/handler/ssl/u;->a:J

    const-wide/16 v6, 0x12c

    invoke-static {v4, v5, v6, v7}, Lorg/apache/tomcat/jni/SSLContext;->setSessionCacheTimeout(JJ)J

    move-result-wide v4

    iput-wide v4, p0, Lio/netty/handler/ssl/u;->o:J

    iget-wide v6, p0, Lio/netty/handler/ssl/u;->a:J

    invoke-static {v6, v7, v4, v5}, Lorg/apache/tomcat/jni/SSLContext;->setSessionCacheTimeout(JJ)J
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    goto :goto_6

    :cond_b
    move-object v3, v4

    goto/16 :goto_2

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method private static a(Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;)I
    .locals 2

    sget-object v0, Lio/netty/handler/ssl/u$3;->b:[I

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_0

    new-instance v0, Ljava/lang/Error;

    invoke-direct {v0}, Ljava/lang/Error;-><init>()V

    throw v0

    :pswitch_0
    const/4 v0, 0x0

    :goto_0
    return v0

    :pswitch_1
    const/4 v0, 0x1

    goto :goto_0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method private static a(Lio/netty/buffer/h;)J
    .locals 6

    :try_start_0
    invoke-static {}, Lorg/apache/tomcat/jni/SSL;->newMemBIO()J

    move-result-wide v0

    invoke-virtual {p0}, Lio/netty/buffer/h;->f()I

    move-result v2

    invoke-static {p0}, Lio/netty/handler/ssl/r;->a(Lio/netty/buffer/h;)J

    move-result-wide v4

    invoke-static {v0, v1, v4, v5, v2}, Lorg/apache/tomcat/jni/SSL;->writeToBIO(JJI)I

    move-result v3

    if-eq v3, v2, :cond_0

    invoke-static {v0, v1}, Lorg/apache/tomcat/jni/SSL;->freeBIO(J)V

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Could not write data to memory BIO"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception v0

    invoke-virtual {p0}, Lio/netty/buffer/h;->B()Z

    throw v0

    :cond_0
    invoke-virtual {p0}, Lio/netty/buffer/h;->B()Z

    return-wide v0
.end method

.method private static a(Lio/netty/buffer/i;Lio/netty/handler/ssl/ae;)J
    .locals 4

    :try_start_0
    invoke-interface {p1}, Lio/netty/handler/ssl/ae;->a()Lio/netty/buffer/h;

    move-result-object v0

    invoke-virtual {v0}, Lio/netty/buffer/h;->L()Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {v0}, Lio/netty/buffer/h;->u()Lio/netty/buffer/h;

    move-result-object v0

    invoke-virtual {v0}, Lio/netty/buffer/h;->A()Lio/netty/buffer/h;

    move-result-object v0

    invoke-static {v0}, Lio/netty/handler/ssl/u;->a(Lio/netty/buffer/h;)J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    invoke-interface {p1}, Lio/netty/handler/ssl/ae;->B()Z

    :goto_0
    return-wide v0

    :cond_0
    :try_start_1
    invoke-virtual {v0}, Lio/netty/buffer/h;->f()I

    move-result v1

    invoke-interface {p0, v1}, Lio/netty/buffer/i;->d(I)Lio/netty/buffer/h;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    move-result-object v2

    :try_start_2
    invoke-virtual {v0}, Lio/netty/buffer/h;->b()I

    move-result v1

    invoke-virtual {v0}, Lio/netty/buffer/h;->f()I

    move-result v3

    invoke-virtual {v2, v0, v1, v3}, Lio/netty/buffer/h;->a(Lio/netty/buffer/h;II)Lio/netty/buffer/h;

    invoke-virtual {v2}, Lio/netty/buffer/h;->u()Lio/netty/buffer/h;

    move-result-object v0

    invoke-virtual {v0}, Lio/netty/buffer/h;->A()Lio/netty/buffer/h;

    move-result-object v0

    invoke-static {v0}, Lio/netty/handler/ssl/u;->a(Lio/netty/buffer/h;)J
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    move-result-wide v0

    :try_start_3
    invoke-interface {p1}, Lio/netty/handler/ssl/ae;->b()Z

    move-result v3

    if-eqz v3, :cond_1

    invoke-static {v2}, Lio/netty/handler/ssl/am;->a(Lio/netty/buffer/h;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :cond_1
    :try_start_4
    invoke-virtual {v2}, Lio/netty/buffer/h;->B()Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-interface {p1}, Lio/netty/handler/ssl/ae;->B()Z

    goto :goto_0

    :catchall_0
    move-exception v0

    :try_start_5
    invoke-virtual {v2}, Lio/netty/buffer/h;->B()Z

    throw v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :catchall_1
    move-exception v0

    invoke-interface {p1}, Lio/netty/handler/ssl/ae;->B()Z

    throw v0

    :catchall_2
    move-exception v0

    :try_start_6
    invoke-interface {p1}, Lio/netty/handler/ssl/ae;->b()Z

    move-result v1

    if-eqz v1, :cond_2

    invoke-static {v2}, Lio/netty/handler/ssl/am;->a(Lio/netty/buffer/h;)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_3

    :cond_2
    :try_start_7
    invoke-virtual {v2}, Lio/netty/buffer/h;->B()Z

    throw v0

    :catchall_3
    move-exception v0

    invoke-virtual {v2}, Lio/netty/buffer/h;->B()Z

    throw v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1
.end method

.method static a(Ljava/security/PrivateKey;)J
    .locals 3

    if-nez p0, :cond_0

    const-wide/16 v0, 0x0

    :goto_0
    return-wide v0

    :cond_0
    sget-object v0, Lio/netty/buffer/i;->a:Lio/netty/buffer/i;

    const/4 v1, 0x1

    invoke-static {v0, v1, p0}, Lio/netty/handler/ssl/PemPrivateKey;->a(Lio/netty/buffer/i;ZLjava/security/PrivateKey;)Lio/netty/handler/ssl/ae;

    move-result-object v2

    :try_start_0
    invoke-interface {v2}, Lio/netty/handler/ssl/ae;->c()Lio/netty/handler/ssl/ae;

    move-result-object v1

    invoke-static {v0, v1}, Lio/netty/handler/ssl/u;->a(Lio/netty/buffer/i;Lio/netty/handler/ssl/ae;)J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    invoke-interface {v2}, Lio/netty/handler/ssl/ae;->B()Z

    goto :goto_0

    :catchall_0
    move-exception v0

    invoke-interface {v2}, Lio/netty/handler/ssl/ae;->B()Z

    throw v0
.end method

.method static varargs a([Ljava/security/cert/X509Certificate;)J
    .locals 3

    if-nez p0, :cond_0

    const-wide/16 v0, 0x0

    :goto_0
    return-wide v0

    :cond_0
    array-length v0, p0

    if-nez v0, :cond_1

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "certChain can\'t be empty"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    sget-object v0, Lio/netty/buffer/i;->a:Lio/netty/buffer/i;

    const/4 v1, 0x1

    invoke-static {v0, v1, p0}, Lio/netty/handler/ssl/PemX509Certificate;->a(Lio/netty/buffer/i;Z[Ljava/security/cert/X509Certificate;)Lio/netty/handler/ssl/ae;

    move-result-object v2

    :try_start_0
    invoke-interface {v2}, Lio/netty/handler/ssl/ae;->c()Lio/netty/handler/ssl/ae;

    move-result-object v1

    invoke-static {v0, v1}, Lio/netty/handler/ssl/u;->a(Lio/netty/buffer/i;Lio/netty/handler/ssl/ae;)J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    invoke-interface {v2}, Lio/netty/handler/ssl/ae;->B()Z

    goto :goto_0

    :catchall_0
    move-exception v0

    invoke-interface {v2}, Lio/netty/handler/ssl/ae;->B()Z

    throw v0
.end method

.method static a(Lio/netty/handler/ssl/ApplicationProtocolConfig;)Lio/netty/handler/ssl/s;
    .locals 3

    if-nez p0, :cond_0

    sget-object v0, Lio/netty/handler/ssl/u;->g:Lio/netty/handler/ssl/s;

    :goto_0
    return-object v0

    :cond_0
    sget-object v0, Lio/netty/handler/ssl/u$3;->a:[I

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->b()Lio/netty/handler/ssl/ApplicationProtocolConfig$Protocol;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/ssl/ApplicationProtocolConfig$Protocol;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_0

    new-instance v0, Ljava/lang/Error;

    invoke-direct {v0}, Ljava/lang/Error;-><init>()V

    throw v0

    :pswitch_0
    sget-object v0, Lio/netty/handler/ssl/u;->g:Lio/netty/handler/ssl/s;

    goto :goto_0

    :pswitch_1
    sget-object v0, Lio/netty/handler/ssl/u$3;->c:[I

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->d()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_1

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "OpenSSL provider does not support "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->d()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " behavior"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_2
    sget-object v0, Lio/netty/handler/ssl/u$3;->b:[I

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->c()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_2

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "OpenSSL provider does not support "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->c()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " behavior"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_3
    new-instance v0, Lio/netty/handler/ssl/v;

    invoke-direct {v0, p0}, Lio/netty/handler/ssl/v;-><init>(Lio/netty/handler/ssl/ApplicationProtocolConfig;)V

    goto :goto_0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_1
        :pswitch_1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_2
        :pswitch_2
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_3
        :pswitch_3
    .end packed-switch
.end method

.method protected static a([Ljavax/net/ssl/KeyManager;)Ljavax/net/ssl/X509KeyManager;
    .locals 4

    array-length v2, p0

    const/4 v0, 0x0

    move v1, v0

    :goto_0
    if-ge v1, v2, :cond_1

    aget-object v0, p0, v1

    instance-of v3, v0, Ljavax/net/ssl/X509KeyManager;

    if-eqz v3, :cond_0

    check-cast v0, Ljavax/net/ssl/X509KeyManager;

    return-object v0

    :cond_0
    add-int/lit8 v0, v1, 0x1

    move v1, v0

    goto :goto_0

    :cond_1
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "no X509KeyManager found"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method protected static a([Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/X509TrustManager;
    .locals 4

    array-length v2, p0

    const/4 v0, 0x0

    move v1, v0

    :goto_0
    if-ge v1, v2, :cond_1

    aget-object v0, p0, v1

    instance-of v3, v0, Ljavax/net/ssl/X509TrustManager;

    if-eqz v3, :cond_0

    check-cast v0, Ljavax/net/ssl/X509TrustManager;

    return-object v0

    :cond_0
    add-int/lit8 v0, v1, 0x1

    move v1, v0

    goto :goto_0

    :cond_1
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "no X509TrustManager found"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method static a(J[Ljava/security/cert/X509Certificate;Ljava/security/PrivateKey;Ljava/lang/String;)V
    .locals 10

    const-wide/16 v8, 0x0

    :try_start_0
    invoke-static {p2}, Lio/netty/handler/ssl/u;->a([Ljava/security/cert/X509Certificate;)J
    :try_end_0
    .catch Ljavax/net/ssl/SSLException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v2

    :try_start_1
    invoke-static {p3}, Lio/netty/handler/ssl/u;->a(Ljava/security/PrivateKey;)J
    :try_end_1
    .catch Ljavax/net/ssl/SSLException; {:try_start_1 .. :try_end_1} :catch_4
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    move-result-wide v4

    if-nez p4, :cond_2

    :try_start_2
    const-string v6, ""

    :goto_0
    const/4 v7, 0x0

    move-wide v0, p0

    invoke-static/range {v0 .. v7}, Lorg/apache/tomcat/jni/SSLContext;->setCertificateBio(JJJLjava/lang/String;I)Z

    const/4 v0, 0x0

    invoke-static {p0, p1, v2, v3, v0}, Lorg/apache/tomcat/jni/SSLContext;->setCertificateChainBio(JJZ)Z
    :try_end_2
    .catch Ljavax/net/ssl/SSLException; {:try_start_2 .. :try_end_2} :catch_5
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_3
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    cmp-long v0, v4, v8

    if-eqz v0, :cond_0

    invoke-static {v4, v5}, Lorg/apache/tomcat/jni/SSL;->freeBIO(J)V

    :cond_0
    cmp-long v0, v2, v8

    if-eqz v0, :cond_1

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->freeBIO(J)V

    :cond_1
    return-void

    :cond_2
    move-object v6, p4

    goto :goto_0

    :catch_0
    move-exception v0

    move-wide v2, v8

    move-wide v4, v8

    :goto_1
    :try_start_3
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :catchall_0
    move-exception v0

    :goto_2
    cmp-long v1, v4, v8

    if-eqz v1, :cond_3

    invoke-static {v4, v5}, Lorg/apache/tomcat/jni/SSL;->freeBIO(J)V

    :cond_3
    cmp-long v1, v2, v8

    if-eqz v1, :cond_4

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->freeBIO(J)V

    :cond_4
    throw v0

    :catch_1
    move-exception v0

    move-wide v2, v8

    move-wide v4, v8

    :goto_3
    :try_start_4
    new-instance v1, Ljavax/net/ssl/SSLException;

    const-string v6, "failed to set certificate and key"

    invoke-direct {v1, v6, v0}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :catchall_1
    move-exception v0

    move-wide v2, v8

    move-wide v4, v8

    goto :goto_2

    :catchall_2
    move-exception v0

    move-wide v4, v8

    goto :goto_2

    :catch_2
    move-exception v0

    move-wide v4, v8

    goto :goto_3

    :catch_3
    move-exception v0

    goto :goto_3

    :catch_4
    move-exception v0

    move-wide v4, v8

    goto :goto_1

    :catch_5
    move-exception v0

    goto :goto_1
.end method

.method static a(Ljavax/net/ssl/X509KeyManager;)Z
    .locals 2

    invoke-static {}, Lio/netty/util/internal/PlatformDependent;->d()I

    move-result v0

    const/4 v1, 0x7

    if-lt v0, v1, :cond_0

    instance-of v0, p0, Ljavax/net/ssl/X509ExtendedKeyManager;

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method static a(Ljavax/net/ssl/X509TrustManager;)Z
    .locals 2

    invoke-static {}, Lio/netty/util/internal/PlatformDependent;->d()I

    move-result v0

    const/4 v1, 0x7

    if-lt v0, v1, :cond_0

    instance-of v0, p0, Ljavax/net/ssl/X509ExtendedTrustManager;

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method


# virtual methods
.method public abstract a()Lio/netty/handler/ssl/ac;
.end method

.method public final a(Lio/netty/buffer/i;)Ljavax/net/ssl/SSLEngine;
    .locals 2

    const/4 v0, 0x0

    const/4 v1, -0x1

    invoke-virtual {p0, p1, v0, v1}, Lio/netty/handler/ssl/u;->a(Lio/netty/buffer/i;Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;

    move-result-object v0

    return-object v0
.end method

.method public final a(Lio/netty/buffer/i;Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;
    .locals 1

    new-instance v0, Lio/netty/handler/ssl/OpenSslEngine;

    invoke-direct {v0, p0, p1, p2, p3}, Lio/netty/handler/ssl/OpenSslEngine;-><init>(Lio/netty/handler/ssl/u;Lio/netty/buffer/i;Ljava/lang/String;I)V

    return-object v0
.end method

.method public final b()Z
    .locals 1

    iget v0, p0, Lio/netty/handler/ssl/u;->q:I

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method abstract c()Lio/netty/handler/ssl/z;
.end method

.method public d()Lio/netty/handler/ssl/a;
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/u;->p:Lio/netty/handler/ssl/s;

    return-object v0
.end method

.method final e()V
    .locals 6

    const-wide/16 v4, 0x0

    const-class v1, Lio/netty/handler/ssl/u;

    monitor-enter v1

    :try_start_0
    iget-wide v2, p0, Lio/netty/handler/ssl/u;->a:J

    cmp-long v0, v2, v4

    if-eqz v0, :cond_0

    iget-wide v2, p0, Lio/netty/handler/ssl/u;->a:J

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSLContext;->free(J)I

    const-wide/16 v2, 0x0

    iput-wide v2, p0, Lio/netty/handler/ssl/u;->a:J

    :cond_0
    iget-wide v2, p0, Lio/netty/handler/ssl/u;->b:J

    cmp-long v0, v2, v4

    if-eqz v0, :cond_1

    iget-wide v2, p0, Lio/netty/handler/ssl/u;->b:J

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/Pool;->destroy(J)V

    const-wide/16 v2, 0x0

    iput-wide v2, p0, Lio/netty/handler/ssl/u;->b:J

    :cond_1
    monitor-exit v1

    return-void

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method protected final finalize()V
    .locals 0

    invoke-super {p0}, Ljava/lang/Object;->finalize()V

    invoke-virtual {p0}, Lio/netty/handler/ssl/u;->e()V

    return-void
.end method
