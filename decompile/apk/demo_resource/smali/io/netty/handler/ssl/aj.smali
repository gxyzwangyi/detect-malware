.class public Lio/netty/handler/ssl/aj;
.super Lio/netty/handler/codec/a;

# interfaces
.implements Lio/netty/channel/r;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lio/netty/handler/ssl/aj$8;,
        Lio/netty/handler/ssl/aj$a;
    }
.end annotation


# static fields
.field static final synthetic d:Z

.field private static final e:Lio/netty/util/internal/logging/b;

.field private static final g:Ljava/util/regex/Pattern;

.field private static final h:Ljava/util/regex/Pattern;

.field private static final i:Ljavax/net/ssl/SSLException;

.field private static final j:Ljavax/net/ssl/SSLException;

.field private static final k:Ljava/nio/channels/ClosedChannelException;


# instance fields
.field private A:Z

.field private B:I

.field private C:Z

.field private volatile D:J

.field private volatile E:J

.field private volatile l:Lio/netty/channel/k;

.field private final m:Ljavax/net/ssl/SSLEngine;

.field private final n:I

.field private final o:Ljava/util/concurrent/Executor;

.field private final p:[Ljava/nio/ByteBuffer;

.field private final q:Z

.field private final r:Z

.field private final s:Z

.field private t:Z

.field private u:Z

.field private v:Z

.field private w:Lio/netty/channel/am;

.field private x:Lio/netty/util/concurrent/y;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lio/netty/util/concurrent/y",
            "<",
            "Lio/netty/channel/d;",
            ">;"
        }
    .end annotation
.end field

.field private final y:Lio/netty/handler/ssl/aj$a;

.field private z:Z


# direct methods
.method static constructor <clinit>()V
    .locals 3

    const-class v0, Lio/netty/handler/ssl/aj;

    invoke-virtual {v0}, Ljava/lang/Class;->desiredAssertionStatus()Z

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    sput-boolean v0, Lio/netty/handler/ssl/aj;->d:Z

    const-class v0, Lio/netty/handler/ssl/aj;

    invoke-static {v0}, Lio/netty/util/internal/logging/c;->a(Ljava/lang/Class;)Lio/netty/util/internal/logging/b;

    move-result-object v0

    sput-object v0, Lio/netty/handler/ssl/aj;->e:Lio/netty/util/internal/logging/b;

    const-string v0, "^.*(?:Socket|Datagram|Sctp|Udt)Channel.*$"

    invoke-static {v0}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lio/netty/handler/ssl/aj;->g:Ljava/util/regex/Pattern;

    const-string v0, "^.*(?:connection.*(?:reset|closed|abort|broken)|broken.*pipe).*$"

    const/4 v1, 0x2

    invoke-static {v0, v1}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;I)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lio/netty/handler/ssl/aj;->h:Ljava/util/regex/Pattern;

    new-instance v0, Ljavax/net/ssl/SSLException;

    const-string v1, "SSLEngine closed already"

    invoke-direct {v0, v1}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;)V

    const-class v1, Lio/netty/handler/ssl/aj;

    const-string v2, "wrap(...)"

    invoke-static {v0, v1, v2}, Lio/netty/util/internal/o;->a(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;

    move-result-object v0

    check-cast v0, Ljavax/net/ssl/SSLException;

    sput-object v0, Lio/netty/handler/ssl/aj;->i:Ljavax/net/ssl/SSLException;

    new-instance v0, Ljavax/net/ssl/SSLException;

    const-string v1, "handshake timed out"

    invoke-direct {v0, v1}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;)V

    const-class v1, Lio/netty/handler/ssl/aj;

    const-string v2, "handshake(...)"

    invoke-static {v0, v1, v2}, Lio/netty/util/internal/o;->a(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;

    move-result-object v0

    check-cast v0, Ljavax/net/ssl/SSLException;

    sput-object v0, Lio/netty/handler/ssl/aj;->j:Ljavax/net/ssl/SSLException;

    new-instance v0, Ljava/nio/channels/ClosedChannelException;

    invoke-direct {v0}, Ljava/nio/channels/ClosedChannelException;-><init>()V

    const-class v1, Lio/netty/handler/ssl/aj;

    const-string v2, "channelInactive(...)"

    invoke-static {v0, v1, v2}, Lio/netty/util/internal/o;->a(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Throwable;

    move-result-object v0

    check-cast v0, Ljava/nio/channels/ClosedChannelException;

    sput-object v0, Lio/netty/handler/ssl/aj;->k:Ljava/nio/channels/ClosedChannelException;

    return-void

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public constructor <init>(Ljavax/net/ssl/SSLEngine;)V
    .locals 1

    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, Lio/netty/handler/ssl/aj;-><init>(Ljavax/net/ssl/SSLEngine;Z)V

    return-void
.end method

.method public constructor <init>(Ljavax/net/ssl/SSLEngine;Z)V
    .locals 1

    sget-object v0, Lio/netty/util/concurrent/t;->a:Lio/netty/util/concurrent/t;

    invoke-direct {p0, p1, p2, v0}, Lio/netty/handler/ssl/aj;-><init>(Ljavax/net/ssl/SSLEngine;ZLjava/util/concurrent/Executor;)V

    return-void
.end method

.method public constructor <init>(Ljavax/net/ssl/SSLEngine;ZLjava/util/concurrent/Executor;)V
    .locals 4
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    const/4 v2, 0x0

    const/4 v0, 0x1

    invoke-direct {p0}, Lio/netty/handler/codec/a;-><init>()V

    new-array v1, v0, [Ljava/nio/ByteBuffer;

    iput-object v1, p0, Lio/netty/handler/ssl/aj;->p:[Ljava/nio/ByteBuffer;

    new-instance v1, Lio/netty/handler/ssl/aj$a;

    invoke-direct {v1, p0, v2}, Lio/netty/handler/ssl/aj$a;-><init>(Lio/netty/handler/ssl/aj;Lio/netty/handler/ssl/aj$1;)V

    iput-object v1, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    new-instance v1, Lio/netty/handler/ssl/aj$a;

    invoke-direct {v1, p0, v2}, Lio/netty/handler/ssl/aj$a;-><init>(Lio/netty/handler/ssl/aj;Lio/netty/handler/ssl/aj$1;)V

    iput-object v1, p0, Lio/netty/handler/ssl/aj;->y:Lio/netty/handler/ssl/aj$a;

    const-wide/16 v2, 0x2710

    iput-wide v2, p0, Lio/netty/handler/ssl/aj;->D:J

    const-wide/16 v2, 0xbb8

    iput-wide v2, p0, Lio/netty/handler/ssl/aj;->E:J

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "engine"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    if-nez p3, :cond_1

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "delegatedTaskExecutor"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    iput-object p1, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    iput-object p3, p0, Lio/netty/handler/ssl/aj;->o:Ljava/util/concurrent/Executor;

    iput-boolean p2, p0, Lio/netty/handler/ssl/aj;->s:Z

    invoke-virtual {p1}, Ljavax/net/ssl/SSLEngine;->getSession()Ljavax/net/ssl/SSLSession;

    move-result-object v1

    invoke-interface {v1}, Ljavax/net/ssl/SSLSession;->getPacketBufferSize()I

    move-result v1

    iput v1, p0, Lio/netty/handler/ssl/aj;->n:I

    instance-of v1, p1, Lio/netty/handler/ssl/OpenSslEngine;

    iput-boolean v1, p0, Lio/netty/handler/ssl/aj;->q:Z

    if-nez v1, :cond_2

    :goto_0
    iput-boolean v0, p0, Lio/netty/handler/ssl/aj;->r:Z

    if-eqz v1, :cond_3

    sget-object v0, Lio/netty/handler/ssl/aj;->b:Lio/netty/handler/codec/a$a;

    :goto_1
    invoke-virtual {p0, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/handler/codec/a$a;)V

    return-void

    :cond_2
    const/4 v0, 0x0

    goto :goto_0

    :cond_3
    sget-object v0, Lio/netty/handler/ssl/aj;->a:Lio/netty/handler/codec/a$a;

    goto :goto_1
.end method

.method private a(Lio/netty/channel/k;I)Lio/netty/buffer/h;
    .locals 2

    invoke-interface {p1}, Lio/netty/channel/k;->c()Lio/netty/buffer/i;

    move-result-object v0

    iget-boolean v1, p0, Lio/netty/handler/ssl/aj;->q:Z

    if-eqz v1, :cond_0

    invoke-interface {v0, p2}, Lio/netty/buffer/i;->d(I)Lio/netty/buffer/h;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    invoke-interface {v0, p2}, Lio/netty/buffer/i;->a(I)Lio/netty/buffer/h;

    move-result-object v0

    goto :goto_0
.end method

.method private static a(Lio/netty/buffer/h;II)Ljava/nio/ByteBuffer;
    .locals 2

    invoke-virtual {p0}, Lio/netty/buffer/h;->h_()I

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    invoke-virtual {p0, p1, p2}, Lio/netty/buffer/h;->m(II)Ljava/nio/ByteBuffer;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    invoke-virtual {p0, p1, p2}, Lio/netty/buffer/h;->n(II)Ljava/nio/ByteBuffer;

    move-result-object v0

    goto :goto_0
.end method

.method static synthetic a(Lio/netty/handler/ssl/aj;)Ljavax/net/ssl/SSLEngine;
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    return-object v0
.end method

.method private a(Lio/netty/buffer/i;Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/h;Lio/netty/buffer/h;)Ljavax/net/ssl/SSLEngineResult;
    .locals 7

    const/4 v2, 0x0

    const/4 v6, 0x0

    :try_start_0
    invoke-virtual {p3}, Lio/netty/buffer/h;->b()I

    move-result v3

    invoke-virtual {p3}, Lio/netty/buffer/h;->f()I

    move-result v4

    invoke-virtual {p3}, Lio/netty/buffer/h;->L()Z

    move-result v0

    if-nez v0, :cond_0

    iget-boolean v0, p0, Lio/netty/handler/ssl/aj;->q:Z

    if-nez v0, :cond_3

    :cond_0
    instance-of v0, p3, Lio/netty/buffer/n;

    if-nez v0, :cond_2

    invoke-virtual {p3}, Lio/netty/buffer/h;->h_()I

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_2

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->p:[Ljava/nio/ByteBuffer;

    const/4 v1, 0x0

    invoke-virtual {p3, v3, v4}, Lio/netty/buffer/h;->m(II)Ljava/nio/ByteBuffer;

    move-result-object v3

    aput-object v3, v0, v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-object v1, v2

    :goto_0
    :try_start_1
    invoke-virtual {p4}, Lio/netty/buffer/h;->c()I

    move-result v3

    invoke-virtual {p4}, Lio/netty/buffer/h;->g()I

    move-result v4

    invoke-virtual {p4, v3, v4}, Lio/netty/buffer/h;->n(II)Ljava/nio/ByteBuffer;

    move-result-object v3

    invoke-virtual {p2, v0, v3}, Ljavax/net/ssl/SSLEngine;->wrap([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v3

    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngineResult;->bytesConsumed()I

    move-result v4

    invoke-virtual {p3, v4}, Lio/netty/buffer/h;->s(I)Lio/netty/buffer/h;

    invoke-virtual {p4}, Lio/netty/buffer/h;->c()I

    move-result v4

    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngineResult;->bytesProduced()I

    move-result v5

    add-int/2addr v4, v5

    invoke-virtual {p4, v4}, Lio/netty/buffer/h;->c(I)Lio/netty/buffer/h;

    sget-object v4, Lio/netty/handler/ssl/aj$8;->b:[I

    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngineResult;->getStatus()Ljavax/net/ssl/SSLEngineResult$Status;

    move-result-object v5

    invoke-virtual {v5}, Ljavax/net/ssl/SSLEngineResult$Status;->ordinal()I

    move-result v5

    aget v4, v4, v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    packed-switch v4, :pswitch_data_0

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->p:[Ljava/nio/ByteBuffer;

    aput-object v2, v0, v6

    if-eqz v1, :cond_1

    invoke-virtual {v1}, Lio/netty/buffer/h;->B()Z

    :cond_1
    return-object v3

    :cond_2
    :try_start_2
    invoke-virtual {p3}, Lio/netty/buffer/h;->w()[Ljava/nio/ByteBuffer;

    move-result-object v0

    move-object v1, v2

    goto :goto_0

    :cond_3
    invoke-interface {p1, v4}, Lio/netty/buffer/i;->d(I)Lio/netty/buffer/h;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-result-object v1

    :try_start_3
    invoke-virtual {v1, p3, v3, v4}, Lio/netty/buffer/h;->a(Lio/netty/buffer/h;II)Lio/netty/buffer/h;

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->p:[Ljava/nio/ByteBuffer;

    const/4 v3, 0x0

    const/4 v5, 0x0

    invoke-virtual {v1, v5, v4}, Lio/netty/buffer/h;->m(II)Ljava/nio/ByteBuffer;

    move-result-object v4

    aput-object v4, v0, v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception v0

    :goto_1
    iget-object v3, p0, Lio/netty/handler/ssl/aj;->p:[Ljava/nio/ByteBuffer;

    aput-object v2, v3, v6

    if-eqz v1, :cond_4

    invoke-virtual {v1}, Lio/netty/buffer/h;->B()Z

    :cond_4
    throw v0

    :pswitch_0
    :try_start_4
    iget v3, p0, Lio/netty/handler/ssl/aj;->n:I

    invoke-virtual {p4, v3}, Lio/netty/buffer/h;->e(I)Lio/netty/buffer/h;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_0

    :catchall_1
    move-exception v0

    move-object v1, v2

    goto :goto_1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch
.end method

.method private a(Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/h;IILio/netty/buffer/h;)Ljavax/net/ssl/SSLEngineResult;
    .locals 6

    const/4 v5, 0x0

    const/4 v4, 0x0

    invoke-virtual {p2}, Lio/netty/buffer/h;->h_()I

    move-result v0

    invoke-virtual {p5}, Lio/netty/buffer/h;->c()I

    move-result v1

    instance-of v2, p1, Lio/netty/handler/ssl/OpenSslEngine;

    if-eqz v2, :cond_0

    const/4 v2, 0x1

    if-le v0, v2, :cond_0

    check-cast p1, Lio/netty/handler/ssl/OpenSslEngine;

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->p:[Ljava/nio/ByteBuffer;

    const/4 v2, 0x0

    invoke-virtual {p5}, Lio/netty/buffer/h;->g()I

    move-result v3

    invoke-static {p5, v1, v3}, Lio/netty/handler/ssl/aj;->a(Lio/netty/buffer/h;II)Ljava/nio/ByteBuffer;

    move-result-object v3

    aput-object v3, v0, v2

    invoke-virtual {p2, p3, p4}, Lio/netty/buffer/h;->b_(II)[Ljava/nio/ByteBuffer;

    move-result-object v0

    iget-object v2, p0, Lio/netty/handler/ssl/aj;->p:[Ljava/nio/ByteBuffer;

    invoke-virtual {p1, v0, v2}, Lio/netty/handler/ssl/OpenSslEngine;->a([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v0

    invoke-virtual {v0}, Ljavax/net/ssl/SSLEngineResult;->bytesProduced()I

    move-result v2

    add-int/2addr v2, v1

    invoke-virtual {p5, v2}, Lio/netty/buffer/h;->c(I)Lio/netty/buffer/h;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    iget-object v2, p0, Lio/netty/handler/ssl/aj;->p:[Ljava/nio/ByteBuffer;

    aput-object v5, v2, v4

    :goto_0
    invoke-virtual {v0}, Ljavax/net/ssl/SSLEngineResult;->bytesProduced()I

    move-result v2

    add-int/2addr v1, v2

    invoke-virtual {p5, v1}, Lio/netty/buffer/h;->c(I)Lio/netty/buffer/h;

    return-object v0

    :catchall_0
    move-exception v0

    iget-object v1, p0, Lio/netty/handler/ssl/aj;->p:[Ljava/nio/ByteBuffer;

    aput-object v5, v1, v4

    throw v0

    :cond_0
    invoke-static {p2, p3, p4}, Lio/netty/handler/ssl/aj;->a(Lio/netty/buffer/h;II)Ljava/nio/ByteBuffer;

    move-result-object v0

    invoke-virtual {p5}, Lio/netty/buffer/h;->g()I

    move-result v2

    invoke-static {p5, v1, v2}, Lio/netty/handler/ssl/aj;->a(Lio/netty/buffer/h;II)Ljava/nio/ByteBuffer;

    move-result-object v2

    invoke-virtual {p1, v0, v2}, Ljavax/net/ssl/SSLEngine;->unwrap(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v0

    goto :goto_0
.end method

.method private a(Lio/netty/channel/k;Lio/netty/buffer/h;Lio/netty/channel/w;ZZ)V
    .locals 1

    if-nez p2, :cond_3

    sget-object p2, Lio/netty/buffer/ak;->c:Lio/netty/buffer/h;

    :cond_0
    :goto_0
    if-eqz p3, :cond_4

    invoke-interface {p1, p2, p3}, Lio/netty/channel/k;->a(Ljava/lang/Object;Lio/netty/channel/w;)Lio/netty/channel/g;

    :goto_1
    if-eqz p4, :cond_1

    const/4 v0, 0x1

    iput-boolean v0, p0, Lio/netty/handler/ssl/aj;->z:Z

    :cond_1
    if-eqz p5, :cond_2

    invoke-direct {p0, p1}, Lio/netty/handler/ssl/aj;->l(Lio/netty/channel/k;)V

    :cond_2
    return-void

    :cond_3
    invoke-virtual {p2}, Lio/netty/buffer/h;->e()Z

    move-result v0

    if-nez v0, :cond_0

    invoke-virtual {p2}, Lio/netty/buffer/h;->B()Z

    sget-object p2, Lio/netty/buffer/ak;->c:Lio/netty/buffer/h;

    goto :goto_0

    :cond_4
    invoke-interface {p1, p2}, Lio/netty/channel/k;->c(Ljava/lang/Object;)Lio/netty/channel/g;

    goto :goto_1
.end method

.method private a(Lio/netty/channel/k;Lio/netty/channel/g;Lio/netty/channel/w;)V
    .locals 5

    invoke-interface {p1}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/channel/d;->G()Z

    move-result v0

    if-nez v0, :cond_0

    invoke-interface {p1, p3}, Lio/netty/channel/k;->b(Lio/netty/channel/w;)Lio/netty/channel/g;

    :goto_0
    return-void

    :cond_0
    iget-wide v0, p0, Lio/netty/handler/ssl/aj;->E:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-lez v0, :cond_1

    invoke-interface {p1}, Lio/netty/channel/k;->d()Lio/netty/util/concurrent/i;

    move-result-object v0

    new-instance v1, Lio/netty/handler/ssl/aj$6;

    invoke-direct {v1, p0, p1, p3}, Lio/netty/handler/ssl/aj$6;-><init>(Lio/netty/handler/ssl/aj;Lio/netty/channel/k;Lio/netty/channel/w;)V

    iget-wide v2, p0, Lio/netty/handler/ssl/aj;->E:J

    sget-object v4, Ljava/util/concurrent/TimeUnit;->MILLISECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-interface {v0, v1, v2, v3, v4}, Lio/netty/util/concurrent/i;->a(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ae;

    move-result-object v0

    :goto_1
    new-instance v1, Lio/netty/handler/ssl/aj$7;

    invoke-direct {v1, p0, v0, p1, p3}, Lio/netty/handler/ssl/aj$7;-><init>(Lio/netty/handler/ssl/aj;Ljava/util/concurrent/ScheduledFuture;Lio/netty/channel/k;Lio/netty/channel/w;)V

    invoke-interface {p2, v1}, Lio/netty/channel/g;->a(Lio/netty/util/concurrent/p;)Lio/netty/channel/g;

    goto :goto_0

    :cond_1
    const/4 v0, 0x0

    goto :goto_1
.end method

.method private a(Lio/netty/channel/k;Lio/netty/channel/w;Z)V
    .locals 2

    invoke-interface {p1}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/channel/d;->G()Z

    move-result v0

    if-nez v0, :cond_1

    if-eqz p3, :cond_0

    invoke-interface {p1, p2}, Lio/netty/channel/k;->a(Lio/netty/channel/w;)Lio/netty/channel/g;

    :goto_0
    return-void

    :cond_0
    invoke-interface {p1, p2}, Lio/netty/channel/k;->b(Lio/netty/channel/w;)Lio/netty/channel/g;

    goto :goto_0

    :cond_1
    const/4 v0, 0x1

    iput-boolean v0, p0, Lio/netty/handler/ssl/aj;->A:Z

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v0}, Ljavax/net/ssl/SSLEngine;->closeOutbound()V

    invoke-interface {p1}, Lio/netty/channel/k;->o()Lio/netty/channel/w;

    move-result-object v0

    sget-object v1, Lio/netty/buffer/ak;->c:Lio/netty/buffer/h;

    invoke-virtual {p0, p1, v1, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Ljava/lang/Object;Lio/netty/channel/w;)V

    invoke-virtual {p0, p1}, Lio/netty/handler/ssl/aj;->b(Lio/netty/channel/k;)V

    invoke-direct {p0, p1, v0, p2}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Lio/netty/channel/g;Lio/netty/channel/w;)V

    goto :goto_0
.end method

.method private a(Lio/netty/channel/k;Ljava/lang/Throwable;Z)V
    .locals 4

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v0}, Ljavax/net/ssl/SSLEngine;->closeOutbound()V

    if-eqz p3, :cond_0

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v0}, Ljavax/net/ssl/SSLEngine;->closeInbound()V
    :try_end_0
    .catch Ljavax/net/ssl/SSLException; {:try_start_0 .. :try_end_0} :catch_0

    :cond_0
    :goto_0
    invoke-direct {p0, p2}, Lio/netty/handler/ssl/aj;->b(Ljava/lang/Throwable;)V

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    invoke-virtual {v0, p2}, Lio/netty/channel/am;->a(Ljava/lang/Throwable;)V

    return-void

    :catch_0
    move-exception v0

    invoke-virtual {v0}, Ljavax/net/ssl/SSLException;->getMessage()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_1

    const-string v2, "possible truncation attack"

    invoke-virtual {v1, v2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_0

    :cond_1
    sget-object v1, Lio/netty/handler/ssl/aj;->e:Lio/netty/util/internal/logging/b;

    const-string v2, "{} SSLEngine.closeInbound() raised an exception."

    invoke-interface {p1}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v3

    invoke-interface {v1, v2, v3, v0}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    goto :goto_0
.end method

.method private a(Lio/netty/channel/k;Z)V
    .locals 12

    const/4 v5, 0x0

    const/4 v1, 0x0

    invoke-interface {p1}, Lio/netty/channel/k;->c()Lio/netty/buffer/i;

    move-result-object v4

    move-object v3, v1

    move-object v2, v1

    :goto_0
    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    invoke-virtual {v0}, Lio/netty/channel/am;->e()Ljava/lang/Object;
    :try_end_0
    .catch Ljavax/net/ssl/SSLException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    if-nez v0, :cond_0

    move-object v0, p0

    move-object v1, p1

    move v4, p2

    invoke-direct/range {v0 .. v5}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Lio/netty/buffer/h;Lio/netty/channel/w;ZZ)V

    :goto_1
    return-void

    :cond_0
    :try_start_1
    check-cast v0, Lio/netty/buffer/h;

    if-nez v2, :cond_1

    invoke-virtual {v0}, Lio/netty/buffer/h;->f()I

    move-result v6

    invoke-direct {p0, p1, v6}, Lio/netty/handler/ssl/aj;->b(Lio/netty/channel/k;I)Lio/netty/buffer/h;

    move-result-object v2

    :cond_1
    iget-object v6, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-direct {p0, v4, v6, v0, v2}, Lio/netty/handler/ssl/aj;->a(Lio/netty/buffer/i;Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/h;Lio/netty/buffer/h;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v6

    invoke-virtual {v0}, Lio/netty/buffer/h;->e()Z

    move-result v0

    if-nez v0, :cond_2

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    invoke-virtual {v0}, Lio/netty/channel/am;->d()Lio/netty/channel/w;

    move-result-object v3

    :goto_2
    invoke-virtual {v6}, Ljavax/net/ssl/SSLEngineResult;->getStatus()Ljavax/net/ssl/SSLEngineResult$Status;

    move-result-object v0

    sget-object v7, Ljavax/net/ssl/SSLEngineResult$Status;->CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;

    if-ne v0, v7, :cond_3

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    sget-object v1, Lio/netty/handler/ssl/aj;->i:Ljavax/net/ssl/SSLException;

    invoke-virtual {v0, v1}, Lio/netty/channel/am;->a(Ljava/lang/Throwable;)V
    :try_end_1
    .catch Ljavax/net/ssl/SSLException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object v0, p0

    move-object v1, p1

    move v4, p2

    invoke-direct/range {v0 .. v5}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Lio/netty/buffer/h;Lio/netty/channel/w;ZZ)V

    goto :goto_1

    :cond_2
    move-object v3, v1

    goto :goto_2

    :cond_3
    :try_start_2
    sget-object v0, Lio/netty/handler/ssl/aj$8;->a:[I

    invoke-virtual {v6}, Ljavax/net/ssl/SSLEngineResult;->getHandshakeStatus()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v7

    invoke-virtual {v7}, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->ordinal()I

    move-result v7

    aget v0, v0, v7

    packed-switch v0, :pswitch_data_0

    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown handshake status: "

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v6}, Ljavax/net/ssl/SSLEngineResult;->getHandshakeStatus()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v4

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_2
    .catch Ljavax/net/ssl/SSLException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :catch_0
    move-exception v0

    :try_start_3
    invoke-direct {p0, p1, v0}, Lio/netty/handler/ssl/aj;->b(Lio/netty/channel/k;Ljava/lang/Throwable;)V

    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :catchall_0
    move-exception v0

    move-object v6, v0

    move-object v0, p0

    move-object v1, p1

    move v4, p2

    invoke-direct/range {v0 .. v5}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Lio/netty/buffer/h;Lio/netty/channel/w;ZZ)V

    throw v6

    :pswitch_0
    :try_start_4
    invoke-direct {p0}, Lio/netty/handler/ssl/aj;->g()V

    goto/16 :goto_0

    :pswitch_1
    invoke-direct {p0}, Lio/netty/handler/ssl/aj;->i()V

    :pswitch_2
    invoke-direct {p0}, Lio/netty/handler/ssl/aj;->h()Z

    :pswitch_3
    const/4 v11, 0x0

    move-object v6, p0

    move-object v7, p1

    move-object v8, v2

    move-object v9, v3

    move v10, p2

    invoke-direct/range {v6 .. v11}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Lio/netty/buffer/h;Lio/netty/channel/w;ZZ)V
    :try_end_4
    .catch Ljavax/net/ssl/SSLException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    move-object v3, v1

    move-object v2, v1

    goto/16 :goto_0

    :pswitch_4
    const/4 v5, 0x1

    move-object v0, p0

    move-object v1, p1

    move v4, p2

    invoke-direct/range {v0 .. v5}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Lio/netty/buffer/h;Lio/netty/channel/w;ZZ)V

    goto/16 :goto_1

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_4
    .end packed-switch
.end method

.method static synthetic a(Lio/netty/handler/ssl/aj;Ljava/lang/Throwable;)V
    .locals 0

    invoke-direct {p0, p1}, Lio/netty/handler/ssl/aj;->b(Ljava/lang/Throwable;)V

    return-void
.end method

.method private a(Lio/netty/util/concurrent/y;)V
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/netty/util/concurrent/y",
            "<",
            "Lio/netty/channel/d;",
            ">;)V"
        }
    .end annotation

    if-eqz p1, :cond_3

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    invoke-interface {v0}, Lio/netty/util/concurrent/y;->isDone()Z

    move-result v1

    if-nez v1, :cond_1

    new-instance v1, Lio/netty/handler/ssl/aj$3;

    invoke-direct {v1, p0, p1}, Lio/netty/handler/ssl/aj$3;-><init>(Lio/netty/handler/ssl/aj;Lio/netty/util/concurrent/y;)V

    invoke-interface {v0, v1}, Lio/netty/util/concurrent/y;->g(Lio/netty/util/concurrent/p;)Lio/netty/util/concurrent/y;

    :cond_0
    :goto_0
    return-void

    :cond_1
    iput-object p1, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    :cond_2
    iget-object v1, p0, Lio/netty/handler/ssl/aj;->l:Lio/netty/channel/k;

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v0}, Ljavax/net/ssl/SSLEngine;->beginHandshake()V

    const/4 v0, 0x0

    invoke-direct {p0, v1, v0}, Lio/netty/handler/ssl/aj;->b(Lio/netty/channel/k;Z)V

    invoke-interface {v1}, Lio/netty/channel/k;->n()Lio/netty/channel/k;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    :goto_1
    iget-wide v2, p0, Lio/netty/handler/ssl/aj;->D:J

    const-wide/16 v4, 0x0

    cmp-long v0, v2, v4

    if-lez v0, :cond_0

    invoke-interface {p1}, Lio/netty/util/concurrent/y;->isDone()Z

    move-result v0

    if-nez v0, :cond_0

    invoke-interface {v1}, Lio/netty/channel/k;->d()Lio/netty/util/concurrent/i;

    move-result-object v0

    new-instance v1, Lio/netty/handler/ssl/aj$4;

    invoke-direct {v1, p0, p1}, Lio/netty/handler/ssl/aj$4;-><init>(Lio/netty/handler/ssl/aj;Lio/netty/util/concurrent/y;)V

    sget-object v4, Ljava/util/concurrent/TimeUnit;->MILLISECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-interface {v0, v1, v2, v3, v4}, Lio/netty/util/concurrent/i;->a(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ae;

    move-result-object v0

    new-instance v1, Lio/netty/handler/ssl/aj$5;

    invoke-direct {v1, p0, v0}, Lio/netty/handler/ssl/aj$5;-><init>(Lio/netty/handler/ssl/aj;Ljava/util/concurrent/ScheduledFuture;)V

    invoke-interface {p1, v1}, Lio/netty/util/concurrent/y;->g(Lio/netty/util/concurrent/p;)Lio/netty/util/concurrent/y;

    goto :goto_0

    :cond_3
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v0}, Ljavax/net/ssl/SSLEngine;->getHandshakeStatus()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v0

    sget-object v1, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    if-ne v0, v1, :cond_0

    iget-object p1, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    sget-boolean v0, Lio/netty/handler/ssl/aj;->d:Z

    if-nez v0, :cond_2

    invoke-interface {p1}, Lio/netty/util/concurrent/y;->isDone()Z

    move-result v0

    if-eqz v0, :cond_2

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0

    :catch_0
    move-exception v0

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/aj;->b(Ljava/lang/Throwable;)V

    goto :goto_1
.end method

.method private a(Lio/netty/channel/k;Lio/netty/buffer/h;II)Z
    .locals 13

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    move/from16 v0, p4

    invoke-direct {p0, p1, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;I)Lio/netty/buffer/h;

    move-result-object v6

    move/from16 v5, p4

    move/from16 v4, p3

    :goto_0
    :try_start_0
    iget-object v2, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    move-object v1, p0

    move-object v3, p2

    invoke-direct/range {v1 .. v6}, Lio/netty/handler/ssl/aj;->a(Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/h;IILio/netty/buffer/h;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v1

    invoke-virtual {v1}, Ljavax/net/ssl/SSLEngineResult;->getStatus()Ljavax/net/ssl/SSLEngineResult$Status;

    move-result-object v3

    invoke-virtual {v1}, Ljavax/net/ssl/SSLEngineResult;->getHandshakeStatus()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v10

    invoke-virtual {v1}, Ljavax/net/ssl/SSLEngineResult;->bytesProduced()I

    move-result v11

    invoke-virtual {v1}, Ljavax/net/ssl/SSLEngineResult;->bytesConsumed()I

    move-result v12

    add-int/2addr v4, v12

    sub-int/2addr v5, v12

    sget-object v1, Lio/netty/handler/ssl/aj$8;->b:[I

    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngineResult$Status;->ordinal()I

    move-result v2

    aget v1, v1, v2

    packed-switch v1, :pswitch_data_0

    move v2, v9

    :goto_1
    sget-object v1, Lio/netty/handler/ssl/aj$8;->a:[I

    invoke-virtual {v10}, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->ordinal()I

    move-result v9

    aget v1, v1, v9

    packed-switch v1, :pswitch_data_1

    new-instance v1, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "unknown handshake status: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_0
    .catch Ljavax/net/ssl/SSLException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catch_0
    move-exception v1

    :try_start_1
    invoke-direct {p0, p1, v1}, Lio/netty/handler/ssl/aj;->b(Lio/netty/channel/k;Ljava/lang/Throwable;)V

    throw v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception v1

    invoke-virtual {v6}, Lio/netty/buffer/h;->e()Z

    move-result v2

    if-eqz v2, :cond_8

    invoke-interface {p1, v6}, Lio/netty/channel/k;->b(Ljava/lang/Object;)Lio/netty/channel/k;

    :goto_2
    throw v1

    :pswitch_0
    :try_start_2
    invoke-virtual {v6}, Lio/netty/buffer/h;->f()I

    move-result v1

    if-lez v1, :cond_0

    const/4 v7, 0x1

    invoke-interface {p1, v6}, Lio/netty/channel/k;->b(Ljava/lang/Object;)Lio/netty/channel/k;

    :goto_3
    iget-object v2, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v2}, Ljavax/net/ssl/SSLEngine;->getSession()Ljavax/net/ssl/SSLSession;

    move-result-object v2

    invoke-interface {v2}, Ljavax/net/ssl/SSLSession;->getApplicationBufferSize()I

    move-result v2

    sub-int v1, v2, v1

    invoke-direct {p0, p1, v1}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;I)Lio/netty/buffer/h;

    move-result-object v6

    goto :goto_0

    :cond_0
    invoke-virtual {v6}, Lio/netty/buffer/h;->B()Z

    goto :goto_3

    :pswitch_1
    const/4 v1, 0x1

    move v2, v1

    goto :goto_1

    :pswitch_2
    move v1, v8

    :goto_4
    sget-object v8, Ljavax/net/ssl/SSLEngineResult$Status;->BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;

    if-eq v3, v8, :cond_1

    if-nez v12, :cond_6

    if-nez v11, :cond_6

    :cond_1
    sget-object v3, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NEED_UNWRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    if-ne v10, v3, :cond_2

    invoke-direct {p0, p1}, Lio/netty/handler/ssl/aj;->l(Lio/netty/channel/k;)V

    :cond_2
    if-eqz v1, :cond_3

    const/4 v1, 0x1

    invoke-direct {p0, p1, v1}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Z)V

    :cond_3
    if-eqz v2, :cond_4

    iget-object v1, p0, Lio/netty/handler/ssl/aj;->y:Lio/netty/handler/ssl/aj$a;

    invoke-interface {p1}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v2

    invoke-virtual {v1, v2}, Lio/netty/handler/ssl/aj$a;->b(Ljava/lang/Object;)Z
    :try_end_2
    .catch Ljavax/net/ssl/SSLException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :cond_4
    invoke-virtual {v6}, Lio/netty/buffer/h;->e()Z

    move-result v1

    if-eqz v1, :cond_7

    const/4 v1, 0x1

    invoke-interface {p1, v6}, Lio/netty/channel/k;->b(Ljava/lang/Object;)Lio/netty/channel/k;

    :goto_5
    return v1

    :pswitch_3
    const/4 v1, 0x1

    :try_start_3
    invoke-direct {p0, p1, v1}, Lio/netty/handler/ssl/aj;->b(Lio/netty/channel/k;Z)V

    move v1, v8

    goto :goto_4

    :pswitch_4
    invoke-direct {p0}, Lio/netty/handler/ssl/aj;->g()V

    move v1, v8

    goto :goto_4

    :pswitch_5
    invoke-direct {p0}, Lio/netty/handler/ssl/aj;->i()V

    const/4 v1, 0x1

    goto :goto_4

    :pswitch_6
    invoke-direct {p0}, Lio/netty/handler/ssl/aj;->h()Z

    move-result v1

    if-eqz v1, :cond_5

    const/4 v8, 0x1

    move v9, v2

    goto/16 :goto_0

    :cond_5
    iget-boolean v1, p0, Lio/netty/handler/ssl/aj;->u:Z

    if-eqz v1, :cond_9

    const/4 v1, 0x0

    iput-boolean v1, p0, Lio/netty/handler/ssl/aj;->u:Z
    :try_end_3
    .catch Ljavax/net/ssl/SSLException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    const/4 v1, 0x1

    goto :goto_4

    :cond_6
    move v9, v2

    move v8, v1

    goto/16 :goto_0

    :cond_7
    invoke-virtual {v6}, Lio/netty/buffer/h;->B()Z

    move v1, v7

    goto :goto_5

    :cond_8
    invoke-virtual {v6}, Lio/netty/buffer/h;->B()Z

    goto :goto_2

    :cond_9
    move v1, v8

    goto :goto_4

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_4
        :pswitch_5
        :pswitch_6
        :pswitch_3
        :pswitch_2
    .end packed-switch
.end method

.method static synthetic a(Lio/netty/handler/ssl/aj;Z)Z
    .locals 0

    iput-boolean p1, p0, Lio/netty/handler/ssl/aj;->A:Z

    return p1
.end method

.method private a(Ljava/lang/Throwable;)Z
    .locals 8

    const/4 v1, 0x0

    const/4 v0, 0x1

    instance-of v2, p1, Ljavax/net/ssl/SSLException;

    if-nez v2, :cond_4

    instance-of v2, p1, Ljava/io/IOException;

    if-eqz v2, :cond_4

    iget-object v2, p0, Lio/netty/handler/ssl/aj;->y:Lio/netty/handler/ssl/aj$a;

    invoke-virtual {v2}, Lio/netty/handler/ssl/aj$a;->isDone()Z

    move-result v2

    if-eqz v2, :cond_4

    invoke-virtual {p1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v2

    sget-object v3, Lio/netty/handler/ssl/aj;->h:Ljava/util/regex/Pattern;

    invoke-virtual {v3, v2}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v2

    invoke-virtual {v2}, Ljava/util/regex/Matcher;->matches()Z

    move-result v2

    if-eqz v2, :cond_1

    :cond_0
    :goto_0
    return v0

    :cond_1
    invoke-virtual {p1}, Ljava/lang/Throwable;->getStackTrace()[Ljava/lang/StackTraceElement;

    move-result-object v3

    array-length v4, v3

    move v2, v1

    :goto_1
    if-ge v2, v4, :cond_4

    aget-object v5, v3, v2

    invoke-virtual {v5}, Ljava/lang/StackTraceElement;->getClassName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5}, Ljava/lang/StackTraceElement;->getMethodName()Ljava/lang/String;

    move-result-object v5

    const-string v7, "io.netty."

    invoke-virtual {v6, v7}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_3

    :cond_2
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_3
    const-string v7, "read"

    invoke-virtual {v7, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_2

    sget-object v5, Lio/netty/handler/ssl/aj;->g:Ljava/util/regex/Pattern;

    invoke-virtual {v5, v6}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v5

    invoke-virtual {v5}, Ljava/util/regex/Matcher;->matches()Z

    move-result v5

    if-nez v5, :cond_0

    :try_start_0
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v5

    invoke-static {v5}, Lio/netty/util/internal/PlatformDependent;->a(Ljava/lang/Class;)Ljava/lang/ClassLoader;

    move-result-object v5

    invoke-virtual {v5, v6}, Ljava/lang/ClassLoader;->loadClass(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v5

    const-class v6, Ljava/nio/channels/SocketChannel;

    invoke-virtual {v6, v5}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v6

    if-nez v6, :cond_0

    const-class v6, Ljava/nio/channels/DatagramChannel;

    invoke-virtual {v6, v5}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    move-result v6

    if-nez v6, :cond_0

    invoke-static {}, Lio/netty/util/internal/PlatformDependent;->d()I

    move-result v6

    const/4 v7, 0x7

    if-lt v6, v7, :cond_2

    const-string v6, "com.sun.nio.sctp.SctpChannel"

    invoke-virtual {v5}, Ljava/lang/Class;->getSuperclass()Ljava/lang/Class;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v5

    if-eqz v5, :cond_2

    goto :goto_0

    :cond_4
    move v0, v1

    goto :goto_0

    :catch_0
    move-exception v5

    goto :goto_2
.end method

.method private b(Lio/netty/channel/k;I)Lio/netty/buffer/h;
    .locals 2

    iget-boolean v0, p0, Lio/netty/handler/ssl/aj;->r:Z

    if-eqz v0, :cond_0

    iget v0, p0, Lio/netty/handler/ssl/aj;->n:I

    invoke-direct {p0, p1, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;I)Lio/netty/buffer/h;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    add-int/lit16 v0, p2, 0x919

    iget v1, p0, Lio/netty/handler/ssl/aj;->n:I

    invoke-static {v0, v1}, Ljava/lang/Math;->min(II)I

    move-result v0

    invoke-direct {p0, p1, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;I)Lio/netty/buffer/h;

    move-result-object v0

    goto :goto_0
.end method

.method static synthetic b(Lio/netty/handler/ssl/aj;)Lio/netty/channel/k;
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->l:Lio/netty/channel/k;

    return-object v0
.end method

.method private b(Lio/netty/channel/k;Ljava/lang/Throwable;)V
    .locals 1

    const/4 v0, 0x1

    invoke-direct {p0, p1, p2, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Ljava/lang/Throwable;Z)V

    return-void
.end method

.method private b(Lio/netty/channel/k;Z)V
    .locals 6

    const/4 v0, 0x0

    invoke-interface {p1}, Lio/netty/channel/k;->c()Lio/netty/buffer/i;

    move-result-object v2

    move-object v1, v0

    :cond_0
    if-nez v1, :cond_1

    const/4 v3, 0x0

    :try_start_0
    invoke-direct {p0, p1, v3}, Lio/netty/handler/ssl/aj;->b(Lio/netty/channel/k;I)Lio/netty/buffer/h;

    move-result-object v1

    :cond_1
    iget-object v3, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    sget-object v4, Lio/netty/buffer/ak;->c:Lio/netty/buffer/h;

    invoke-direct {p0, v2, v3, v4, v1}, Lio/netty/handler/ssl/aj;->a(Lio/netty/buffer/i;Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/h;Lio/netty/buffer/h;)Ljavax/net/ssl/SSLEngineResult;

    move-result-object v3

    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngineResult;->bytesProduced()I

    move-result v4

    if-lez v4, :cond_3

    invoke-interface {p1, v1}, Lio/netty/channel/k;->c(Ljava/lang/Object;)Lio/netty/channel/g;

    if-eqz p2, :cond_2

    const/4 v4, 0x1

    iput-boolean v4, p0, Lio/netty/handler/ssl/aj;->z:Z

    :cond_2
    move-object v1, v0

    :cond_3
    sget-object v4, Lio/netty/handler/ssl/aj$8;->a:[I

    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngineResult;->getHandshakeStatus()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v5

    invoke-virtual {v5}, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->ordinal()I

    move-result v5

    aget v4, v4, v5

    packed-switch v4, :pswitch_data_0

    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown handshake status: "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngineResult;->getHandshakeStatus()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catch Ljavax/net/ssl/SSLException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catch_0
    move-exception v0

    :try_start_1
    invoke-direct {p0, p1, v0}, Lio/netty/handler/ssl/aj;->b(Lio/netty/channel/k;Ljava/lang/Throwable;)V

    invoke-direct {p0, p1}, Lio/netty/handler/ssl/aj;->m(Lio/netty/channel/k;)V

    throw v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception v0

    if-eqz v1, :cond_4

    invoke-virtual {v1}, Lio/netty/buffer/h;->B()Z

    :cond_4
    throw v0

    :pswitch_0
    :try_start_2
    invoke-direct {p0}, Lio/netty/handler/ssl/aj;->i()V

    :cond_5
    :goto_0
    :pswitch_1
    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngineResult;->bytesProduced()I
    :try_end_2
    .catch Ljavax/net/ssl/SSLException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v4

    if-nez v4, :cond_7

    :goto_1
    if-eqz v1, :cond_6

    invoke-virtual {v1}, Lio/netty/buffer/h;->B()Z

    :cond_6
    return-void

    :pswitch_2
    :try_start_3
    invoke-direct {p0}, Lio/netty/handler/ssl/aj;->g()V

    goto :goto_0

    :pswitch_3
    if-nez p2, :cond_5

    invoke-direct {p0, p1}, Lio/netty/handler/ssl/aj;->n(Lio/netty/channel/k;)V

    goto :goto_0

    :pswitch_4
    invoke-direct {p0}, Lio/netty/handler/ssl/aj;->h()Z

    if-nez p2, :cond_5

    invoke-direct {p0, p1}, Lio/netty/handler/ssl/aj;->n(Lio/netty/channel/k;)V

    goto :goto_0

    :cond_7
    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngineResult;->bytesConsumed()I

    move-result v4

    if-nez v4, :cond_0

    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngineResult;->getHandshakeStatus()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;

    move-result-object v3

    sget-object v4, Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;->NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
    :try_end_3
    .catch Ljavax/net/ssl/SSLException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    if-ne v3, v4, :cond_0

    goto :goto_1

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_2
        :pswitch_0
        :pswitch_4
        :pswitch_1
        :pswitch_3
    .end packed-switch
.end method

.method private b(Ljava/lang/Throwable;)V
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    invoke-interface {v0, p1}, Lio/netty/util/concurrent/y;->b(Ljava/lang/Throwable;)Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->l:Lio/netty/channel/k;

    invoke-static {v0, p1}, Lio/netty/handler/ssl/am;->a(Lio/netty/channel/k;Ljava/lang/Throwable;)V

    :cond_0
    return-void
.end method

.method static synthetic e()Lio/netty/util/internal/logging/b;
    .locals 1

    sget-object v0, Lio/netty/handler/ssl/aj;->e:Lio/netty/util/internal/logging/b;

    return-object v0
.end method

.method static synthetic f()Ljavax/net/ssl/SSLException;
    .locals 1

    sget-object v0, Lio/netty/handler/ssl/aj;->j:Ljavax/net/ssl/SSLException;

    return-object v0
.end method

.method private g()V
    .locals 8

    const/4 v1, 0x1

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->o:Ljava/util/concurrent/Executor;

    sget-object v2, Lio/netty/util/concurrent/t;->a:Lio/netty/util/concurrent/t;

    if-ne v0, v2, :cond_2

    :goto_0
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v0}, Ljavax/net/ssl/SSLEngine;->getDelegatedTask()Ljava/lang/Runnable;

    move-result-object v0

    if-nez v0, :cond_1

    :cond_0
    :goto_1
    return-void

    :cond_1
    invoke-interface {v0}, Ljava/lang/Runnable;->run()V

    goto :goto_0

    :cond_2
    new-instance v0, Ljava/util/ArrayList;

    const/4 v2, 0x2

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(I)V

    :goto_2
    iget-object v2, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v2}, Ljavax/net/ssl/SSLEngine;->getDelegatedTask()Ljava/lang/Runnable;

    move-result-object v2

    if-nez v2, :cond_3

    invoke-interface {v0}, Ljava/util/List;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_0

    new-instance v2, Ljava/util/concurrent/CountDownLatch;

    invoke-direct {v2, v1}, Ljava/util/concurrent/CountDownLatch;-><init>(I)V

    iget-object v3, p0, Lio/netty/handler/ssl/aj;->o:Ljava/util/concurrent/Executor;

    new-instance v4, Lio/netty/handler/ssl/aj$2;

    invoke-direct {v4, p0, v0, v2}, Lio/netty/handler/ssl/aj$2;-><init>(Lio/netty/handler/ssl/aj;Ljava/util/List;Ljava/util/concurrent/CountDownLatch;)V

    invoke-interface {v3, v4}, Ljava/util/concurrent/Executor;->execute(Ljava/lang/Runnable;)V

    const/4 v0, 0x0

    :goto_3
    invoke-virtual {v2}, Ljava/util/concurrent/CountDownLatch;->getCount()J

    move-result-wide v4

    const-wide/16 v6, 0x0

    cmp-long v3, v4, v6

    if-eqz v3, :cond_4

    :try_start_0
    invoke-virtual {v2}, Ljava/util/concurrent/CountDownLatch;->await()V
    :try_end_0
    .catch Ljava/lang/InterruptedException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_3

    :catch_0
    move-exception v0

    move v0, v1

    goto :goto_3

    :cond_3
    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_2

    :cond_4
    if-eqz v0, :cond_0

    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Thread;->interrupt()V

    goto :goto_1
.end method

.method private h()Z
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    invoke-interface {v0}, Lio/netty/util/concurrent/y;->isDone()Z

    move-result v0

    if-nez v0, :cond_0

    invoke-direct {p0}, Lio/netty/handler/ssl/aj;->i()V

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private i()V
    .locals 4

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    iget-object v1, p0, Lio/netty/handler/ssl/aj;->l:Lio/netty/channel/k;

    invoke-interface {v1}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v1

    invoke-interface {v0, v1}, Lio/netty/util/concurrent/y;->b(Ljava/lang/Object;)Z

    sget-object v0, Lio/netty/handler/ssl/aj;->e:Lio/netty/util/internal/logging/b;

    invoke-interface {v0}, Lio/netty/util/internal/logging/b;->b()Z

    move-result v0

    if-eqz v0, :cond_0

    sget-object v0, Lio/netty/handler/ssl/aj;->e:Lio/netty/util/internal/logging/b;

    const-string v1, "{} HANDSHAKEN: {}"

    iget-object v2, p0, Lio/netty/handler/ssl/aj;->l:Lio/netty/channel/k;

    invoke-interface {v2}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v2

    iget-object v3, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v3}, Ljavax/net/ssl/SSLEngine;->getSession()Ljavax/net/ssl/SSLSession;

    move-result-object v3

    invoke-interface {v3}, Ljavax/net/ssl/SSLSession;->getCipherSuite()Ljava/lang/String;

    move-result-object v3

    invoke-interface {v0, v1, v2, v3}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    :cond_0
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->l:Lio/netty/channel/k;

    sget-object v1, Lio/netty/handler/ssl/ak;->a:Lio/netty/handler/ssl/ak;

    invoke-interface {v0, v1}, Lio/netty/channel/k;->a(Ljava/lang/Object;)Lio/netty/channel/k;

    iget-boolean v0, p0, Lio/netty/handler/ssl/aj;->v:Z

    if-eqz v0, :cond_1

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->l:Lio/netty/channel/k;

    invoke-interface {v0}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/channel/d;->E()Lio/netty/channel/e;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/channel/e;->f()Z

    move-result v0

    if-nez v0, :cond_1

    const/4 v0, 0x0

    iput-boolean v0, p0, Lio/netty/handler/ssl/aj;->v:Z

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->l:Lio/netty/channel/k;

    invoke-interface {v0}, Lio/netty/channel/k;->m()Lio/netty/channel/k;

    :cond_1
    return-void
.end method

.method private l(Lio/netty/channel/k;)V
    .locals 1

    invoke-interface {p1}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/channel/d;->E()Lio/netty/channel/e;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/channel/e;->f()Z

    move-result v0

    if-nez v0, :cond_1

    iget-boolean v0, p0, Lio/netty/handler/ssl/aj;->C:Z

    if-eqz v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    invoke-interface {v0}, Lio/netty/util/concurrent/y;->isDone()Z

    move-result v0

    if-nez v0, :cond_1

    :cond_0
    invoke-interface {p1}, Lio/netty/channel/k;->m()Lio/netty/channel/k;

    :cond_1
    return-void
.end method

.method private m(Lio/netty/channel/k;)V
    .locals 1

    iget-boolean v0, p0, Lio/netty/handler/ssl/aj;->z:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x0

    iput-boolean v0, p0, Lio/netty/handler/ssl/aj;->z:Z

    invoke-interface {p1}, Lio/netty/channel/k;->n()Lio/netty/channel/k;

    :cond_0
    return-void
.end method

.method private n(Lio/netty/channel/k;)V
    .locals 2

    const/4 v1, 0x0

    sget-object v0, Lio/netty/buffer/ak;->c:Lio/netty/buffer/h;

    invoke-direct {p0, p1, v0, v1, v1}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Lio/netty/buffer/h;II)Z

    return-void
.end method


# virtual methods
.method public a(Lio/netty/channel/k;)V
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    invoke-interface {v0}, Lio/netty/util/concurrent/y;->isDone()Z

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    iput-boolean v0, p0, Lio/netty/handler/ssl/aj;->v:Z

    :cond_0
    invoke-interface {p1}, Lio/netty/channel/k;->m()Lio/netty/channel/k;

    return-void
.end method

.method public a(Lio/netty/channel/k;Lio/netty/channel/w;)V
    .locals 1

    const/4 v0, 0x1

    invoke-direct {p0, p1, p2, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Lio/netty/channel/w;Z)V

    return-void
.end method

.method public a(Lio/netty/channel/k;Ljava/lang/Object;Lio/netty/channel/w;)V
    .locals 4

    instance-of v0, p2, Lio/netty/buffer/h;

    if-nez v0, :cond_0

    new-instance v0, Lio/netty/handler/codec/UnsupportedMessageTypeException;

    const/4 v1, 0x1

    new-array v1, v1, [Ljava/lang/Class;

    const/4 v2, 0x0

    const-class v3, Lio/netty/buffer/h;

    aput-object v3, v1, v2

    invoke-direct {v0, p2, v1}, Lio/netty/handler/codec/UnsupportedMessageTypeException;-><init>(Ljava/lang/Object;[Ljava/lang/Class;)V

    invoke-interface {p3, v0}, Lio/netty/channel/w;->a(Ljava/lang/Throwable;)Lio/netty/channel/w;

    :goto_0
    return-void

    :cond_0
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    invoke-virtual {v0, p2, p3}, Lio/netty/channel/am;->a(Ljava/lang/Object;Lio/netty/channel/w;)V

    goto :goto_0
.end method

.method public a(Lio/netty/channel/k;Ljava/lang/Throwable;)V
    .locals 3

    invoke-direct {p0, p2}, Lio/netty/handler/ssl/aj;->a(Ljava/lang/Throwable;)Z

    move-result v0

    if-eqz v0, :cond_2

    sget-object v0, Lio/netty/handler/ssl/aj;->e:Lio/netty/util/internal/logging/b;

    invoke-interface {v0}, Lio/netty/util/internal/logging/b;->b()Z

    move-result v0

    if-eqz v0, :cond_0

    sget-object v0, Lio/netty/handler/ssl/aj;->e:Lio/netty/util/internal/logging/b;

    const-string v1, "{} Swallowing a harmless \'connection reset by peer / broken pipe\' error that occurred while writing close_notify in response to the peer\'s close_notify"

    invoke-interface {p1}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v2

    invoke-interface {v0, v1, v2, p2}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    :cond_0
    invoke-interface {p1}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/channel/d;->G()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {p1}, Lio/netty/channel/k;->l()Lio/netty/channel/g;

    :cond_1
    :goto_0
    return-void

    :cond_2
    invoke-interface {p1, p2}, Lio/netty/channel/k;->a(Ljava/lang/Throwable;)Lio/netty/channel/k;

    goto :goto_0
.end method

.method public a(Lio/netty/channel/k;Ljava/net/SocketAddress;Lio/netty/channel/w;)V
    .locals 0

    invoke-interface {p1, p2, p3}, Lio/netty/channel/k;->a(Ljava/net/SocketAddress;Lio/netty/channel/w;)Lio/netty/channel/g;

    return-void
.end method

.method public a(Lio/netty/channel/k;Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/w;)V
    .locals 0

    invoke-interface {p1, p2, p3, p4}, Lio/netty/channel/k;->a(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/w;)Lio/netty/channel/g;

    return-void
.end method

.method public b(Lio/netty/channel/k;)V
    .locals 4

    const/4 v3, 0x1

    iget-boolean v0, p0, Lio/netty/handler/ssl/aj;->s:Z

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lio/netty/handler/ssl/aj;->t:Z

    if-nez v0, :cond_0

    iput-boolean v3, p0, Lio/netty/handler/ssl/aj;->t:Z

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    invoke-virtual {v0}, Lio/netty/channel/am;->b()Lio/netty/channel/g;

    invoke-interface {p1}, Lio/netty/channel/k;->n()Lio/netty/channel/k;

    :goto_0
    return-void

    :cond_0
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    invoke-virtual {v0}, Lio/netty/channel/am;->a()Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    sget-object v1, Lio/netty/buffer/ak;->c:Lio/netty/buffer/h;

    invoke-interface {p1}, Lio/netty/channel/k;->o()Lio/netty/channel/w;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lio/netty/channel/am;->a(Ljava/lang/Object;Lio/netty/channel/w;)V

    :cond_1
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    invoke-interface {v0}, Lio/netty/util/concurrent/y;->isDone()Z

    move-result v0

    if-nez v0, :cond_2

    iput-boolean v3, p0, Lio/netty/handler/ssl/aj;->u:Z

    :cond_2
    const/4 v0, 0x0

    :try_start_0
    invoke-direct {p0, p1, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-interface {p1}, Lio/netty/channel/k;->n()Lio/netty/channel/k;

    goto :goto_0

    :catchall_0
    move-exception v0

    invoke-interface {p1}, Lio/netty/channel/k;->n()Lio/netty/channel/k;

    throw v0
.end method

.method protected b(Lio/netty/channel/k;Lio/netty/buffer/h;Ljava/util/List;)V
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/netty/channel/k;",
            "Lio/netty/buffer/h;",
            "Ljava/util/List",
            "<",
            "Ljava/lang/Object;",
            ">;)V"
        }
    .end annotation

    const/16 v8, 0x4919

    const/4 v1, 0x0

    invoke-virtual {p2}, Lio/netty/buffer/h;->b()I

    move-result v3

    invoke-virtual {p2}, Lio/netty/buffer/h;->c()I

    move-result v5

    iget v0, p0, Lio/netty/handler/ssl/aj;->B:I

    if-lez v0, :cond_8

    sub-int v0, v5, v3

    iget v2, p0, Lio/netty/handler/ssl/aj;->B:I

    if-ge v0, v2, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    iget v0, p0, Lio/netty/handler/ssl/aj;->B:I

    add-int v2, v3, v0

    iget v0, p0, Lio/netty/handler/ssl/aj;->B:I

    iput v1, p0, Lio/netty/handler/ssl/aj;->B:I

    :goto_1
    move v4, v2

    :goto_2
    if-ge v0, v8, :cond_2

    sub-int v2, v5, v4

    const/4 v6, 0x5

    if-ge v2, v6, :cond_4

    :cond_2
    :goto_3
    if-lez v0, :cond_3

    invoke-virtual {p2, v0}, Lio/netty/buffer/h;->s(I)Lio/netty/buffer/h;

    invoke-direct {p0, p1, p2, v3, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Lio/netty/buffer/h;II)Z

    move-result v0

    iget-boolean v2, p0, Lio/netty/handler/ssl/aj;->C:Z

    if-nez v2, :cond_3

    iput-boolean v0, p0, Lio/netty/handler/ssl/aj;->C:Z

    :cond_3
    if-eqz v1, :cond_0

    new-instance v0, Lio/netty/handler/ssl/NotSslRecordException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "not an SSL/TLS record: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {p2}, Lio/netty/buffer/m;->a(Lio/netty/buffer/h;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lio/netty/handler/ssl/NotSslRecordException;-><init>(Ljava/lang/String;)V

    invoke-virtual {p2}, Lio/netty/buffer/h;->f()I

    move-result v1

    invoke-virtual {p2, v1}, Lio/netty/buffer/h;->s(I)Lio/netty/buffer/h;

    invoke-interface {p1, v0}, Lio/netty/channel/k;->a(Ljava/lang/Throwable;)Lio/netty/channel/k;

    invoke-direct {p0, p1, v0}, Lio/netty/handler/ssl/aj;->b(Lio/netty/channel/k;Ljava/lang/Throwable;)V

    goto :goto_0

    :cond_4
    invoke-static {p2, v4}, Lio/netty/handler/ssl/am;->a(Lio/netty/buffer/h;I)I

    move-result v6

    const/4 v7, -0x1

    if-ne v6, v7, :cond_5

    const/4 v1, 0x1

    goto :goto_3

    :cond_5
    sget-boolean v7, Lio/netty/handler/ssl/aj;->d:Z

    if-nez v7, :cond_6

    if-gtz v6, :cond_6

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0

    :cond_6
    if-le v6, v2, :cond_7

    iput v6, p0, Lio/netty/handler/ssl/aj;->B:I

    goto :goto_3

    :cond_7
    add-int v2, v0, v6

    if-gt v2, v8, :cond_2

    add-int v0, v4, v6

    move v4, v0

    move v0, v2

    goto :goto_2

    :cond_8
    move v0, v1

    move v2, v3

    goto :goto_1
.end method

.method public b(Lio/netty/channel/k;Lio/netty/channel/w;)V
    .locals 1

    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Lio/netty/channel/w;Z)V

    return-void
.end method

.method public c(Lio/netty/channel/k;)V
    .locals 1

    iput-object p1, p0, Lio/netty/handler/ssl/aj;->l:Lio/netty/channel/k;

    new-instance v0, Lio/netty/channel/am;

    invoke-direct {v0, p1}, Lio/netty/channel/am;-><init>(Lio/netty/channel/k;)V

    iput-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    invoke-interface {p1}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/channel/d;->G()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v0}, Ljavax/net/ssl/SSLEngine;->getUseClientMode()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/util/concurrent/y;)V

    :cond_0
    return-void
.end method

.method public d()Lio/netty/util/concurrent/n;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Lio/netty/util/concurrent/n",
            "<",
            "Lio/netty/channel/d;",
            ">;"
        }
    .end annotation

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->x:Lio/netty/util/concurrent/y;

    return-object v0
.end method

.method public g(Lio/netty/channel/k;)V
    .locals 1

    iget-boolean v0, p0, Lio/netty/handler/ssl/aj;->s:Z

    if-nez v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    invoke-virtual {v0}, Ljavax/net/ssl/SSLEngine;->getUseClientMode()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/util/concurrent/y;)V

    :cond_0
    invoke-interface {p1}, Lio/netty/channel/k;->h()Lio/netty/channel/k;

    return-void
.end method

.method public h(Lio/netty/channel/k;)V
    .locals 2

    sget-object v1, Lio/netty/handler/ssl/aj;->k:Ljava/nio/channels/ClosedChannelException;

    iget-boolean v0, p0, Lio/netty/handler/ssl/aj;->A:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    invoke-direct {p0, p1, v1, v0}, Lio/netty/handler/ssl/aj;->a(Lio/netty/channel/k;Ljava/lang/Throwable;Z)V

    invoke-super {p0, p1}, Lio/netty/handler/codec/a;->h(Lio/netty/channel/k;)V

    return-void

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public i(Lio/netty/channel/k;)V
    .locals 1

    invoke-virtual {p0}, Lio/netty/handler/ssl/aj;->c()V

    invoke-direct {p0, p1}, Lio/netty/handler/ssl/aj;->m(Lio/netty/channel/k;)V

    invoke-direct {p0, p1}, Lio/netty/handler/ssl/aj;->l(Lio/netty/channel/k;)V

    const/4 v0, 0x0

    iput-boolean v0, p0, Lio/netty/handler/ssl/aj;->C:Z

    invoke-interface {p1}, Lio/netty/channel/k;->j()Lio/netty/channel/k;

    return-void
.end method

.method public k(Lio/netty/channel/k;)V
    .locals 3

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    invoke-virtual {v0}, Lio/netty/channel/am;->a()Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->w:Lio/netty/channel/am;

    new-instance v1, Lio/netty/channel/ChannelException;

    const-string v2, "Pending write on removal of SslHandler"

    invoke-direct {v1, v2}, Lio/netty/channel/ChannelException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lio/netty/channel/am;->a(Ljava/lang/Throwable;)V

    :cond_0
    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    instance-of v0, v0, Lio/netty/handler/ssl/OpenSslEngine;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lio/netty/handler/ssl/aj;->m:Ljavax/net/ssl/SSLEngine;

    check-cast v0, Lio/netty/handler/ssl/OpenSslEngine;

    invoke-virtual {v0}, Lio/netty/handler/ssl/OpenSslEngine;->b()V

    :cond_1
    return-void
.end method
