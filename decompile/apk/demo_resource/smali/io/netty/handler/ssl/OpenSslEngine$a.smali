.class final Lio/netty/handler/ssl/OpenSslEngine$a;
.super Ljava/lang/Object;

# interfaces
.implements Ljavax/net/ssl/SSLSession;


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lio/netty/handler/ssl/OpenSslEngine;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x12
    name = "a"
.end annotation


# static fields
.field static final synthetic a:Z


# instance fields
.field final synthetic b:Lio/netty/handler/ssl/OpenSslEngine;

.field private final c:Lio/netty/handler/ssl/ac;

.field private d:[Ljavax/security/cert/X509Certificate;

.field private e:Ljava/lang/String;

.field private f:Ljava/lang/String;

.field private g:[Ljava/security/cert/Certificate;

.field private h:Ljava/lang/String;

.field private i:[B

.field private j:J

.field private k:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map",
            "<",
            "Ljava/lang/String;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const-class v0, Lio/netty/handler/ssl/OpenSslEngine;

    invoke-virtual {v0}, Ljava/lang/Class;->desiredAssertionStatus()Z

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    sput-boolean v0, Lio/netty/handler/ssl/OpenSslEngine$a;->a:Z

    return-void

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method constructor <init>(Lio/netty/handler/ssl/OpenSslEngine;Lio/netty/handler/ssl/ac;)V
    .locals 0

    iput-object p1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p2, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->c:Lio/netty/handler/ssl/ac;

    return-void
.end method

.method private a(Ljava/util/List;Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;Ljava/lang/String;)Ljava/lang/String;
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;",
            "Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;",
            "Ljava/lang/String;",
            ")",
            "Ljava/lang/String;"
        }
    .end annotation

    sget-object v0, Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;->a:Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;

    if-ne p2, v0, :cond_1

    :cond_0
    :goto_0
    return-object p3

    :cond_1
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    sget-boolean v1, Lio/netty/handler/ssl/OpenSslEngine$a;->a:Z

    if-nez v1, :cond_2

    if-gtz v0, :cond_2

    new-instance v0, Ljava/lang/AssertionError;

    invoke-direct {v0}, Ljava/lang/AssertionError;-><init>()V

    throw v0

    :cond_2
    invoke-interface {p1, p3}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_0

    sget-object v1, Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;->c:Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;

    if-ne p2, v1, :cond_3

    add-int/lit8 v0, v0, -0x1

    invoke-interface {p1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    move-object p3, v0

    goto :goto_0

    :cond_3
    new-instance v0, Ljavax/net/ssl/SSLException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "unknown protocol "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private a(Ljava/lang/Object;Ljava/lang/String;)V
    .locals 1

    instance-of v0, p1, Ljavax/net/ssl/SSLSessionBindingListener;

    if-eqz v0, :cond_0

    check-cast p1, Ljavax/net/ssl/SSLSessionBindingListener;

    new-instance v0, Ljavax/net/ssl/SSLSessionBindingEvent;

    invoke-direct {v0, p0, p2}, Ljavax/net/ssl/SSLSessionBindingEvent;-><init>(Ljavax/net/ssl/SSLSession;Ljava/lang/String;)V

    invoke-interface {p1, v0}, Ljavax/net/ssl/SSLSessionBindingListener;->valueUnbound(Ljavax/net/ssl/SSLSessionBindingEvent;)V

    :cond_0
    return-void
.end method

.method private b()V
    .locals 8

    const/4 v0, 0x0

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v1}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v2

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->getPeerCertChain(J)[[B

    move-result-object v4

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v1}, Lio/netty/handler/ssl/OpenSslEngine;->d(Lio/netty/handler/ssl/OpenSslEngine;)Z

    move-result v1

    if-nez v1, :cond_0

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v1}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v2

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->getPeerCertificate(J)[B

    move-result-object v1

    move-object v3, v1

    :goto_0
    if-nez v4, :cond_1

    if-nez v3, :cond_1

    invoke-static {}, Lio/netty/handler/ssl/OpenSslEngine;->c()[Ljava/security/cert/Certificate;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->g:[Ljava/security/cert/Certificate;

    invoke-static {}, Lio/netty/handler/ssl/OpenSslEngine;->d()[Ljavax/security/cert/X509Certificate;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->d:[Ljavax/security/cert/X509Certificate;

    :goto_1
    return-void

    :cond_0
    const/4 v1, 0x0

    move-object v3, v1

    goto :goto_0

    :cond_1
    if-eqz v4, :cond_2

    array-length v1, v4

    :goto_2
    if-eqz v3, :cond_3

    add-int/lit8 v1, v1, 0x1

    new-array v1, v1, [Ljava/security/cert/Certificate;

    const/4 v2, 0x1

    new-instance v5, Lio/netty/handler/ssl/OpenSslX509Certificate;

    invoke-direct {v5, v3}, Lio/netty/handler/ssl/OpenSslX509Certificate;-><init>([B)V

    aput-object v5, v1, v0

    move-object v7, v1

    move v1, v2

    move-object v2, v7

    :goto_3
    if-eqz v4, :cond_5

    array-length v3, v4

    new-array v3, v3, [Ljavax/security/cert/X509Certificate;

    :goto_4
    array-length v5, v3

    if-ge v0, v5, :cond_4

    aget-object v5, v4, v0

    new-instance v6, Lio/netty/handler/ssl/y;

    invoke-direct {v6, v5}, Lio/netty/handler/ssl/y;-><init>([B)V

    aput-object v6, v3, v0

    new-instance v6, Lio/netty/handler/ssl/OpenSslX509Certificate;

    invoke-direct {v6, v5}, Lio/netty/handler/ssl/OpenSslX509Certificate;-><init>([B)V

    aput-object v6, v2, v1

    add-int/lit8 v1, v1, 0x1

    add-int/lit8 v0, v0, 0x1

    goto :goto_4

    :cond_2
    move v1, v0

    goto :goto_2

    :cond_3
    new-array v1, v1, [Ljava/security/cert/Certificate;

    move-object v2, v1

    move v1, v0

    goto :goto_3

    :cond_4
    iput-object v3, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->d:[Ljavax/security/cert/X509Certificate;

    :goto_5
    iput-object v2, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->g:[Ljava/security/cert/Certificate;

    goto :goto_1

    :cond_5
    invoke-static {}, Lio/netty/handler/ssl/OpenSslEngine;->d()[Ljavax/security/cert/X509Certificate;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->d:[Ljavax/security/cert/X509Certificate;

    goto :goto_5
.end method

.method private c()V
    .locals 6

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->e(Lio/netty/handler/ssl/OpenSslEngine;)Lio/netty/handler/ssl/s;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/handler/ssl/s;->d()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;

    move-result-object v1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->e(Lio/netty/handler/ssl/OpenSslEngine;)Lio/netty/handler/ssl/s;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/handler/ssl/s;->a()Ljava/util/List;

    move-result-object v2

    sget-object v0, Lio/netty/handler/ssl/OpenSslEngine$1;->c:[I

    iget-object v3, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v3}, Lio/netty/handler/ssl/OpenSslEngine;->e(Lio/netty/handler/ssl/OpenSslEngine;)Lio/netty/handler/ssl/s;

    move-result-object v3

    invoke-interface {v3}, Lio/netty/handler/ssl/s;->b()Lio/netty/handler/ssl/ApplicationProtocolConfig$Protocol;

    move-result-object v3

    invoke-virtual {v3}, Lio/netty/handler/ssl/ApplicationProtocolConfig$Protocol;->ordinal()I

    move-result v3

    aget v0, v0, v3

    packed-switch v0, :pswitch_data_0

    new-instance v0, Ljava/lang/Error;

    invoke-direct {v0}, Ljava/lang/Error;-><init>()V

    throw v0

    :pswitch_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v4

    invoke-static {v4, v5}, Lorg/apache/tomcat/jni/SSL;->getAlpnSelected(J)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-direct {p0, v2, v1, v0}, Lio/netty/handler/ssl/OpenSslEngine$a;->a(Ljava/util/List;Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->f:Ljava/lang/String;

    :cond_0
    :goto_0
    :pswitch_1
    return-void

    :pswitch_2
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v4

    invoke-static {v4, v5}, Lorg/apache/tomcat/jni/SSL;->getNextProtoNegotiated(J)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-direct {p0, v2, v1, v0}, Lio/netty/handler/ssl/OpenSslEngine$a;->a(Ljava/util/List;Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->f:Ljava/lang/String;

    goto :goto_0

    :pswitch_3
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v4

    invoke-static {v4, v5}, Lorg/apache/tomcat/jni/SSL;->getAlpnSelected(J)Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v4

    invoke-static {v4, v5}, Lorg/apache/tomcat/jni/SSL;->getNextProtoNegotiated(J)Ljava/lang/String;

    move-result-object v0

    :cond_1
    if-eqz v0, :cond_0

    invoke-direct {p0, v2, v1, v0}, Lio/netty/handler/ssl/OpenSslEngine$a;->a(Ljava/util/List;Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->f:Ljava/lang/String;

    goto :goto_0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_0
        :pswitch_2
        :pswitch_3
    .end packed-switch
.end method


# virtual methods
.method a()V
    .locals 4

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Lio/netty/handler/ssl/OpenSslEngine;)Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v2

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->getSessionId(J)[B

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->i:[B

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    iget-object v2, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v2}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v2

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->getCipherForSSL(J)Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Lio/netty/handler/ssl/OpenSslEngine;->a(Lio/netty/handler/ssl/OpenSslEngine;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->h:Ljava/lang/String;

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v2

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->getVersion(J)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->e:Ljava/lang/String;

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine$a;->b()V

    invoke-direct {p0}, Lio/netty/handler/ssl/OpenSslEngine$a;->c()V

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    sget-object v2, Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;->d:Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    invoke-static {v0, v2}, Lio/netty/handler/ssl/OpenSslEngine;->a(Lio/netty/handler/ssl/OpenSslEngine;Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;)Lio/netty/handler/ssl/OpenSslEngine$HandshakeState;

    monitor-exit v1

    return-void

    :cond_0
    new-instance v0, Ljavax/net/ssl/SSLException;

    const-string v2, "Already closed"

    invoke-direct {v0, v2}, Ljavax/net/ssl/SSLException;-><init>(Ljava/lang/String;)V

    throw v0

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getApplicationBufferSize()I
    .locals 1

    const/16 v0, 0x4000

    return v0
.end method

.method public getCipherSuite()Ljava/lang/String;
    .locals 2

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->h:Ljava/lang/String;

    if-nez v0, :cond_0

    const-string v0, "SSL_NULL_WITH_NULL_NULL"

    monitor-exit v1

    :goto_0
    return-object v0

    :cond_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->h:Ljava/lang/String;

    monitor-exit v1

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getCreationTime()J
    .locals 6

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    monitor-enter v1

    :try_start_0
    iget-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->j:J

    const-wide/16 v4, 0x0

    cmp-long v0, v2, v4

    if-nez v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Lio/netty/handler/ssl/OpenSslEngine;)Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v2

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->getTime(J)J

    move-result-wide v2

    const-wide/16 v4, 0x3e8

    mul-long/2addr v2, v4

    iput-wide v2, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->j:J

    :cond_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    iget-wide v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->j:J

    return-wide v0

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method public getId()[B
    .locals 2

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->i:[B

    if-nez v0, :cond_0

    sget-object v0, Lio/netty/util/internal/c;->a:[B

    monitor-exit v1

    :goto_0
    return-object v0

    :cond_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->i:[B

    invoke-virtual {v0}, [B->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [B

    monitor-exit v1

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getLastAccessedTime()J
    .locals 4

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->c(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v0

    const-wide/16 v2, -0x1

    cmp-long v2, v0, v2

    if-nez v2, :cond_0

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine$a;->getCreationTime()J

    move-result-wide v0

    :cond_0
    return-wide v0
.end method

.method public getLocalCertificates()[Ljava/security/cert/Certificate;
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->f(Lio/netty/handler/ssl/OpenSslEngine;)[Ljava/security/cert/Certificate;

    move-result-object v0

    if-nez v0, :cond_0

    const/4 v0, 0x0

    :goto_0
    return-object v0

    :cond_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->f(Lio/netty/handler/ssl/OpenSslEngine;)[Ljava/security/cert/Certificate;

    move-result-object v0

    invoke-virtual {v0}, [Ljava/security/cert/Certificate;->clone()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/security/cert/Certificate;

    goto :goto_0
.end method

.method public getLocalPrincipal()Ljava/security/Principal;
    .locals 2

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->f(Lio/netty/handler/ssl/OpenSslEngine;)[Ljava/security/cert/Certificate;

    move-result-object v0

    if-eqz v0, :cond_0

    array-length v1, v0

    if-nez v1, :cond_1

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return-object v0

    :cond_1
    const/4 v1, 0x0

    aget-object v0, v0, v1

    check-cast v0, Ljava/security/cert/X509Certificate;

    invoke-virtual {v0}, Ljava/security/cert/X509Certificate;->getIssuerX500Principal()Ljavax/security/auth/x500/X500Principal;

    move-result-object v0

    goto :goto_0
.end method

.method public getPacketBufferSize()I
    .locals 1

    const/16 v0, 0x4919

    return v0
.end method

.method public getPeerCertificateChain()[Ljavax/security/cert/X509Certificate;
    .locals 3

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->d:[Ljavax/security/cert/X509Certificate;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->d:[Ljavax/security/cert/X509Certificate;

    array-length v0, v0

    if-nez v0, :cond_1

    :cond_0
    new-instance v0, Ljavax/net/ssl/SSLPeerUnverifiedException;

    const-string v2, "peer not verified"

    invoke-direct {v0, v2}, Ljavax/net/ssl/SSLPeerUnverifiedException;-><init>(Ljava/lang/String;)V

    throw v0

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    :cond_1
    :try_start_1
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->d:[Ljavax/security/cert/X509Certificate;

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return-object v0
.end method

.method public getPeerCertificates()[Ljava/security/cert/Certificate;
    .locals 3

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->g:[Ljava/security/cert/Certificate;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->g:[Ljava/security/cert/Certificate;

    array-length v0, v0

    if-nez v0, :cond_1

    :cond_0
    new-instance v0, Ljavax/net/ssl/SSLPeerUnverifiedException;

    const-string v2, "peer not verified"

    invoke-direct {v0, v2}, Ljavax/net/ssl/SSLPeerUnverifiedException;-><init>(Ljava/lang/String;)V

    throw v0

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    :cond_1
    :try_start_1
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->g:[Ljava/security/cert/Certificate;

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return-object v0
.end method

.method public getPeerHost()Ljava/lang/String;
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-virtual {v0}, Lio/netty/handler/ssl/OpenSslEngine;->getPeerHost()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getPeerPort()I
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-virtual {v0}, Lio/netty/handler/ssl/OpenSslEngine;->getPeerPort()I

    move-result v0

    return v0
.end method

.method public getPeerPrincipal()Ljava/security/Principal;
    .locals 2

    invoke-virtual {p0}, Lio/netty/handler/ssl/OpenSslEngine$a;->getPeerCertificates()[Ljava/security/cert/Certificate;

    move-result-object v0

    const/4 v1, 0x0

    aget-object v0, v0, v1

    check-cast v0, Ljava/security/cert/X509Certificate;

    invoke-virtual {v0}, Ljava/security/cert/X509Certificate;->getSubjectX500Principal()Ljavax/security/auth/x500/X500Principal;

    move-result-object v0

    return-object v0
.end method

.method public getProtocol()Ljava/lang/String;
    .locals 4

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->e:Ljava/lang/String;

    if-nez v0, :cond_0

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Lio/netty/handler/ssl/OpenSslEngine;)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v2

    invoke-static {v2, v3}, Lorg/apache/tomcat/jni/SSL;->getVersion(J)Ljava/lang/String;

    move-result-object v0

    :goto_0
    monitor-exit v1

    :cond_0
    return-object v0

    :cond_1
    const-string v0, ""

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getSessionContext()Ljavax/net/ssl/SSLSessionContext;
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->c:Lio/netty/handler/ssl/ac;

    return-object v0
.end method

.method public getValue(Ljava/lang/String;)Ljava/lang/Object;
    .locals 2

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "name"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->k:Ljava/util/Map;

    if-nez v0, :cond_1

    const/4 v0, 0x0

    :goto_0
    return-object v0

    :cond_1
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->k:Ljava/util/Map;

    invoke-interface {v0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    goto :goto_0
.end method

.method public getValueNames()[Ljava/lang/String;
    .locals 2

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->k:Ljava/util/Map;

    if-eqz v0, :cond_0

    invoke-interface {v0}, Ljava/util/Map;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_1

    :cond_0
    sget-object v0, Lio/netty/util/internal/c;->k:[Ljava/lang/String;

    :goto_0
    return-object v0

    :cond_1
    invoke-interface {v0}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v0}, Ljava/util/Map;->size()I

    move-result v0

    new-array v0, v0, [Ljava/lang/String;

    invoke-interface {v1, v0}, Ljava/util/Set;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    goto :goto_0
.end method

.method public invalidate()V
    .locals 6

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    monitor-enter v1

    :try_start_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->a(Lio/netty/handler/ssl/OpenSslEngine;)Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v0}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v2

    const-wide/16 v4, 0x0

    invoke-static {v2, v3, v4, v5}, Lorg/apache/tomcat/jni/SSL;->setTimeout(JJ)J

    :cond_0
    monitor-exit v1

    return-void

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public isValid()Z
    .locals 8

    const-wide/16 v6, 0x3e8

    const/4 v0, 0x0

    iget-object v1, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    monitor-enter v1

    :try_start_0
    iget-object v2, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v2}, Lio/netty/handler/ssl/OpenSslEngine;->a(Lio/netty/handler/ssl/OpenSslEngine;)Z

    move-result v2

    if-nez v2, :cond_1

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    iget-object v4, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v4}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v4

    invoke-static {v4, v5}, Lorg/apache/tomcat/jni/SSL;->getTimeout(J)J

    move-result-wide v4

    mul-long/2addr v4, v6

    sub-long/2addr v2, v4

    iget-object v4, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->b:Lio/netty/handler/ssl/OpenSslEngine;

    invoke-static {v4}, Lio/netty/handler/ssl/OpenSslEngine;->b(Lio/netty/handler/ssl/OpenSslEngine;)J

    move-result-wide v4

    invoke-static {v4, v5}, Lorg/apache/tomcat/jni/SSL;->getTime(J)J

    move-result-wide v4

    mul-long/2addr v4, v6

    cmp-long v2, v2, v4

    if-gez v2, :cond_0

    const/4 v0, 0x1

    :cond_0
    monitor-exit v1

    :goto_0
    return v0

    :cond_1
    monitor-exit v1

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public putValue(Ljava/lang/String;Ljava/lang/Object;)V
    .locals 2

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "name"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    if-nez p2, :cond_1

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "value"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->k:Ljava/util/Map;

    if-nez v0, :cond_2

    new-instance v0, Ljava/util/HashMap;

    const/4 v1, 0x2

    invoke-direct {v0, v1}, Ljava/util/HashMap;-><init>(I)V

    iput-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->k:Ljava/util/Map;

    :cond_2
    invoke-interface {v0, p1, p2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    instance-of v1, p2, Ljavax/net/ssl/SSLSessionBindingListener;

    if-eqz v1, :cond_3

    check-cast p2, Ljavax/net/ssl/SSLSessionBindingListener;

    new-instance v1, Ljavax/net/ssl/SSLSessionBindingEvent;

    invoke-direct {v1, p0, p1}, Ljavax/net/ssl/SSLSessionBindingEvent;-><init>(Ljavax/net/ssl/SSLSession;Ljava/lang/String;)V

    invoke-interface {p2, v1}, Ljavax/net/ssl/SSLSessionBindingListener;->valueBound(Ljavax/net/ssl/SSLSessionBindingEvent;)V

    :cond_3
    invoke-direct {p0, v0, p1}, Lio/netty/handler/ssl/OpenSslEngine$a;->a(Ljava/lang/Object;Ljava/lang/String;)V

    return-void
.end method

.method public removeValue(Ljava/lang/String;)V
    .locals 2

    if-nez p1, :cond_0

    new-instance v0, Ljava/lang/NullPointerException;

    const-string v1, "name"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iget-object v0, p0, Lio/netty/handler/ssl/OpenSslEngine$a;->k:Ljava/util/Map;

    if-nez v0, :cond_1

    :goto_0
    return-void

    :cond_1
    invoke-interface {v0, p1}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    invoke-direct {p0, v0, p1}, Lio/netty/handler/ssl/OpenSslEngine$a;->a(Ljava/lang/Object;Ljava/lang/String;)V

    goto :goto_0
.end method
