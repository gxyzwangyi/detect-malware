.class public Lio/netty/handler/ssl/n;
.super Lio/netty/handler/ssl/ah;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lio/netty/handler/ssl/n$1;
    }
.end annotation


# static fields
.field static final a:[Ljava/lang/String;

.field static final b:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field static final c:Ljava/util/Set;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Set",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private static final d:Lio/netty/util/internal/logging/b;


# instance fields
.field private final e:[Ljava/lang/String;

.field private final f:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private final g:Lio/netty/handler/ssl/h;

.field private final i:Lio/netty/handler/ssl/ClientAuth;

.field private final j:Ljavax/net/ssl/SSLContext;

.field private final k:Z


# direct methods
.method static constructor <clinit>()V
    .locals 9

    const/4 v8, 0x3

    const/4 v7, 0x2

    const/4 v6, 0x1

    const/4 v1, 0x0

    const-class v0, Lio/netty/handler/ssl/n;

    invoke-static {v0}, Lio/netty/util/internal/logging/c;->a(Ljava/lang/Class;)Lio/netty/util/internal/logging/b;

    move-result-object v0

    sput-object v0, Lio/netty/handler/ssl/n;->d:Lio/netty/util/internal/logging/b;

    :try_start_0
    const-string v0, "TLS"

    invoke-static {v0}, Ljavax/net/ssl/SSLContext;->getInstance(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;

    move-result-object v0

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-virtual {v0, v2, v3, v4}, Ljavax/net/ssl/SSLContext;->init([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    invoke-virtual {v0}, Ljavax/net/ssl/SSLContext;->createSSLEngine()Ljavax/net/ssl/SSLEngine;

    move-result-object v2

    invoke-virtual {v2}, Ljavax/net/ssl/SSLEngine;->getSupportedProtocols()[Ljava/lang/String;

    move-result-object v3

    new-instance v4, Ljava/util/HashSet;

    array-length v0, v3

    invoke-direct {v4, v0}, Ljava/util/HashSet;-><init>(I)V

    move v0, v1

    :goto_0
    array-length v5, v3

    if-ge v0, v5, :cond_0

    aget-object v5, v3, v0

    invoke-interface {v4, v5}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/Error;

    const-string v2, "failed to initialize the default SSL context"

    invoke-direct {v1, v2, v0}, Ljava/lang/Error;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1

    :cond_0
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    new-array v3, v8, [Ljava/lang/String;

    const-string v5, "TLSv1.2"

    aput-object v5, v3, v1

    const-string v5, "TLSv1.1"

    aput-object v5, v3, v6

    const-string v5, "TLSv1"

    aput-object v5, v3, v7

    invoke-static {v4, v0, v3}, Lio/netty/handler/ssl/n;->a(Ljava/util/Set;Ljava/util/List;[Ljava/lang/String;)V

    invoke-interface {v0}, Ljava/util/List;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_1

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v3

    new-array v3, v3, [Ljava/lang/String;

    invoke-interface {v0, v3}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Ljava/lang/String;

    sput-object v0, Lio/netty/handler/ssl/n;->a:[Ljava/lang/String;

    :goto_1
    invoke-virtual {v2}, Ljavax/net/ssl/SSLEngine;->getSupportedCipherSuites()[Ljava/lang/String;

    move-result-object v3

    new-instance v0, Ljava/util/HashSet;

    array-length v4, v3

    invoke-direct {v0, v4}, Ljava/util/HashSet;-><init>(I)V

    sput-object v0, Lio/netty/handler/ssl/n;->c:Ljava/util/Set;

    move v0, v1

    :goto_2
    array-length v4, v3

    if-ge v0, v4, :cond_2

    sget-object v4, Lio/netty/handler/ssl/n;->c:Ljava/util/Set;

    aget-object v5, v3, v0

    invoke-interface {v4, v5}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    :cond_1
    invoke-virtual {v2}, Ljavax/net/ssl/SSLEngine;->getEnabledProtocols()[Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lio/netty/handler/ssl/n;->a:[Ljava/lang/String;

    goto :goto_1

    :cond_2
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    sget-object v3, Lio/netty/handler/ssl/n;->c:Ljava/util/Set;

    const/4 v4, 0x7

    new-array v4, v4, [Ljava/lang/String;

    const-string v5, "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"

    aput-object v5, v4, v1

    const-string v5, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"

    aput-object v5, v4, v6

    const-string v5, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"

    aput-object v5, v4, v7

    const-string v5, "TLS_RSA_WITH_AES_128_GCM_SHA256"

    aput-object v5, v4, v8

    const/4 v5, 0x4

    const-string v6, "TLS_RSA_WITH_AES_128_CBC_SHA"

    aput-object v6, v4, v5

    const/4 v5, 0x5

    const-string v6, "TLS_RSA_WITH_AES_256_CBC_SHA"

    aput-object v6, v4, v5

    const/4 v5, 0x6

    const-string v6, "SSL_RSA_WITH_3DES_EDE_CBC_SHA"

    aput-object v6, v4, v5

    invoke-static {v3, v0, v4}, Lio/netty/handler/ssl/n;->a(Ljava/util/Set;Ljava/util/List;[Ljava/lang/String;)V

    invoke-interface {v0}, Ljava/util/List;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_4

    invoke-virtual {v2}, Ljavax/net/ssl/SSLEngine;->getEnabledCipherSuites()[Ljava/lang/String;

    move-result-object v2

    array-length v3, v2

    :goto_3
    if-ge v1, v3, :cond_4

    aget-object v4, v2, v1

    const-string v5, "_RC4_"

    invoke-virtual {v4, v5}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v5

    if-eqz v5, :cond_3

    :goto_4
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    :cond_3
    invoke-interface {v0, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_4

    :cond_4
    invoke-static {v0}, Ljava/util/Collections;->unmodifiableList(Ljava/util/List;)Ljava/util/List;

    move-result-object v0

    sput-object v0, Lio/netty/handler/ssl/n;->b:Ljava/util/List;

    sget-object v0, Lio/netty/handler/ssl/n;->d:Lio/netty/util/internal/logging/b;

    invoke-interface {v0}, Lio/netty/util/internal/logging/b;->b()Z

    move-result v0

    if-eqz v0, :cond_5

    sget-object v0, Lio/netty/handler/ssl/n;->d:Lio/netty/util/internal/logging/b;

    const-string v1, "Default protocols (JDK): {} "

    sget-object v2, Lio/netty/handler/ssl/n;->a:[Ljava/lang/String;

    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v2

    invoke-interface {v0, v1, v2}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;)V

    sget-object v0, Lio/netty/handler/ssl/n;->d:Lio/netty/util/internal/logging/b;

    const-string v1, "Default cipher suites (JDK): {}"

    sget-object v2, Lio/netty/handler/ssl/n;->b:Ljava/util/List;

    invoke-interface {v0, v1, v2}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;)V

    :cond_5
    return-void
.end method

.method constructor <init>(Ljavax/net/ssl/SSLContext;ZLjava/lang/Iterable;Lio/netty/handler/ssl/d;Lio/netty/handler/ssl/h;Lio/netty/handler/ssl/ClientAuth;)V
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljavax/net/ssl/SSLContext;",
            "Z",
            "Ljava/lang/Iterable",
            "<",
            "Ljava/lang/String;",
            ">;",
            "Lio/netty/handler/ssl/d;",
            "Lio/netty/handler/ssl/h;",
            "Lio/netty/handler/ssl/ClientAuth;",
            ")V"
        }
    .end annotation

    invoke-direct {p0}, Lio/netty/handler/ssl/ah;-><init>()V

    const-string v0, "apn"

    invoke-static {p5, v0}, Lio/netty/util/internal/k;->a(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lio/netty/handler/ssl/h;

    iput-object v0, p0, Lio/netty/handler/ssl/n;->g:Lio/netty/handler/ssl/h;

    const-string v0, "clientAuth"

    invoke-static {p6, v0}, Lio/netty/util/internal/k;->a(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lio/netty/handler/ssl/ClientAuth;

    iput-object v0, p0, Lio/netty/handler/ssl/n;->i:Lio/netty/handler/ssl/ClientAuth;

    const-string v0, "cipherFilter"

    invoke-static {p4, v0}, Lio/netty/util/internal/k;->a(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lio/netty/handler/ssl/d;

    sget-object v1, Lio/netty/handler/ssl/n;->b:Ljava/util/List;

    sget-object v2, Lio/netty/handler/ssl/n;->c:Ljava/util/Set;

    invoke-interface {v0, p3, v1, v2}, Lio/netty/handler/ssl/d;->a(Ljava/lang/Iterable;Ljava/util/List;Ljava/util/Set;)[Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/n;->e:[Ljava/lang/String;

    iget-object v0, p0, Lio/netty/handler/ssl/n;->e:[Ljava/lang/String;

    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-static {v0}, Ljava/util/Collections;->unmodifiableList(Ljava/util/List;)Ljava/util/List;

    move-result-object v0

    iput-object v0, p0, Lio/netty/handler/ssl/n;->f:Ljava/util/List;

    const-string v0, "sslContext"

    invoke-static {p1, v0}, Lio/netty/util/internal/k;->a(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljavax/net/ssl/SSLContext;

    iput-object v0, p0, Lio/netty/handler/ssl/n;->j:Ljavax/net/ssl/SSLContext;

    iput-boolean p2, p0, Lio/netty/handler/ssl/n;->k:Z

    return-void
.end method

.method static a(Lio/netty/handler/ssl/ApplicationProtocolConfig;Z)Lio/netty/handler/ssl/h;
    .locals 4

    const/4 v3, 0x1

    const/4 v2, 0x0

    if-nez p0, :cond_0

    sget-object v0, Lio/netty/handler/ssl/j;->a:Lio/netty/handler/ssl/j;

    :goto_0
    return-object v0

    :cond_0
    sget-object v0, Lio/netty/handler/ssl/n$1;->d:[I

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->b()Lio/netty/handler/ssl/ApplicationProtocolConfig$Protocol;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/ssl/ApplicationProtocolConfig$Protocol;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_0

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "JDK provider does not support "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->b()Lio/netty/handler/ssl/ApplicationProtocolConfig$Protocol;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " protocol"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_0
    sget-object v0, Lio/netty/handler/ssl/j;->a:Lio/netty/handler/ssl/j;

    goto :goto_0

    :pswitch_1
    if-eqz p1, :cond_1

    sget-object v0, Lio/netty/handler/ssl/n$1;->b:[I

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->c()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_1

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "JDK provider does not support "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->c()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " failure behavior"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_2
    new-instance v0, Lio/netty/handler/ssl/f;

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->a()Ljava/util/List;

    move-result-object v1

    invoke-direct {v0, v3, v1}, Lio/netty/handler/ssl/f;-><init>(ZLjava/lang/Iterable;)V

    goto :goto_0

    :pswitch_3
    new-instance v0, Lio/netty/handler/ssl/f;

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->a()Ljava/util/List;

    move-result-object v1

    invoke-direct {v0, v2, v1}, Lio/netty/handler/ssl/f;-><init>(ZLjava/lang/Iterable;)V

    goto :goto_0

    :cond_1
    sget-object v0, Lio/netty/handler/ssl/n$1;->c:[I

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->d()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_2

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "JDK provider does not support "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->d()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " failure behavior"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_4
    new-instance v0, Lio/netty/handler/ssl/f;

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->a()Ljava/util/List;

    move-result-object v1

    invoke-direct {v0, v2, v1}, Lio/netty/handler/ssl/f;-><init>(ZLjava/lang/Iterable;)V

    goto/16 :goto_0

    :pswitch_5
    new-instance v0, Lio/netty/handler/ssl/f;

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->a()Ljava/util/List;

    move-result-object v1

    invoke-direct {v0, v3, v1}, Lio/netty/handler/ssl/f;-><init>(ZLjava/lang/Iterable;)V

    goto/16 :goto_0

    :pswitch_6
    if-eqz p1, :cond_2

    sget-object v0, Lio/netty/handler/ssl/n$1;->c:[I

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->d()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_3

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "JDK provider does not support "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->d()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectedListenerFailureBehavior;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " failure behavior"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_7
    new-instance v0, Lio/netty/handler/ssl/k;

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->a()Ljava/util/List;

    move-result-object v1

    invoke-direct {v0, v2, v1}, Lio/netty/handler/ssl/k;-><init>(ZLjava/lang/Iterable;)V

    goto/16 :goto_0

    :pswitch_8
    new-instance v0, Lio/netty/handler/ssl/k;

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->a()Ljava/util/List;

    move-result-object v1

    invoke-direct {v0, v3, v1}, Lio/netty/handler/ssl/k;-><init>(ZLjava/lang/Iterable;)V

    goto/16 :goto_0

    :cond_2
    sget-object v0, Lio/netty/handler/ssl/n$1;->b:[I

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->c()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_4

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "JDK provider does not support "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->c()Lio/netty/handler/ssl/ApplicationProtocolConfig$SelectorFailureBehavior;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " failure behavior"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_9
    new-instance v0, Lio/netty/handler/ssl/k;

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->a()Ljava/util/List;

    move-result-object v1

    invoke-direct {v0, v3, v1}, Lio/netty/handler/ssl/k;-><init>(ZLjava/lang/Iterable;)V

    goto/16 :goto_0

    :pswitch_a
    new-instance v0, Lio/netty/handler/ssl/k;

    invoke-virtual {p0}, Lio/netty/handler/ssl/ApplicationProtocolConfig;->a()Ljava/util/List;

    move-result-object v1

    invoke-direct {v0, v2, v1}, Lio/netty/handler/ssl/k;-><init>(ZLjava/lang/Iterable;)V

    goto/16 :goto_0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_6
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_2
        :pswitch_3
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_4
        :pswitch_5
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_7
        :pswitch_8
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_9
        :pswitch_a
    .end packed-switch
.end method

.method private a(Ljavax/net/ssl/SSLEngine;)Ljavax/net/ssl/SSLEngine;
    .locals 3

    const/4 v2, 0x1

    iget-object v0, p0, Lio/netty/handler/ssl/n;->e:[Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljavax/net/ssl/SSLEngine;->setEnabledCipherSuites([Ljava/lang/String;)V

    sget-object v0, Lio/netty/handler/ssl/n;->a:[Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljavax/net/ssl/SSLEngine;->setEnabledProtocols([Ljava/lang/String;)V

    invoke-virtual {p0}, Lio/netty/handler/ssl/n;->b()Z

    move-result v0

    invoke-virtual {p1, v0}, Ljavax/net/ssl/SSLEngine;->setUseClientMode(Z)V

    invoke-virtual {p0}, Lio/netty/handler/ssl/n;->i()Z

    move-result v0

    if-eqz v0, :cond_0

    sget-object v0, Lio/netty/handler/ssl/n$1;->a:[I

    iget-object v1, p0, Lio/netty/handler/ssl/n;->i:Lio/netty/handler/ssl/ClientAuth;

    invoke-virtual {v1}, Lio/netty/handler/ssl/ClientAuth;->ordinal()I

    move-result v1

    aget v0, v0, v1

    packed-switch v0, :pswitch_data_0

    :cond_0
    :goto_0
    iget-object v0, p0, Lio/netty/handler/ssl/n;->g:Lio/netty/handler/ssl/h;

    invoke-interface {v0}, Lio/netty/handler/ssl/h;->b()Lio/netty/handler/ssl/h$e;

    move-result-object v0

    iget-object v1, p0, Lio/netty/handler/ssl/n;->g:Lio/netty/handler/ssl/h;

    invoke-virtual {p0}, Lio/netty/handler/ssl/n;->i()Z

    move-result v2

    invoke-interface {v0, p1, v1, v2}, Lio/netty/handler/ssl/h$e;->a(Ljavax/net/ssl/SSLEngine;Lio/netty/handler/ssl/h;Z)Ljavax/net/ssl/SSLEngine;

    move-result-object v0

    return-object v0

    :pswitch_0
    invoke-virtual {p1, v2}, Ljavax/net/ssl/SSLEngine;->setWantClientAuth(Z)V

    goto :goto_0

    :pswitch_1
    invoke-virtual {p1, v2}, Ljavax/net/ssl/SSLEngine;->setNeedClientAuth(Z)V

    goto :goto_0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method private static varargs a(Ljava/util/Set;Ljava/util/List;[Ljava/lang/String;)V
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Set",
            "<",
            "Ljava/lang/String;",
            ">;",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;[",
            "Ljava/lang/String;",
            ")V"
        }
    .end annotation

    array-length v1, p2

    const/4 v0, 0x0

    :goto_0
    if-ge v0, v1, :cond_1

    aget-object v2, p2, v0

    invoke-interface {p0, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    invoke-interface {p1, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_1
    return-void
.end method


# virtual methods
.method public final a()Ljavax/net/ssl/SSLContext;
    .locals 1

    iget-object v0, p0, Lio/netty/handler/ssl/n;->j:Ljavax/net/ssl/SSLContext;

    return-object v0
.end method

.method public final a(Lio/netty/buffer/i;)Ljavax/net/ssl/SSLEngine;
    .locals 1

    invoke-virtual {p0}, Lio/netty/handler/ssl/n;->a()Ljavax/net/ssl/SSLContext;

    move-result-object v0

    invoke-virtual {v0}, Ljavax/net/ssl/SSLContext;->createSSLEngine()Ljavax/net/ssl/SSLEngine;

    move-result-object v0

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/n;->a(Ljavax/net/ssl/SSLEngine;)Ljavax/net/ssl/SSLEngine;

    move-result-object v0

    return-object v0
.end method

.method public final a(Lio/netty/buffer/i;Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;
    .locals 1

    invoke-virtual {p0}, Lio/netty/handler/ssl/n;->a()Ljavax/net/ssl/SSLContext;

    move-result-object v0

    invoke-virtual {v0, p2, p3}, Ljavax/net/ssl/SSLContext;->createSSLEngine(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;

    move-result-object v0

    invoke-direct {p0, v0}, Lio/netty/handler/ssl/n;->a(Ljavax/net/ssl/SSLEngine;)Ljavax/net/ssl/SSLEngine;

    move-result-object v0

    return-object v0
.end method

.method public final b()Z
    .locals 1

    iget-boolean v0, p0, Lio/netty/handler/ssl/n;->k:Z

    return v0
.end method
