.class public abstract Lio/netty/buffer/d;
.super Lio/netty/buffer/a;


# static fields
.field private static final d:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater",
            "<",
            "Lio/netty/buffer/d;",
            ">;"
        }
    .end annotation
.end field


# instance fields
.field private volatile e:I


# direct methods
.method static constructor <clinit>()V
    .locals 2

    const-class v0, Lio/netty/buffer/d;

    const-string v1, "e"

    invoke-static {v0, v1}, Lio/netty/util/internal/PlatformDependent;->b(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    move-result-object v0

    if-nez v0, :cond_0

    const-class v0, Lio/netty/buffer/d;

    const-string v1, "e"

    invoke-static {v0, v1}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->newUpdater(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    move-result-object v0

    :cond_0
    sput-object v0, Lio/netty/buffer/d;->d:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    return-void
.end method

.method protected constructor <init>(I)V
    .locals 1

    invoke-direct {p0, p1}, Lio/netty/buffer/a;-><init>(I)V

    const/4 v0, 0x1

    iput v0, p0, Lio/netty/buffer/d;->e:I

    return-void
.end method


# virtual methods
.method public A()Lio/netty/buffer/h;
    .locals 5

    const v4, 0x7fffffff

    const/4 v3, 0x1

    :cond_0
    iget v0, p0, Lio/netty/buffer/d;->e:I

    if-nez v0, :cond_1

    new-instance v0, Lio/netty/util/IllegalReferenceCountException;

    const/4 v1, 0x0

    invoke-direct {v0, v1, v3}, Lio/netty/util/IllegalReferenceCountException;-><init>(II)V

    throw v0

    :cond_1
    if-ne v0, v4, :cond_2

    new-instance v0, Lio/netty/util/IllegalReferenceCountException;

    invoke-direct {v0, v4, v3}, Lio/netty/util/IllegalReferenceCountException;-><init>(II)V

    throw v0

    :cond_2
    sget-object v1, Lio/netty/buffer/d;->d:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    add-int/lit8 v2, v0, 0x1

    invoke-virtual {v1, p0, v0, v2}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->compareAndSet(Ljava/lang/Object;II)Z

    move-result v0

    if-eqz v0, :cond_0

    return-object p0
.end method

.method public B()Z
    .locals 5

    const/4 v0, 0x1

    const/4 v1, 0x0

    :cond_0
    iget v2, p0, Lio/netty/buffer/d;->e:I

    if-nez v2, :cond_1

    new-instance v0, Lio/netty/util/IllegalReferenceCountException;

    const/4 v2, -0x1

    invoke-direct {v0, v1, v2}, Lio/netty/util/IllegalReferenceCountException;-><init>(II)V

    throw v0

    :cond_1
    sget-object v3, Lio/netty/buffer/d;->d:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;

    add-int/lit8 v4, v2, -0x1

    invoke-virtual {v3, p0, v2, v4}, Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;->compareAndSet(Ljava/lang/Object;II)Z

    move-result v3

    if-eqz v3, :cond_0

    if-ne v2, v0, :cond_2

    invoke-virtual {p0}, Lio/netty/buffer/d;->D()V

    :goto_0
    return v0

    :cond_2
    move v0, v1

    goto :goto_0
.end method

.method public synthetic C()Lio/netty/util/i;
    .locals 1

    invoke-virtual {p0}, Lio/netty/buffer/d;->A()Lio/netty/buffer/h;

    move-result-object v0

    return-object v0
.end method

.method protected abstract D()V
.end method

.method protected final w(I)V
    .locals 0

    iput p1, p0, Lio/netty/buffer/d;->e:I

    return-void
.end method

.method public z()I
    .locals 1

    iget v0, p0, Lio/netty/buffer/d;->e:I

    return v0
.end method
