.class public final Lio/netty/buffer/m;
.super Ljava/lang/Object;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lio/netty/buffer/m$b;,
        Lio/netty/buffer/m$c;,
        Lio/netty/buffer/m$a;
    }
.end annotation


# static fields
.field static final a:Lio/netty/buffer/i;

.field private static final b:Lio/netty/util/internal/logging/b;

.field private static final c:Lio/netty/util/concurrent/l;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lio/netty/util/concurrent/l",
            "<",
            "Ljava/nio/CharBuffer;",
            ">;"
        }
    .end annotation
.end field

.field private static final d:I

.field private static final e:I

.field private static final f:I

.field private static final g:Lio/netty/buffer/l;


# direct methods
.method static constructor <clinit>()V
    .locals 4

    const-class v0, Lio/netty/buffer/m;

    invoke-static {v0}, Lio/netty/util/internal/logging/c;->a(Ljava/lang/Class;)Lio/netty/util/internal/logging/b;

    move-result-object v0

    sput-object v0, Lio/netty/buffer/m;->b:Lio/netty/util/internal/logging/b;

    new-instance v0, Lio/netty/buffer/m$1;

    invoke-direct {v0}, Lio/netty/buffer/m$1;-><init>()V

    sput-object v0, Lio/netty/buffer/m;->c:Lio/netty/util/concurrent/l;

    sget-object v0, Lio/netty/util/e;->d:Ljava/nio/charset/Charset;

    invoke-static {v0}, Lio/netty/util/e;->a(Ljava/nio/charset/Charset;)Ljava/nio/charset/CharsetEncoder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/nio/charset/CharsetEncoder;->maxBytesPerChar()F

    move-result v0

    float-to-int v0, v0

    sput v0, Lio/netty/buffer/m;->f:I

    const-string v0, "io.netty.allocator.type"

    const-string v1, "unpooled"

    invoke-static {v0, v1}, Lio/netty/util/internal/n;->a(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    sget-object v1, Ljava/util/Locale;->US:Ljava/util/Locale;

    invoke-virtual {v0, v1}, Ljava/lang/String;->toLowerCase(Ljava/util/Locale;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v1

    const-string v0, "unpooled"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    sget-object v0, Lio/netty/buffer/al;->b:Lio/netty/buffer/al;

    sget-object v2, Lio/netty/buffer/m;->b:Lio/netty/util/internal/logging/b;

    const-string v3, "-Dio.netty.allocator.type: {}"

    invoke-interface {v2, v3, v1}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;)V

    :goto_0
    sput-object v0, Lio/netty/buffer/m;->a:Lio/netty/buffer/i;

    const-string v0, "io.netty.threadLocalDirectBufferSize"

    const/high16 v1, 0x10000

    invoke-static {v0, v1}, Lio/netty/util/internal/n;->a(Ljava/lang/String;I)I

    move-result v0

    sput v0, Lio/netty/buffer/m;->e:I

    sget-object v0, Lio/netty/buffer/m;->b:Lio/netty/util/internal/logging/b;

    const-string v1, "-Dio.netty.threadLocalDirectBufferSize: {}"

    sget v2, Lio/netty/buffer/m;->e:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v1, v2}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;)V

    const-string v0, "io.netty.maxThreadLocalCharBufferSize"

    const/16 v1, 0x4000

    invoke-static {v0, v1}, Lio/netty/util/internal/n;->a(Ljava/lang/String;I)I

    move-result v0

    sput v0, Lio/netty/buffer/m;->d:I

    sget-object v0, Lio/netty/buffer/m;->b:Lio/netty/util/internal/logging/b;

    const-string v1, "-Dio.netty.maxThreadLocalCharBufferSize: {}"

    sget v2, Lio/netty/buffer/m;->d:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v1, v2}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;)V

    new-instance v0, Lio/netty/buffer/m$2;

    invoke-direct {v0}, Lio/netty/buffer/m$2;-><init>()V

    sput-object v0, Lio/netty/buffer/m;->g:Lio/netty/buffer/l;

    return-void

    :cond_0
    const-string v0, "pooled"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    sget-object v0, Lio/netty/buffer/z;->b:Lio/netty/buffer/z;

    sget-object v2, Lio/netty/buffer/m;->b:Lio/netty/util/internal/logging/b;

    const-string v3, "-Dio.netty.allocator.type: {}"

    invoke-interface {v2, v3, v1}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_0

    :cond_1
    sget-object v0, Lio/netty/buffer/al;->b:Lio/netty/buffer/al;

    sget-object v2, Lio/netty/buffer/m;->b:Lio/netty/util/internal/logging/b;

    const-string v3, "-Dio.netty.allocator.type: unpooled (unknown: {})"

    invoke-interface {v2, v3, v1}, Lio/netty/util/internal/logging/b;->b(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_0
.end method

.method private constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static a(I)I
    .locals 1

    invoke-static {p0}, Ljava/lang/Integer;->reverseBytes(I)I

    move-result v0

    return v0
.end method

.method public static a(J)J
    .locals 2

    invoke-static {p0, p1}, Ljava/lang/Long;->reverseBytes(J)J

    move-result-wide v0

    return-wide v0
.end method

.method public static a()Lio/netty/buffer/h;
    .locals 1

    sget v0, Lio/netty/buffer/m;->e:I

    if-gtz v0, :cond_0

    const/4 v0, 0x0

    :goto_0
    return-object v0

    :cond_0
    invoke-static {}, Lio/netty/util/internal/PlatformDependent;->f()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-static {}, Lio/netty/buffer/m$c;->E()Lio/netty/buffer/m$c;

    move-result-object v0

    goto :goto_0

    :cond_1
    invoke-static {}, Lio/netty/buffer/m$b;->E()Lio/netty/buffer/m$b;

    move-result-object v0

    goto :goto_0
.end method

.method static a(Lio/netty/buffer/i;ZLjava/nio/CharBuffer;Ljava/nio/charset/Charset;)Lio/netty/buffer/h;
    .locals 6

    invoke-static {p3}, Lio/netty/util/e;->a(Ljava/nio/charset/Charset;)Ljava/nio/charset/CharsetEncoder;

    move-result-object v2

    invoke-virtual {p2}, Ljava/nio/CharBuffer;->remaining()I

    move-result v0

    int-to-double v0, v0

    invoke-virtual {v2}, Ljava/nio/charset/CharsetEncoder;->maxBytesPerChar()F

    move-result v3

    float-to-double v4, v3

    mul-double/2addr v0, v4

    double-to-int v3, v0

    if-eqz p1, :cond_2

    invoke-interface {p0, v3}, Lio/netty/buffer/i;->c(I)Lio/netty/buffer/h;

    move-result-object v0

    move-object v1, v0

    :goto_0
    const/4 v0, 0x0

    :try_start_0
    invoke-virtual {v1, v0, v3}, Lio/netty/buffer/h;->m(II)Ljava/nio/ByteBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->position()I

    move-result v3

    const/4 v4, 0x1

    invoke-virtual {v2, p2, v0, v4}, Ljava/nio/charset/CharsetEncoder;->encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;

    move-result-object v4

    invoke-virtual {v4}, Ljava/nio/charset/CoderResult;->isUnderflow()Z

    move-result v5

    if-nez v5, :cond_0

    invoke-virtual {v4}, Ljava/nio/charset/CoderResult;->throwException()V

    :cond_0
    invoke-virtual {v2, v0}, Ljava/nio/charset/CharsetEncoder;->flush(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;

    move-result-object v2

    invoke-virtual {v2}, Ljava/nio/charset/CoderResult;->isUnderflow()Z

    move-result v4

    if-nez v4, :cond_1

    invoke-virtual {v2}, Ljava/nio/charset/CoderResult;->throwException()V

    :cond_1
    invoke-virtual {v1}, Lio/netty/buffer/h;->c()I

    move-result v2

    invoke-virtual {v0}, Ljava/nio/ByteBuffer;->position()I

    move-result v0

    add-int/2addr v0, v2

    sub-int/2addr v0, v3

    invoke-virtual {v1, v0}, Lio/netty/buffer/h;->c(I)Lio/netty/buffer/h;
    :try_end_0
    .catch Ljava/nio/charset/CharacterCodingException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-object v1

    :cond_2
    invoke-interface {p0, v3}, Lio/netty/buffer/i;->a(I)Lio/netty/buffer/h;

    move-result-object v0

    move-object v1, v0

    goto :goto_0

    :catch_0
    move-exception v0

    :try_start_1
    new-instance v2, Ljava/lang/IllegalStateException;

    invoke-direct {v2, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/Throwable;)V

    throw v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception v0

    invoke-virtual {v1}, Lio/netty/buffer/h;->B()Z

    throw v0
.end method

.method public static a(Lio/netty/buffer/h;)Ljava/lang/String;
    .locals 2

    invoke-virtual {p0}, Lio/netty/buffer/h;->b()I

    move-result v0

    invoke-virtual {p0}, Lio/netty/buffer/h;->f()I

    move-result v1

    invoke-static {p0, v0, v1}, Lio/netty/buffer/m;->a(Lio/netty/buffer/h;II)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public static a(Lio/netty/buffer/h;II)Ljava/lang/String;
    .locals 1

    invoke-static {p0, p1, p2}, Lio/netty/buffer/m$a;->a(Lio/netty/buffer/h;II)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method static a(Lio/netty/buffer/h;IILjava/nio/charset/Charset;)Ljava/lang/String;
    .locals 6

    if-nez p2, :cond_0

    const-string v0, ""

    :goto_0
    return-object v0

    :cond_0
    invoke-static {p3}, Lio/netty/util/e;->b(Ljava/nio/charset/Charset;)Ljava/nio/charset/CharsetDecoder;

    move-result-object v1

    int-to-double v2, p2

    invoke-virtual {v1}, Ljava/nio/charset/CharsetDecoder;->maxCharsPerByte()F

    move-result v0

    float-to-double v4, v0

    mul-double/2addr v2, v4

    double-to-int v2, v2

    sget-object v0, Lio/netty/buffer/m;->c:Lio/netty/util/concurrent/l;

    invoke-virtual {v0}, Lio/netty/util/concurrent/l;->d()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/nio/CharBuffer;

    invoke-virtual {v0}, Ljava/nio/CharBuffer;->length()I

    move-result v3

    if-ge v3, v2, :cond_2

    invoke-static {v2}, Ljava/nio/CharBuffer;->allocate(I)Ljava/nio/CharBuffer;

    move-result-object v0

    sget v3, Lio/netty/buffer/m;->d:I

    if-gt v2, v3, :cond_1

    sget-object v2, Lio/netty/buffer/m;->c:Lio/netty/util/concurrent/l;

    invoke-virtual {v2, v0}, Lio/netty/util/concurrent/l;->b(Ljava/lang/Object;)V

    :cond_1
    :goto_1
    invoke-virtual {p0}, Lio/netty/buffer/h;->h_()I

    move-result v2

    const/4 v3, 0x1

    if-ne v2, v3, :cond_3

    invoke-virtual {p0, p1, p2}, Lio/netty/buffer/h;->m(II)Ljava/nio/ByteBuffer;

    move-result-object v2

    invoke-static {v1, v2, v0}, Lio/netty/buffer/m;->a(Ljava/nio/charset/CharsetDecoder;Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)V

    :goto_2
    invoke-virtual {v0}, Ljava/nio/CharBuffer;->flip()Ljava/nio/Buffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0

    goto :goto_0

    :cond_2
    invoke-virtual {v0}, Ljava/nio/CharBuffer;->clear()Ljava/nio/Buffer;

    goto :goto_1

    :cond_3
    invoke-virtual {p0}, Lio/netty/buffer/h;->I()Lio/netty/buffer/i;

    move-result-object v2

    invoke-interface {v2, p2}, Lio/netty/buffer/i;->c(I)Lio/netty/buffer/h;

    move-result-object v2

    :try_start_0
    invoke-virtual {v2, p0, p1, p2}, Lio/netty/buffer/h;->a(Lio/netty/buffer/h;II)Lio/netty/buffer/h;

    const/4 v3, 0x0

    invoke-virtual {v2, v3, p2}, Lio/netty/buffer/h;->m(II)Ljava/nio/ByteBuffer;

    move-result-object v3

    invoke-static {v1, v3, v0}, Lio/netty/buffer/m;->a(Ljava/nio/charset/CharsetDecoder;Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-virtual {v2}, Lio/netty/buffer/h;->B()Z

    goto :goto_2

    :catchall_0
    move-exception v0

    invoke-virtual {v2}, Lio/netty/buffer/h;->B()Z

    throw v0
.end method

.method public static a(S)S
    .locals 1

    invoke-static {p0}, Ljava/lang/Short;->reverseBytes(S)S

    move-result v0

    return v0
.end method

.method private static a(Ljava/nio/charset/CharsetDecoder;Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)V
    .locals 2

    const/4 v0, 0x1

    :try_start_0
    invoke-virtual {p0, p1, p2, v0}, Ljava/nio/charset/CharsetDecoder;->decode(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;

    move-result-object v0

    invoke-virtual {v0}, Ljava/nio/charset/CoderResult;->isUnderflow()Z

    move-result v1

    if-nez v1, :cond_0

    invoke-virtual {v0}, Ljava/nio/charset/CoderResult;->throwException()V

    :cond_0
    invoke-virtual {p0, p2}, Ljava/nio/charset/CharsetDecoder;->flush(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;

    move-result-object v0

    invoke-virtual {v0}, Ljava/nio/charset/CoderResult;->isUnderflow()Z

    move-result v1

    if-nez v1, :cond_1

    invoke-virtual {v0}, Ljava/nio/charset/CoderResult;->throwException()V
    :try_end_0
    .catch Ljava/nio/charset/CharacterCodingException; {:try_start_0 .. :try_end_0} :catch_0

    :cond_1
    return-void

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/IllegalStateException;

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public static a(Lio/netty/buffer/h;Lio/netty/buffer/h;)Z
    .locals 11

    const/4 v2, 0x0

    invoke-virtual {p0}, Lio/netty/buffer/h;->f()I

    move-result v1

    invoke-virtual {p1}, Lio/netty/buffer/h;->f()I

    move-result v0

    if-eq v1, v0, :cond_0

    move v0, v2

    :goto_0
    return v0

    :cond_0
    ushr-int/lit8 v0, v1, 0x3

    and-int/lit8 v3, v1, 0x7

    invoke-virtual {p0}, Lio/netty/buffer/h;->b()I

    move-result v4

    invoke-virtual {p1}, Lio/netty/buffer/h;->b()I

    move-result v1

    invoke-virtual {p0}, Lio/netty/buffer/h;->J()Ljava/nio/ByteOrder;

    move-result-object v5

    invoke-virtual {p1}, Lio/netty/buffer/h;->J()Ljava/nio/ByteOrder;

    move-result-object v6

    if-ne v5, v6, :cond_2

    move v10, v0

    move v0, v1

    move v1, v4

    move v4, v10

    :goto_1
    if-lez v4, :cond_4

    invoke-virtual {p0, v1}, Lio/netty/buffer/h;->o(I)J

    move-result-wide v6

    invoke-virtual {p1, v0}, Lio/netty/buffer/h;->o(I)J

    move-result-wide v8

    cmp-long v5, v6, v8

    if-eqz v5, :cond_1

    move v0, v2

    goto :goto_0

    :cond_1
    add-int/lit8 v5, v1, 0x8

    add-int/lit8 v1, v0, 0x8

    add-int/lit8 v0, v4, -0x1

    move v4, v0

    move v0, v1

    move v1, v5

    goto :goto_1

    :cond_2
    move v10, v0

    move v0, v1

    move v1, v4

    move v4, v10

    :goto_2
    if-lez v4, :cond_4

    invoke-virtual {p0, v1}, Lio/netty/buffer/h;->o(I)J

    move-result-wide v6

    invoke-virtual {p1, v0}, Lio/netty/buffer/h;->o(I)J

    move-result-wide v8

    invoke-static {v8, v9}, Lio/netty/buffer/m;->a(J)J

    move-result-wide v8

    cmp-long v5, v6, v8

    if-eqz v5, :cond_3

    move v0, v2

    goto :goto_0

    :cond_3
    add-int/lit8 v5, v1, 0x8

    add-int/lit8 v1, v0, 0x8

    add-int/lit8 v0, v4, -0x1

    move v4, v0

    move v0, v1

    move v1, v5

    goto :goto_2

    :cond_4
    move v10, v3

    move v3, v1

    move v1, v0

    move v0, v10

    :goto_3
    if-lez v0, :cond_6

    invoke-virtual {p0, v3}, Lio/netty/buffer/h;->f(I)B

    move-result v4

    invoke-virtual {p1, v1}, Lio/netty/buffer/h;->f(I)B

    move-result v5

    if-eq v4, v5, :cond_5

    move v0, v2

    goto :goto_0

    :cond_5
    add-int/lit8 v3, v3, 0x1

    add-int/lit8 v1, v1, 0x1

    add-int/lit8 v0, v0, -0x1

    goto :goto_3

    :cond_6
    const/4 v0, 0x1

    goto :goto_0
.end method

.method static synthetic b()I
    .locals 1

    sget v0, Lio/netty/buffer/m;->e:I

    return v0
.end method

.method public static b(Lio/netty/buffer/h;)I
    .locals 7

    const/4 v2, 0x1

    invoke-virtual {p0}, Lio/netty/buffer/h;->f()I

    move-result v1

    ushr-int/lit8 v0, v1, 0x2

    and-int/lit8 v3, v1, 0x3

    invoke-virtual {p0}, Lio/netty/buffer/h;->b()I

    move-result v1

    invoke-virtual {p0}, Lio/netty/buffer/h;->J()Ljava/nio/ByteOrder;

    move-result-object v4

    sget-object v5, Ljava/nio/ByteOrder;->BIG_ENDIAN:Ljava/nio/ByteOrder;

    if-ne v4, v5, :cond_0

    move v4, v0

    move v0, v1

    move v1, v2

    :goto_0
    if-lez v4, :cond_1

    mul-int/lit8 v1, v1, 0x1f

    invoke-virtual {p0, v0}, Lio/netty/buffer/h;->l(I)I

    move-result v5

    add-int/2addr v5, v1

    add-int/lit8 v1, v0, 0x4

    add-int/lit8 v0, v4, -0x1

    move v4, v0

    move v0, v1

    move v1, v5

    goto :goto_0

    :cond_0
    move v4, v0

    move v0, v1

    move v1, v2

    :goto_1
    if-lez v4, :cond_1

    mul-int/lit8 v1, v1, 0x1f

    invoke-virtual {p0, v0}, Lio/netty/buffer/h;->l(I)I

    move-result v5

    invoke-static {v5}, Lio/netty/buffer/m;->a(I)I

    move-result v5

    add-int/2addr v5, v1

    add-int/lit8 v1, v0, 0x4

    add-int/lit8 v0, v4, -0x1

    move v4, v0

    move v0, v1

    move v1, v5

    goto :goto_1

    :cond_1
    move v6, v3

    move v3, v0

    move v0, v1

    move v1, v6

    :goto_2
    if-lez v1, :cond_2

    mul-int/lit8 v0, v0, 0x1f

    add-int/lit8 v4, v3, 0x1

    invoke-virtual {p0, v3}, Lio/netty/buffer/h;->f(I)B

    move-result v3

    add-int/2addr v3, v0

    add-int/lit8 v0, v1, -0x1

    move v1, v0

    move v0, v3

    move v3, v4

    goto :goto_2

    :cond_2
    if-nez v0, :cond_3

    move v0, v2

    :cond_3
    return v0
.end method

.method public static b(Lio/netty/buffer/h;Lio/netty/buffer/h;)I
    .locals 17

    invoke-virtual/range {p0 .. p0}, Lio/netty/buffer/h;->f()I

    move-result v7

    invoke-virtual/range {p1 .. p1}, Lio/netty/buffer/h;->f()I

    move-result v8

    invoke-static {v7, v8}, Ljava/lang/Math;->min(II)I

    move-result v3

    ushr-int/lit8 v2, v3, 0x2

    and-int/lit8 v4, v3, 0x3

    invoke-virtual/range {p0 .. p0}, Lio/netty/buffer/h;->b()I

    move-result v5

    invoke-virtual/range {p1 .. p1}, Lio/netty/buffer/h;->b()I

    move-result v3

    invoke-virtual/range {p0 .. p0}, Lio/netty/buffer/h;->J()Ljava/nio/ByteOrder;

    move-result-object v6

    invoke-virtual/range {p1 .. p1}, Lio/netty/buffer/h;->J()Ljava/nio/ByteOrder;

    move-result-object v9

    if-ne v6, v9, :cond_2

    move/from16 v16, v2

    move v2, v3

    move v3, v5

    move/from16 v5, v16

    :goto_0
    if-lez v5, :cond_5

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lio/netty/buffer/h;->n(I)J

    move-result-wide v10

    move-object/from16 v0, p1

    invoke-virtual {v0, v2}, Lio/netty/buffer/h;->n(I)J

    move-result-wide v12

    cmp-long v6, v10, v12

    if-lez v6, :cond_0

    const/4 v2, 0x1

    :goto_1
    return v2

    :cond_0
    cmp-long v6, v10, v12

    if-gez v6, :cond_1

    const/4 v2, -0x1

    goto :goto_1

    :cond_1
    add-int/lit8 v6, v3, 0x4

    add-int/lit8 v3, v2, 0x4

    add-int/lit8 v2, v5, -0x1

    move v5, v2

    move v2, v3

    move v3, v6

    goto :goto_0

    :cond_2
    move/from16 v16, v2

    move v2, v3

    move v3, v5

    move/from16 v5, v16

    :goto_2
    if-lez v5, :cond_5

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lio/netty/buffer/h;->n(I)J

    move-result-wide v10

    move-object/from16 v0, p1

    invoke-virtual {v0, v2}, Lio/netty/buffer/h;->l(I)I

    move-result v6

    invoke-static {v6}, Lio/netty/buffer/m;->a(I)I

    move-result v6

    int-to-long v12, v6

    const-wide v14, 0xffffffffL

    and-long/2addr v12, v14

    cmp-long v6, v10, v12

    if-lez v6, :cond_3

    const/4 v2, 0x1

    goto :goto_1

    :cond_3
    cmp-long v6, v10, v12

    if-gez v6, :cond_4

    const/4 v2, -0x1

    goto :goto_1

    :cond_4
    add-int/lit8 v6, v3, 0x4

    add-int/lit8 v3, v2, 0x4

    add-int/lit8 v2, v5, -0x1

    move v5, v2

    move v2, v3

    move v3, v6

    goto :goto_2

    :cond_5
    move/from16 v16, v4

    move v4, v3

    move v3, v2

    move/from16 v2, v16

    :goto_3
    if-lez v2, :cond_8

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lio/netty/buffer/h;->h(I)S

    move-result v5

    move-object/from16 v0, p1

    invoke-virtual {v0, v3}, Lio/netty/buffer/h;->h(I)S

    move-result v6

    if-le v5, v6, :cond_6

    const/4 v2, 0x1

    goto :goto_1

    :cond_6
    if-ge v5, v6, :cond_7

    const/4 v2, -0x1

    goto :goto_1

    :cond_7
    add-int/lit8 v4, v4, 0x1

    add-int/lit8 v3, v3, 0x1

    add-int/lit8 v2, v2, -0x1

    goto :goto_3

    :cond_8
    sub-int v2, v7, v8

    goto :goto_1
.end method
