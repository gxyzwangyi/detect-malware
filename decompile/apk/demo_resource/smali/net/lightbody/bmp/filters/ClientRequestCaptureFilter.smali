.class public Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;
.super Lorg/littleshoot/proxy/j;


# instance fields
.field private volatile httpRequest:Lio/netty/handler/codec/http/z;

.field private final requestContents:Ljava/io/ByteArrayOutputStream;

.field private volatile trailingHeaders:Lio/netty/handler/codec/http/s;


# direct methods
.method public constructor <init>(Lio/netty/handler/codec/http/z;)V
    .locals 1

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/j;-><init>(Lio/netty/handler/codec/http/z;)V

    new-instance v0, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v0}, Ljava/io/ByteArrayOutputStream;-><init>()V

    iput-object v0, p0, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->requestContents:Ljava/io/ByteArrayOutputStream;

    return-void
.end method

.method public constructor <init>(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;)V
    .locals 1

    invoke-direct {p0, p1, p2}, Lorg/littleshoot/proxy/j;-><init>(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;)V

    new-instance v0, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v0}, Ljava/io/ByteArrayOutputStream;-><init>()V

    iput-object v0, p0, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->requestContents:Ljava/io/ByteArrayOutputStream;

    return-void
.end method


# virtual methods
.method public clientToProxyRequest(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/ac;
    .locals 1

    instance-of v0, p1, Lio/netty/handler/codec/http/z;

    if-eqz v0, :cond_0

    move-object v0, p1

    check-cast v0, Lio/netty/handler/codec/http/z;

    iput-object v0, p0, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->httpRequest:Lio/netty/handler/codec/http/z;

    :cond_0
    instance-of v0, p1, Lio/netty/handler/codec/http/n;

    if-eqz v0, :cond_1

    check-cast p1, Lio/netty/handler/codec/http/n;

    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->storeRequestContent(Lio/netty/handler/codec/http/n;)V

    instance-of v0, p1, Lio/netty/handler/codec/http/ah;

    if-eqz v0, :cond_1

    check-cast p1, Lio/netty/handler/codec/http/ah;

    invoke-interface {p1}, Lio/netty/handler/codec/http/ah;->b()Lio/netty/handler/codec/http/s;

    move-result-object v0

    iput-object v0, p0, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->trailingHeaders:Lio/netty/handler/codec/http/s;

    :cond_1
    const/4 v0, 0x0

    return-object v0
.end method

.method public getFullRequestContents()[B
    .locals 1

    iget-object v0, p0, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->requestContents:Ljava/io/ByteArrayOutputStream;

    invoke-virtual {v0}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v0

    return-object v0
.end method

.method public getHttpRequest()Lio/netty/handler/codec/http/z;
    .locals 1

    iget-object v0, p0, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->httpRequest:Lio/netty/handler/codec/http/z;

    return-object v0
.end method

.method public getTrailingHeaders()Lio/netty/handler/codec/http/s;
    .locals 1

    iget-object v0, p0, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->trailingHeaders:Lio/netty/handler/codec/http/s;

    return-object v0
.end method

.method protected storeRequestContent(Lio/netty/handler/codec/http/n;)V
    .locals 2

    invoke-interface {p1}, Lio/netty/handler/codec/http/n;->a()Lio/netty/buffer/h;

    move-result-object v0

    invoke-static {v0}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->extractReadableBytes(Lio/netty/buffer/h;)[B

    move-result-object v0

    :try_start_0
    iget-object v1, p0, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->requestContents:Ljava/io/ByteArrayOutputStream;

    invoke-virtual {v1, v0}, Ljava/io/ByteArrayOutputStream;->write([B)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    :goto_0
    return-void

    :catch_0
    move-exception v0

    goto :goto_0
.end method
