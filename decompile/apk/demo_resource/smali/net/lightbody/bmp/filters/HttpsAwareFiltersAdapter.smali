.class public Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;
.super Lorg/littleshoot/proxy/j;


# static fields
.field public static final HOST_ATTRIBUTE_NAME:Ljava/lang/String; = "host"

.field public static final IS_HTTPS_ATTRIBUTE_NAME:Ljava/lang/String; = "isHttps"

.field public static final ORIGINAL_HOST_ATTRIBUTE_NAME:Ljava/lang/String; = "originalHost"


# direct methods
.method public constructor <init>(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;)V
    .locals 0

    invoke-direct {p0, p1, p2}, Lorg/littleshoot/proxy/j;-><init>(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;)V

    return-void
.end method

.method private getHttpsOriginalRequestHostAndPort()Ljava/lang/String;
    .locals 2

    invoke-virtual {p0}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->isHttps()Z

    move-result v0

    if-nez v0, :cond_0

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Request is not HTTPS. Cannot get original host and port on non-HTTPS request using this method."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->ctx:Lio/netty/channel/k;

    const-string v1, "originalHost"

    invoke-static {v1}, Lio/netty/util/c;->a(Ljava/lang/String;)Lio/netty/util/c;

    move-result-object v1

    invoke-interface {v0, v1}, Lio/netty/channel/k;->a(Lio/netty/util/c;)Lio/netty/util/b;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/util/b;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    return-object v0
.end method

.method private getHttpsRequestHostAndPort()Ljava/lang/String;
    .locals 2

    invoke-virtual {p0}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->isHttps()Z

    move-result v0

    if-nez v0, :cond_0

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Request is not HTTPS. Cannot get host and port on non-HTTPS request using this method."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->ctx:Lio/netty/channel/k;

    const-string v1, "host"

    invoke-static {v1}, Lio/netty/util/c;->a(Ljava/lang/String;)Lio/netty/util/c;

    move-result-object v1

    invoke-interface {v0, v1}, Lio/netty/channel/k;->a(Lio/netty/util/c;)Lio/netty/util/b;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/util/b;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    return-object v0
.end method


# virtual methods
.method public getFullUrl(Lio/netty/handler/codec/http/z;)Ljava/lang/String;
    .locals 4

    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->c(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v0

    const/16 v1, 0x1bb

    invoke-static {v0, v1}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->removeMatchingPort(Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v0

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "https://"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lnet/lightbody/bmp/util/HttpUtil;->startsWithHttpOrHttps(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v0

    goto :goto_0

    :cond_1
    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->getHostAndPort(Lio/netty/handler/codec/http/z;)Ljava/lang/String;

    move-result-object v0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p0}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->isHttps()Z

    move-result v2

    if-eqz v2, :cond_2

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "https://"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    goto :goto_0

    :cond_2
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "http://"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    goto :goto_0
.end method

.method public getHost(Lio/netty/handler/codec/http/z;)Ljava/lang/String;
    .locals 1

    invoke-virtual {p0}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->isHttps()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-direct {p0}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->getHttpsRequestHostAndPort()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/google/common/net/HostAndPort;->b(Ljava/lang/String;)Lcom/google/common/net/HostAndPort;

    move-result-object v0

    invoke-virtual {v0}, Lcom/google/common/net/HostAndPort;->a()Ljava/lang/String;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    invoke-static {p1}, Lnet/lightbody/bmp/util/HttpUtil;->getHostFromRequest(Lio/netty/handler/codec/http/z;)Ljava/lang/String;

    move-result-object v0

    goto :goto_0
.end method

.method public getHostAndPort(Lio/netty/handler/codec/http/z;)Ljava/lang/String;
    .locals 1

    invoke-virtual {p0}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->isHttps()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-direct {p0}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->getHttpsRequestHostAndPort()Ljava/lang/String;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    invoke-static {p1}, Lnet/lightbody/bmp/util/HttpUtil;->getHostAndPortFromRequest(Lio/netty/handler/codec/http/z;)Ljava/lang/String;

    move-result-object v0

    goto :goto_0
.end method

.method public getOriginalUrl()Ljava/lang/String;
    .locals 1

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->originalRequest:Lio/netty/handler/codec/http/z;

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->getFullUrl(Lio/netty/handler/codec/http/z;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public isHttps()Z
    .locals 2

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->ctx:Lio/netty/channel/k;

    const-string v1, "isHttps"

    invoke-static {v1}, Lio/netty/util/c;->a(Ljava/lang/String;)Lio/netty/util/c;

    move-result-object v1

    invoke-interface {v0, v1}, Lio/netty/channel/k;->a(Lio/netty/util/c;)Lio/netty/util/b;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/util/b;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Boolean;

    if-nez v0, :cond_0

    const/4 v0, 0x0

    :goto_0
    return v0

    :cond_0
    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    goto :goto_0
.end method
