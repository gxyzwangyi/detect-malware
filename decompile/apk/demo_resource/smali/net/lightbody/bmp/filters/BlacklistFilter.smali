.class public Lnet/lightbody/bmp/filters/BlacklistFilter;
.super Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;


# instance fields
.field private final blacklistedUrls:Ljava/util/Collection;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Collection",
            "<",
            "Lnet/lightbody/bmp/proxy/BlacklistEntry;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method public constructor <init>(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;Ljava/util/Collection;)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/netty/handler/codec/http/z;",
            "Lio/netty/channel/k;",
            "Ljava/util/Collection",
            "<",
            "Lnet/lightbody/bmp/proxy/BlacklistEntry;",
            ">;)V"
        }
    .end annotation

    invoke-direct {p0, p1, p2}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;-><init>(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;)V

    if-eqz p3, :cond_0

    iput-object p3, p0, Lnet/lightbody/bmp/filters/BlacklistFilter;->blacklistedUrls:Ljava/util/Collection;

    :goto_0
    return-void

    :cond_0
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    iput-object v0, p0, Lnet/lightbody/bmp/filters/BlacklistFilter;->blacklistedUrls:Ljava/util/Collection;

    goto :goto_0
.end method


# virtual methods
.method public clientToProxyRequest(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/ac;
    .locals 5

    instance-of v0, p1, Lio/netty/handler/codec/http/z;

    if-eqz v0, :cond_2

    check-cast p1, Lio/netty/handler/codec/http/z;

    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/BlacklistFilter;->getFullUrl(Lio/netty/handler/codec/http/z;)Ljava/lang/String;

    move-result-object v1

    iget-object v0, p0, Lnet/lightbody/bmp/filters/BlacklistFilter;->blacklistedUrls:Ljava/util/Collection;

    invoke-interface {v0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :cond_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_2

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lnet/lightbody/bmp/proxy/BlacklistEntry;

    sget-object v3, Lio/netty/handler/codec/http/v;->i:Lio/netty/handler/codec/http/v;

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->l()Lio/netty/handler/codec/http/v;

    move-result-object v4

    invoke-virtual {v3, v4}, Lio/netty/handler/codec/http/v;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_1

    invoke-virtual {v0}, Lnet/lightbody/bmp/proxy/BlacklistEntry;->getHttpMethodPattern()Ljava/util/regex/Pattern;

    move-result-object v3

    if-eqz v3, :cond_0

    :cond_1
    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->l()Lio/netty/handler/codec/http/v;

    move-result-object v3

    invoke-virtual {v3}, Lio/netty/handler/codec/http/v;->a()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v1, v3}, Lnet/lightbody/bmp/proxy/BlacklistEntry;->matches(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    invoke-virtual {v0}, Lnet/lightbody/bmp/proxy/BlacklistEntry;->getStatusCode()I

    move-result v0

    invoke-static {v0}, Lio/netty/handler/codec/http/af;->a(I)Lio/netty/handler/codec/http/af;

    move-result-object v1

    new-instance v0, Lio/netty/handler/codec/http/c;

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->k()Lio/netty/handler/codec/http/ag;

    move-result-object v2

    invoke-direct {v0, v2, v1}, Lio/netty/handler/codec/http/c;-><init>(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;)V

    const-wide/16 v2, 0x0

    invoke-static {v0, v2, v3}, Lio/netty/handler/codec/http/s;->b(Lio/netty/handler/codec/http/t;J)V

    :goto_0
    return-object v0

    :cond_2
    const/4 v0, 0x0

    goto :goto_0
.end method
