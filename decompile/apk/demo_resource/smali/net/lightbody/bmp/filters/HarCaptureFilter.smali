.class public Lnet/lightbody/bmp/filters/HarCaptureFilter;
.super Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;


# static fields
.field private static final log:Lorg/slf4j/b;


# instance fields
.field private volatile addressResolved:Z

.field private volatile capturedOriginalRequest:Lio/netty/handler/codec/http/z;

.field private final clientAddress:Ljava/net/InetSocketAddress;

.field private volatile connectionQueuedNanos:J

.field private volatile connectionStartedNanos:J

.field private final dataToCapture:Ljava/util/EnumSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/EnumSet",
            "<",
            "Lnet/lightbody/bmp/proxy/CaptureType;",
            ">;"
        }
    .end annotation
.end field

.field private volatile dnsResolutionStartedNanos:J

.field private final har:Lnet/lightbody/bmp/core/har/Har;

.field private final harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

.field private final requestBodySize:Ljava/util/concurrent/atomic/AtomicInteger;

.field private final requestCaptureFilter:Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;

.field private final responseBodySize:Ljava/util/concurrent/atomic/AtomicInteger;

.field private final responseCaptureFilter:Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

.field private volatile responseReceiveStartedNanos:J

.field private volatile sendFinishedNanos:J

.field private volatile sendStartedNanos:J


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const-class v0, Lnet/lightbody/bmp/filters/HarCaptureFilter;

    invoke-static {v0}, Lorg/slf4j/c;->a(Ljava/lang/Class;)Lorg/slf4j/b;

    move-result-object v0

    sput-object v0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    return-void
.end method

.method public constructor <init>(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;Lnet/lightbody/bmp/core/har/Har;Ljava/lang/String;Ljava/util/Set;)V
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lio/netty/handler/codec/http/z;",
            "Lio/netty/channel/k;",
            "Lnet/lightbody/bmp/core/har/Har;",
            "Ljava/lang/String;",
            "Ljava/util/Set",
            "<",
            "Lnet/lightbody/bmp/proxy/CaptureType;",
            ">;)V"
        }
    .end annotation

    const/4 v2, 0x0

    const/4 v1, 0x0

    invoke-direct {p0, p1, p2}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;-><init>(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;)V

    new-instance v0, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-direct {v0, v1}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->requestBodySize:Ljava/util/concurrent/atomic/AtomicInteger;

    new-instance v0, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-direct {v0, v1}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseBodySize:Ljava/util/concurrent/atomic/AtomicInteger;

    iput-boolean v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->addressResolved:Z

    if-nez p3, :cond_0

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Attempted har capture when har is null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->c(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-eqz v0, :cond_1

    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Attempted har capture for HTTP CONNECT request"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    invoke-interface {p2}, Lio/netty/channel/k;->a()Lio/netty/channel/d;

    move-result-object v0

    invoke-interface {v0}, Lio/netty/channel/d;->g()Ljava/net/SocketAddress;

    move-result-object v0

    check-cast v0, Ljava/net/InetSocketAddress;

    iput-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->clientAddress:Ljava/net/InetSocketAddress;

    if-eqz p5, :cond_4

    invoke-interface {p5}, Ljava/util/Set;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_4

    invoke-static {p5}, Ljava/util/EnumSet;->copyOf(Ljava/util/Collection;)Ljava/util/EnumSet;

    move-result-object v0

    iput-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    :goto_0
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v1, Lnet/lightbody/bmp/proxy/CaptureType;->REQUEST_CONTENT:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v0, v1}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_2

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v1, Lnet/lightbody/bmp/proxy/CaptureType;->REQUEST_BINARY_CONTENT:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v0, v1}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_5

    :cond_2
    new-instance v0, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;

    invoke-direct {v0, p1}, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;-><init>(Lio/netty/handler/codec/http/z;)V

    iput-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->requestCaptureFilter:Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;

    :goto_1
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v1, Lnet/lightbody/bmp/proxy/CaptureType;->RESPONSE_CONTENT:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v0, v1}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_3

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v1, Lnet/lightbody/bmp/proxy/CaptureType;->RESPONSE_BINARY_CONTENT:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v0, v1}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_6

    :cond_3
    new-instance v0, Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

    const/4 v1, 0x1

    invoke-direct {v0, p1, v1}, Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;-><init>(Lio/netty/handler/codec/http/z;Z)V

    iput-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseCaptureFilter:Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

    :goto_2
    iput-object p3, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->har:Lnet/lightbody/bmp/core/har/Har;

    new-instance v0, Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-direct {v0, p4}, Lnet/lightbody/bmp/core/har/HarEntry;-><init>(Ljava/lang/String;)V

    iput-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    return-void

    :cond_4
    const-class v0, Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-static {v0}, Ljava/util/EnumSet;->noneOf(Ljava/lang/Class;)Ljava/util/EnumSet;

    move-result-object v0

    iput-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    goto :goto_0

    :cond_5
    iput-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->requestCaptureFilter:Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;

    goto :goto_1

    :cond_6
    iput-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseCaptureFilter:Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

    goto :goto_2
.end method

.method private createHarRequestForHttpRequest(Lio/netty/handler/codec/http/z;)Lnet/lightbody/bmp/core/har/HarRequest;
    .locals 4

    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->getFullUrl(Lio/netty/handler/codec/http/z;)Ljava/lang/String;

    move-result-object v0

    new-instance v1, Lnet/lightbody/bmp/core/har/HarRequest;

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->l()Lio/netty/handler/codec/http/v;

    move-result-object v2

    invoke-virtual {v2}, Lio/netty/handler/codec/http/v;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->k()Lio/netty/handler/codec/http/ag;

    move-result-object v3

    invoke-virtual {v3}, Lio/netty/handler/codec/http/ag;->d()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v2, v0, v3}, Lnet/lightbody/bmp/core/har/HarRequest;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    return-object v1
.end method


# virtual methods
.method protected captureConnectTiming()V
    .locals 5

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->clientAddress:Ljava/net/InetSocketAddress;

    invoke-static {v0}, Lnet/lightbody/bmp/filters/HttpConnectHarCaptureFilter;->consumeConnectTimingForConnection(Ljava/net/InetSocketAddress;)Lnet/lightbody/bmp/filters/support/HttpConnectTiming;

    move-result-object v0

    if-eqz v0, :cond_0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v1

    invoke-virtual {v0}, Lnet/lightbody/bmp/filters/support/HttpConnectTiming;->getSslHandshakeTimeNanos()J

    move-result-wide v2

    sget-object v4, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v1, v2, v3, v4}, Lnet/lightbody/bmp/core/har/HarTimings;->setSsl(JLjava/util/concurrent/TimeUnit;)V

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v1

    invoke-virtual {v0}, Lnet/lightbody/bmp/filters/support/HttpConnectTiming;->getConnectTimeNanos()J

    move-result-wide v2

    sget-object v4, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v1, v2, v3, v4}, Lnet/lightbody/bmp/core/har/HarTimings;->setConnect(JLjava/util/concurrent/TimeUnit;)V

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v1

    invoke-virtual {v0}, Lnet/lightbody/bmp/filters/support/HttpConnectTiming;->getBlockedTimeNanos()J

    move-result-wide v2

    sget-object v4, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v1, v2, v3, v4}, Lnet/lightbody/bmp/core/har/HarTimings;->setBlocked(JLjava/util/concurrent/TimeUnit;)V

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v1

    invoke-virtual {v0}, Lnet/lightbody/bmp/filters/support/HttpConnectTiming;->getDnsTimeNanos()J

    move-result-wide v2

    sget-object v0, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v1, v2, v3, v0}, Lnet/lightbody/bmp/core/har/HarTimings;->setDns(JLjava/util/concurrent/TimeUnit;)V

    :cond_0
    return-void
.end method

.method protected captureHeaders(Lio/netty/handler/codec/http/s;)V
    .locals 5

    invoke-virtual {p1}, Lio/netty/handler/codec/http/s;->b()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map$Entry;

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarEntry;->getRequest()Lnet/lightbody/bmp/core/har/HarRequest;

    move-result-object v1

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarRequest;->getHeaders()Ljava/util/List;

    move-result-object v3

    new-instance v4, Lnet/lightbody/bmp/core/har/HarNameValuePair;

    invoke-interface {v0}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-interface {v0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-direct {v4, v1, v0}, Lnet/lightbody/bmp/core/har/HarNameValuePair;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-interface {v3, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_0

    :cond_0
    return-void
.end method

.method protected captureQueryParameters(Lio/netty/handler/codec/http/z;)V
    .locals 7

    new-instance v0, Lio/netty/handler/codec/http/ai;

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v1

    const-string v2, "UTF-8"

    invoke-static {v2}, Ljava/nio/charset/Charset;->forName(Ljava/lang/String;)Ljava/nio/charset/Charset;

    move-result-object v2

    invoke-direct {v0, v1, v2}, Lio/netty/handler/codec/http/ai;-><init>(Ljava/lang/String;Ljava/nio/charset/Charset;)V

    :try_start_0
    invoke-virtual {v0}, Lio/netty/handler/codec/http/ai;->a()Ljava/util/Map;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :cond_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map$Entry;

    invoke-interface {v0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :goto_0
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2}, Lnet/lightbody/bmp/core/har/HarEntry;->getRequest()Lnet/lightbody/bmp/core/har/HarRequest;

    move-result-object v2

    invoke-virtual {v2}, Lnet/lightbody/bmp/core/har/HarRequest;->getQueryString()Ljava/util/List;

    move-result-object v5

    new-instance v6, Lnet/lightbody/bmp/core/har/HarNameValuePair;

    invoke-interface {v0}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-direct {v6, v2, v1}, Lnet/lightbody/bmp/core/har/HarNameValuePair;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-interface {v5, v6}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unable to decode query parameters on URI: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Lnet/lightbody/bmp/core/har/HarEntry;->setComment(Ljava/lang/String;)V

    sget-object v1, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unable to decode query parameters on URI: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-interface {v1, v2, v0}, Lorg/slf4j/b;->b(Ljava/lang/String;Ljava/lang/Throwable;)V

    :cond_1
    return-void
.end method

.method protected captureRedirectUrl(Lio/netty/handler/codec/http/ac;)V
    .locals 2

    const-string v0, "Location"

    invoke-static {p1, v0}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarEntry;->getResponse()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v1

    invoke-virtual {v1, v0}, Lnet/lightbody/bmp/core/har/HarResponse;->setRedirectURL(Ljava/lang/String;)V

    :cond_0
    return-void
.end method

.method protected captureRequestContent(Lio/netty/handler/codec/http/z;[B)V
    .locals 7

    const/4 v2, 0x1

    const/4 v3, 0x0

    array-length v0, p2

    if-nez v0, :cond_0

    :goto_0
    return-void

    :cond_0
    const-string v0, "Content-Type"

    invoke-static {p1, v0}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_1

    sget-object v0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    const-string v1, "No content type specified in request to {}. Content will be treated as {}"

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v4

    const-string v5, "application/octet-stream"

    invoke-interface {v0, v1, v4, v5}, Lorg/slf4j/b;->d(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    const-string v0, "application/octet-stream"

    :cond_1
    new-instance v1, Lnet/lightbody/bmp/core/har/HarPostData;

    invoke-direct {v1}, Lnet/lightbody/bmp/core/har/HarPostData;-><init>()V

    iget-object v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v4}, Lnet/lightbody/bmp/core/har/HarEntry;->getRequest()Lnet/lightbody/bmp/core/har/HarRequest;

    move-result-object v4

    invoke-virtual {v4, v1}, Lnet/lightbody/bmp/core/har/HarRequest;->setPostData(Lnet/lightbody/bmp/core/har/HarPostData;)V

    invoke-virtual {v1, v0}, Lnet/lightbody/bmp/core/har/HarPostData;->setMimeType(Ljava/lang/String;)V

    const-string v1, "application/x-www-form-urlencoded"

    invoke-virtual {v0, v1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    move v1, v2

    :goto_1
    :try_start_0
    invoke-static {v0}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->readCharsetInContentTypeHeader(Ljava/lang/String;)Ljava/nio/charset/Charset;
    :try_end_0
    .catch Lnet/lightbody/bmp/exception/UnsupportedCharsetException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    if-nez v0, :cond_2

    sget-object v0, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->DEFAULT_HTTP_CHARSET:Ljava/nio/charset/Charset;

    sget-object v2, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    const-string v4, "No charset specified; using charset {} to decode contents to {}"

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v5

    invoke-interface {v2, v4, v0, v5}, Lorg/slf4j/b;->b(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    :cond_2
    if-eqz v1, :cond_6

    invoke-static {p2, v0}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->getContentAsString([BLjava/nio/charset/Charset;)Ljava/lang/String;

    move-result-object v1

    new-instance v2, Lio/netty/handler/codec/http/ai;

    invoke-direct {v2, v1, v0, v3}, Lio/netty/handler/codec/http/ai;-><init>(Ljava/lang/String;Ljava/nio/charset/Charset;Z)V

    invoke-static {}, Lcom/google/common/collect/ImmutableList;->i()Lcom/google/common/collect/ImmutableList$a;

    move-result-object v3

    invoke-virtual {v2}, Lio/netty/handler/codec/http/ai;->a()Ljava/util/Map;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :cond_3
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_5

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map$Entry;

    invoke-interface {v0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_2
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_3

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    new-instance v6, Lnet/lightbody/bmp/core/har/HarPostDataParam;

    invoke-interface {v0}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-direct {v6, v2, v1}, Lnet/lightbody/bmp/core/har/HarPostDataParam;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v3, v6}, Lcom/google/common/collect/ImmutableList$a;->c(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList$a;

    goto :goto_2

    :cond_4
    move v1, v3

    goto :goto_1

    :catch_0
    move-exception v1

    sget-object v4, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    const-string v5, "Found unsupported character set in Content-Type header \'{}\' in HTTP request to {}. Content will not be captured in HAR."

    const/4 v6, 0x3

    new-array v6, v6, [Ljava/lang/Object;

    aput-object v0, v6, v3

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v0

    aput-object v0, v6, v2

    const/4 v0, 0x2

    aput-object v1, v6, v0

    invoke-interface {v4, v5, v6}, Lorg/slf4j/b;->d(Ljava/lang/String;[Ljava/lang/Object;)V

    goto/16 :goto_0

    :cond_5
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getRequest()Lnet/lightbody/bmp/core/har/HarRequest;

    move-result-object v0

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarRequest;->getPostData()Lnet/lightbody/bmp/core/har/HarPostData;

    move-result-object v0

    invoke-virtual {v3}, Lcom/google/common/collect/ImmutableList$a;->a()Lcom/google/common/collect/ImmutableList;

    move-result-object v1

    invoke-virtual {v0, v1}, Lnet/lightbody/bmp/core/har/HarPostData;->setParams(Ljava/util/List;)V

    goto/16 :goto_0

    :cond_6
    invoke-static {p2, v0}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->getContentAsString([BLjava/nio/charset/Charset;)Ljava/lang/String;

    move-result-object v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarEntry;->getRequest()Lnet/lightbody/bmp/core/har/HarRequest;

    move-result-object v1

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarRequest;->getPostData()Lnet/lightbody/bmp/core/har/HarPostData;

    move-result-object v1

    invoke-virtual {v1, v0}, Lnet/lightbody/bmp/core/har/HarPostData;->setText(Ljava/lang/String;)V

    goto/16 :goto_0
.end method

.method protected captureRequestCookies(Lio/netty/handler/codec/http/z;)V
    .locals 4

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    const-string v1, "Cookie"

    invoke-virtual {v0, v1}, Lio/netty/handler/codec/http/s;->b(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_1

    :cond_0
    return-void

    :cond_1
    sget-object v1, Lio/netty/handler/codec/http/a/f;->b:Lio/netty/handler/codec/http/a/f;

    invoke-virtual {v1, v0}, Lio/netty/handler/codec/http/a/f;->a(Ljava/lang/String;)Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lio/netty/handler/codec/http/a/b;

    new-instance v2, Lnet/lightbody/bmp/core/har/HarCookie;

    invoke-direct {v2}, Lnet/lightbody/bmp/core/har/HarCookie;-><init>()V

    invoke-interface {v0}, Lio/netty/handler/codec/http/a/b;->a()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lnet/lightbody/bmp/core/har/HarCookie;->setName(Ljava/lang/String;)V

    invoke-interface {v0}, Lio/netty/handler/codec/http/a/b;->b()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v2, v0}, Lnet/lightbody/bmp/core/har/HarCookie;->setValue(Ljava/lang/String;)V

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getRequest()Lnet/lightbody/bmp/core/har/HarRequest;

    move-result-object v0

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarRequest;->getCookies()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_0
.end method

.method protected captureRequestHeaderSize(Lio/netty/handler/codec/http/z;)V
    .locals 4

    const/16 v2, 0x20

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->l()Lio/netty/handler/codec/http/v;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/codec/http/v;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->k()Lio/netty/handler/codec/http/ag;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/codec/http/ag;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v0

    add-int/lit8 v0, v0, 0x6

    int-to-long v0, v0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v2

    invoke-static {v2}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->getHeaderSize(Lio/netty/handler/codec/http/s;)J

    move-result-wide v2

    add-long/2addr v0, v2

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2}, Lnet/lightbody/bmp/core/har/HarEntry;->getRequest()Lnet/lightbody/bmp/core/har/HarRequest;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Lnet/lightbody/bmp/core/har/HarRequest;->setHeadersSize(J)V

    return-void
.end method

.method protected captureRequestHeaders(Lio/netty/handler/codec/http/z;)V
    .locals 1

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureHeaders(Lio/netty/handler/codec/http/s;)V

    return-void
.end method

.method protected captureRequestSize(Lio/netty/handler/codec/http/n;)V
    .locals 2

    invoke-interface {p1}, Lio/netty/handler/codec/http/n;->a()Lio/netty/buffer/h;

    move-result-object v0

    invoke-virtual {v0}, Lio/netty/buffer/h;->f()I

    move-result v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->requestBodySize:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v1, v0}, Ljava/util/concurrent/atomic/AtomicInteger;->addAndGet(I)I

    return-void
.end method

.method protected captureResponse(Lio/netty/handler/codec/http/ac;)V
    .locals 4

    new-instance v0, Lnet/lightbody/bmp/core/har/HarResponse;

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->h()Lio/netty/handler/codec/http/af;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/codec/http/af;->a()I

    move-result v1

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->h()Lio/netty/handler/codec/http/af;

    move-result-object v2

    invoke-virtual {v2}, Lio/netty/handler/codec/http/af;->b()Ljava/lang/String;

    move-result-object v2

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->k()Lio/netty/handler/codec/http/ag;

    move-result-object v3

    invoke-virtual {v3}, Lio/netty/handler/codec/http/ag;->d()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v0, v1, v2, v3}, Lnet/lightbody/bmp/core/har/HarResponse;-><init>(ILjava/lang/String;Ljava/lang/String;)V

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1, v0}, Lnet/lightbody/bmp/core/har/HarEntry;->setResponse(Lnet/lightbody/bmp/core/har/HarResponse;)V

    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureResponseHeaderSize(Lio/netty/handler/codec/http/ac;)V

    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureResponseMimeType(Lio/netty/handler/codec/http/ac;)V

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v1, Lnet/lightbody/bmp/proxy/CaptureType;->RESPONSE_COOKIES:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v0, v1}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureResponseCookies(Lio/netty/handler/codec/http/ac;)V

    :cond_0
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v1, Lnet/lightbody/bmp/proxy/CaptureType;->RESPONSE_HEADERS:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v0, v1}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureResponseHeaders(Lio/netty/handler/codec/http/ac;)V

    :cond_1
    invoke-static {p1}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->isRedirect(Lio/netty/handler/codec/http/ac;)Z

    move-result v0

    if-eqz v0, :cond_2

    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureRedirectUrl(Lio/netty/handler/codec/http/ac;)V

    :cond_2
    return-void
.end method

.method protected captureResponseContent(Lio/netty/handler/codec/http/ac;[B)V
    .locals 7

    const/4 v1, 0x1

    const/4 v3, 0x0

    const-string v0, "Content-Type"

    invoke-static {p1, v0}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_0

    sget-object v0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    const-string v2, "No content type specified in response from {}. Content will be treated as {}"

    iget-object v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->originalRequest:Lio/netty/handler/codec/http/z;

    invoke-interface {v4}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v4

    const-string v5, "application/octet-stream"

    invoke-interface {v0, v2, v4, v5}, Lorg/slf4j/b;->d(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    const-string v0, "application/octet-stream"

    :cond_0
    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseCaptureFilter:Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

    invoke-virtual {v2}, Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;->isResponseCompressed()Z

    move-result v2

    if-eqz v2, :cond_4

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseCaptureFilter:Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

    invoke-virtual {v2}, Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;->isDecompressionSuccessful()Z

    move-result v2

    if-nez v2, :cond_4

    sget-object v2, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    const-string v4, "Unable to decompress content with encoding: {}. Contents will be encoded as base64 binary data."

    iget-object v5, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseCaptureFilter:Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

    invoke-virtual {v5}, Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;->getContentEncoding()Ljava/lang/String;

    move-result-object v5

    invoke-interface {v2, v4, v5}, Lorg/slf4j/b;->d(Ljava/lang/String;Ljava/lang/Object;)V

    move v2, v1

    :goto_0
    :try_start_0
    invoke-static {v0}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->readCharsetInContentTypeHeader(Ljava/lang/String;)Ljava/nio/charset/Charset;
    :try_end_0
    .catch Lnet/lightbody/bmp/exception/UnsupportedCharsetException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    if-nez v1, :cond_1

    sget-object v1, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->DEFAULT_HTTP_CHARSET:Ljava/nio/charset/Charset;

    sget-object v3, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    const-string v4, "No charset specified; using charset {} to decode contents from {}"

    iget-object v5, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->originalRequest:Lio/netty/handler/codec/http/z;

    invoke-interface {v5}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v5

    invoke-interface {v3, v4, v1, v5}, Lorg/slf4j/b;->b(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

    :cond_1
    if-nez v2, :cond_3

    invoke-static {v0}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->hasTextualContent(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-static {p2, v1}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->getContentAsString([BLjava/nio/charset/Charset;)Ljava/lang/String;

    move-result-object v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarEntry;->getResponse()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v1

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarResponse;->getContent()Lnet/lightbody/bmp/core/har/HarContent;

    move-result-object v1

    invoke-virtual {v1, v0}, Lnet/lightbody/bmp/core/har/HarContent;->setText(Ljava/lang/String;)V

    :cond_2
    :goto_1
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getResponse()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v0

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarResponse;->getContent()Lnet/lightbody/bmp/core/har/HarContent;

    move-result-object v0

    array-length v1, p2

    int-to-long v2, v1

    invoke-virtual {v0, v2, v3}, Lnet/lightbody/bmp/core/har/HarContent;->setSize(J)V

    :goto_2
    return-void

    :catch_0
    move-exception v2

    sget-object v4, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    const-string v5, "Found unsupported character set in Content-Type header \'{}\' in HTTP response from {}. Content will not be captured in HAR."

    const/4 v6, 0x3

    new-array v6, v6, [Ljava/lang/Object;

    aput-object v0, v6, v3

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->originalRequest:Lio/netty/handler/codec/http/z;

    invoke-interface {v0}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v0

    aput-object v0, v6, v1

    const/4 v0, 0x2

    aput-object v2, v6, v0

    invoke-interface {v4, v5, v6}, Lorg/slf4j/b;->d(Ljava/lang/String;[Ljava/lang/Object;)V

    goto :goto_2

    :cond_3
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v1, Lnet/lightbody/bmp/proxy/CaptureType;->RESPONSE_BINARY_CONTENT:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v0, v1}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getResponse()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v0

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarResponse;->getContent()Lnet/lightbody/bmp/core/har/HarContent;

    move-result-object v0

    new-instance v1, Ljava/lang/String;

    new-instance v2, Ljava/lang/String;

    invoke-direct {v2, p2}, Ljava/lang/String;-><init>([B)V

    invoke-static {v2}, Lcn/darkal/networkdiagnosis/d/a;->a(Ljava/lang/String;)[B

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/String;-><init>([B)V

    invoke-virtual {v0, v1}, Lnet/lightbody/bmp/core/har/HarContent;->setText(Ljava/lang/String;)V

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getResponse()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v0

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarResponse;->getContent()Lnet/lightbody/bmp/core/har/HarContent;

    move-result-object v0

    const-string v1, "base64"

    invoke-virtual {v0, v1}, Lnet/lightbody/bmp/core/har/HarContent;->setEncoding(Ljava/lang/String;)V

    goto :goto_1

    :cond_4
    move v2, v3

    goto/16 :goto_0
.end method

.method protected captureResponseCookies(Lio/netty/handler/codec/http/ac;)V
    .locals 10

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    const-string v1, "Set-Cookie"

    invoke-virtual {v0, v1}, Lio/netty/handler/codec/http/s;->c(Ljava/lang/String;)Ljava/util/List;

    move-result-object v0

    if-nez v0, :cond_1

    :cond_0
    return-void

    :cond_1
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    sget-object v2, Lio/netty/handler/codec/http/a/a;->b:Lio/netty/handler/codec/http/a/a;

    invoke-virtual {v2, v0}, Lio/netty/handler/codec/http/a/a;->a(Ljava/lang/String;)Lio/netty/handler/codec/http/a/b;

    move-result-object v0

    if-eqz v0, :cond_0

    new-instance v2, Lnet/lightbody/bmp/core/har/HarCookie;

    invoke-direct {v2}, Lnet/lightbody/bmp/core/har/HarCookie;-><init>()V

    invoke-interface {v0}, Lio/netty/handler/codec/http/a/b;->a()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lnet/lightbody/bmp/core/har/HarCookie;->setName(Ljava/lang/String;)V

    invoke-interface {v0}, Lio/netty/handler/codec/http/a/b;->b()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lnet/lightbody/bmp/core/har/HarCookie;->setValue(Ljava/lang/String;)V

    invoke-interface {v0}, Lio/netty/handler/codec/http/a/b;->c()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lnet/lightbody/bmp/core/har/HarCookie;->setDomain(Ljava/lang/String;)V

    invoke-interface {v0}, Lio/netty/handler/codec/http/a/b;->g()Z

    move-result v3

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v3

    invoke-virtual {v2, v3}, Lnet/lightbody/bmp/core/har/HarCookie;->setHttpOnly(Ljava/lang/Boolean;)V

    invoke-interface {v0}, Lio/netty/handler/codec/http/a/b;->d()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lnet/lightbody/bmp/core/har/HarCookie;->setPath(Ljava/lang/String;)V

    invoke-interface {v0}, Lio/netty/handler/codec/http/a/b;->f()Z

    move-result v3

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v3

    invoke-virtual {v2, v3}, Lnet/lightbody/bmp/core/har/HarCookie;->setSecure(Ljava/lang/Boolean;)V

    invoke-interface {v0}, Lio/netty/handler/codec/http/a/b;->e()J

    move-result-wide v4

    const-wide/16 v6, 0x0

    cmp-long v3, v4, v6

    if-lez v3, :cond_2

    invoke-static {}, Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;

    move-result-object v3

    const/16 v4, 0xe

    const/4 v5, 0x0

    invoke-virtual {v3, v4, v5}, Ljava/util/Calendar;->set(II)V

    invoke-virtual {v3}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v4

    sget-object v6, Ljava/util/concurrent/TimeUnit;->MILLISECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-interface {v0}, Lio/netty/handler/codec/http/a/b;->e()J

    move-result-wide v8

    sget-object v0, Ljava/util/concurrent/TimeUnit;->SECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v6, v8, v9, v0}, Ljava/util/concurrent/TimeUnit;->convert(JLjava/util/concurrent/TimeUnit;)J

    move-result-wide v6

    add-long/2addr v4, v6

    invoke-virtual {v3, v4, v5}, Ljava/util/Calendar;->setTimeInMillis(J)V

    invoke-virtual {v3}, Ljava/util/Calendar;->getTime()Ljava/util/Date;

    move-result-object v0

    invoke-virtual {v2, v0}, Lnet/lightbody/bmp/core/har/HarCookie;->setExpires(Ljava/util/Date;)V

    :cond_2
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getResponse()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v0

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarResponse;->getCookies()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto/16 :goto_0
.end method

.method protected captureResponseHeaderSize(Lio/netty/handler/codec/http/ac;)V
    .locals 4

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->k()Lio/netty/handler/codec/http/ag;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/codec/http/ag;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const/16 v1, 0x20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->h()Lio/netty/handler/codec/http/af;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/handler/codec/http/af;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v0

    add-int/lit8 v0, v0, 0x6

    int-to-long v0, v0

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->j()Lio/netty/handler/codec/http/s;

    move-result-object v2

    invoke-static {v2}, Lnet/lightbody/bmp/util/BrowserMobHttpUtil;->getHeaderSize(Lio/netty/handler/codec/http/s;)J

    move-result-wide v2

    add-long/2addr v0, v2

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2}, Lnet/lightbody/bmp/core/har/HarEntry;->getResponse()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Lnet/lightbody/bmp/core/har/HarResponse;->setHeadersSize(J)V

    return-void
.end method

.method protected captureResponseHeaders(Lio/netty/handler/codec/http/ac;)V
    .locals 5

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    invoke-virtual {v0}, Lio/netty/handler/codec/http/s;->b()Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map$Entry;

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarEntry;->getResponse()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v1

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarResponse;->getHeaders()Ljava/util/List;

    move-result-object v3

    new-instance v4, Lnet/lightbody/bmp/core/har/HarNameValuePair;

    invoke-interface {v0}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-interface {v0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-direct {v4, v1, v0}, Lnet/lightbody/bmp/core/har/HarNameValuePair;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-interface {v3, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_0

    :cond_0
    return-void
.end method

.method protected captureResponseMimeType(Lio/netty/handler/codec/http/ac;)V
    .locals 2

    const-string v0, "Content-Type"

    invoke-static {p1, v0}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarEntry;->getResponse()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v1

    invoke-virtual {v1}, Lnet/lightbody/bmp/core/har/HarResponse;->getContent()Lnet/lightbody/bmp/core/har/HarContent;

    move-result-object v1

    invoke-virtual {v1, v0}, Lnet/lightbody/bmp/core/har/HarContent;->setMimeType(Ljava/lang/String;)V

    :cond_0
    return-void
.end method

.method protected captureResponseSize(Lio/netty/handler/codec/http/n;)V
    .locals 2

    invoke-interface {p1}, Lio/netty/handler/codec/http/n;->a()Lio/netty/buffer/h;

    move-result-object v0

    invoke-virtual {v0}, Lio/netty/buffer/h;->f()I

    move-result v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseBodySize:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v1, v0}, Ljava/util/concurrent/atomic/AtomicInteger;->addAndGet(I)I

    return-void
.end method

.method protected captureTrailingHeaders(Lio/netty/handler/codec/http/ah;)V
    .locals 1

    invoke-interface {p1}, Lio/netty/handler/codec/http/ah;->b()Lio/netty/handler/codec/http/s;

    move-result-object v0

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureHeaders(Lio/netty/handler/codec/http/s;)V

    return-void
.end method

.method protected captureUserAgent(Lio/netty/handler/codec/http/z;)V
    .locals 4

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->har:Lnet/lightbody/bmp/core/har/Har;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/Har;->getLog()Lnet/lightbody/bmp/core/har/HarLog;

    move-result-object v0

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarLog;->getBrowser()Lnet/lightbody/bmp/core/har/HarNameVersion;

    move-result-object v0

    if-nez v0, :cond_0

    const-string v0, "User-Agent"

    invoke-static {p1, v0}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v0

    if-lez v0, :cond_0

    :try_start_0
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->har:Lnet/lightbody/bmp/core/har/Har;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/Har;->getLog()Lnet/lightbody/bmp/core/har/HarLog;

    move-result-object v0

    new-instance v1, Lnet/lightbody/bmp/core/har/HarNameVersion;

    const-string v2, "Mozilla/5.0 (Linux; U; Android 4.3; zh-cn; R8007 Build/JLS36C) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"

    const-string v3, "1.0.0"

    invoke-direct {v1, v2, v3}, Lnet/lightbody/bmp/core/har/HarNameVersion;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lnet/lightbody/bmp/core/har/HarLog;->setBrowser(Lnet/lightbody/bmp/core/har/HarNameVersion;)V
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0

    :cond_0
    :goto_0
    return-void

    :catch_0
    move-exception v0

    sget-object v1, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    const-string v2, "Failed to parse user agent string"

    invoke-interface {v1, v2, v0}, Lorg/slf4j/b;->c(Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_0
.end method

.method public clientToProxyRequest(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/ac;
    .locals 4

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->requestCaptureFilter:Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->requestCaptureFilter:Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;

    invoke-virtual {v0, p1}, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->clientToProxyRequest(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/ac;

    :cond_0
    instance-of v0, p1, Lio/netty/handler/codec/http/z;

    if-eqz v0, :cond_3

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    new-instance v1, Ljava/util/Date;

    invoke-direct {v1}, Ljava/util/Date;-><init>()V

    invoke-virtual {v0, v1}, Lnet/lightbody/bmp/core/har/HarEntry;->setStartedDateTime(Ljava/util/Date;)V

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->har:Lnet/lightbody/bmp/core/har/Har;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/Har;->getLog()Lnet/lightbody/bmp/core/har/HarLog;

    move-result-object v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0, v1}, Lnet/lightbody/bmp/core/har/HarLog;->addEntry(Lnet/lightbody/bmp/core/har/HarEntry;)V

    move-object v0, p1

    check-cast v0, Lio/netty/handler/codec/http/z;

    iput-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->capturedOriginalRequest:Lio/netty/handler/codec/http/z;

    invoke-direct {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->createHarRequestForHttpRequest(Lio/netty/handler/codec/http/z;)Lnet/lightbody/bmp/core/har/HarRequest;

    move-result-object v1

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2, v1}, Lnet/lightbody/bmp/core/har/HarEntry;->setRequest(Lnet/lightbody/bmp/core/har/HarRequest;)V

    invoke-static {}, Lnet/lightbody/bmp/filters/util/HarCaptureUtil;->createHarResponseForFailure()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v1

    invoke-static {}, Lnet/lightbody/bmp/filters/util/HarCaptureUtil;->getNoResponseReceivedErrorMessage()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Lnet/lightbody/bmp/core/har/HarResponse;->setError(Ljava/lang/String;)V

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2, v1}, Lnet/lightbody/bmp/core/har/HarEntry;->setResponse(Lnet/lightbody/bmp/core/har/HarResponse;)V

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureQueryParameters(Lio/netty/handler/codec/http/z;)V

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureUserAgent(Lio/netty/handler/codec/http/z;)V

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureRequestHeaderSize(Lio/netty/handler/codec/http/z;)V

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v2, Lnet/lightbody/bmp/proxy/CaptureType;->REQUEST_COOKIES:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v1, v2}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureRequestCookies(Lio/netty/handler/codec/http/z;)V

    :cond_1
    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v2, Lnet/lightbody/bmp/proxy/CaptureType;->REQUEST_HEADERS:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v1, v2}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureRequestHeaders(Lio/netty/handler/codec/http/z;)V

    :cond_2
    invoke-virtual {p0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureConnectTiming()V

    :cond_3
    instance-of v0, p1, Lio/netty/handler/codec/http/n;

    if-eqz v0, :cond_4

    move-object v0, p1

    check-cast v0, Lio/netty/handler/codec/http/n;

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureRequestSize(Lio/netty/handler/codec/http/n;)V

    :cond_4
    instance-of v0, p1, Lio/netty/handler/codec/http/ah;

    if-eqz v0, :cond_7

    check-cast p1, Lio/netty/handler/codec/http/ah;

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v1, Lnet/lightbody/bmp/proxy/CaptureType;->REQUEST_HEADERS:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v0, v1}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_5

    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureTrailingHeaders(Lio/netty/handler/codec/http/ah;)V

    :cond_5
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v1, Lnet/lightbody/bmp/proxy/CaptureType;->REQUEST_CONTENT:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v0, v1}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_6

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->requestCaptureFilter:Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;

    invoke-virtual {v0}, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->getHttpRequest()Lio/netty/handler/codec/http/z;

    move-result-object v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->requestCaptureFilter:Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;

    invoke-virtual {v1}, Lnet/lightbody/bmp/filters/ClientRequestCaptureFilter;->getFullRequestContents()[B

    move-result-object v1

    invoke-virtual {p0, v0, v1}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureRequestContent(Lio/netty/handler/codec/http/z;[B)V

    :cond_6
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getRequest()Lnet/lightbody/bmp/core/har/HarRequest;

    move-result-object v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->requestBodySize:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v1

    int-to-long v2, v1

    invoke-virtual {v0, v2, v3}, Lnet/lightbody/bmp/core/har/HarRequest;->setBodySize(J)V

    :cond_7
    const/4 v0, 0x0

    return-object v0
.end method

.method protected populateAddressFromCache(Lio/netty/handler/codec/http/z;)V
    .locals 3

    invoke-virtual {p0, p1}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->getHost(Lio/netty/handler/codec/http/z;)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-virtual {v0}, Ljava/lang/String;->isEmpty()Z

    move-result v1

    if-nez v1, :cond_1

    invoke-static {v0}, Lnet/lightbody/bmp/filters/ResolvedHostnameCacheFilter;->getPreviouslyResolvedAddressForHost(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_0

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0, v1}, Lnet/lightbody/bmp/core/har/HarEntry;->setServerIPAddress(Ljava/lang/String;)V

    :goto_0
    return-void

    :cond_0
    sget-object v1, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    const-string v2, "Unable to find cached IP address for host: {}. IP address in HAR entry will be blank."

    invoke-interface {v1, v2, v0}, Lorg/slf4j/b;->a(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_0

    :cond_1
    sget-object v0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->log:Lorg/slf4j/b;

    const-string v1, "Unable to identify host from request uri: {}"

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v2

    invoke-interface {v0, v1, v2}, Lorg/slf4j/b;->d(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_0
.end method

.method public proxyToServerConnectionFailed()V
    .locals 6

    invoke-static {}, Lnet/lightbody/bmp/filters/util/HarCaptureUtil;->createHarResponseForFailure()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1, v0}, Lnet/lightbody/bmp/core/har/HarEntry;->setResponse(Lnet/lightbody/bmp/core/har/HarResponse;)V

    invoke-static {}, Lnet/lightbody/bmp/filters/util/HarCaptureUtil;->getConnectionFailedErrorMessage()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Lnet/lightbody/bmp/core/har/HarResponse;->setError(Ljava/lang/String;)V

    iget-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->connectionStartedNanos:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-lez v0, :cond_0

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v2

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->connectionStartedNanos:J

    sub-long/2addr v2, v4

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v2, v3, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setConnect(JLjava/util/concurrent/TimeUnit;)V

    :cond_0
    return-void
.end method

.method public proxyToServerConnectionQueued()V
    .locals 2

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v0

    iput-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->connectionQueuedNanos:J

    return-void
.end method

.method public proxyToServerConnectionStarted()V
    .locals 2

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v0

    iput-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->connectionStartedNanos:J

    return-void
.end method

.method public proxyToServerConnectionSucceeded(Lio/netty/channel/k;)V
    .locals 6

    const-wide/16 v4, 0x0

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v0

    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->connectionStartedNanos:J

    cmp-long v2, v2, v4

    if-lez v2, :cond_0

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v2

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->connectionStartedNanos:J

    sub-long/2addr v0, v4

    sget-object v3, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v2, v0, v1, v3}, Lnet/lightbody/bmp/core/har/HarTimings;->setConnect(JLjava/util/concurrent/TimeUnit;)V

    :goto_0
    return-void

    :cond_0
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v4, v5, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setConnect(JLjava/util/concurrent/TimeUnit;)V

    goto :goto_0
.end method

.method public proxyToServerRequestSending()V
    .locals 2

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v0

    iput-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendStartedNanos:J

    iget-boolean v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->addressResolved:Z

    if-nez v0, :cond_0

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->capturedOriginalRequest:Lio/netty/handler/codec/http/z;

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->populateAddressFromCache(Lio/netty/handler/codec/http/z;)V

    :cond_0
    return-void
.end method

.method public proxyToServerRequestSent()V
    .locals 6

    const-wide/16 v2, 0x0

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v0

    iput-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendFinishedNanos:J

    iget-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendStartedNanos:J

    cmp-long v0, v0, v2

    if-lez v0, :cond_0

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendFinishedNanos:J

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendStartedNanos:J

    sub-long/2addr v2, v4

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v2, v3, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setSend(JLjava/util/concurrent/TimeUnit;)V

    :goto_0
    return-void

    :cond_0
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v2, v3, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setSend(JLjava/util/concurrent/TimeUnit;)V

    goto :goto_0
.end method

.method public proxyToServerResolutionFailed(Ljava/lang/String;)V
    .locals 6

    invoke-static {}, Lnet/lightbody/bmp/filters/util/HarCaptureUtil;->createHarResponseForFailure()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1, v0}, Lnet/lightbody/bmp/core/har/HarEntry;->setResponse(Lnet/lightbody/bmp/core/har/HarResponse;)V

    invoke-static {p1}, Lnet/lightbody/bmp/filters/util/HarCaptureUtil;->getResolutionFailedErrorMessage(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Lnet/lightbody/bmp/core/har/HarResponse;->setError(Ljava/lang/String;)V

    iget-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dnsResolutionStartedNanos:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-lez v0, :cond_0

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v2

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dnsResolutionStartedNanos:J

    sub-long/2addr v2, v4

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v2, v3, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setDns(JLjava/util/concurrent/TimeUnit;)V

    :cond_0
    return-void
.end method

.method public proxyToServerResolutionStarted(Ljava/lang/String;)Ljava/net/InetSocketAddress;
    .locals 6

    const-wide/16 v2, 0x0

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v0

    iput-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dnsResolutionStartedNanos:J

    iget-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->connectionQueuedNanos:J

    cmp-long v0, v0, v2

    if-lez v0, :cond_0

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dnsResolutionStartedNanos:J

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->connectionQueuedNanos:J

    sub-long/2addr v2, v4

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v2, v3, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setBlocked(JLjava/util/concurrent/TimeUnit;)V

    :goto_0
    const/4 v0, 0x0

    return-object v0

    :cond_0
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v2, v3, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setBlocked(JLjava/util/concurrent/TimeUnit;)V

    goto :goto_0
.end method

.method public proxyToServerResolutionSucceeded(Ljava/lang/String;Ljava/net/InetSocketAddress;)V
    .locals 6

    const-wide/16 v4, 0x0

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v0

    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dnsResolutionStartedNanos:J

    cmp-long v2, v2, v4

    if-lez v2, :cond_1

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v2

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dnsResolutionStartedNanos:J

    sub-long/2addr v0, v4

    sget-object v3, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v2, v0, v1, v3}, Lnet/lightbody/bmp/core/har/HarTimings;->setDns(JLjava/util/concurrent/TimeUnit;)V

    :goto_0
    invoke-virtual {p2}, Ljava/net/InetSocketAddress;->getAddress()Ljava/net/InetAddress;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v1, 0x1

    iput-boolean v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->addressResolved:Z

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Lnet/lightbody/bmp/core/har/HarEntry;->setServerIPAddress(Ljava/lang/String;)V

    :cond_0
    return-void

    :cond_1
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v4, v5, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setDns(JLjava/util/concurrent/TimeUnit;)V

    goto :goto_0
.end method

.method public serverToProxyResponse(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/w;
    .locals 4

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseCaptureFilter:Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseCaptureFilter:Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

    invoke-virtual {v0, p1}, Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;->serverToProxyResponse(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/w;

    :cond_0
    instance-of v0, p1, Lio/netty/handler/codec/http/ac;

    if-eqz v0, :cond_1

    move-object v0, p1

    check-cast v0, Lio/netty/handler/codec/http/ac;

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureResponse(Lio/netty/handler/codec/http/ac;)V

    :cond_1
    instance-of v0, p1, Lio/netty/handler/codec/http/n;

    if-eqz v0, :cond_2

    move-object v0, p1

    check-cast v0, Lio/netty/handler/codec/http/n;

    invoke-virtual {p0, v0}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureResponseSize(Lio/netty/handler/codec/http/n;)V

    :cond_2
    instance-of v0, p1, Lio/netty/handler/codec/http/ah;

    if-eqz v0, :cond_4

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->dataToCapture:Ljava/util/EnumSet;

    sget-object v1, Lnet/lightbody/bmp/proxy/CaptureType;->RESPONSE_CONTENT:Lnet/lightbody/bmp/proxy/CaptureType;

    invoke-virtual {v0, v1}, Ljava/util/EnumSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseCaptureFilter:Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

    invoke-virtual {v0}, Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;->getHttpResponse()Lio/netty/handler/codec/http/ac;

    move-result-object v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseCaptureFilter:Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;

    invoke-virtual {v1}, Lnet/lightbody/bmp/filters/ServerResponseCaptureFilter;->getFullResponseContents()[B

    move-result-object v1

    invoke-virtual {p0, v0, v1}, Lnet/lightbody/bmp/filters/HarCaptureFilter;->captureResponseContent(Lio/netty/handler/codec/http/ac;[B)V

    :cond_3
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getResponse()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseBodySize:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v1

    int-to-long v2, v1

    invoke-virtual {v0, v2, v3}, Lnet/lightbody/bmp/core/har/HarResponse;->setBodySize(J)V

    :cond_4
    invoke-super {p0, p1}, Lnet/lightbody/bmp/filters/HttpsAwareFiltersAdapter;->serverToProxyResponse(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/w;

    move-result-object v0

    return-object v0
.end method

.method public serverToProxyResponseReceived()V
    .locals 6

    const-wide/16 v4, 0x0

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v0

    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseReceiveStartedNanos:J

    cmp-long v2, v2, v4

    if-lez v2, :cond_0

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v2

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseReceiveStartedNanos:J

    sub-long/2addr v0, v4

    sget-object v3, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v2, v0, v1, v3}, Lnet/lightbody/bmp/core/har/HarTimings;->setReceive(JLjava/util/concurrent/TimeUnit;)V

    :goto_0
    return-void

    :cond_0
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v4, v5, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setReceive(JLjava/util/concurrent/TimeUnit;)V

    goto :goto_0
.end method

.method public serverToProxyResponseReceiving()V
    .locals 6

    const-wide/16 v4, 0x0

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v0

    iput-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseReceiveStartedNanos:J

    iget-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendFinishedNanos:J

    cmp-long v0, v0, v4

    if-lez v0, :cond_0

    iget-wide v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendFinishedNanos:J

    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseReceiveStartedNanos:J

    cmp-long v0, v0, v2

    if-gez v0, :cond_0

    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseReceiveStartedNanos:J

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendFinishedNanos:J

    sub-long/2addr v2, v4

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v2, v3, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setWait(JLjava/util/concurrent/TimeUnit;)V

    :goto_0
    return-void

    :cond_0
    iget-object v0, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v0}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v0

    sget-object v1, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v0, v4, v5, v1}, Lnet/lightbody/bmp/core/har/HarTimings;->setWait(JLjava/util/concurrent/TimeUnit;)V

    goto :goto_0
.end method

.method public serverToProxyResponseTimedOut()V
    .locals 6

    const-wide/16 v4, 0x0

    invoke-static {}, Lnet/lightbody/bmp/filters/util/HarCaptureUtil;->createHarResponseForFailure()Lnet/lightbody/bmp/core/har/HarResponse;

    move-result-object v0

    iget-object v1, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v1, v0}, Lnet/lightbody/bmp/core/har/HarEntry;->setResponse(Lnet/lightbody/bmp/core/har/HarResponse;)V

    invoke-static {}, Lnet/lightbody/bmp/filters/util/HarCaptureUtil;->getResponseTimedOutErrorMessage()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Lnet/lightbody/bmp/core/har/HarResponse;->setError(Ljava/lang/String;)V

    invoke-static {}, Ljava/lang/System;->nanoTime()J

    move-result-wide v0

    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendStartedNanos:J

    cmp-long v2, v2, v4

    if-lez v2, :cond_1

    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendFinishedNanos:J

    cmp-long v2, v2, v4

    if-nez v2, :cond_1

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v2

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendStartedNanos:J

    sub-long/2addr v0, v4

    sget-object v3, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v2, v0, v1, v3}, Lnet/lightbody/bmp/core/har/HarTimings;->setSend(JLjava/util/concurrent/TimeUnit;)V

    :cond_0
    :goto_0
    return-void

    :cond_1
    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendFinishedNanos:J

    cmp-long v2, v2, v4

    if-lez v2, :cond_2

    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseReceiveStartedNanos:J

    cmp-long v2, v2, v4

    if-nez v2, :cond_2

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v2

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->sendFinishedNanos:J

    sub-long/2addr v0, v4

    sget-object v3, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v2, v0, v1, v3}, Lnet/lightbody/bmp/core/har/HarTimings;->setWait(JLjava/util/concurrent/TimeUnit;)V

    goto :goto_0

    :cond_2
    iget-wide v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseReceiveStartedNanos:J

    cmp-long v2, v2, v4

    if-lez v2, :cond_0

    iget-object v2, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->harEntry:Lnet/lightbody/bmp/core/har/HarEntry;

    invoke-virtual {v2}, Lnet/lightbody/bmp/core/har/HarEntry;->getTimings()Lnet/lightbody/bmp/core/har/HarTimings;

    move-result-object v2

    iget-wide v4, p0, Lnet/lightbody/bmp/filters/HarCaptureFilter;->responseReceiveStartedNanos:J

    sub-long/2addr v0, v4

    sget-object v3, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    invoke-virtual {v2, v0, v1, v3}, Lnet/lightbody/bmp/core/har/HarTimings;->setReceive(JLjava/util/concurrent/TimeUnit;)V

    goto :goto_0
.end method
