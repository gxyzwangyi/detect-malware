.class public Lnet/lightbody/bmp/filters/HttpsOriginalHostCaptureFilter;
.super Lnet/lightbody/bmp/filters/HttpsHostCaptureFilter;


# direct methods
.method public constructor <init>(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;)V
    .locals 2

    invoke-direct {p0, p1, p2}, Lnet/lightbody/bmp/filters/HttpsHostCaptureFilter;-><init>(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;)V

    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->c(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-eqz v0, :cond_0

    const-string v0, "originalHost"

    invoke-static {v0}, Lio/netty/util/c;->a(Ljava/lang/String;)Lio/netty/util/c;

    move-result-object v0

    invoke-interface {p2, v0}, Lio/netty/channel/k;->a(Lio/netty/util/c;)Lio/netty/util/b;

    move-result-object v0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, v1}, Lio/netty/util/b;->set(Ljava/lang/Object;)V

    const-string v0, "isHttps"

    invoke-static {v0}, Lio/netty/util/c;->a(Ljava/lang/String;)Lio/netty/util/c;

    move-result-object v0

    invoke-interface {p2, v0}, Lio/netty/channel/k;->a(Lio/netty/util/c;)Lio/netty/util/b;

    move-result-object v0

    const/4 v1, 0x1

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v1

    invoke-interface {v0, v1}, Lio/netty/util/b;->set(Ljava/lang/Object;)V

    :cond_0
    return-void
.end method
