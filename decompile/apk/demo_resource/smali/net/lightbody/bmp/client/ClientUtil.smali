.class public Lnet/lightbody/bmp/client/ClientUtil;
.super Ljava/lang/Object;


# direct methods
.method public constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static createDnsJavaResolver()Lnet/lightbody/bmp/proxy/dns/AdvancedHostResolver;
    .locals 1

    new-instance v0, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;

    invoke-direct {v0}, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;-><init>()V

    return-object v0
.end method

.method public static createDnsJavaWithNativeFallbackResolver()Lnet/lightbody/bmp/proxy/dns/AdvancedHostResolver;
    .locals 3

    new-instance v0, Lnet/lightbody/bmp/proxy/dns/ChainedHostResolver;

    new-instance v1, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;

    invoke-direct {v1}, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;-><init>()V

    new-instance v2, Lnet/lightbody/bmp/proxy/dns/NativeCacheManipulatingResolver;

    invoke-direct {v2}, Lnet/lightbody/bmp/proxy/dns/NativeCacheManipulatingResolver;-><init>()V

    invoke-static {v1, v2}, Lcom/google/common/collect/ImmutableList;->a(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;

    move-result-object v1

    invoke-direct {v0, v1}, Lnet/lightbody/bmp/proxy/dns/ChainedHostResolver;-><init>(Ljava/util/Collection;)V

    return-object v0
.end method

.method public static createNativeCacheManipulatingResolver()Lnet/lightbody/bmp/proxy/dns/AdvancedHostResolver;
    .locals 1

    new-instance v0, Lnet/lightbody/bmp/proxy/dns/NativeCacheManipulatingResolver;

    invoke-direct {v0}, Lnet/lightbody/bmp/proxy/dns/NativeCacheManipulatingResolver;-><init>()V

    return-object v0
.end method

.method public static createNativeResolver()Lnet/lightbody/bmp/proxy/dns/AdvancedHostResolver;
    .locals 1

    new-instance v0, Lnet/lightbody/bmp/proxy/dns/NativeResolver;

    invoke-direct {v0}, Lnet/lightbody/bmp/proxy/dns/NativeResolver;-><init>()V

    return-object v0
.end method

.method public static getConnectableAddress()Ljava/net/InetAddress;
    .locals 3

    :try_start_0
    invoke-static {}, Ljava/net/InetAddress;->getLocalHost()Ljava/net/InetAddress;
    :try_end_0
    .catch Ljava/net/UnknownHostException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/RuntimeException;

    const-string v2, "Could not resolve localhost"

    invoke-direct {v1, v2, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method
