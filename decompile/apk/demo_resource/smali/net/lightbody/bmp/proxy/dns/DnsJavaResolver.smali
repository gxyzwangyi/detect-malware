.class public Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;
.super Lnet/lightbody/bmp/proxy/dns/AbstractHostNameRemapper;

# interfaces
.implements Lnet/lightbody/bmp/proxy/dns/AdvancedHostResolver;


# static fields
.field private static final DNS_NETWORK_FAILURE_RETRY_COUNT:I = 0x5

.field private static final log:Lorg/slf4j/b;


# instance fields
.field private final cache:Lorg/xbill/DNS/Cache;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const-class v0, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;

    invoke-static {v0}, Lorg/slf4j/c;->a(Ljava/lang/Class;)Lorg/slf4j/b;

    move-result-object v0

    sput-object v0, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;->log:Lorg/slf4j/b;

    return-void
.end method

.method public constructor <init>()V
    .locals 1

    invoke-direct {p0}, Lnet/lightbody/bmp/proxy/dns/AbstractHostNameRemapper;-><init>()V

    new-instance v0, Lorg/xbill/DNS/Cache;

    invoke-direct {v0}, Lorg/xbill/DNS/Cache;-><init>()V

    iput-object v0, p0, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;->cache:Lorg/xbill/DNS/Cache;

    return-void
.end method


# virtual methods
.method public clearDNSCache()V
    .locals 1

    iget-object v0, p0, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;->cache:Lorg/xbill/DNS/Cache;

    invoke-virtual {v0}, Lorg/xbill/DNS/Cache;->a()V

    return-void
.end method

.method protected resolveHostByType(Ljava/lang/String;I)Ljava/util/Collection;
    .locals 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "I)",
            "Ljava/util/Collection",
            "<",
            "Ljava/net/InetAddress;",
            ">;"
        }
    .end annotation

    :try_start_0
    new-instance v1, Lorg/xbill/DNS/n;

    const/4 v0, 0x1

    invoke-direct {v1, p1, p2, v0}, Lorg/xbill/DNS/n;-><init>(Ljava/lang/String;II)V
    :try_end_0
    .catch Lorg/xbill/DNS/TextParseException; {:try_start_0 .. :try_end_0} :catch_0

    iget-object v0, p0, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;->cache:Lorg/xbill/DNS/Cache;

    invoke-virtual {v1, v0}, Lorg/xbill/DNS/n;->a(Lorg/xbill/DNS/Cache;)V

    const/4 v0, -0x1

    :cond_0
    invoke-virtual {v1}, Lorg/xbill/DNS/n;->d()[Lorg/xbill/DNS/Record;

    move-result-object v3

    add-int/lit8 v0, v0, 0x1

    invoke-virtual {v1}, Lorg/xbill/DNS/n;->e()I

    move-result v2

    const/4 v4, 0x2

    if-ne v2, v4, :cond_1

    const/4 v2, 0x5

    if-lt v0, v2, :cond_0

    :cond_1
    if-nez v3, :cond_2

    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    :goto_0
    return-object v0

    :catch_0
    move-exception v0

    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    goto :goto_0

    :cond_2
    new-instance v1, Ljava/util/ArrayList;

    array-length v0, v3

    invoke-direct {v1, v0}, Ljava/util/ArrayList;-><init>(I)V

    array-length v4, v3

    const/4 v0, 0x0

    move v2, v0

    :goto_1
    if-ge v2, v4, :cond_5

    aget-object v0, v3, v2

    instance-of v5, v0, Lorg/xbill/DNS/ARecord;

    if-eqz v5, :cond_4

    check-cast v0, Lorg/xbill/DNS/ARecord;

    :try_start_1
    invoke-virtual {v0}, Lorg/xbill/DNS/ARecord;->j_()Ljava/net/InetAddress;

    move-result-object v0

    invoke-virtual {v0}, Ljava/net/InetAddress;->getAddress()[B

    move-result-object v0

    invoke-static {p1, v0}, Ljava/net/InetAddress;->getByAddress(Ljava/lang/String;[B)Ljava/net/InetAddress;

    move-result-object v0

    invoke-interface {v1, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catch Ljava/net/UnknownHostException; {:try_start_1 .. :try_end_1} :catch_1

    :cond_3
    :goto_2
    add-int/lit8 v0, v2, 0x1

    move v2, v0

    goto :goto_1

    :catch_1
    move-exception v0

    sget-object v5, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;->log:Lorg/slf4j/b;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "dnsjava resolver returned an invalid InetAddress for host: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v5, v6, v0}, Lorg/slf4j/b;->c(Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_2

    :cond_4
    instance-of v5, v0, Lorg/xbill/DNS/AAAARecord;

    if-eqz v5, :cond_3

    check-cast v0, Lorg/xbill/DNS/AAAARecord;

    :try_start_2
    invoke-virtual {v0}, Lorg/xbill/DNS/AAAARecord;->i_()Ljava/net/InetAddress;

    move-result-object v0

    invoke-virtual {v0}, Ljava/net/InetAddress;->getAddress()[B

    move-result-object v0

    invoke-static {p1, v0}, Ljava/net/InetAddress;->getByAddress(Ljava/lang/String;[B)Ljava/net/InetAddress;

    move-result-object v0

    invoke-interface {v1, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catch Ljava/net/UnknownHostException; {:try_start_2 .. :try_end_2} :catch_2

    goto :goto_2

    :catch_2
    move-exception v0

    sget-object v5, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;->log:Lorg/slf4j/b;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "dnsjava resolver returned an invalid InetAddress for host: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v5, v6, v0}, Lorg/slf4j/b;->c(Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_2

    :cond_5
    move-object v0, v1

    goto :goto_0
.end method

.method public resolveRemapped(Ljava/lang/String;)Ljava/util/Collection;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/Collection",
            "<",
            "Ljava/net/InetAddress;",
            ">;"
        }
    .end annotation

    invoke-static {p1}, Lcom/google/common/net/a;->b(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-static {p1}, Lcom/google/common/net/a;->a(Ljava/lang/String;)Ljava/net/InetAddress;

    move-result-object v0

    invoke-static {v0}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    :cond_0
    :goto_0
    return-object v0

    :cond_1
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0}, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;->resolveHostByType(Ljava/lang/String;I)Ljava/util/Collection;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Collection;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_0

    const/16 v0, 0x1c

    invoke-virtual {p0, p1, v0}, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;->resolveHostByType(Ljava/lang/String;I)Ljava/util/Collection;

    move-result-object v0

    goto :goto_0
.end method

.method public setNegativeDNSCacheTimeout(ILjava/util/concurrent/TimeUnit;)V
    .locals 4

    iget-object v0, p0, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;->cache:Lorg/xbill/DNS/Cache;

    sget-object v1, Ljava/util/concurrent/TimeUnit;->SECONDS:Ljava/util/concurrent/TimeUnit;

    int-to-long v2, p1

    invoke-virtual {v1, v2, v3, p2}, Ljava/util/concurrent/TimeUnit;->convert(JLjava/util/concurrent/TimeUnit;)J

    move-result-wide v2

    long-to-int v1, v2

    invoke-virtual {v0, v1}, Lorg/xbill/DNS/Cache;->a(I)V

    return-void
.end method

.method public setPositiveDNSCacheTimeout(ILjava/util/concurrent/TimeUnit;)V
    .locals 4

    iget-object v0, p0, Lnet/lightbody/bmp/proxy/dns/DnsJavaResolver;->cache:Lorg/xbill/DNS/Cache;

    sget-object v1, Ljava/util/concurrent/TimeUnit;->SECONDS:Ljava/util/concurrent/TimeUnit;

    int-to-long v2, p1

    invoke-virtual {v1, v2, v3, p2}, Ljava/util/concurrent/TimeUnit;->convert(JLjava/util/concurrent/TimeUnit;)J

    move-result-wide v2

    long-to-int v1, v2

    invoke-virtual {v0, v1}, Lorg/xbill/DNS/Cache;->b(I)V

    return-void
.end method
