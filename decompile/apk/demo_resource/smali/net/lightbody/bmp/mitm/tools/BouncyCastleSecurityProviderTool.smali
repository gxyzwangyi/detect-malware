.class public Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;
.super Ljava/lang/Object;

# interfaces
.implements Lnet/lightbody/bmp/mitm/tools/SecurityProviderTool;


# static fields
.field private static final CERTIFICATE_SERIAL_NUMBER_SIZE:I = 0xa0


# direct methods
.method static constructor <clinit>()V
    .locals 1

    new-instance v0, Lorg/bouncycastle/jce/provider/BouncyCastleProvider;

    invoke-direct {v0}, Lorg/bouncycastle/jce/provider/BouncyCastleProvider;-><init>()V

    invoke-static {v0}, Ljava/security/Security;->addProvider(Ljava/security/Provider;)I

    return-void
.end method

.method public constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private static convertToJcaCertificate(Lorg/bouncycastle/cert/d;)Ljava/security/cert/X509Certificate;
    .locals 3

    :try_start_0
    new-instance v0, Lorg/bouncycastle/cert/jcajce/JcaX509CertificateConverter;

    invoke-direct {v0}, Lorg/bouncycastle/cert/jcajce/JcaX509CertificateConverter;-><init>()V

    invoke-virtual {v0, p0}, Lorg/bouncycastle/cert/jcajce/JcaX509CertificateConverter;->a(Lorg/bouncycastle/cert/d;)Ljava/security/cert/X509Certificate;
    :try_end_0
    .catch Ljava/security/cert/CertificateException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Lnet/lightbody/bmp/mitm/exception/CertificateCreationException;

    const-string v2, "Unable to convert X590CertificateHolder to JCA X590Certificate"

    invoke-direct {v1, v2, v0}, Lnet/lightbody/bmp/mitm/exception/CertificateCreationException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method private static createSubjectKeyIdentifier(Ljava/security/Key;)Lorg/bouncycastle/asn1/o/x;
    .locals 2

    invoke-interface {p0}, Ljava/security/Key;->getEncoded()[B

    move-result-object v0

    invoke-static {v0}, Lorg/bouncycastle/asn1/o/y;->a(Ljava/lang/Object;)Lorg/bouncycastle/asn1/o/y;

    move-result-object v0

    new-instance v1, Lorg/bouncycastle/cert/a/a;

    invoke-direct {v1}, Lorg/bouncycastle/cert/a/a;-><init>()V

    invoke-virtual {v1, v0}, Lorg/bouncycastle/cert/a/a;->a(Lorg/bouncycastle/asn1/o/y;)Lorg/bouncycastle/asn1/o/x;

    move-result-object v0

    return-object v0
.end method

.method private static createX500NameForCertificate(Lnet/lightbody/bmp/mitm/CertificateInfo;)Lorg/bouncycastle/asn1/n/c;
    .locals 3

    new-instance v0, Lorg/bouncycastle/asn1/n/d;

    sget-object v1, Lorg/bouncycastle/asn1/n/a/b;->J:Lorg/bouncycastle/asn1/n/e;

    invoke-direct {v0, v1}, Lorg/bouncycastle/asn1/n/d;-><init>(Lorg/bouncycastle/asn1/n/e;)V

    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getCommonName()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_0

    sget-object v1, Lorg/bouncycastle/asn1/n/a/b;->e:Lorg/bouncycastle/asn1/n;

    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getCommonName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lorg/bouncycastle/asn1/n/d;->a(Lorg/bouncycastle/asn1/n;Ljava/lang/String;)Lorg/bouncycastle/asn1/n/d;

    :cond_0
    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getOrganization()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_1

    sget-object v1, Lorg/bouncycastle/asn1/n/a/b;->b:Lorg/bouncycastle/asn1/n;

    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getOrganization()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lorg/bouncycastle/asn1/n/d;->a(Lorg/bouncycastle/asn1/n;Ljava/lang/String;)Lorg/bouncycastle/asn1/n/d;

    :cond_1
    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getOrganizationalUnit()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_2

    sget-object v1, Lorg/bouncycastle/asn1/n/a/b;->c:Lorg/bouncycastle/asn1/n;

    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getOrganizationalUnit()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lorg/bouncycastle/asn1/n/d;->a(Lorg/bouncycastle/asn1/n;Ljava/lang/String;)Lorg/bouncycastle/asn1/n/d;

    :cond_2
    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getEmail()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_3

    sget-object v1, Lorg/bouncycastle/asn1/n/a/b;->G:Lorg/bouncycastle/asn1/n;

    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getEmail()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lorg/bouncycastle/asn1/n/d;->a(Lorg/bouncycastle/asn1/n;Ljava/lang/String;)Lorg/bouncycastle/asn1/n/d;

    :cond_3
    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getLocality()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_4

    sget-object v1, Lorg/bouncycastle/asn1/n/a/b;->i:Lorg/bouncycastle/asn1/n;

    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getLocality()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lorg/bouncycastle/asn1/n/d;->a(Lorg/bouncycastle/asn1/n;Ljava/lang/String;)Lorg/bouncycastle/asn1/n/d;

    :cond_4
    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getState()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_5

    sget-object v1, Lorg/bouncycastle/asn1/n/a/b;->j:Lorg/bouncycastle/asn1/n;

    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getState()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lorg/bouncycastle/asn1/n/d;->a(Lorg/bouncycastle/asn1/n;Ljava/lang/String;)Lorg/bouncycastle/asn1/n/d;

    :cond_5
    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getCountryCode()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_6

    sget-object v1, Lorg/bouncycastle/asn1/n/a/b;->a:Lorg/bouncycastle/asn1/n;

    invoke-virtual {p0}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getCountryCode()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Lorg/bouncycastle/asn1/n/d;->a(Lorg/bouncycastle/asn1/n;Ljava/lang/String;)Lorg/bouncycastle/asn1/n/d;

    :cond_6
    invoke-virtual {v0}, Lorg/bouncycastle/asn1/n/d;->a()Lorg/bouncycastle/asn1/n/c;

    move-result-object v0

    return-object v0
.end method

.method private static encodeObjectAsPemString(Ljava/lang/Object;Lorg/bouncycastle/openssl/f;)Ljava/lang/String;
    .locals 3

    new-instance v0, Ljava/io/StringWriter;

    invoke-direct {v0}, Ljava/io/StringWriter;-><init>()V

    :try_start_0
    new-instance v1, Lorg/bouncycastle/openssl/a/c;

    invoke-direct {v1, v0}, Lorg/bouncycastle/openssl/a/c;-><init>(Ljava/io/Writer;)V

    invoke-virtual {v1, p0, p1}, Lorg/bouncycastle/openssl/a/c;->a(Ljava/lang/Object;Lorg/bouncycastle/openssl/f;)V

    invoke-virtual {v1}, Lorg/bouncycastle/openssl/a/c;->flush()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    invoke-virtual {v0}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Lnet/lightbody/bmp/mitm/exception/ExportException;

    const-string v2, "Unable to generate PEM string representing object"

    invoke-direct {v1, v2, v0}, Lnet/lightbody/bmp/mitm/exception/ExportException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method private static getCertificateSigner(Ljava/security/PrivateKey;Ljava/lang/String;)Lorg/bouncycastle/operator/a;
    .locals 4

    :try_start_0
    new-instance v0, Lorg/bouncycastle/operator/a/a;

    invoke-direct {v0, p1}, Lorg/bouncycastle/operator/a/a;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, p0}, Lorg/bouncycastle/operator/a/a;->a(Ljava/security/PrivateKey;)Lorg/bouncycastle/operator/a;
    :try_end_0
    .catch Lorg/bouncycastle/operator/OperatorCreationException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Lnet/lightbody/bmp/mitm/exception/CertificateCreationException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unable to create ContentSigner using signature algorithm: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2, v0}, Lnet/lightbody/bmp/mitm/exception/CertificateCreationException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method private static getDomainNameSANsAsASN1Encodable(Ljava/util/List;)Lorg/bouncycastle/asn1/o/p;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;)",
            "Lorg/bouncycastle/asn1/o/p;"
        }
    .end annotation

    new-instance v2, Ljava/util/ArrayList;

    invoke-interface {p0}, Ljava/util/List;->size()I

    move-result v0

    invoke-direct {v2, v0}, Ljava/util/ArrayList;-><init>(I)V

    invoke-interface {p0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-static {v0}, Lcom/google/common/net/a;->b(Ljava/lang/String;)Z

    move-result v1

    new-instance v4, Lorg/bouncycastle/asn1/o/o;

    if-eqz v1, :cond_0

    const/4 v1, 0x7

    :goto_1
    invoke-direct {v4, v1, v0}, Lorg/bouncycastle/asn1/o/o;-><init>(ILjava/lang/String;)V

    invoke-interface {v2, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_0

    :cond_0
    const/4 v1, 0x2

    goto :goto_1

    :cond_1
    new-instance v1, Lorg/bouncycastle/asn1/o/p;

    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v0

    new-array v0, v0, [Lorg/bouncycastle/asn1/o/o;

    invoke-interface {v2, v0}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lorg/bouncycastle/asn1/o/o;

    invoke-direct {v1, v0}, Lorg/bouncycastle/asn1/o/p;-><init>([Lorg/bouncycastle/asn1/o/o;)V

    return-object v1
.end method


# virtual methods
.method public createCARootCertificate(Lnet/lightbody/bmp/mitm/CertificateInfo;Ljava/security/KeyPair;Ljava/lang/String;)Lnet/lightbody/bmp/mitm/CertificateAndKey;
    .locals 9

    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getNotBefore()Ljava/util/Date;

    move-result-object v0

    if-nez v0, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Must specify Not Before for server certificate"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getNotAfter()Ljava/util/Date;

    move-result-object v0

    if-nez v0, :cond_1

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Must specify Not After for server certificate"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    invoke-static {p1}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->createX500NameForCertificate(Lnet/lightbody/bmp/mitm/CertificateInfo;)Lorg/bouncycastle/asn1/n/c;

    move-result-object v1

    const/16 v0, 0xa0

    invoke-static {v0}, Lnet/lightbody/bmp/mitm/util/EncryptionUtil;->getRandomBigInteger(I)Ljava/math/BigInteger;

    move-result-object v2

    invoke-virtual {p2}, Ljava/security/KeyPair;->getPublic()Ljava/security/PublicKey;

    move-result-object v6

    invoke-virtual {p2}, Ljava/security/KeyPair;->getPrivate()Ljava/security/PrivateKey;

    move-result-object v0

    invoke-static {p3, v0}, Lnet/lightbody/bmp/mitm/util/EncryptionUtil;->getSignatureAlgorithm(Ljava/lang/String;Ljava/security/Key;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2}, Ljava/security/KeyPair;->getPrivate()Ljava/security/PrivateKey;

    move-result-object v3

    invoke-static {v3, v0}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->getCertificateSigner(Ljava/security/PrivateKey;Ljava/lang/String;)Lorg/bouncycastle/operator/a;

    move-result-object v7

    new-instance v8, Lorg/bouncycastle/asn1/g;

    invoke-direct {v8}, Lorg/bouncycastle/asn1/g;-><init>()V

    sget-object v0, Lorg/bouncycastle/asn1/o/t;->b:Lorg/bouncycastle/asn1/o/t;

    invoke-virtual {v8, v0}, Lorg/bouncycastle/asn1/g;->a(Lorg/bouncycastle/asn1/f;)V

    sget-object v0, Lorg/bouncycastle/asn1/o/t;->c:Lorg/bouncycastle/asn1/o/t;

    invoke-virtual {v8, v0}, Lorg/bouncycastle/asn1/g;->a(Lorg/bouncycastle/asn1/f;)V

    sget-object v0, Lorg/bouncycastle/asn1/o/t;->a:Lorg/bouncycastle/asn1/o/t;

    invoke-virtual {v8, v0}, Lorg/bouncycastle/asn1/g;->a(Lorg/bouncycastle/asn1/f;)V

    :try_start_0
    new-instance v0, Lorg/bouncycastle/cert/jcajce/e;

    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getNotBefore()Ljava/util/Date;

    move-result-object v3

    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getNotAfter()Ljava/util/Date;

    move-result-object v4

    move-object v5, v1

    invoke-direct/range {v0 .. v6}, Lorg/bouncycastle/cert/jcajce/e;-><init>(Lorg/bouncycastle/asn1/n/c;Ljava/math/BigInteger;Ljava/util/Date;Ljava/util/Date;Lorg/bouncycastle/asn1/n/c;Ljava/security/PublicKey;)V

    sget-object v1, Lorg/bouncycastle/asn1/o/l;->b:Lorg/bouncycastle/asn1/n;

    const/4 v2, 0x0

    invoke-static {v6}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->createSubjectKeyIdentifier(Ljava/security/Key;)Lorg/bouncycastle/asn1/o/x;

    move-result-object v3

    invoke-virtual {v0, v1, v2, v3}, Lorg/bouncycastle/cert/jcajce/e;->a(Lorg/bouncycastle/asn1/n;ZLorg/bouncycastle/asn1/f;)Lorg/bouncycastle/cert/f;

    move-result-object v0

    sget-object v1, Lorg/bouncycastle/asn1/o/l;->g:Lorg/bouncycastle/asn1/n;

    const/4 v2, 0x1

    new-instance v3, Lorg/bouncycastle/asn1/o/g;

    const/4 v4, 0x1

    invoke-direct {v3, v4}, Lorg/bouncycastle/asn1/o/g;-><init>(Z)V

    invoke-virtual {v0, v1, v2, v3}, Lorg/bouncycastle/cert/f;->a(Lorg/bouncycastle/asn1/n;ZLorg/bouncycastle/asn1/f;)Lorg/bouncycastle/cert/f;

    move-result-object v0

    sget-object v1, Lorg/bouncycastle/asn1/o/l;->c:Lorg/bouncycastle/asn1/n;

    const/4 v2, 0x0

    new-instance v3, Lorg/bouncycastle/asn1/o/u;

    const/16 v4, 0xb6

    invoke-direct {v3, v4}, Lorg/bouncycastle/asn1/o/u;-><init>(I)V

    invoke-virtual {v0, v1, v2, v3}, Lorg/bouncycastle/cert/f;->a(Lorg/bouncycastle/asn1/n;ZLorg/bouncycastle/asn1/f;)Lorg/bouncycastle/cert/f;

    move-result-object v0

    sget-object v1, Lorg/bouncycastle/asn1/o/l;->u:Lorg/bouncycastle/asn1/n;

    const/4 v2, 0x0

    new-instance v3, Lorg/bouncycastle/asn1/bd;

    invoke-direct {v3, v8}, Lorg/bouncycastle/asn1/bd;-><init>(Lorg/bouncycastle/asn1/g;)V

    invoke-virtual {v0, v1, v2, v3}, Lorg/bouncycastle/cert/f;->a(Lorg/bouncycastle/asn1/n;ZLorg/bouncycastle/asn1/f;)Lorg/bouncycastle/cert/f;

    move-result-object v0

    invoke-virtual {v0, v7}, Lorg/bouncycastle/cert/f;->a(Lorg/bouncycastle/operator/a;)Lorg/bouncycastle/cert/d;
    :try_end_0
    .catch Lorg/bouncycastle/cert/CertIOException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    invoke-static {v0}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->convertToJcaCertificate(Lorg/bouncycastle/cert/d;)Ljava/security/cert/X509Certificate;

    move-result-object v0

    new-instance v1, Lnet/lightbody/bmp/mitm/CertificateAndKey;

    invoke-virtual {p2}, Ljava/security/KeyPair;->getPrivate()Ljava/security/PrivateKey;

    move-result-object v2

    invoke-direct {v1, v0, v2}, Lnet/lightbody/bmp/mitm/CertificateAndKey;-><init>(Ljava/security/cert/X509Certificate;Ljava/security/PrivateKey;)V

    return-object v1

    :catch_0
    move-exception v0

    new-instance v1, Lnet/lightbody/bmp/mitm/exception/CertificateCreationException;

    const-string v2, "Error creating root certificate"

    invoke-direct {v1, v2, v0}, Lnet/lightbody/bmp/mitm/exception/CertificateCreationException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method public createRootCertificateKeyStore(Ljava/lang/String;Lnet/lightbody/bmp/mitm/CertificateAndKey;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
    .locals 2

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "BouncyCastle implementation does not implement this method"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public createServerCertificate(Lnet/lightbody/bmp/mitm/CertificateInfo;Ljava/security/cert/X509Certificate;Ljava/security/PrivateKey;Ljava/security/KeyPair;Ljava/lang/String;)Lnet/lightbody/bmp/mitm/CertificateAndKey;
    .locals 8

    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getCommonName()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Must specify CN for server certificate"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getNotBefore()Ljava/util/Date;

    move-result-object v0

    if-nez v0, :cond_1

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Must specify Not Before for server certificate"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getNotAfter()Ljava/util/Date;

    move-result-object v0

    if-nez v0, :cond_2

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Must specify Not After for server certificate"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_2
    invoke-static {p1}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->createX500NameForCertificate(Lnet/lightbody/bmp/mitm/CertificateInfo;)Lorg/bouncycastle/asn1/n/c;

    move-result-object v5

    invoke-static {p5, p3}, Lnet/lightbody/bmp/mitm/util/EncryptionUtil;->getSignatureAlgorithm(Ljava/lang/String;Ljava/security/Key;)Ljava/lang/String;

    move-result-object v0

    invoke-static {p3, v0}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->getCertificateSigner(Ljava/security/PrivateKey;Ljava/lang/String;)Lorg/bouncycastle/operator/a;

    move-result-object v7

    const/16 v0, 0xa0

    invoke-static {v0}, Lnet/lightbody/bmp/mitm/util/EncryptionUtil;->getRandomBigInteger(I)Ljava/math/BigInteger;

    move-result-object v2

    :try_start_0
    new-instance v0, Lorg/bouncycastle/cert/jcajce/e;

    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getNotBefore()Ljava/util/Date;

    move-result-object v3

    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getNotAfter()Ljava/util/Date;

    move-result-object v4

    invoke-virtual {p4}, Ljava/security/KeyPair;->getPublic()Ljava/security/PublicKey;

    move-result-object v6

    move-object v1, p2

    invoke-direct/range {v0 .. v6}, Lorg/bouncycastle/cert/jcajce/e;-><init>(Ljava/security/cert/X509Certificate;Ljava/math/BigInteger;Ljava/util/Date;Ljava/util/Date;Lorg/bouncycastle/asn1/n/c;Ljava/security/PublicKey;)V

    sget-object v1, Lorg/bouncycastle/asn1/o/l;->e:Lorg/bouncycastle/asn1/n;

    const/4 v2, 0x0

    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/CertificateInfo;->getSubjectAlternativeNames()Ljava/util/List;

    move-result-object v3

    invoke-static {v3}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->getDomainNameSANsAsASN1Encodable(Ljava/util/List;)Lorg/bouncycastle/asn1/o/p;

    move-result-object v3

    invoke-virtual {v0, v1, v2, v3}, Lorg/bouncycastle/cert/jcajce/e;->a(Lorg/bouncycastle/asn1/n;ZLorg/bouncycastle/asn1/f;)Lorg/bouncycastle/cert/f;

    move-result-object v0

    sget-object v1, Lorg/bouncycastle/asn1/o/l;->b:Lorg/bouncycastle/asn1/n;

    const/4 v2, 0x0

    invoke-virtual {p4}, Ljava/security/KeyPair;->getPublic()Ljava/security/PublicKey;

    move-result-object v3

    invoke-static {v3}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->createSubjectKeyIdentifier(Ljava/security/Key;)Lorg/bouncycastle/asn1/o/x;

    move-result-object v3

    invoke-virtual {v0, v1, v2, v3}, Lorg/bouncycastle/cert/f;->a(Lorg/bouncycastle/asn1/n;ZLorg/bouncycastle/asn1/f;)Lorg/bouncycastle/cert/f;

    move-result-object v0

    sget-object v1, Lorg/bouncycastle/asn1/o/l;->g:Lorg/bouncycastle/asn1/n;

    const/4 v2, 0x0

    new-instance v3, Lorg/bouncycastle/asn1/o/g;

    const/4 v4, 0x0

    invoke-direct {v3, v4}, Lorg/bouncycastle/asn1/o/g;-><init>(Z)V

    invoke-virtual {v0, v1, v2, v3}, Lorg/bouncycastle/cert/f;->a(Lorg/bouncycastle/asn1/n;ZLorg/bouncycastle/asn1/f;)Lorg/bouncycastle/cert/f;

    move-result-object v0

    invoke-virtual {v0, v7}, Lorg/bouncycastle/cert/f;->a(Lorg/bouncycastle/operator/a;)Lorg/bouncycastle/cert/d;
    :try_end_0
    .catch Lorg/bouncycastle/cert/CertIOException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    invoke-static {v0}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->convertToJcaCertificate(Lorg/bouncycastle/cert/d;)Ljava/security/cert/X509Certificate;

    move-result-object v0

    new-instance v1, Lnet/lightbody/bmp/mitm/CertificateAndKey;

    invoke-virtual {p4}, Ljava/security/KeyPair;->getPrivate()Ljava/security/PrivateKey;

    move-result-object v2

    invoke-direct {v1, v0, v2}, Lnet/lightbody/bmp/mitm/CertificateAndKey;-><init>(Ljava/security/cert/X509Certificate;Ljava/security/PrivateKey;)V

    return-object v1

    :catch_0
    move-exception v0

    new-instance v1, Lnet/lightbody/bmp/mitm/exception/CertificateCreationException;

    const-string v2, "Error creating new server certificate"

    invoke-direct {v1, v2, v0}, Lnet/lightbody/bmp/mitm/exception/CertificateCreationException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method

.method public createServerKeyStore(Ljava/lang/String;Lnet/lightbody/bmp/mitm/CertificateAndKey;Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
    .locals 2

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "BouncyCastle implementation does not implement this method"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public decodePemEncodedCertificate(Ljava/io/Reader;)Ljava/security/cert/X509Certificate;
    .locals 2

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "BouncyCastle implementation does not implement this method"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public decodePemEncodedPrivateKey(Ljava/io/Reader;Ljava/lang/String;)Ljava/security/PrivateKey;
    .locals 3

    :try_start_0
    new-instance v0, Lorg/bouncycastle/openssl/i;

    invoke-direct {v0, p1}, Lorg/bouncycastle/openssl/i;-><init>(Ljava/io/Reader;)V

    invoke-virtual {v0}, Lorg/bouncycastle/openssl/i;->a()Ljava/lang/Object;

    move-result-object v0

    instance-of v1, v0, Lorg/bouncycastle/openssl/e;

    if-eqz v1, :cond_1

    if-nez p2, :cond_0

    new-instance v0, Lnet/lightbody/bmp/mitm/exception/ImportException;

    const-string v1, "Unable to import private key. Key is encrypted, but no password was provided."

    invoke-direct {v0, v1}, Lnet/lightbody/bmp/mitm/exception/ImportException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    move-exception v0

    new-instance v1, Lnet/lightbody/bmp/mitm/exception/ImportException;

    const-string v2, "Unable to read PEM-encoded PrivateKey"

    invoke-direct {v1, v2, v0}, Lnet/lightbody/bmp/mitm/exception/ImportException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1

    :cond_0
    :try_start_1
    new-instance v1, Lorg/bouncycastle/openssl/a/d;

    invoke-direct {v1}, Lorg/bouncycastle/openssl/a/d;-><init>()V

    invoke-virtual {p2}, Ljava/lang/String;->toCharArray()[C

    move-result-object v2

    invoke-virtual {v1, v2}, Lorg/bouncycastle/openssl/a/d;->a([C)Lorg/bouncycastle/openssl/d;

    move-result-object v1

    check-cast v0, Lorg/bouncycastle/openssl/e;

    invoke-virtual {v0, v1}, Lorg/bouncycastle/openssl/e;->a(Lorg/bouncycastle/openssl/d;)Lorg/bouncycastle/openssl/g;

    move-result-object v0

    invoke-virtual {v0}, Lorg/bouncycastle/openssl/g;->a()Lorg/bouncycastle/asn1/k/f;

    move-result-object v0

    :goto_0
    new-instance v1, Lorg/bouncycastle/openssl/a/b;

    invoke-direct {v1}, Lorg/bouncycastle/openssl/a/b;-><init>()V

    invoke-virtual {v1, v0}, Lorg/bouncycastle/openssl/a/b;->a(Lorg/bouncycastle/asn1/k/f;)Ljava/security/PrivateKey;

    move-result-object v0

    return-object v0

    :cond_1
    check-cast v0, Lorg/bouncycastle/openssl/g;

    invoke-virtual {v0}, Lorg/bouncycastle/openssl/g;->a()Lorg/bouncycastle/asn1/k/f;
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    move-result-object v0

    goto :goto_0
.end method

.method public encodeCertificateAsPem(Ljava/security/cert/Certificate;)Ljava/lang/String;
    .locals 1

    const/4 v0, 0x0

    invoke-static {p1, v0}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->encodeObjectAsPemString(Ljava/lang/Object;Lorg/bouncycastle/openssl/f;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public encodePrivateKeyAsPem(Ljava/security/PrivateKey;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    .locals 2

    if-nez p2, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "You must specify a password when serializing a private key"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    new-instance v0, Lorg/bouncycastle/openssl/a/e;

    invoke-direct {v0, p3}, Lorg/bouncycastle/openssl/a/e;-><init>(Ljava/lang/String;)V

    invoke-virtual {p2}, Ljava/lang/String;->toCharArray()[C

    move-result-object v1

    invoke-virtual {v0, v1}, Lorg/bouncycastle/openssl/a/e;->a([C)Lorg/bouncycastle/openssl/f;

    move-result-object v0

    invoke-static {p1, v0}, Lnet/lightbody/bmp/mitm/tools/BouncyCastleSecurityProviderTool;->encodeObjectAsPemString(Ljava/lang/Object;Lorg/bouncycastle/openssl/f;)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getKeyManagers(Ljava/security/KeyStore;Ljava/lang/String;)[Ljavax/net/ssl/KeyManager;
    .locals 1

    const/4 v0, 0x0

    new-array v0, v0, [Ljavax/net/ssl/KeyManager;

    return-object v0
.end method

.method public loadKeyStore(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
    .locals 2

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "BouncyCastle implementation does not implement this method"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public saveKeyStore(Ljava/io/File;Ljava/security/KeyStore;Ljava/lang/String;)V
    .locals 2

    new-instance v0, Ljava/lang/UnsupportedOperationException;

    const-string v1, "BouncyCastle implementation does not implement this method"

    invoke-direct {v0, v1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw v0
.end method
