.class public Lnet/lightbody/bmp/mitm/util/SslUtil;
.super Ljava/lang/Object;


# static fields
.field private static final DEFAULT_CIPHERS_LIST_RESOURCE:Ljava/lang/String; = "/default-ciphers.txt"

.field private static final defaultCipherList:Lcom/google/common/base/n;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/google/common/base/n",
            "<",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;>;"
        }
    .end annotation
.end field

.field private static final log:Lorg/slf4j/b;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const-class v0, Lnet/lightbody/bmp/mitm/util/SslUtil;

    invoke-static {v0}, Lorg/slf4j/c;->a(Ljava/lang/Class;)Lorg/slf4j/b;

    move-result-object v0

    sput-object v0, Lnet/lightbody/bmp/mitm/util/SslUtil;->log:Lorg/slf4j/b;

    new-instance v0, Lnet/lightbody/bmp/mitm/util/SslUtil$1;

    invoke-direct {v0}, Lnet/lightbody/bmp/mitm/util/SslUtil$1;-><init>()V

    invoke-static {v0}, Lcom/google/common/base/Suppliers;->a(Lcom/google/common/base/n;)Lcom/google/common/base/n;

    move-result-object v0

    sput-object v0, Lnet/lightbody/bmp/mitm/util/SslUtil;->defaultCipherList:Lcom/google/common/base/n;

    return-void
.end method

.method public constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static getBuiltInCipherList()Ljava/util/List;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    :try_start_0
    const-class v0, Lnet/lightbody/bmp/mitm/util/SslUtil;

    const-string v1, "/default-ciphers.txt"

    invoke-virtual {v0, v1}, Ljava/lang/Class;->getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1

    move-result-object v2

    const/4 v1, 0x0

    if-nez v2, :cond_2

    :try_start_1
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;
    :try_end_1
    .catch Ljava/lang/Throwable; {:try_start_1 .. :try_end_1} :catch_3
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    move-result-object v0

    if-eqz v2, :cond_0

    if-eqz v1, :cond_1

    :try_start_2
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V
    :try_end_2
    .catch Ljava/lang/Throwable; {:try_start_2 .. :try_end_2} :catch_0
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1

    :cond_0
    :goto_0
    return-object v0

    :catch_0
    move-exception v2

    :try_start_3
    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1

    goto :goto_0

    :catch_1
    move-exception v0

    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    goto :goto_0

    :cond_1
    :try_start_4
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_1

    goto :goto_0

    :cond_2
    :try_start_5
    new-instance v0, Ljava/io/InputStreamReader;

    const-string v3, "UTF-8"

    invoke-static {v3}, Ljava/nio/charset/Charset;->forName(Ljava/lang/String;)Ljava/nio/charset/Charset;

    move-result-object v3

    invoke-direct {v0, v2, v3}, Ljava/io/InputStreamReader;-><init>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V

    invoke-static {v0}, Lcom/google/common/a/c;->b(Ljava/lang/Readable;)Ljava/util/List;
    :try_end_5
    .catch Ljava/lang/Throwable; {:try_start_5 .. :try_end_5} :catch_3
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    move-result-object v0

    if-eqz v2, :cond_0

    if-eqz v1, :cond_3

    :try_start_6
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V
    :try_end_6
    .catch Ljava/lang/Throwable; {:try_start_6 .. :try_end_6} :catch_2
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1

    goto :goto_0

    :catch_2
    move-exception v2

    :try_start_7
    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    goto :goto_0

    :cond_3
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_1

    goto :goto_0

    :catch_3
    move-exception v0

    :try_start_8
    throw v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    :catchall_0
    move-exception v1

    move-object v4, v1

    move-object v1, v0

    move-object v0, v4

    :goto_1
    if-eqz v2, :cond_4

    if-eqz v1, :cond_5

    :try_start_9
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V
    :try_end_9
    .catch Ljava/lang/Throwable; {:try_start_9 .. :try_end_9} :catch_4
    .catch Ljava/io/IOException; {:try_start_9 .. :try_end_9} :catch_1

    :cond_4
    :goto_2
    :try_start_a
    throw v0

    :catch_4
    move-exception v2

    invoke-virtual {v1, v2}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    goto :goto_2

    :cond_5
    invoke-virtual {v2}, Ljava/io/InputStream;->close()V
    :try_end_a
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_a} :catch_1

    goto :goto_2

    :catchall_1
    move-exception v0

    goto :goto_1
.end method

.method public static getDefaultCipherList()Ljava/util/List;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    sget-object v0, Lnet/lightbody/bmp/mitm/util/SslUtil;->defaultCipherList:Lcom/google/common/base/n;

    invoke-interface {v0}, Lcom/google/common/base/n;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/List;

    return-object v0
.end method

.method public static getEnabledJdkCipherSuites()Ljava/util/List;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    :try_start_0
    const-string v0, "TLS"

    invoke-static {v0}, Ljavax/net/ssl/SSLContext;->getInstance(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;

    move-result-object v0

    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-virtual {v0, v1, v2, v3}, Ljavax/net/ssl/SSLContext;->init([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V

    invoke-virtual {v0}, Ljavax/net/ssl/SSLContext;->getServerSocketFactory()Ljavax/net/ssl/SSLServerSocketFactory;

    move-result-object v0

    invoke-virtual {v0}, Ljavax/net/ssl/SSLServerSocketFactory;->getDefaultCipherSuites()[Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    :goto_0
    return-object v0

    :catch_0
    move-exception v0

    sget-object v1, Lnet/lightbody/bmp/mitm/util/SslUtil;->log:Lorg/slf4j/b;

    const-string v2, "Unable to load default JDK server cipher list from SSLContext"

    invoke-interface {v1, v2}, Lorg/slf4j/b;->b(Ljava/lang/String;)V

    sget-object v1, Lnet/lightbody/bmp/mitm/util/SslUtil;->log:Lorg/slf4j/b;

    const-string v2, "An error occurred while initializing an SSLContext or ServerSocketFactory"

    invoke-interface {v1, v2, v0}, Lorg/slf4j/b;->a(Ljava/lang/String;Ljava/lang/Throwable;)V

    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    goto :goto_0
.end method

.method public static getServerCertificate(Ljavax/net/ssl/SSLSession;)Ljava/security/cert/X509Certificate;
    .locals 4

    const/4 v0, 0x0

    const/4 v3, 0x0

    :try_start_0
    invoke-interface {p0}, Ljavax/net/ssl/SSLSession;->getPeerCertificates()[Ljava/security/cert/Certificate;
    :try_end_0
    .catch Ljavax/net/ssl/SSLPeerUnverifiedException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    :goto_0
    if-eqz v1, :cond_0

    array-length v2, v1

    if-lez v2, :cond_0

    aget-object v2, v1, v3

    if-eqz v2, :cond_0

    instance-of v2, v2, Ljava/security/cert/X509Certificate;

    if-eqz v2, :cond_0

    aget-object v0, v1, v3

    check-cast v0, Ljava/security/cert/X509Certificate;

    :cond_0
    return-object v0

    :catch_0
    move-exception v1

    move-object v1, v0

    goto :goto_0
.end method

.method public static getUpstreamServerSslContext(Ljava/util/Collection;Lnet/lightbody/bmp/mitm/TrustSource;)Lio/netty/handler/ssl/ah;
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Collection",
            "<",
            "Ljava/lang/String;",
            ">;",
            "Lnet/lightbody/bmp/mitm/TrustSource;",
            ")",
            "Lio/netty/handler/ssl/ah;"
        }
    .end annotation

    invoke-static {}, Lio/netty/handler/ssl/ai;->a()Lio/netty/handler/ssl/ai;

    move-result-object v0

    if-nez p1, :cond_0

    sget-object v1, Lnet/lightbody/bmp/mitm/util/SslUtil;->log:Lorg/slf4j/b;

    const-string v2, "Disabling upstream server certificate verification. This will allow attackers to intercept communications with upstream servers."

    invoke-interface {v1, v2}, Lorg/slf4j/b;->c(Ljava/lang/String;)V

    sget-object v1, Lnet/lightbody/bmp/mitm/trustmanager/InsecureTrustManagerFactory;->INSTANCE:Ljavax/net/ssl/TrustManagerFactory;

    invoke-virtual {v0, v1}, Lio/netty/handler/ssl/ai;->a(Ljavax/net/ssl/TrustManagerFactory;)Lio/netty/handler/ssl/ai;

    :goto_0
    sget-object v1, Lio/netty/handler/ssl/an;->a:Lio/netty/handler/ssl/an;

    invoke-virtual {v0, p0, v1}, Lio/netty/handler/ssl/ai;->a(Ljava/lang/Iterable;Lio/netty/handler/ssl/d;)Lio/netty/handler/ssl/ai;

    :try_start_0
    invoke-virtual {v0}, Lio/netty/handler/ssl/ai;->b()Lio/netty/handler/ssl/ah;
    :try_end_0
    .catch Ljavax/net/ssl/SSLException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    return-object v0

    :cond_0
    invoke-virtual {p1}, Lnet/lightbody/bmp/mitm/TrustSource;->getTrustedCAs()[Ljava/security/cert/X509Certificate;

    move-result-object v1

    invoke-virtual {v0, v1}, Lio/netty/handler/ssl/ai;->a([Ljava/security/cert/X509Certificate;)Lio/netty/handler/ssl/ai;

    goto :goto_0

    :catch_0
    move-exception v0

    new-instance v1, Lnet/lightbody/bmp/mitm/exception/SslContextInitializationException;

    const-string v2, "Error creating new SSL context for connection to upstream server"

    invoke-direct {v1, v2, v0}, Lnet/lightbody/bmp/mitm/exception/SslContextInitializationException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1
.end method
