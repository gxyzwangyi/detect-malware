.class public Lorg/littleshoot/proxy/impl/b;
.super Lorg/littleshoot/proxy/impl/f;


# annotations
.annotation system Ldalvik/annotation/Signature;
    value = {
        "Lorg/littleshoot/proxy/impl/f",
        "<",
        "Lio/netty/handler/codec/http/z;",
        ">;"
    }
.end annotation


# static fields
.field private static final k:Lio/netty/handler/codec/http/af;

.field private static final l:Ljava/lang/String;

.field private static final m:Ljava/util/regex/Pattern;


# instance fields
.field private A:Lorg/littleshoot/proxy/impl/f$b;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lorg/littleshoot/proxy/impl/f",
            "<",
            "Lio/netty/handler/codec/http/z;",
            ">.b;"
        }
    .end annotation
.end field

.field private B:Lorg/littleshoot/proxy/impl/f$f;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lorg/littleshoot/proxy/impl/f",
            "<",
            "Lio/netty/handler/codec/http/z;",
            ">.f;"
        }
    .end annotation
.end field

.field a:Lorg/littleshoot/proxy/impl/d;

.field private final n:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map",
            "<",
            "Ljava/lang/String;",
            "Lorg/littleshoot/proxy/impl/i;",
            ">;"
        }
    .end annotation
.end field

.field private final o:Ljava/util/concurrent/atomic/AtomicInteger;

.field private final p:Ljava/util/concurrent/atomic/AtomicInteger;

.field private final q:Ljava/util/concurrent/atomic/AtomicInteger;

.field private volatile r:Lorg/littleshoot/proxy/impl/i;

.field private volatile s:Lorg/littleshoot/proxy/i;

.field private volatile t:Ljavax/net/ssl/SSLSession;

.field private volatile u:Z

.field private v:Ljava/util/concurrent/atomic/AtomicBoolean;

.field private final w:Lio/netty/handler/a/c;

.field private volatile x:Lio/netty/handler/codec/http/z;

.field private final y:Lorg/littleshoot/proxy/impl/f$a;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lorg/littleshoot/proxy/impl/f",
            "<",
            "Lio/netty/handler/codec/http/z;",
            ">.a;"
        }
    .end annotation
.end field

.field private z:Lorg/littleshoot/proxy/impl/f$c;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lorg/littleshoot/proxy/impl/f",
            "<",
            "Lio/netty/handler/codec/http/z;",
            ">.c;"
        }
    .end annotation
.end field


# direct methods
.method static constructor <clinit>()V
    .locals 3

    new-instance v0, Lio/netty/handler/codec/http/af;

    const/16 v1, 0xc8

    const-string v2, "Connection established"

    invoke-direct {v0, v1, v2}, Lio/netty/handler/codec/http/af;-><init>(ILjava/lang/String;)V

    sput-object v0, Lorg/littleshoot/proxy/impl/b;->k:Lio/netty/handler/codec/http/af;

    const-string v0, "Transfer-Encoding"

    sget-object v1, Ljava/util/Locale;->US:Ljava/util/Locale;

    invoke-virtual {v0, v1}, Ljava/lang/String;->toLowerCase(Ljava/util/Locale;)Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lorg/littleshoot/proxy/impl/b;->l:Ljava/lang/String;

    const-string v0, "^http://.*"

    const/4 v1, 0x2

    invoke-static {v0, v1}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;I)Ljava/util/regex/Pattern;

    move-result-object v0

    sput-object v0, Lorg/littleshoot/proxy/impl/b;->m:Ljava/util/regex/Pattern;

    return-void
.end method

.method constructor <init>(Lorg/littleshoot/proxy/impl/e;Lorg/littleshoot/proxy/q;ZLio/netty/channel/t;Lio/netty/handler/a/c;)V
    .locals 4

    const/4 v3, 0x0

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;

    invoke-direct {p0, v0, p1, v3}, Lorg/littleshoot/proxy/impl/f;-><init>(Lorg/littleshoot/proxy/impl/ConnectionState;Lorg/littleshoot/proxy/impl/e;Z)V

    new-instance v0, Ljava/util/concurrent/ConcurrentHashMap;

    invoke-direct {v0}, Ljava/util/concurrent/ConcurrentHashMap;-><init>()V

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->n:Ljava/util/Map;

    new-instance v0, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-direct {v0, v3}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->o:Ljava/util/concurrent/atomic/AtomicInteger;

    new-instance v0, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-direct {v0, v3}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->p:Ljava/util/concurrent/atomic/AtomicInteger;

    new-instance v0, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-direct {v0, v3}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->q:Ljava/util/concurrent/atomic/AtomicInteger;

    sget-object v0, Lorg/littleshoot/proxy/j;->NOOP_FILTER:Lorg/littleshoot/proxy/j;

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    iput-boolean v3, p0, Lorg/littleshoot/proxy/impl/b;->u:Z

    new-instance v0, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>()V

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->v:Ljava/util/concurrent/atomic/AtomicBoolean;

    new-instance v0, Lorg/littleshoot/proxy/impl/b$2;

    sget-object v1, Lorg/littleshoot/proxy/impl/ConnectionState;->c:Lorg/littleshoot/proxy/impl/ConnectionState;

    invoke-direct {v0, p0, p0, v1}, Lorg/littleshoot/proxy/impl/b$2;-><init>(Lorg/littleshoot/proxy/impl/b;Lorg/littleshoot/proxy/impl/f;Lorg/littleshoot/proxy/impl/ConnectionState;)V

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->a:Lorg/littleshoot/proxy/impl/d;

    new-instance v0, Lorg/littleshoot/proxy/impl/b$3;

    invoke-direct {v0, p0}, Lorg/littleshoot/proxy/impl/b$3;-><init>(Lorg/littleshoot/proxy/impl/b;)V

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->y:Lorg/littleshoot/proxy/impl/f$a;

    new-instance v0, Lorg/littleshoot/proxy/impl/b$4;

    invoke-direct {v0, p0}, Lorg/littleshoot/proxy/impl/b$4;-><init>(Lorg/littleshoot/proxy/impl/b;)V

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->z:Lorg/littleshoot/proxy/impl/f$c;

    new-instance v0, Lorg/littleshoot/proxy/impl/b$5;

    invoke-direct {v0, p0}, Lorg/littleshoot/proxy/impl/b$5;-><init>(Lorg/littleshoot/proxy/impl/b;)V

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->A:Lorg/littleshoot/proxy/impl/f$b;

    new-instance v0, Lorg/littleshoot/proxy/impl/b$6;

    invoke-direct {v0, p0}, Lorg/littleshoot/proxy/impl/b$6;-><init>(Lorg/littleshoot/proxy/impl/b;)V

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->B:Lorg/littleshoot/proxy/impl/f$f;

    invoke-direct {p0, p4}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/channel/t;)V

    if-eqz p2, :cond_0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Enabling encryption of traffic from client to proxy"

    new-array v2, v3, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-interface {p2}, Lorg/littleshoot/proxy/q;->newSslEngine()Ljavax/net/ssl/SSLEngine;

    move-result-object v0

    invoke-virtual {p0, p4, v0, p3}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/channel/t;Ljavax/net/ssl/SSLEngine;Z)Lio/netty/util/concurrent/n;

    move-result-object v0

    new-instance v1, Lorg/littleshoot/proxy/impl/b$1;

    invoke-direct {v1, p0}, Lorg/littleshoot/proxy/impl/b$1;-><init>(Lorg/littleshoot/proxy/impl/b;)V

    invoke-interface {v0, v1}, Lio/netty/util/concurrent/n;->d(Lio/netty/util/concurrent/p;)Lio/netty/util/concurrent/n;

    :cond_0
    iput-object p5, p0, Lorg/littleshoot/proxy/impl/b;->w:Lio/netty/handler/a/c;

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Created ClientToProxyConnection"

    new-array v2, v3, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    return-void
.end method

.method private a(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;)Lio/netty/handler/codec/http/c;
    .locals 2

    const/4 v0, 0x0

    check-cast v0, Lio/netty/buffer/h;

    const/4 v1, 0x0

    invoke-direct {p0, p1, p2, v0, v1}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;Lio/netty/buffer/h;I)Lio/netty/handler/codec/http/c;

    move-result-object v0

    return-object v0
.end method

.method private a(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;Lio/netty/buffer/h;I)Lio/netty/handler/codec/http/c;
    .locals 4

    if-eqz p3, :cond_1

    new-instance v0, Lio/netty/handler/codec/http/c;

    sget-object v1, Lio/netty/handler/codec/http/ag;->b:Lio/netty/handler/codec/http/ag;

    invoke-direct {v0, v1, p2, p3}, Lio/netty/handler/codec/http/c;-><init>(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;Lio/netty/buffer/h;)V

    :goto_0
    if-eqz p3, :cond_0

    invoke-virtual {v0}, Lio/netty/handler/codec/http/c;->j()Lio/netty/handler/codec/http/s;

    move-result-object v1

    const-string v2, "Content-Length"

    invoke-static {p4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v1, v2, v3}, Lio/netty/handler/codec/http/s;->b(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/s;

    invoke-virtual {v0}, Lio/netty/handler/codec/http/c;->j()Lio/netty/handler/codec/http/s;

    move-result-object v1

    const-string v2, "Content-Type"

    const-string v3, "text/html; charset=UTF-8"

    invoke-virtual {v1, v2, v3}, Lio/netty/handler/codec/http/s;->b(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/s;

    :cond_0
    return-object v0

    :cond_1
    new-instance v0, Lio/netty/handler/codec/http/c;

    sget-object v1, Lio/netty/handler/codec/http/ag;->b:Lio/netty/handler/codec/http/ag;

    invoke-direct {v0, v1, p2}, Lio/netty/handler/codec/http/c;-><init>(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;)V

    goto :goto_0
.end method

.method private a(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;Ljava/lang/String;)Lio/netty/handler/codec/http/c;
    .locals 2

    const-string v0, "UTF-8"

    invoke-static {v0}, Ljava/nio/charset/Charset;->forName(Ljava/lang/String;)Ljava/nio/charset/Charset;

    move-result-object v0

    invoke-virtual {p3, v0}, Ljava/lang/String;->getBytes(Ljava/nio/charset/Charset;)[B

    move-result-object v0

    invoke-static {v0}, Lio/netty/buffer/ak;->b([B)Lio/netty/buffer/h;

    move-result-object v1

    array-length v0, v0

    invoke-direct {p0, p1, p2, v1, v0}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;Lio/netty/buffer/h;I)Lio/netty/handler/codec/http/c;

    move-result-object v0

    return-object v0
.end method

.method static synthetic a(Lorg/littleshoot/proxy/impl/b;Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;)Lio/netty/handler/codec/http/c;
    .locals 1

    invoke-direct {p0, p1, p2}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;)Lio/netty/handler/codec/http/c;

    move-result-object v0

    return-object v0
.end method

.method static synthetic a(Lorg/littleshoot/proxy/impl/b;Ljavax/net/ssl/SSLSession;)Ljavax/net/ssl/SSLSession;
    .locals 0

    iput-object p1, p0, Lorg/littleshoot/proxy/impl/b;->t:Ljavax/net/ssl/SSLSession;

    return-object p1
.end method

.method private a(Lio/netty/channel/t;)V
    .locals 5

    const/16 v4, 0x4000

    const/4 v3, 0x0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Configuring ChannelPipeline"

    new-array v2, v3, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    const-string v0, "bytesReadMonitor"

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->y:Lorg/littleshoot/proxy/impl/f$a;

    invoke-interface {p1, v0, v1}, Lio/netty/channel/t;->b(Ljava/lang/String;Lio/netty/channel/i;)Lio/netty/channel/t;

    const-string v0, "bytesWrittenMonitor"

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->A:Lorg/littleshoot/proxy/impl/f$b;

    invoke-interface {p1, v0, v1}, Lio/netty/channel/t;->b(Ljava/lang/String;Lio/netty/channel/i;)Lio/netty/channel/t;

    const-string v0, "encoder"

    new-instance v1, Lio/netty/handler/codec/http/ae;

    invoke-direct {v1}, Lio/netty/handler/codec/http/ae;-><init>()V

    invoke-interface {p1, v0, v1}, Lio/netty/channel/t;->b(Ljava/lang/String;Lio/netty/channel/i;)Lio/netty/channel/t;

    const-string v0, "decoder"

    new-instance v1, Lio/netty/handler/codec/http/aa;

    const/16 v2, 0x2000

    invoke-direct {v1, v2, v4, v4}, Lio/netty/handler/codec/http/aa;-><init>(III)V

    invoke-interface {p1, v0, v1}, Lio/netty/channel/t;->b(Ljava/lang/String;Lio/netty/channel/i;)Lio/netty/channel/t;

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/e;->n()Lorg/littleshoot/proxy/k;

    move-result-object v0

    invoke-interface {v0}, Lorg/littleshoot/proxy/k;->getMaximumRequestBufferSizeInBytes()I

    move-result v0

    if-lez v0, :cond_0

    invoke-virtual {p0, p1, v0}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/channel/t;I)V

    :cond_0
    const-string v0, "requestReadMonitor"

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->z:Lorg/littleshoot/proxy/impl/f$c;

    invoke-interface {p1, v0, v1}, Lio/netty/channel/t;->b(Ljava/lang/String;Lio/netty/channel/i;)Lio/netty/channel/t;

    const-string v0, "responseWrittenMonitor"

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->B:Lorg/littleshoot/proxy/impl/f$f;

    invoke-interface {p1, v0, v1}, Lio/netty/channel/t;->b(Ljava/lang/String;Lio/netty/channel/i;)Lio/netty/channel/t;

    const-string v0, "idle"

    new-instance v1, Lio/netty/handler/timeout/b;

    iget-object v2, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v2}, Lorg/littleshoot/proxy/impl/e;->f()I

    move-result v2

    invoke-direct {v1, v3, v3, v2}, Lio/netty/handler/timeout/b;-><init>(III)V

    invoke-interface {p1, v0, v1}, Lio/netty/channel/t;->b(Ljava/lang/String;Lio/netty/channel/i;)Lio/netty/channel/t;

    const-string v0, "handler"

    invoke-interface {p1, v0, p0}, Lio/netty/channel/t;->b(Ljava/lang/String;Lio/netty/channel/i;)Lio/netty/channel/t;

    return-void
.end method

.method private a(Lio/netty/handler/codec/http/ac;)V
    .locals 3

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    const-string v1, "Transfer-Encoding"

    invoke-virtual {v0, v1}, Lio/netty/handler/codec/http/s;->b(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lorg/apache/commons/b/a;->c(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, "chunked"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->k()Lio/netty/handler/codec/http/ag;

    move-result-object v0

    sget-object v1, Lio/netty/handler/codec/http/ag;->b:Lio/netty/handler/codec/http/ag;

    if-eq v0, v1, :cond_0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Fixing HTTP version."

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    sget-object v0, Lio/netty/handler/codec/http/ag;->b:Lio/netty/handler/codec/http/ag;

    invoke-interface {p1, v0}, Lio/netty/handler/codec/http/ac;->b(Lio/netty/handler/codec/http/ag;)Lio/netty/handler/codec/http/ac;

    :cond_0
    return-void
.end method

.method private a(Lio/netty/handler/codec/http/s;)V
    .locals 5

    const-string v0, "Accept-Encoding"

    invoke-virtual {p1, v0}, Lio/netty/handler/codec/http/s;->b(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lorg/apache/commons/b/a;->c(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_0

    const-string v1, ",sdch"

    const-string v2, ""

    invoke-virtual {v0, v1, v2}, Ljava/lang/String;->replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;

    move-result-object v0

    const-string v1, "sdch"

    const-string v2, ""

    invoke-virtual {v0, v1, v2}, Ljava/lang/String;->replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;

    move-result-object v0

    const-string v1, "Accept-Encoding"

    invoke-virtual {p1, v1, v0}, Lio/netty/handler/codec/http/s;->b(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/s;

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v2, "Removed sdch and inserted: {}"

    const/4 v3, 0x1

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object v0, v3, v4

    invoke-virtual {v1, v2, v3}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    :cond_0
    return-void
.end method

.method private a(Lio/netty/handler/codec/http/z;Lorg/littleshoot/proxy/impl/i;)V
    .locals 2

    invoke-virtual {p2}, Lorg/littleshoot/proxy/impl/i;->l()Lio/netty/util/concurrent/n;

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->n:Ljava/util/Map;

    invoke-virtual {p2}, Lorg/littleshoot/proxy/impl/i;->h()Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->g(Lio/netty/handler/codec/http/z;)Z

    move-result v0

    if-eqz v0, :cond_0

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;

    invoke-virtual {p0, v0}, Lorg/littleshoot/proxy/impl/b;->b(Lorg/littleshoot/proxy/impl/ConnectionState;)V

    :goto_0
    return-void

    :cond_0
    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->h:Lorg/littleshoot/proxy/impl/ConnectionState;

    invoke-virtual {p0, v0}, Lorg/littleshoot/proxy/impl/b;->b(Lorg/littleshoot/proxy/impl/ConnectionState;)V

    goto :goto_0
.end method

.method private a(Ljava/lang/String;)V
    .locals 5

    const-string v0, "<!DOCTYPE HTML \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>407 Proxy Authentication Required</title>\n</head><body>\n<h1>Proxy Authentication Required</h1>\n<p>This server could not verify that you\nare authorized to access the document\nrequested.  Either you supplied the wrong\ncredentials (e.g., bad password), or your\nbrowser doesn\'t understand how to supply\nthe credentials required.</p>\n</body></html>\n"

    sget-object v1, Lio/netty/handler/codec/http/ag;->b:Lio/netty/handler/codec/http/ag;

    sget-object v2, Lio/netty/handler/codec/http/af;->z:Lio/netty/handler/codec/http/af;

    invoke-direct {p0, v1, v2, v0}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;Ljava/lang/String;)Lio/netty/handler/codec/http/c;

    move-result-object v0

    new-instance v1, Ljava/util/Date;

    invoke-direct {v1}, Ljava/util/Date;-><init>()V

    invoke-static {v0, v1}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;Ljava/util/Date;)V

    invoke-virtual {v0}, Lio/netty/handler/codec/http/c;->j()Lio/netty/handler/codec/http/s;

    move-result-object v1

    const-string v2, "Proxy-Authenticate"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Basic realm=\""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    if-nez p1, :cond_0

    const-string p1, "Restricted Files"

    :cond_0
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "\""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v2, v3}, Lio/netty/handler/codec/http/s;->b(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/s;

    invoke-virtual {p0, v0}, Lorg/littleshoot/proxy/impl/b;->c(Ljava/lang/Object;)V

    return-void
.end method

.method static synthetic a(Lorg/littleshoot/proxy/impl/b;)V
    .locals 0

    invoke-direct {p0}, Lorg/littleshoot/proxy/impl/b;->v()V

    return-void
.end method

.method private a(Lorg/littleshoot/proxy/impl/i;Lio/netty/handler/codec/http/z;Lio/netty/handler/codec/http/ac;Lio/netty/handler/codec/http/w;)V
    .locals 5

    const/4 v4, 0x0

    invoke-direct {p0, p2, p3, p4}, Lorg/littleshoot/proxy/impl/b;->b(Lio/netty/handler/codec/http/z;Lio/netty/handler/codec/http/ac;Lio/netty/handler/codec/http/w;)Z

    move-result v0

    invoke-direct {p0, p2, p3, p4}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/z;Lio/netty/handler/codec/http/ac;Lio/netty/handler/codec/http/w;)Z

    move-result v1

    if-eqz v0, :cond_0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v2, "Closing remote connection after writing to client"

    new-array v3, v4, [Ljava/lang/Object;

    invoke-virtual {v0, v2, v3}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-virtual {p1}, Lorg/littleshoot/proxy/impl/i;->l()Lio/netty/util/concurrent/n;

    :cond_0
    if-eqz v1, :cond_1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Closing connection to client after writes"

    new-array v2, v4, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->l()Lio/netty/util/concurrent/n;

    :cond_1
    return-void
.end method

.method private a(Lio/netty/handler/codec/http/z;Lio/netty/handler/codec/http/ac;Lio/netty/handler/codec/http/w;)Z
    .locals 5

    const/4 v2, 0x1

    const/4 v1, 0x0

    invoke-static {p2}, Lorg/littleshoot/proxy/impl/j;->b(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-eqz v0, :cond_2

    if-eqz p3, :cond_2

    invoke-static {p3}, Lorg/littleshoot/proxy/impl/j;->a(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-nez v0, :cond_1

    const/4 v0, 0x0

    if-eqz p1, :cond_0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v0

    :cond_0
    iget-object v3, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v4, "Not closing client connection on middle chunk for {}"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v0, v2, v1

    invoke-virtual {v3, v4, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    move v0, v1

    :goto_0
    return v0

    :cond_1
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v3, "Handling last chunk. Using normal client connection closing rules."

    new-array v4, v1, [Ljava/lang/Object;

    invoke-virtual {v0, v3, v4}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    :cond_2
    invoke-static {p1}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;)Z

    move-result v0

    if-nez v0, :cond_3

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v3, "Closing client connection since request is not keep alive: {}"

    new-array v4, v2, [Ljava/lang/Object;

    aput-object p1, v4, v1

    invoke-virtual {v0, v3, v4}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    move v0, v2

    goto :goto_0

    :cond_3
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v3, "Not closing client connection for request: {}"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object p1, v2, v1

    invoke-virtual {v0, v3, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    move v0, v1

    goto :goto_0
.end method

.method static synthetic b(Lorg/littleshoot/proxy/impl/b;)Lorg/littleshoot/proxy/f;
    .locals 1

    invoke-direct {p0}, Lorg/littleshoot/proxy/impl/b;->x()Lorg/littleshoot/proxy/f;

    move-result-object v0

    return-object v0
.end method

.method private b(Lio/netty/handler/codec/http/z;)Lorg/littleshoot/proxy/impl/ConnectionState;
    .locals 8

    const/4 v6, 0x1

    const/4 v7, 0x0

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->e(Lio/netty/handler/codec/http/z;)Lio/netty/handler/codec/http/z;

    move-result-object v0

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->x:Lio/netty/handler/codec/http/z;

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/e;->n()Lorg/littleshoot/proxy/k;

    move-result-object v0

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->x:Lio/netty/handler/codec/http/z;

    iget-object v2, p0, Lorg/littleshoot/proxy/impl/b;->e:Lio/netty/channel/k;

    invoke-interface {v0, v1, v2}, Lorg/littleshoot/proxy/k;->filterRequest(Lio/netty/handler/codec/http/z;Lio/netty/channel/k;)Lorg/littleshoot/proxy/i;

    move-result-object v0

    if-eqz v0, :cond_0

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    :goto_0
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    invoke-interface {v0, p1}, Lorg/littleshoot/proxy/i;->clientToProxyRequest(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/ac;

    move-result-object v0

    if-eqz v0, :cond_2

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v2, "Responding to client with short-circuit response from filter: {}"

    new-array v3, v6, [Ljava/lang/Object;

    aput-object v0, v3, v7

    invoke-virtual {v1, v2, v3}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->c(Lio/netty/handler/codec/http/ac;)Z

    move-result v0

    if-eqz v0, :cond_1

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;

    :goto_1
    return-object v0

    :cond_0
    sget-object v0, Lorg/littleshoot/proxy/j;->NOOP_FILTER:Lorg/littleshoot/proxy/j;

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    goto :goto_0

    :cond_1
    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->h:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto :goto_1

    :cond_2
    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->c(Lio/netty/handler/codec/http/z;)Z

    move-result v0

    if-eqz v0, :cond_4

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->h(Lio/netty/handler/codec/http/z;)Z

    move-result v0

    if-eqz v0, :cond_3

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto :goto_1

    :cond_3
    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->h:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto :goto_1

    :cond_4
    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->j(Lio/netty/handler/codec/http/z;)Ljava/lang/String;

    move-result-object v2

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Ensuring that hostAndPort are available in {}"

    new-array v3, v6, [Ljava/lang/Object;

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v4

    aput-object v4, v3, v7

    invoke-virtual {v0, v1, v3}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    if-eqz v2, :cond_5

    invoke-static {v2}, Lorg/apache/commons/b/a;->b(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_7

    :cond_5
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "No host and port found in {}"

    new-array v2, v6, [Ljava/lang/Object;

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v3

    aput-object v3, v2, v7

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->a(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->g(Lio/netty/handler/codec/http/z;)Z

    move-result v0

    if-eqz v0, :cond_6

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto :goto_1

    :cond_6
    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->h:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto :goto_1

    :cond_7
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Finding ProxyToServerConnection for: {}"

    new-array v3, v6, [Ljava/lang/Object;

    aput-object v2, v3, v7

    invoke-virtual {v0, v1, v3}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->g()Z

    move-result v0

    if-nez v0, :cond_8

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->j()Z

    move-result v0

    if-eqz v0, :cond_9

    :cond_8
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    :goto_2
    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->c(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-eqz v0, :cond_a

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Not reusing existing ProxyToServerConnection because request is a CONNECT for: {}"

    new-array v3, v6, [Ljava/lang/Object;

    aput-object v2, v3, v7

    invoke-virtual {v0, v1, v3}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    move v0, v6

    :goto_3
    if-eqz v0, :cond_e

    :try_start_0
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    iget-object v3, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    iget-object v5, p0, Lorg/littleshoot/proxy/impl/b;->w:Lio/netty/handler/a/c;

    move-object v1, p0

    move-object v4, p1

    invoke-static/range {v0 .. v5}, Lorg/littleshoot/proxy/impl/i;->a(Lorg/littleshoot/proxy/impl/e;Lorg/littleshoot/proxy/impl/b;Ljava/lang/String;Lorg/littleshoot/proxy/i;Lio/netty/handler/codec/http/z;Lio/netty/handler/a/c;)Lorg/littleshoot/proxy/impl/i;

    move-result-object v0

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    if-nez v0, :cond_c

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Unable to create server connection, probably no chained proxies available"

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->g(Lio/netty/handler/codec/http/z;)Z

    move-result v0

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->q()V

    if-eqz v0, :cond_b

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;
    :try_end_0
    .catch Ljava/net/UnknownHostException; {:try_start_0 .. :try_end_0} :catch_0

    goto/16 :goto_1

    :cond_9
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->n:Ljava/util/Map;

    invoke-interface {v0, v2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/littleshoot/proxy/impl/i;

    goto :goto_2

    :cond_a
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    if-nez v0, :cond_13

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Didn\'t find existing ProxyToServerConnection for: {}"

    new-array v3, v6, [Ljava/lang/Object;

    aput-object v2, v3, v7

    invoke-virtual {v0, v1, v3}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    move v0, v6

    goto :goto_3

    :cond_b
    :try_start_1
    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->h:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto/16 :goto_1

    :cond_c
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->n:Ljava/util/Map;

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    invoke-interface {v0, v2, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_1
    .catch Ljava/net/UnknownHostException; {:try_start_1 .. :try_end_1} :catch_0

    :goto_4
    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->f(Lio/netty/handler/codec/http/z;)V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    invoke-interface {v0, p1}, Lorg/littleshoot/proxy/i;->proxyToServerRequest(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/ac;

    move-result-object v0

    if-eqz v0, :cond_10

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v2, "Responding to client with short-circuit response from filter: {}"

    new-array v3, v6, [Ljava/lang/Object;

    aput-object v0, v3, v7

    invoke-virtual {v1, v2, v3}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->c(Lio/netty/handler/codec/http/ac;)Z

    move-result v0

    if-eqz v0, :cond_f

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto/16 :goto_1

    :catch_0
    move-exception v0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Bad Host {}"

    new-array v2, v6, [Ljava/lang/Object;

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v3

    aput-object v3, v2, v7

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->b(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->g(Lio/netty/handler/codec/http/z;)Z

    move-result v0

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->q()V

    if-eqz v0, :cond_d

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto/16 :goto_1

    :cond_d
    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->h:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto/16 :goto_1

    :cond_e
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Reusing existing server connection: {}"

    new-array v2, v6, [Ljava/lang/Object;

    iget-object v3, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    aput-object v3, v2, v7

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->q:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    goto :goto_4

    :cond_f
    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->h:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto/16 :goto_1

    :cond_10
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Writing request to ProxyToServerConnection"

    new-array v2, v7, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    invoke-virtual {v0, p1, v1}, Lorg/littleshoot/proxy/impl/i;->a(Ljava/lang/Object;Lorg/littleshoot/proxy/i;)V

    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->c(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-eqz v0, :cond_11

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->c:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto/16 :goto_1

    :cond_11
    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->b(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-eqz v0, :cond_12

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->g:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto/16 :goto_1

    :cond_12
    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto/16 :goto_1

    :cond_13
    move v0, v7

    goto/16 :goto_3
.end method

.method private b(Lio/netty/handler/codec/http/ac;)V
    .locals 2

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/e;->e()Z

    move-result v0

    if-nez v0, :cond_0

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->c(Lio/netty/handler/codec/http/s;)V

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->d(Lio/netty/handler/codec/http/s;)V

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v1}, Lorg/littleshoot/proxy/impl/e;->p()Ljava/lang/String;

    move-result-object v1

    invoke-static {p1, v1}, Lorg/littleshoot/proxy/impl/j;->a(Lio/netty/handler/codec/http/t;Ljava/lang/String;)V

    const-string v1, "Date"

    invoke-virtual {v0, v1}, Lio/netty/handler/codec/http/s;->d(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    new-instance v0, Ljava/util/Date;

    invoke-direct {v0}, Ljava/util/Date;-><init>()V

    invoke-static {p1, v0}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;Ljava/util/Date;)V

    :cond_0
    return-void
.end method

.method private b(Lio/netty/handler/codec/http/s;)V
    .locals 2

    const-string v0, "Proxy-Connection"

    invoke-virtual {p1, v0}, Lio/netty/handler/codec/http/s;->d(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {p1, v0}, Lio/netty/handler/codec/http/s;->b(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1, v0}, Lio/netty/handler/codec/http/s;->a(Ljava/lang/String;)Lio/netty/handler/codec/http/s;

    const-string v0, "Connection"

    invoke-virtual {p1, v0, v1}, Lio/netty/handler/codec/http/s;->b(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/s;

    :cond_0
    return-void
.end method

.method private b(Lio/netty/handler/codec/http/z;Lio/netty/handler/codec/http/ac;Lio/netty/handler/codec/http/w;)Z
    .locals 5

    const/4 v2, 0x1

    const/4 v1, 0x0

    invoke-static {p2}, Lorg/littleshoot/proxy/impl/j;->b(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-eqz v0, :cond_2

    if-eqz p3, :cond_2

    invoke-static {p3}, Lorg/littleshoot/proxy/impl/j;->a(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-nez v0, :cond_1

    const/4 v0, 0x0

    if-eqz p1, :cond_0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v0

    :cond_0
    iget-object v3, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v4, "Not closing server connection on middle chunk for {}"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object v0, v2, v1

    invoke-virtual {v3, v4, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    move v0, v1

    :goto_0
    return v0

    :cond_1
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v3, "Handling last chunk. Using normal server connection closing rules."

    new-array v4, v1, [Ljava/lang/Object;

    invoke-virtual {v0, v3, v4}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    :cond_2
    invoke-static {p2}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;)Z

    move-result v0

    if-nez v0, :cond_3

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v3, "Closing server connection since response is not keep alive: {}"

    new-array v4, v2, [Ljava/lang/Object;

    aput-object p2, v4, v1

    invoke-virtual {v0, v3, v4}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    move v0, v2

    goto :goto_0

    :cond_3
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v3, "Not closing server connection for response: {}"

    new-array v2, v2, [Ljava/lang/Object;

    aput-object p2, v2, v1

    invoke-virtual {v0, v3, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    move v0, v1

    goto :goto_0
.end method

.method private c(Lio/netty/handler/codec/http/s;)V
    .locals 5

    const-string v0, "Connection"

    invoke-virtual {p1, v0}, Lio/netty/handler/codec/http/s;->d(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    const-string v0, "Connection"

    invoke-virtual {p1, v0}, Lio/netty/handler/codec/http/s;->c(Ljava/lang/String;)Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_2

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-static {v0}, Lorg/littleshoot/proxy/impl/j;->d(Ljava/lang/String;)Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :cond_1
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    sget-object v3, Lorg/littleshoot/proxy/impl/b;->l:Ljava/lang/String;

    sget-object v4, Ljava/util/Locale;->US:Ljava/util/Locale;

    invoke-virtual {v0, v4}, Ljava/lang/String;->toLowerCase(Ljava/util/Locale;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_1

    invoke-virtual {p1, v0}, Lio/netty/handler/codec/http/s;->a(Ljava/lang/String;)Lio/netty/handler/codec/http/s;

    goto :goto_0

    :cond_2
    return-void
.end method

.method private c(Lio/netty/handler/codec/http/ac;)Z
    .locals 4

    const/4 v1, 0x0

    const/4 v0, 0x0

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->x:Lio/netty/handler/codec/http/z;

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    invoke-interface {v0, p1}, Lorg/littleshoot/proxy/i;->proxyToClientResponse(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/w;

    move-result-object v0

    check-cast v0, Lio/netty/handler/codec/http/ac;

    if-nez v0, :cond_0

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->l()Lio/netty/util/concurrent/n;

    move v0, v1

    :goto_0
    return v0

    :cond_0
    invoke-static {p1}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;)Z

    move-result v0

    invoke-interface {p1}, Lio/netty/handler/codec/http/ac;->h()Lio/netty/handler/codec/http/af;

    move-result-object v2

    invoke-virtual {v2}, Lio/netty/handler/codec/http/af;->a()I

    move-result v2

    sget-object v3, Lio/netty/handler/codec/http/af;->U:Lio/netty/handler/codec/http/af;

    invoke-virtual {v3}, Lio/netty/handler/codec/http/af;->a()I

    move-result v3

    if-eq v2, v3, :cond_1

    sget-object v3, Lio/netty/handler/codec/http/af;->W:Lio/netty/handler/codec/http/af;

    invoke-virtual {v3}, Lio/netty/handler/codec/http/af;->a()I

    move-result v3

    if-eq v2, v3, :cond_1

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->b(Lio/netty/handler/codec/http/ac;)V

    :cond_1
    invoke-static {p1, v0}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;Z)V

    invoke-virtual {p0, p1}, Lorg/littleshoot/proxy/impl/b;->c(Ljava/lang/Object;)V

    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->a(Lio/netty/handler/codec/http/w;)Z

    move-result v0

    if-eqz v0, :cond_2

    invoke-direct {p0}, Lorg/littleshoot/proxy/impl/b;->t()V

    :cond_2
    invoke-static {p1}, Lio/netty/handler/codec/http/s;->a(Lio/netty/handler/codec/http/t;)Z

    move-result v0

    if-nez v0, :cond_3

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->l()Lio/netty/util/concurrent/n;

    move v0, v1

    goto :goto_0

    :cond_3
    const/4 v0, 0x1

    goto :goto_0
.end method

.method private c(Lio/netty/handler/codec/http/z;)Z
    .locals 3

    const/4 v0, 0x0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->l()Lio/netty/handler/codec/http/v;

    move-result-object v1

    sget-object v2, Lio/netty/handler/codec/http/v;->i:Lio/netty/handler/codec/http/v;

    if-eq v1, v2, :cond_0

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->g()Z

    move-result v1

    if-eqz v1, :cond_1

    :cond_0
    :goto_0
    return v0

    :cond_1
    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v1

    sget-object v2, Lorg/littleshoot/proxy/impl/b;->m:Ljava/util/regex/Pattern;

    invoke-virtual {v2, v1}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v1

    invoke-virtual {v1}, Ljava/util/regex/Matcher;->matches()Z

    move-result v1

    if-nez v1, :cond_0

    const/4 v0, 0x1

    goto :goto_0
.end method

.method private d(Lio/netty/handler/codec/http/s;)V
    .locals 3

    invoke-virtual {p1}, Lio/netty/handler/codec/http/s;->d()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_0
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-static {v0}, Lorg/littleshoot/proxy/impl/j;->c(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    invoke-virtual {p1, v0}, Lio/netty/handler/codec/http/s;->a(Ljava/lang/String;)Lio/netty/handler/codec/http/s;

    goto :goto_0

    :cond_1
    return-void
.end method

.method private d(Lio/netty/handler/codec/http/z;)Z
    .locals 6

    const/4 v2, 0x1

    const/4 v1, 0x0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->v:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    move-result v0

    if-eqz v0, :cond_0

    move v0, v1

    :goto_0
    return v0

    :cond_0
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/e;->m()Lorg/littleshoot/proxy/p;

    move-result-object v3

    if-nez v3, :cond_1

    move v0, v1

    goto :goto_0

    :cond_1
    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    const-string v4, "Proxy-Authorization"

    invoke-virtual {v0, v4}, Lio/netty/handler/codec/http/s;->d(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_2

    invoke-interface {v3}, Lorg/littleshoot/proxy/p;->a()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->a(Ljava/lang/String;)V

    move v0, v2

    goto :goto_0

    :cond_2
    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    const-string v4, "Proxy-Authorization"

    invoke-virtual {v0, v4}, Lio/netty/handler/codec/http/s;->c(Ljava/lang/String;)Ljava/util/List;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    const-string v4, "Basic "

    invoke-static {v0, v4}, Lorg/apache/commons/b/a;->b(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v0

    const-string v4, "UTF-8"

    invoke-static {v4}, Ljava/nio/charset/Charset;->forName(Ljava/lang/String;)Ljava/nio/charset/Charset;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/lang/String;->getBytes(Ljava/nio/charset/Charset;)[B

    move-result-object v0

    invoke-static {v0}, Lorg/apache/commons/a/a/a;->a([B)[B

    move-result-object v0

    new-instance v4, Ljava/lang/String;

    const-string v5, "UTF-8"

    invoke-static {v5}, Ljava/nio/charset/Charset;->forName(Ljava/lang/String;)Ljava/nio/charset/Charset;

    move-result-object v5

    invoke-direct {v4, v0, v5}, Ljava/lang/String;-><init>([BLjava/nio/charset/Charset;)V

    const-string v0, ":"

    invoke-static {v4, v0}, Lorg/apache/commons/b/a;->a(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string v5, ":"

    invoke-static {v4, v5}, Lorg/apache/commons/b/a;->b(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-interface {v3, v0, v4}, Lorg/littleshoot/proxy/p;->a(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_3

    invoke-interface {v3}, Lorg/littleshoot/proxy/p;->a()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->a(Ljava/lang/String;)V

    move v0, v2

    goto :goto_0

    :cond_3
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v3, "Got proxy authorization!"

    new-array v4, v1, [Ljava/lang/Object;

    invoke-virtual {v0, v3, v4}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    const-string v3, "Proxy-Authorization"

    invoke-virtual {v0, v3}, Lio/netty/handler/codec/http/s;->b(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    iget-object v3, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    new-array v4, v1, [Ljava/lang/Object;

    invoke-virtual {v3, v0, v4}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    const-string v3, "Proxy-Authorization"

    invoke-virtual {v0, v3}, Lio/netty/handler/codec/http/s;->a(Ljava/lang/String;)Lio/netty/handler/codec/http/s;

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->v:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v0, v2}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    move v0, v1

    goto/16 :goto_0
.end method

.method private e(Lio/netty/handler/codec/http/z;)Lio/netty/handler/codec/http/z;
    .locals 4

    instance-of v0, p1, Lio/netty/handler/codec/http/l;

    if-eqz v0, :cond_0

    check-cast p1, Lio/netty/handler/codec/http/l;

    invoke-interface {p1}, Lio/netty/handler/codec/http/l;->d()Lio/netty/handler/codec/http/l;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    new-instance v0, Lio/netty/handler/codec/http/h;

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->k()Lio/netty/handler/codec/http/ag;

    move-result-object v1

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->l()Lio/netty/handler/codec/http/v;

    move-result-object v2

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v0, v1, v2, v3}, Lio/netty/handler/codec/http/h;-><init>(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/v;Ljava/lang/String;)V

    invoke-interface {v0}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v1

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v2

    invoke-virtual {v1, v2}, Lio/netty/handler/codec/http/s;->b(Lio/netty/handler/codec/http/s;)Lio/netty/handler/codec/http/s;

    goto :goto_0
.end method

.method private e(Lorg/littleshoot/proxy/impl/i;)V
    .locals 3

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Forcing disconnect"

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-virtual {p1}, Lorg/littleshoot/proxy/impl/i;->l()Lio/netty/util/concurrent/n;

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->l()Lio/netty/util/concurrent/n;

    return-void
.end method

.method private f(Lio/netty/handler/codec/http/z;)V
    .locals 6

    const/4 v5, 0x0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/i;->k()Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Modifying request for proxy chaining"

    new-array v2, v5, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lorg/littleshoot/proxy/impl/j;->a(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    iget-object v2, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v3, "Stripped host from uri: {}    yielding: {}"

    const/4 v4, 0x2

    new-array v4, v4, [Ljava/lang/Object;

    aput-object v0, v4, v5

    const/4 v0, 0x1

    aput-object v1, v4, v0

    invoke-virtual {v2, v3, v4}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-interface {p1, v1}, Lio/netty/handler/codec/http/z;->b(Ljava/lang/String;)Lio/netty/handler/codec/http/z;

    :cond_0
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/e;->e()Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Modifying request headers for proxying"

    new-array v2, v5, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v0

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/s;)V

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->b(Lio/netty/handler/codec/http/s;)V

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->c(Lio/netty/handler/codec/http/s;)V

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->d(Lio/netty/handler/codec/http/s;)V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/e;->p()Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0}, Lorg/littleshoot/proxy/impl/j;->a(Lio/netty/handler/codec/http/t;Ljava/lang/String;)V

    :cond_1
    return-void
.end method

.method private g(Lio/netty/handler/codec/http/z;)Z
    .locals 3

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Bad Gateway: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sget-object v1, Lio/netty/handler/codec/http/ag;->b:Lio/netty/handler/codec/http/ag;

    sget-object v2, Lio/netty/handler/codec/http/af;->U:Lio/netty/handler/codec/http/af;

    invoke-direct {p0, v1, v2, v0}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;Ljava/lang/String;)Lio/netty/handler/codec/http/c;

    move-result-object v0

    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->b(Lio/netty/handler/codec/http/z;)Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {v0}, Lio/netty/handler/codec/http/c;->a()Lio/netty/buffer/h;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/buffer/h;->d()Lio/netty/buffer/h;

    :cond_0
    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->c(Lio/netty/handler/codec/http/ac;)Z

    move-result v0

    return v0
.end method

.method private h(Lio/netty/handler/codec/http/z;)Z
    .locals 3

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Bad Request to URI: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->m()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    sget-object v1, Lio/netty/handler/codec/http/ag;->b:Lio/netty/handler/codec/http/ag;

    sget-object v2, Lio/netty/handler/codec/http/af;->s:Lio/netty/handler/codec/http/af;

    invoke-direct {p0, v1, v2, v0}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;Ljava/lang/String;)Lio/netty/handler/codec/http/c;

    move-result-object v0

    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->b(Lio/netty/handler/codec/http/z;)Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {v0}, Lio/netty/handler/codec/http/c;->a()Lio/netty/buffer/h;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/buffer/h;->d()Lio/netty/buffer/h;

    :cond_0
    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->c(Lio/netty/handler/codec/http/ac;)Z

    move-result v0

    return v0
.end method

.method private i(Lio/netty/handler/codec/http/z;)Z
    .locals 3

    const-string v0, "Gateway Timeout"

    sget-object v1, Lio/netty/handler/codec/http/ag;->b:Lio/netty/handler/codec/http/ag;

    sget-object v2, Lio/netty/handler/codec/http/af;->W:Lio/netty/handler/codec/http/af;

    invoke-direct {p0, v1, v2, v0}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/ag;Lio/netty/handler/codec/http/af;Ljava/lang/String;)Lio/netty/handler/codec/http/c;

    move-result-object v0

    if-eqz p1, :cond_0

    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->b(Lio/netty/handler/codec/http/z;)Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {v0}, Lio/netty/handler/codec/http/c;->a()Lio/netty/buffer/h;

    move-result-object v1

    invoke-virtual {v1}, Lio/netty/buffer/h;->d()Lio/netty/buffer/h;

    :cond_0
    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->c(Lio/netty/handler/codec/http/ac;)Z

    move-result v0

    return v0
.end method

.method private j(Lio/netty/handler/codec/http/z;)Ljava/lang/String;
    .locals 3

    invoke-static {p1}, Lorg/littleshoot/proxy/impl/j;->a(Lio/netty/handler/codec/http/z;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lorg/apache/commons/b/a;->b(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-interface {p1}, Lio/netty/handler/codec/http/z;->j()Lio/netty/handler/codec/http/s;

    move-result-object v1

    const-string v2, "Host"

    invoke-virtual {v1, v2}, Lio/netty/handler/codec/http/s;->c(Ljava/lang/String;)Ljava/util/List;

    move-result-object v1

    if-eqz v1, :cond_0

    invoke-interface {v1}, Ljava/util/List;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_0

    const/4 v0, 0x0

    invoke-interface {v1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    :cond_0
    return-object v0
.end method

.method static synthetic k()Lio/netty/handler/codec/http/af;
    .locals 1

    sget-object v0, Lorg/littleshoot/proxy/impl/b;->k:Lio/netty/handler/codec/http/af;

    return-object v0
.end method

.method private s()V
    .locals 3

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->o:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->decrementAndGet()I

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "All servers have finished attempting to connect, resuming reading from client."

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->q()V

    :cond_0
    return-void
.end method

.method private t()V
    .locals 1

    sget-object v0, Lio/netty/buffer/ak;->c:Lio/netty/buffer/h;

    invoke-virtual {p0, v0}, Lorg/littleshoot/proxy/impl/b;->c(Ljava/lang/Object;)V

    return-void
.end method

.method private u()V
    .locals 3

    :try_start_0
    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->h()Ljava/net/InetSocketAddress;

    move-result-object v1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/e;->o()Ljava/util/Collection;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/littleshoot/proxy/a;

    invoke-interface {v0, v1}, Lorg/littleshoot/proxy/a;->a(Ljava/net/InetSocketAddress;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v2, "Unable to recordClientConnected"

    invoke-virtual {v1, v2, v0}, Lorg/littleshoot/proxy/impl/g;->a(Ljava/lang/String;Ljava/lang/Throwable;)V

    :cond_0
    return-void
.end method

.method private v()V
    .locals 4

    :try_start_0
    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->h()Ljava/net/InetSocketAddress;

    move-result-object v1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/e;->o()Ljava/util/Collection;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/littleshoot/proxy/a;

    iget-object v3, p0, Lorg/littleshoot/proxy/impl/b;->t:Ljavax/net/ssl/SSLSession;

    invoke-interface {v0, v1, v3}, Lorg/littleshoot/proxy/a;->a(Ljava/net/InetSocketAddress;Ljavax/net/ssl/SSLSession;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v2, "Unable to recorClientSSLHandshakeSucceeded"

    invoke-virtual {v1, v2, v0}, Lorg/littleshoot/proxy/impl/g;->a(Ljava/lang/String;Ljava/lang/Throwable;)V

    :cond_0
    return-void
.end method

.method private w()V
    .locals 4

    :try_start_0
    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->h()Ljava/net/InetSocketAddress;

    move-result-object v1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->c:Lorg/littleshoot/proxy/impl/e;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/e;->o()Ljava/util/Collection;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/littleshoot/proxy/a;

    iget-object v3, p0, Lorg/littleshoot/proxy/impl/b;->t:Ljavax/net/ssl/SSLSession;

    invoke-interface {v0, v1, v3}, Lorg/littleshoot/proxy/a;->b(Ljava/net/InetSocketAddress;Ljavax/net/ssl/SSLSession;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v2, "Unable to recordClientDisconnected"

    invoke-virtual {v1, v2, v0}, Lorg/littleshoot/proxy/impl/g;->a(Ljava/lang/String;Ljava/lang/Throwable;)V

    :cond_0
    return-void
.end method

.method private x()Lorg/littleshoot/proxy/f;
    .locals 2

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    if-eqz v0, :cond_0

    new-instance v0, Lorg/littleshoot/proxy/g;

    iget-object v1, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    invoke-direct {v0, p0, v1}, Lorg/littleshoot/proxy/g;-><init>(Lorg/littleshoot/proxy/impl/b;Lorg/littleshoot/proxy/impl/i;)V

    :goto_0
    return-object v0

    :cond_0
    new-instance v0, Lorg/littleshoot/proxy/f;

    invoke-direct {v0, p0}, Lorg/littleshoot/proxy/f;-><init>(Lorg/littleshoot/proxy/impl/b;)V

    goto :goto_0
.end method


# virtual methods
.method protected bridge synthetic a(Lio/netty/handler/codec/http/w;)Lorg/littleshoot/proxy/impl/ConnectionState;
    .locals 1

    check-cast p1, Lio/netty/handler/codec/http/z;

    invoke-virtual {p0, p1}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/z;)Lorg/littleshoot/proxy/impl/ConnectionState;

    move-result-object v0

    return-object v0
.end method

.method protected a(Lio/netty/handler/codec/http/z;)Lorg/littleshoot/proxy/impl/ConnectionState;
    .locals 4

    const/4 v3, 0x0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Got request: {}"

    const/4 v2, 0x1

    new-array v2, v2, [Ljava/lang/Object;

    aput-object p1, v2, v3

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->d(Lio/netty/handler/codec/http/z;)Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Not authenticated!!"

    new-array v2, v3, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->e:Lorg/littleshoot/proxy/impl/ConnectionState;

    :goto_0
    return-object v0

    :cond_0
    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->b(Lio/netty/handler/codec/http/z;)Lorg/littleshoot/proxy/impl/ConnectionState;

    move-result-object v0

    goto :goto_0
.end method

.method protected a(Lio/netty/buffer/h;)V
    .locals 1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    invoke-virtual {v0, p1}, Lorg/littleshoot/proxy/impl/i;->c(Ljava/lang/Object;)V

    return-void
.end method

.method protected a(Lio/netty/handler/codec/http/n;)V
    .locals 1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    invoke-interface {v0, p1}, Lorg/littleshoot/proxy/i;->clientToProxyRequest(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/ac;

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    invoke-interface {v0, p1}, Lorg/littleshoot/proxy/i;->proxyToServerRequest(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/ac;

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    invoke-virtual {v0, p1}, Lorg/littleshoot/proxy/impl/i;->c(Ljava/lang/Object;)V

    return-void
.end method

.method protected a(Ljava/lang/Throwable;)V
    .locals 3

    :try_start_0
    instance-of v0, p1, Ljava/io/IOException;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "An IOException occurred on ClientToProxyConnection: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {p1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->b(Ljava/lang/String;[Ljava/lang/Object;)V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "An IOException occurred on ClientToProxyConnection"

    invoke-virtual {v0, v1, p1}, Lorg/littleshoot/proxy/impl/g;->d(Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :goto_0
    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->l()Lio/netty/util/concurrent/n;

    return-void

    :cond_0
    :try_start_1
    instance-of v0, p1, Ljava/util/concurrent/RejectedExecutionException;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "An executor rejected a read or write operation on the ClientToProxyConnection (this is normal if the proxy is shutting down). Message: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {p1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->b(Ljava/lang/String;[Ljava/lang/Object;)V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "A RejectedExecutionException occurred on ClientToProxyConnection"

    invoke-virtual {v0, v1, p1}, Lorg/littleshoot/proxy/impl/g;->d(Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception v0

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->l()Lio/netty/util/concurrent/n;

    throw v0

    :cond_1
    :try_start_2
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Caught an exception on ClientToProxyConnection"

    invoke-virtual {v0, v1, p1}, Lorg/littleshoot/proxy/impl/g;->a(Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0
.end method

.method protected a(Lorg/littleshoot/proxy/impl/i;)V
    .locals 1

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->p()V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->o:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    return-void
.end method

.method a(Lorg/littleshoot/proxy/impl/i;Lorg/littleshoot/proxy/i;Lio/netty/handler/codec/http/z;Lio/netty/handler/codec/http/ac;Lio/netty/handler/codec/http/w;)V
    .locals 3

    const/4 v0, 0x0

    iput-object v0, p0, Lorg/littleshoot/proxy/impl/b;->x:Lio/netty/handler/codec/http/z;

    invoke-interface {p2, p5}, Lorg/littleshoot/proxy/i;->serverToProxyResponse(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/w;

    move-result-object v1

    if-nez v1, :cond_0

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->e(Lorg/littleshoot/proxy/impl/i;)V

    :goto_0
    return-void

    :cond_0
    instance-of v0, v1, Lio/netty/handler/codec/http/ac;

    if-eqz v0, :cond_3

    move-object v0, v1

    check-cast v0, Lio/netty/handler/codec/http/ac;

    invoke-static {p3}, Lorg/littleshoot/proxy/impl/j;->c(Lio/netty/handler/codec/http/z;)Z

    move-result v2

    if-nez v2, :cond_2

    invoke-static {v0}, Lorg/littleshoot/proxy/impl/j;->b(Lio/netty/handler/codec/http/ac;)Z

    move-result v2

    if-nez v2, :cond_2

    instance-of v2, v0, Lio/netty/handler/codec/http/m;

    if-nez v2, :cond_1

    invoke-static {v0}, Lorg/littleshoot/proxy/impl/j;->c(Lio/netty/handler/codec/http/ac;)Lio/netty/handler/codec/http/ac;

    move-result-object v0

    move-object v1, v0

    :cond_1
    invoke-static {v0}, Lio/netty/handler/codec/http/s;->e(Lio/netty/handler/codec/http/t;)V

    :cond_2
    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/ac;)V

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->b(Lio/netty/handler/codec/http/ac;)V

    :cond_3
    invoke-interface {p2, v1}, Lorg/littleshoot/proxy/i;->proxyToClientResponse(Lio/netty/handler/codec/http/w;)Lio/netty/handler/codec/http/w;

    move-result-object v0

    if-nez v0, :cond_4

    invoke-direct {p0, p1}, Lorg/littleshoot/proxy/impl/b;->e(Lorg/littleshoot/proxy/impl/i;)V

    goto :goto_0

    :cond_4
    invoke-virtual {p0, v0}, Lorg/littleshoot/proxy/impl/b;->c(Ljava/lang/Object;)V

    invoke-static {v0}, Lorg/littleshoot/proxy/impl/j;->a(Lio/netty/handler/codec/http/w;)Z

    move-result v1

    if-eqz v1, :cond_5

    invoke-direct {p0}, Lorg/littleshoot/proxy/impl/b;->t()V

    :cond_5
    invoke-direct {p0, p1, p3, p4, v0}, Lorg/littleshoot/proxy/impl/b;->a(Lorg/littleshoot/proxy/impl/i;Lio/netty/handler/codec/http/z;Lio/netty/handler/codec/http/ac;Lio/netty/handler/codec/http/w;)V

    goto :goto_0
.end method

.method protected a(Lorg/littleshoot/proxy/impl/i;Z)V
    .locals 5

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Connection to server succeeded: {}"

    const/4 v2, 0x1

    new-array v2, v2, [Ljava/lang/Object;

    const/4 v3, 0x0

    invoke-virtual {p1}, Lorg/littleshoot/proxy/impl/i;->g()Ljava/net/InetSocketAddress;

    move-result-object v4

    aput-object v4, v2, v3

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-direct {p0}, Lorg/littleshoot/proxy/impl/b;->s()V

    if-eqz p2, :cond_0

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->o()Lorg/littleshoot/proxy/impl/ConnectionState;

    move-result-object v0

    :goto_0
    invoke-virtual {p0, v0}, Lorg/littleshoot/proxy/impl/b;->b(Lorg/littleshoot/proxy/impl/ConnectionState;)V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->p:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    return-void

    :cond_0
    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;

    goto :goto_0
.end method

.method protected a(Z)V
    .locals 0

    iput-boolean p1, p0, Lorg/littleshoot/proxy/impl/b;->u:Z

    return-void
.end method

.method protected a(Lorg/littleshoot/proxy/impl/i;Lorg/littleshoot/proxy/impl/ConnectionState;Ljava/lang/Throwable;)Z
    .locals 7

    const/4 v0, 0x1

    const/4 v1, 0x0

    invoke-direct {p0}, Lorg/littleshoot/proxy/impl/b;->s()V

    invoke-virtual {p1}, Lorg/littleshoot/proxy/impl/i;->u()Lio/netty/handler/codec/http/z;

    move-result-object v2

    :try_start_0
    invoke-virtual {p1, p3}, Lorg/littleshoot/proxy/impl/i;->b(Ljava/lang/Throwable;)Z

    move-result v3

    if-eqz v3, :cond_0

    iget-object v3, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v4, "Failed to connect to upstream server or chained proxy. Retrying connection. Last state before failure: {}"

    const/4 v5, 0x2

    new-array v5, v5, [Ljava/lang/Object;

    const/4 v6, 0x0

    aput-object p2, v5, v6

    const/4 v6, 0x1

    aput-object p3, v5, v6

    invoke-virtual {v3, v4, v5}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    :goto_0
    return v0

    :cond_0
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v3, "Connection to upstream server or chained proxy failed: {}.  Last state before failure: {}"

    const/4 v4, 0x3

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    invoke-virtual {p1}, Lorg/littleshoot/proxy/impl/i;->g()Ljava/net/InetSocketAddress;

    move-result-object v6

    aput-object v6, v4, v5

    const/4 v5, 0x1

    aput-object p2, v4, v5

    const/4 v5, 0x2

    aput-object p3, v4, v5

    invoke-virtual {v0, v3, v4}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-direct {p0, v2, p1}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/z;Lorg/littleshoot/proxy/impl/i;)V
    :try_end_0
    .catch Ljava/net/UnknownHostException; {:try_start_0 .. :try_end_0} :catch_0

    move v0, v1

    goto :goto_0

    :catch_0
    move-exception v0

    invoke-direct {p0, v2, p1}, Lorg/littleshoot/proxy/impl/b;->a(Lio/netty/handler/codec/http/z;Lorg/littleshoot/proxy/impl/i;)V

    move v0, v1

    goto :goto_0
.end method

.method protected b()V
    .locals 1

    invoke-super {p0}, Lorg/littleshoot/proxy/impl/f;->b()V

    sget-object v0, Lorg/littleshoot/proxy/impl/ConnectionState;->f:Lorg/littleshoot/proxy/impl/ConnectionState;

    invoke-virtual {p0, v0}, Lorg/littleshoot/proxy/impl/b;->b(Lorg/littleshoot/proxy/impl/ConnectionState;)V

    invoke-direct {p0}, Lorg/littleshoot/proxy/impl/b;->u()V

    return-void
.end method

.method protected b(Lorg/littleshoot/proxy/impl/i;)V
    .locals 1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->p:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->decrementAndGet()I

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->j()Z

    move-result v0

    if-nez v0, :cond_0

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->g()Z

    move-result v0

    if-eqz v0, :cond_1

    :cond_0
    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->l()Lio/netty/util/concurrent/n;

    :cond_1
    return-void
.end method

.method protected c()V
    .locals 8

    const/4 v2, 0x1

    const/4 v1, 0x0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    if-eqz v0, :cond_0

    iget-wide v4, p0, Lorg/littleshoot/proxy/impl/b;->h:J

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    iget-wide v6, v0, Lorg/littleshoot/proxy/impl/i;->h:J

    cmp-long v0, v4, v6

    if-lez v0, :cond_1

    :cond_0
    move v0, v2

    :goto_0
    if-eqz v0, :cond_2

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v3, "Server timed out: {}"

    new-array v2, v2, [Ljava/lang/Object;

    iget-object v4, p0, Lorg/littleshoot/proxy/impl/b;->r:Lorg/littleshoot/proxy/impl/i;

    aput-object v4, v2, v1

    invoke-virtual {v0, v3, v2}, Lorg/littleshoot/proxy/impl/g;->c(Ljava/lang/String;[Ljava/lang/Object;)V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->s:Lorg/littleshoot/proxy/i;

    invoke-interface {v0}, Lorg/littleshoot/proxy/i;->serverToProxyResponseTimedOut()V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->x:Lio/netty/handler/codec/http/z;

    invoke-direct {p0, v0}, Lorg/littleshoot/proxy/impl/b;->i(Lio/netty/handler/codec/http/z;)Z

    :goto_1
    return-void

    :cond_1
    move v0, v1

    goto :goto_0

    :cond_2
    invoke-super {p0}, Lorg/littleshoot/proxy/impl/f;->c()V

    goto :goto_1
.end method

.method protected declared-synchronized c(Lorg/littleshoot/proxy/impl/i;)V
    .locals 3

    monitor-enter p0

    :try_start_0
    invoke-virtual {p1}, Lorg/littleshoot/proxy/impl/i;->m()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "Connection to server became saturated, stopping reading"

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->b(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->p()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method protected d()V
    .locals 2

    invoke-super {p0}, Lorg/littleshoot/proxy/impl/f;->d()V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->n:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->values()Ljava/util/Collection;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/littleshoot/proxy/impl/i;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/i;->l()Lio/netty/util/concurrent/n;

    goto :goto_0

    :cond_0
    invoke-direct {p0}, Lorg/littleshoot/proxy/impl/b;->w()V

    return-void
.end method

.method protected declared-synchronized d(Lorg/littleshoot/proxy/impl/i;)V
    .locals 3

    const/4 v1, 0x0

    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->n:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->values()Ljava/util/Collection;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :cond_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_2

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/littleshoot/proxy/impl/i;

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/i;->m()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    if-nez v0, :cond_1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->b:Lorg/littleshoot/proxy/impl/g;

    const-string v1, "All server connections writeable, resuming reading"

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-virtual {v0, v1, v2}, Lorg/littleshoot/proxy/impl/g;->b(Ljava/lang/String;[Ljava/lang/Object;)V

    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->q()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_1
    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0

    :cond_2
    move v0, v1

    goto :goto_0
.end method

.method protected declared-synchronized e()V
    .locals 3

    monitor-enter p0

    :try_start_0
    invoke-super {p0}, Lorg/littleshoot/proxy/impl/f;->e()V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->n:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->values()Ljava/util/Collection;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/littleshoot/proxy/impl/i;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->m()Z

    move-result v2

    if-eqz v2, :cond_0

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/i;->p()V

    :cond_0
    monitor-exit v0

    goto :goto_0

    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :catchall_1
    move-exception v0

    monitor-exit p0

    throw v0

    :cond_1
    monitor-exit p0

    return-void
.end method

.method public bridge synthetic e(Lio/netty/channel/k;)V
    .locals 0

    invoke-super {p0, p1}, Lorg/littleshoot/proxy/impl/f;->e(Lio/netty/channel/k;)V

    return-void
.end method

.method protected declared-synchronized f()V
    .locals 3

    monitor-enter p0

    :try_start_0
    invoke-super {p0}, Lorg/littleshoot/proxy/impl/f;->f()V

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->n:Ljava/util/Map;

    invoke-interface {v0}, Ljava/util/Map;->values()Ljava/util/Collection;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/littleshoot/proxy/impl/i;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-virtual {p0}, Lorg/littleshoot/proxy/impl/b;->m()Z

    move-result v2

    if-nez v2, :cond_0

    invoke-virtual {v0}, Lorg/littleshoot/proxy/impl/i;->q()V

    :cond_0
    monitor-exit v0

    goto :goto_0

    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :catchall_1
    move-exception v0

    monitor-exit p0

    throw v0

    :cond_1
    monitor-exit p0

    return-void
.end method

.method public g()Z
    .locals 1

    iget-boolean v0, p0, Lorg/littleshoot/proxy/impl/b;->u:Z

    return v0
.end method

.method public h()Ljava/net/InetSocketAddress;
    .locals 1

    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->g:Lio/netty/channel/d;

    if-nez v0, :cond_0

    const/4 v0, 0x0

    :goto_0
    return-object v0

    :cond_0
    iget-object v0, p0, Lorg/littleshoot/proxy/impl/b;->g:Lio/netty/channel/d;

    invoke-interface {v0}, Lio/netty/channel/d;->g()Ljava/net/SocketAddress;

    move-result-object v0

    check-cast v0, Ljava/net/InetSocketAddress;

    goto :goto_0
.end method

.method public bridge synthetic h(Lio/netty/channel/k;)V
    .locals 0

    invoke-super {p0, p1}, Lorg/littleshoot/proxy/impl/f;->h(Lio/netty/channel/k;)V

    return-void
.end method

.method public bridge synthetic i()Ljavax/net/ssl/SSLEngine;
    .locals 1

    invoke-super {p0}, Lorg/littleshoot/proxy/impl/f;->i()Ljavax/net/ssl/SSLEngine;

    move-result-object v0

    return-object v0
.end method

.method public bridge synthetic j()Z
    .locals 1

    invoke-super {p0}, Lorg/littleshoot/proxy/impl/f;->j()Z

    move-result v0

    return v0
.end method
