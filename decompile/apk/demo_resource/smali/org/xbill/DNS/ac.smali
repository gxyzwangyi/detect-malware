.class public Lorg/xbill/DNS/ac;
.super Ljava/lang/Object;

# interfaces
.implements Lorg/xbill/DNS/w;


# static fields
.field private static h:Ljava/lang/String;

.field private static i:I


# instance fields
.field private a:Ljava/net/InetSocketAddress;

.field private b:Ljava/net/InetSocketAddress;

.field private c:Z

.field private d:Z

.field private e:Lorg/xbill/DNS/OPTRecord;

.field private f:Lorg/xbill/DNS/ae;

.field private g:J


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const-string v0, "localhost"

    sput-object v0, Lorg/xbill/DNS/ac;->h:Ljava/lang/String;

    const/4 v0, 0x0

    sput v0, Lorg/xbill/DNS/ac;->i:I

    return-void
.end method

.method public constructor <init>()V
    .locals 1

    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lorg/xbill/DNS/ac;-><init>(Ljava/lang/String;)V

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;)V
    .locals 3

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const-wide/16 v0, 0x2710

    iput-wide v0, p0, Lorg/xbill/DNS/ac;->g:J

    if-nez p1, :cond_0

    invoke-static {}, Lorg/xbill/DNS/x;->e()Lorg/xbill/DNS/x;

    move-result-object v0

    invoke-virtual {v0}, Lorg/xbill/DNS/x;->b()Ljava/lang/String;

    move-result-object p1

    if-nez p1, :cond_0

    sget-object p1, Lorg/xbill/DNS/ac;->h:Ljava/lang/String;

    :cond_0
    const-string v0, "0"

    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-static {}, Ljava/net/InetAddress;->getLocalHost()Ljava/net/InetAddress;

    move-result-object v0

    :goto_0
    new-instance v1, Ljava/net/InetSocketAddress;

    const/16 v2, 0x35

    invoke-direct {v1, v0, v2}, Ljava/net/InetSocketAddress;-><init>(Ljava/net/InetAddress;I)V

    iput-object v1, p0, Lorg/xbill/DNS/ac;->a:Ljava/net/InetSocketAddress;

    return-void

    :cond_1
    invoke-static {p1}, Ljava/net/InetAddress;->getByName(Ljava/lang/String;)Ljava/net/InetAddress;

    move-result-object v0

    goto :goto_0
.end method

.method private a([B)Lorg/xbill/DNS/o;
    .locals 2

    :try_start_0
    new-instance v0, Lorg/xbill/DNS/o;

    invoke-direct {v0, p1}, Lorg/xbill/DNS/o;-><init>([B)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    const-string v1, "verbose"

    invoke-static {v1}, Lorg/xbill/DNS/s;->b(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    :cond_0
    instance-of v1, v0, Lorg/xbill/DNS/WireParseException;

    if-nez v1, :cond_1

    new-instance v0, Lorg/xbill/DNS/WireParseException;

    const-string v1, "Error parsing message"

    invoke-direct {v0, v1}, Lorg/xbill/DNS/WireParseException;-><init>(Ljava/lang/String;)V

    :cond_1
    check-cast v0, Lorg/xbill/DNS/WireParseException;

    throw v0
.end method

.method private a(Lorg/xbill/DNS/o;Lorg/xbill/DNS/o;[BLorg/xbill/DNS/ae;)V
    .locals 4

    if-nez p4, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    invoke-virtual {p1}, Lorg/xbill/DNS/o;->c()Lorg/xbill/DNS/TSIGRecord;

    move-result-object v0

    invoke-virtual {p4, p2, p3, v0}, Lorg/xbill/DNS/ae;->a(Lorg/xbill/DNS/o;[BLorg/xbill/DNS/TSIGRecord;)I

    move-result v0

    const-string v1, "verbose"

    invoke-static {v1}, Lorg/xbill/DNS/s;->b(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    sget-object v1, Ljava/lang/System;->err:Ljava/io/PrintStream;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "TSIG verify: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-static {v0}, Lorg/xbill/DNS/u;->b(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v0}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    goto :goto_0
.end method

.method private b(Lorg/xbill/DNS/o;)V
    .locals 2

    iget-object v0, p0, Lorg/xbill/DNS/ac;->e:Lorg/xbill/DNS/OPTRecord;

    if-eqz v0, :cond_0

    invoke-virtual {p1}, Lorg/xbill/DNS/o;->f()Lorg/xbill/DNS/OPTRecord;

    move-result-object v0

    if-eqz v0, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    iget-object v0, p0, Lorg/xbill/DNS/ac;->e:Lorg/xbill/DNS/OPTRecord;

    const/4 v1, 0x3

    invoke-virtual {p1, v0, v1}, Lorg/xbill/DNS/o;->a(Lorg/xbill/DNS/Record;I)V

    goto :goto_0
.end method

.method private c(Lorg/xbill/DNS/o;)I
    .locals 1

    invoke-virtual {p1}, Lorg/xbill/DNS/o;->f()Lorg/xbill/DNS/OPTRecord;

    move-result-object v0

    if-nez v0, :cond_0

    const/16 v0, 0x200

    :goto_0
    return v0

    :cond_0
    invoke-virtual {v0}, Lorg/xbill/DNS/OPTRecord;->d()I

    move-result v0

    goto :goto_0
.end method

.method private d(Lorg/xbill/DNS/o;)Lorg/xbill/DNS/o;
    .locals 7

    const/4 v6, 0x0

    invoke-virtual {p1}, Lorg/xbill/DNS/o;->b()Lorg/xbill/DNS/Record;

    move-result-object v0

    invoke-virtual {v0}, Lorg/xbill/DNS/Record;->j()Lorg/xbill/DNS/Name;

    move-result-object v0

    iget-object v1, p0, Lorg/xbill/DNS/ac;->a:Ljava/net/InetSocketAddress;

    iget-object v2, p0, Lorg/xbill/DNS/ac;->f:Lorg/xbill/DNS/ae;

    invoke-static {v0, v1, v2}, Lorg/xbill/DNS/aj;->a(Lorg/xbill/DNS/Name;Ljava/net/SocketAddress;Lorg/xbill/DNS/ae;)Lorg/xbill/DNS/aj;

    move-result-object v0

    invoke-virtual {p0}, Lorg/xbill/DNS/ac;->a()J

    move-result-wide v2

    const-wide/16 v4, 0x3e8

    div-long/2addr v2, v4

    long-to-int v1, v2

    invoke-virtual {v0, v1}, Lorg/xbill/DNS/aj;->a(I)V

    iget-object v1, p0, Lorg/xbill/DNS/ac;->b:Ljava/net/InetSocketAddress;

    invoke-virtual {v0, v1}, Lorg/xbill/DNS/aj;->a(Ljava/net/SocketAddress;)V

    :try_start_0
    invoke-virtual {v0}, Lorg/xbill/DNS/aj;->a()Ljava/util/List;
    :try_end_0
    .catch Lorg/xbill/DNS/ZoneTransferException; {:try_start_0 .. :try_end_0} :catch_0

    invoke-virtual {v0}, Lorg/xbill/DNS/aj;->b()Ljava/util/List;

    move-result-object v0

    new-instance v1, Lorg/xbill/DNS/o;

    invoke-virtual {p1}, Lorg/xbill/DNS/o;->a()Lorg/xbill/DNS/m;

    move-result-object v2

    invoke-virtual {v2}, Lorg/xbill/DNS/m;->b()I

    move-result v2

    invoke-direct {v1, v2}, Lorg/xbill/DNS/o;-><init>(I)V

    invoke-virtual {v1}, Lorg/xbill/DNS/o;->a()Lorg/xbill/DNS/m;

    move-result-object v2

    const/4 v3, 0x5

    invoke-virtual {v2, v3}, Lorg/xbill/DNS/m;->a(I)V

    invoke-virtual {v1}, Lorg/xbill/DNS/o;->a()Lorg/xbill/DNS/m;

    move-result-object v2

    invoke-virtual {v2, v6}, Lorg/xbill/DNS/m;->a(I)V

    invoke-virtual {p1}, Lorg/xbill/DNS/o;->b()Lorg/xbill/DNS/Record;

    move-result-object v2

    invoke-virtual {v1, v2, v6}, Lorg/xbill/DNS/o;->a(Lorg/xbill/DNS/Record;I)V

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/xbill/DNS/Record;

    const/4 v3, 0x1

    invoke-virtual {v1, v0, v3}, Lorg/xbill/DNS/o;->a(Lorg/xbill/DNS/Record;I)V

    goto :goto_0

    :catch_0
    move-exception v0

    new-instance v1, Lorg/xbill/DNS/WireParseException;

    invoke-virtual {v0}, Lorg/xbill/DNS/ZoneTransferException;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Lorg/xbill/DNS/WireParseException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_0
    return-object v1
.end method


# virtual methods
.method a()J
    .locals 2

    iget-wide v0, p0, Lorg/xbill/DNS/ac;->g:J

    return-wide v0
.end method

.method public a(Lorg/xbill/DNS/o;Lorg/xbill/DNS/y;)Ljava/lang/Object;
    .locals 4

    monitor-enter p0

    :try_start_0
    new-instance v1, Ljava/lang/Integer;

    sget v0, Lorg/xbill/DNS/ac;->i:I

    add-int/lit8 v2, v0, 0x1

    sput v2, Lorg/xbill/DNS/ac;->i:I

    invoke-direct {v1, v0}, Ljava/lang/Integer;-><init>(I)V

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-virtual {p1}, Lorg/xbill/DNS/o;->b()Lorg/xbill/DNS/Record;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lorg/xbill/DNS/Record;->j()Lorg/xbill/DNS/Name;

    move-result-object v0

    invoke-virtual {v0}, Lorg/xbill/DNS/Name;->toString()Ljava/lang/String;

    move-result-object v0

    :goto_0
    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    new-instance v2, Lorg/xbill/DNS/v;

    invoke-direct {v2, p0, p1, v1, p2}, Lorg/xbill/DNS/v;-><init>(Lorg/xbill/DNS/w;Lorg/xbill/DNS/o;Ljava/lang/Object;Lorg/xbill/DNS/y;)V

    invoke-virtual {v2, v0}, Ljava/lang/Thread;->setName(Ljava/lang/String;)V

    const/4 v0, 0x1

    invoke-virtual {v2, v0}, Ljava/lang/Thread;->setDaemon(Z)V

    invoke-virtual {v2}, Ljava/lang/Thread;->start()V

    return-object v1

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    :cond_0
    const-string v0, "(none)"

    goto :goto_0
.end method

.method public a(Lorg/xbill/DNS/o;)Lorg/xbill/DNS/o;
    .locals 12

    const/4 v7, 0x0

    const/4 v9, 0x1

    const-string v0, "verbose"

    invoke-static {v0}, Lorg/xbill/DNS/s;->b(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    sget-object v0, Ljava/lang/System;->err:Ljava/io/PrintStream;

    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    const-string v2, "Sending to "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    iget-object v2, p0, Lorg/xbill/DNS/ac;->a:Ljava/net/InetSocketAddress;

    invoke-virtual {v2}, Ljava/net/InetSocketAddress;->getAddress()Ljava/net/InetAddress;

    move-result-object v2

    invoke-virtual {v2}, Ljava/net/InetAddress;->getHostAddress()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, ":"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    iget-object v2, p0, Lorg/xbill/DNS/ac;->a:Ljava/net/InetSocketAddress;

    invoke-virtual {v2}, Ljava/net/InetSocketAddress;->getPort()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    :cond_0
    invoke-virtual {p1}, Lorg/xbill/DNS/o;->a()Lorg/xbill/DNS/m;

    move-result-object v0

    invoke-virtual {v0}, Lorg/xbill/DNS/m;->d()I

    move-result v0

    if-nez v0, :cond_1

    invoke-virtual {p1}, Lorg/xbill/DNS/o;->b()Lorg/xbill/DNS/Record;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-virtual {v0}, Lorg/xbill/DNS/Record;->k()I

    move-result v0

    const/16 v1, 0xfc

    if-ne v0, v1, :cond_1

    invoke-direct {p0, p1}, Lorg/xbill/DNS/ac;->d(Lorg/xbill/DNS/o;)Lorg/xbill/DNS/o;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_1
    invoke-virtual {p1}, Lorg/xbill/DNS/o;->clone()Ljava/lang/Object;

    move-result-object v0

    move-object v6, v0

    check-cast v6, Lorg/xbill/DNS/o;

    invoke-direct {p0, v6}, Lorg/xbill/DNS/ac;->b(Lorg/xbill/DNS/o;)V

    iget-object v0, p0, Lorg/xbill/DNS/ac;->f:Lorg/xbill/DNS/ae;

    if-eqz v0, :cond_2

    iget-object v0, p0, Lorg/xbill/DNS/ac;->f:Lorg/xbill/DNS/ae;

    const/4 v1, 0x0

    invoke-virtual {v0, v6, v1}, Lorg/xbill/DNS/ae;->a(Lorg/xbill/DNS/o;Lorg/xbill/DNS/TSIGRecord;)V

    :cond_2
    const v0, 0xffff

    invoke-virtual {v6, v0}, Lorg/xbill/DNS/o;->c(I)[B

    move-result-object v2

    invoke-direct {p0, v6}, Lorg/xbill/DNS/ac;->c(Lorg/xbill/DNS/o;)I

    move-result v3

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iget-wide v4, p0, Lorg/xbill/DNS/ac;->g:J

    add-long/2addr v4, v0

    move v0, v7

    :goto_1
    iget-boolean v1, p0, Lorg/xbill/DNS/ac;->c:Z

    if-nez v1, :cond_3

    array-length v1, v2

    if-le v1, v3, :cond_a

    :cond_3
    move v8, v9

    :goto_2
    if-eqz v8, :cond_4

    iget-object v0, p0, Lorg/xbill/DNS/ac;->b:Ljava/net/InetSocketAddress;

    iget-object v1, p0, Lorg/xbill/DNS/ac;->a:Ljava/net/InetSocketAddress;

    invoke-static {v0, v1, v2, v4, v5}, Lorg/xbill/DNS/ad;->a(Ljava/net/SocketAddress;Ljava/net/SocketAddress;[BJ)[B

    move-result-object v0

    :goto_3
    array-length v1, v0

    const/16 v10, 0xc

    if-ge v1, v10, :cond_5

    new-instance v0, Lorg/xbill/DNS/WireParseException;

    const-string v1, "invalid DNS header - too short"

    invoke-direct {v0, v1}, Lorg/xbill/DNS/WireParseException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_4
    iget-object v0, p0, Lorg/xbill/DNS/ac;->b:Ljava/net/InetSocketAddress;

    iget-object v1, p0, Lorg/xbill/DNS/ac;->a:Ljava/net/InetSocketAddress;

    invoke-static/range {v0 .. v5}, Lorg/xbill/DNS/ah;->a(Ljava/net/SocketAddress;Ljava/net/SocketAddress;[BIJ)[B

    move-result-object v0

    goto :goto_3

    :cond_5
    aget-byte v1, v0, v7

    and-int/lit16 v1, v1, 0xff

    shl-int/lit8 v1, v1, 0x8

    aget-byte v10, v0, v9

    and-int/lit16 v10, v10, 0xff

    add-int/2addr v1, v10

    invoke-virtual {v6}, Lorg/xbill/DNS/o;->a()Lorg/xbill/DNS/m;

    move-result-object v10

    invoke-virtual {v10}, Lorg/xbill/DNS/m;->b()I

    move-result v10

    if-eq v1, v10, :cond_7

    new-instance v0, Ljava/lang/StringBuffer;

    invoke-direct {v0}, Ljava/lang/StringBuffer;-><init>()V

    const-string v11, "invalid message id: expected "

    invoke-virtual {v0, v11}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0, v10}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v0

    const-string v10, "; got id "

    invoke-virtual {v0, v10}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(I)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    if-eqz v8, :cond_6

    new-instance v1, Lorg/xbill/DNS/WireParseException;

    invoke-direct {v1, v0}, Lorg/xbill/DNS/WireParseException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_6
    const-string v1, "verbose"

    invoke-static {v1}, Lorg/xbill/DNS/s;->b(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_9

    sget-object v1, Ljava/lang/System;->err:Ljava/io/PrintStream;

    invoke-virtual {v1, v0}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    move v0, v8

    goto :goto_1

    :cond_7
    invoke-direct {p0, v0}, Lorg/xbill/DNS/ac;->a([B)Lorg/xbill/DNS/o;

    move-result-object v1

    iget-object v10, p0, Lorg/xbill/DNS/ac;->f:Lorg/xbill/DNS/ae;

    invoke-direct {p0, v6, v1, v0, v10}, Lorg/xbill/DNS/ac;->a(Lorg/xbill/DNS/o;Lorg/xbill/DNS/o;[BLorg/xbill/DNS/ae;)V

    if-nez v8, :cond_8

    iget-boolean v0, p0, Lorg/xbill/DNS/ac;->d:Z

    if-nez v0, :cond_8

    invoke-virtual {v1}, Lorg/xbill/DNS/o;->a()Lorg/xbill/DNS/m;

    move-result-object v0

    const/4 v8, 0x6

    invoke-virtual {v0, v8}, Lorg/xbill/DNS/m;->b(I)Z

    move-result v0

    if-eqz v0, :cond_8

    move v0, v9

    goto/16 :goto_1

    :cond_8
    move-object v0, v1

    goto/16 :goto_0

    :cond_9
    move v0, v8

    goto/16 :goto_1

    :cond_a
    move v8, v0

    goto/16 :goto_2
.end method

.method public a(I)V
    .locals 1

    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lorg/xbill/DNS/ac;->a(II)V

    return-void
.end method

.method public a(II)V
    .locals 4

    int-to-long v0, p1

    const-wide/16 v2, 0x3e8

    mul-long/2addr v0, v2

    int-to-long v2, p2

    add-long/2addr v0, v2

    iput-wide v0, p0, Lorg/xbill/DNS/ac;->g:J

    return-void
.end method
