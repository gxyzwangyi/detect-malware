.class public final Lorg/xbill/DNS/n;
.super Ljava/lang/Object;


# static fields
.field private static final D:[Lorg/xbill/DNS/Name;

.field static a:Ljava/lang/Class;

.field private static b:Lorg/xbill/DNS/w;

.field private static c:[Lorg/xbill/DNS/Name;

.field private static d:Ljava/util/Map;

.field private static e:I


# instance fields
.field private A:Z

.field private B:Z

.field private C:Z

.field private f:Lorg/xbill/DNS/w;

.field private g:[Lorg/xbill/DNS/Name;

.field private h:Lorg/xbill/DNS/Cache;

.field private i:Z

.field private j:I

.field private k:Lorg/xbill/DNS/Name;

.field private l:I

.field private m:I

.field private n:Z

.field private o:I

.field private p:Z

.field private q:Z

.field private r:Z

.field private s:Ljava/util/List;

.field private t:[Lorg/xbill/DNS/Record;

.field private u:I

.field private v:Ljava/lang/String;

.field private w:Z

.field private x:Z

.field private y:Ljava/lang/String;

.field private z:Z


# direct methods
.method static constructor <clinit>()V
    .locals 1

    const/4 v0, 0x0

    new-array v0, v0, [Lorg/xbill/DNS/Name;

    sput-object v0, Lorg/xbill/DNS/n;->D:[Lorg/xbill/DNS/Name;

    invoke-static {}, Lorg/xbill/DNS/n;->a()V

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;II)V
    .locals 1

    invoke-static {p1}, Lorg/xbill/DNS/Name;->a(Ljava/lang/String;)Lorg/xbill/DNS/Name;

    move-result-object v0

    invoke-direct {p0, v0, p2, p3}, Lorg/xbill/DNS/n;-><init>(Lorg/xbill/DNS/Name;II)V

    return-void
.end method

.method public constructor <init>(Lorg/xbill/DNS/Name;II)V
    .locals 2

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    invoke-static {p2}, Lorg/xbill/DNS/ag;->a(I)V

    invoke-static {p3}, Lorg/xbill/DNS/e;->a(I)V

    invoke-static {p2}, Lorg/xbill/DNS/ag;->d(I)Z

    move-result v0

    if-nez v0, :cond_0

    const/16 v0, 0xff

    if-eq p2, v0, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Cannot query for meta-types other than ANY"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    iput-object p1, p0, Lorg/xbill/DNS/n;->k:Lorg/xbill/DNS/Name;

    iput p2, p0, Lorg/xbill/DNS/n;->l:I

    iput p3, p0, Lorg/xbill/DNS/n;->m:I

    sget-object v0, Lorg/xbill/DNS/n;->a:Ljava/lang/Class;

    if-nez v0, :cond_1

    const-string v0, "org.xbill.DNS.n"

    invoke-static {v0}, Lorg/xbill/DNS/n;->a(Ljava/lang/String;)Ljava/lang/Class;

    move-result-object v0

    sput-object v0, Lorg/xbill/DNS/n;->a:Ljava/lang/Class;

    :goto_0
    monitor-enter v0

    :try_start_0
    invoke-static {}, Lorg/xbill/DNS/n;->b()Lorg/xbill/DNS/w;

    move-result-object v1

    iput-object v1, p0, Lorg/xbill/DNS/n;->f:Lorg/xbill/DNS/w;

    invoke-static {}, Lorg/xbill/DNS/n;->c()[Lorg/xbill/DNS/Name;

    move-result-object v1

    iput-object v1, p0, Lorg/xbill/DNS/n;->g:[Lorg/xbill/DNS/Name;

    invoke-static {p3}, Lorg/xbill/DNS/n;->a(I)Lorg/xbill/DNS/Cache;

    move-result-object v1

    iput-object v1, p0, Lorg/xbill/DNS/n;->h:Lorg/xbill/DNS/Cache;

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/4 v0, 0x3

    iput v0, p0, Lorg/xbill/DNS/n;->j:I

    const-string v0, "verbose"

    invoke-static {v0}, Lorg/xbill/DNS/s;->b(Ljava/lang/String;)Z

    move-result v0

    iput-boolean v0, p0, Lorg/xbill/DNS/n;->n:Z

    const/4 v0, -0x1

    iput v0, p0, Lorg/xbill/DNS/n;->u:I

    return-void

    :cond_1
    sget-object v0, Lorg/xbill/DNS/n;->a:Ljava/lang/Class;

    goto :goto_0

    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v1
.end method

.method static a(Ljava/lang/String;)Ljava/lang/Class;
    .locals 2

    :try_start_0
    invoke-static {p0}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    return-object v0

    :catch_0
    move-exception v0

    new-instance v1, Ljava/lang/NoClassDefFoundError;

    invoke-direct {v1}, Ljava/lang/NoClassDefFoundError;-><init>()V

    invoke-virtual {v1, v0}, Ljava/lang/NoClassDefFoundError;->initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

    move-result-object v0

    throw v0
.end method

.method public static declared-synchronized a(I)Lorg/xbill/DNS/Cache;
    .locals 4

    const-class v1, Lorg/xbill/DNS/n;

    monitor-enter v1

    :try_start_0
    invoke-static {p0}, Lorg/xbill/DNS/e;->a(I)V

    sget-object v0, Lorg/xbill/DNS/n;->d:Ljava/util/Map;

    invoke-static {p0}, Lorg/xbill/DNS/p;->c(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v0, v2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/xbill/DNS/Cache;

    if-nez v0, :cond_0

    new-instance v0, Lorg/xbill/DNS/Cache;

    invoke-direct {v0, p0}, Lorg/xbill/DNS/Cache;-><init>(I)V

    sget-object v2, Lorg/xbill/DNS/n;->d:Ljava/util/Map;

    invoke-static {p0}, Lorg/xbill/DNS/p;->c(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v2, v3, v0}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    monitor-exit v1

    return-object v0

    :catchall_0
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public static declared-synchronized a()V
    .locals 3

    const-class v1, Lorg/xbill/DNS/n;

    monitor-enter v1

    :try_start_0
    new-instance v0, Lorg/xbill/DNS/i;

    invoke-direct {v0}, Lorg/xbill/DNS/i;-><init>()V

    sput-object v0, Lorg/xbill/DNS/n;->b:Lorg/xbill/DNS/w;
    :try_end_0
    .catch Ljava/net/UnknownHostException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    invoke-static {}, Lorg/xbill/DNS/x;->e()Lorg/xbill/DNS/x;

    move-result-object v0

    invoke-virtual {v0}, Lorg/xbill/DNS/x;->c()[Lorg/xbill/DNS/Name;

    move-result-object v0

    sput-object v0, Lorg/xbill/DNS/n;->c:[Lorg/xbill/DNS/Name;

    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    sput-object v0, Lorg/xbill/DNS/n;->d:Ljava/util/Map;

    invoke-static {}, Lorg/xbill/DNS/x;->e()Lorg/xbill/DNS/x;

    move-result-object v0

    invoke-virtual {v0}, Lorg/xbill/DNS/x;->d()I

    move-result v0

    sput v0, Lorg/xbill/DNS/n;->e:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    monitor-exit v1

    return-void

    :catch_0
    move-exception v0

    :try_start_2
    new-instance v0, Ljava/lang/RuntimeException;

    const-string v2, "Failed to initialize resolver"

    invoke-direct {v0, v2}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :catchall_0
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method private a(Lorg/xbill/DNS/Name;)V
    .locals 5

    const/4 v4, 0x1

    iget-object v0, p0, Lorg/xbill/DNS/n;->h:Lorg/xbill/DNS/Cache;

    iget v1, p0, Lorg/xbill/DNS/n;->l:I

    iget v2, p0, Lorg/xbill/DNS/n;->j:I

    invoke-virtual {v0, p1, v1, v2}, Lorg/xbill/DNS/Cache;->b(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/ab;

    move-result-object v0

    iget-boolean v1, p0, Lorg/xbill/DNS/n;->n:Z

    if-eqz v1, :cond_0

    sget-object v1, Ljava/lang/System;->err:Ljava/io/PrintStream;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "lookup "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, " "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    iget v3, p0, Lorg/xbill/DNS/n;->l:I

    invoke-static {v3}, Lorg/xbill/DNS/ag;->b(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    sget-object v1, Ljava/lang/System;->err:Ljava/io/PrintStream;

    invoke-virtual {v1, v0}, Ljava/io/PrintStream;->println(Ljava/lang/Object;)V

    :cond_0
    invoke-direct {p0, p1, v0}, Lorg/xbill/DNS/n;->a(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/ab;)V

    iget-boolean v0, p0, Lorg/xbill/DNS/n;->q:Z

    if-nez v0, :cond_1

    iget-boolean v0, p0, Lorg/xbill/DNS/n;->r:Z

    if-eqz v0, :cond_2

    :cond_1
    :goto_0
    return-void

    :cond_2
    iget v0, p0, Lorg/xbill/DNS/n;->l:I

    iget v1, p0, Lorg/xbill/DNS/n;->m:I

    invoke-static {p1, v0, v1}, Lorg/xbill/DNS/Record;->a(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;

    move-result-object v0

    invoke-static {v0}, Lorg/xbill/DNS/o;->a(Lorg/xbill/DNS/Record;)Lorg/xbill/DNS/o;

    move-result-object v0

    :try_start_0
    iget-object v1, p0, Lorg/xbill/DNS/n;->f:Lorg/xbill/DNS/w;

    invoke-interface {v1, v0}, Lorg/xbill/DNS/w;->a(Lorg/xbill/DNS/o;)Lorg/xbill/DNS/o;
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    invoke-virtual {v1}, Lorg/xbill/DNS/o;->a()Lorg/xbill/DNS/m;

    move-result-object v2

    invoke-virtual {v2}, Lorg/xbill/DNS/m;->c()I

    move-result v2

    if-eqz v2, :cond_4

    const/4 v3, 0x3

    if-eq v2, v3, :cond_4

    iput-boolean v4, p0, Lorg/xbill/DNS/n;->x:Z

    invoke-static {v2}, Lorg/xbill/DNS/u;->a(I)Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lorg/xbill/DNS/n;->y:Ljava/lang/String;

    goto :goto_0

    :catch_0
    move-exception v0

    instance-of v0, v0, Ljava/io/InterruptedIOException;

    if-eqz v0, :cond_3

    iput-boolean v4, p0, Lorg/xbill/DNS/n;->A:Z

    goto :goto_0

    :cond_3
    iput-boolean v4, p0, Lorg/xbill/DNS/n;->z:Z

    goto :goto_0

    :cond_4
    invoke-virtual {v0}, Lorg/xbill/DNS/o;->b()Lorg/xbill/DNS/Record;

    move-result-object v0

    invoke-virtual {v1}, Lorg/xbill/DNS/o;->b()Lorg/xbill/DNS/Record;

    move-result-object v2

    invoke-virtual {v0, v2}, Lorg/xbill/DNS/Record;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_5

    iput-boolean v4, p0, Lorg/xbill/DNS/n;->x:Z

    const-string v0, "response does not match query"

    iput-object v0, p0, Lorg/xbill/DNS/n;->y:Ljava/lang/String;

    goto :goto_0

    :cond_5
    iget-object v0, p0, Lorg/xbill/DNS/n;->h:Lorg/xbill/DNS/Cache;

    invoke-virtual {v0, v1}, Lorg/xbill/DNS/Cache;->a(Lorg/xbill/DNS/o;)Lorg/xbill/DNS/ab;

    move-result-object v0

    if-nez v0, :cond_6

    iget-object v0, p0, Lorg/xbill/DNS/n;->h:Lorg/xbill/DNS/Cache;

    iget v1, p0, Lorg/xbill/DNS/n;->l:I

    iget v2, p0, Lorg/xbill/DNS/n;->j:I

    invoke-virtual {v0, p1, v1, v2}, Lorg/xbill/DNS/Cache;->b(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/ab;

    move-result-object v0

    :cond_6
    iget-boolean v1, p0, Lorg/xbill/DNS/n;->n:Z

    if-eqz v1, :cond_7

    sget-object v1, Ljava/lang/System;->err:Ljava/io/PrintStream;

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "queried "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, " "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    iget v3, p0, Lorg/xbill/DNS/n;->l:I

    invoke-static {v3}, Lorg/xbill/DNS/ag;->b(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    sget-object v1, Ljava/lang/System;->err:Ljava/io/PrintStream;

    invoke-virtual {v1, v0}, Ljava/io/PrintStream;->println(Ljava/lang/Object;)V

    :cond_7
    invoke-direct {p0, p1, v0}, Lorg/xbill/DNS/n;->a(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/ab;)V

    goto/16 :goto_0
.end method

.method private a(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
    .locals 3

    const/4 v2, 0x1

    const/4 v0, 0x0

    iput-boolean v2, p0, Lorg/xbill/DNS/n;->p:Z

    iput-boolean v0, p0, Lorg/xbill/DNS/n;->x:Z

    iput-boolean v0, p0, Lorg/xbill/DNS/n;->z:Z

    iput-boolean v0, p0, Lorg/xbill/DNS/n;->A:Z

    iput-boolean v0, p0, Lorg/xbill/DNS/n;->w:Z

    iput-boolean v0, p0, Lorg/xbill/DNS/n;->C:Z

    iget v0, p0, Lorg/xbill/DNS/n;->o:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lorg/xbill/DNS/n;->o:I

    iget v0, p0, Lorg/xbill/DNS/n;->o:I

    const/4 v1, 0x6

    if-ge v0, v1, :cond_0

    invoke-virtual {p1, p2}, Lorg/xbill/DNS/Name;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    :cond_0
    iput v2, p0, Lorg/xbill/DNS/n;->u:I

    const-string v0, "CNAME loop"

    iput-object v0, p0, Lorg/xbill/DNS/n;->v:Ljava/lang/String;

    iput-boolean v2, p0, Lorg/xbill/DNS/n;->q:Z

    :goto_0
    return-void

    :cond_1
    iget-object v0, p0, Lorg/xbill/DNS/n;->s:Ljava/util/List;

    if-nez v0, :cond_2

    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lorg/xbill/DNS/n;->s:Ljava/util/List;

    :cond_2
    iget-object v0, p0, Lorg/xbill/DNS/n;->s:Ljava/util/List;

    invoke-interface {v0, p2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    invoke-direct {p0, p1}, Lorg/xbill/DNS/n;->a(Lorg/xbill/DNS/Name;)V

    goto :goto_0
.end method

.method private a(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/ab;)V
    .locals 7

    const/4 v1, 0x0

    const/4 v6, 0x1

    invoke-virtual {p2}, Lorg/xbill/DNS/ab;->f()Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-virtual {p2}, Lorg/xbill/DNS/ab;->g()[Lorg/xbill/DNS/RRset;

    move-result-object v2

    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    move v0, v1

    :goto_0
    array-length v4, v2

    if-ge v0, v4, :cond_1

    aget-object v4, v2, v0

    invoke-virtual {v4}, Lorg/xbill/DNS/RRset;->c()Ljava/util/Iterator;

    move-result-object v4

    :goto_1
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_0

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    invoke-interface {v3, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_1

    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_1
    iput v1, p0, Lorg/xbill/DNS/n;->u:I

    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v0

    new-array v0, v0, [Lorg/xbill/DNS/Record;

    invoke-interface {v3, v0}, Ljava/util/List;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [Lorg/xbill/DNS/Record;

    check-cast v0, [Lorg/xbill/DNS/Record;

    iput-object v0, p0, Lorg/xbill/DNS/n;->t:[Lorg/xbill/DNS/Record;

    iput-boolean v6, p0, Lorg/xbill/DNS/n;->q:Z

    :cond_2
    :goto_2
    return-void

    :cond_3
    invoke-virtual {p2}, Lorg/xbill/DNS/ab;->a()Z

    move-result v0

    if-eqz v0, :cond_4

    iput-boolean v6, p0, Lorg/xbill/DNS/n;->w:Z

    iput-boolean v6, p0, Lorg/xbill/DNS/n;->r:Z

    iget v0, p0, Lorg/xbill/DNS/n;->o:I

    if-lez v0, :cond_2

    const/4 v0, 0x3

    iput v0, p0, Lorg/xbill/DNS/n;->u:I

    iput-boolean v6, p0, Lorg/xbill/DNS/n;->q:Z

    goto :goto_2

    :cond_4
    invoke-virtual {p2}, Lorg/xbill/DNS/ab;->b()Z

    move-result v0

    if-eqz v0, :cond_5

    const/4 v0, 0x4

    iput v0, p0, Lorg/xbill/DNS/n;->u:I

    const/4 v0, 0x0

    iput-object v0, p0, Lorg/xbill/DNS/n;->t:[Lorg/xbill/DNS/Record;

    iput-boolean v6, p0, Lorg/xbill/DNS/n;->q:Z

    goto :goto_2

    :cond_5
    invoke-virtual {p2}, Lorg/xbill/DNS/ab;->d()Z

    move-result v0

    if-eqz v0, :cond_6

    invoke-virtual {p2}, Lorg/xbill/DNS/ab;->h()Lorg/xbill/DNS/CNAMERecord;

    move-result-object v0

    invoke-virtual {v0}, Lorg/xbill/DNS/CNAMERecord;->k_()Lorg/xbill/DNS/Name;

    move-result-object v0

    invoke-direct {p0, v0, p1}, Lorg/xbill/DNS/n;->a(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V

    goto :goto_2

    :cond_6
    invoke-virtual {p2}, Lorg/xbill/DNS/ab;->e()Z

    move-result v0

    if-eqz v0, :cond_7

    invoke-virtual {p2}, Lorg/xbill/DNS/ab;->i()Lorg/xbill/DNS/DNAMERecord;

    move-result-object v0

    :try_start_0
    invoke-virtual {p1, v0}, Lorg/xbill/DNS/Name;->a(Lorg/xbill/DNS/DNAMERecord;)Lorg/xbill/DNS/Name;

    move-result-object v0

    invoke-direct {p0, v0, p1}, Lorg/xbill/DNS/n;->a(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
    :try_end_0
    .catch Lorg/xbill/DNS/NameTooLongException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_2

    :catch_0
    move-exception v0

    iput v6, p0, Lorg/xbill/DNS/n;->u:I

    const-string v0, "Invalid DNAME target"

    iput-object v0, p0, Lorg/xbill/DNS/n;->v:Ljava/lang/String;

    iput-boolean v6, p0, Lorg/xbill/DNS/n;->q:Z

    goto :goto_2

    :cond_7
    invoke-virtual {p2}, Lorg/xbill/DNS/ab;->c()Z

    move-result v0

    if-eqz v0, :cond_2

    iput-boolean v6, p0, Lorg/xbill/DNS/n;->C:Z

    goto :goto_2
.end method

.method public static declared-synchronized b()Lorg/xbill/DNS/w;
    .locals 2

    const-class v0, Lorg/xbill/DNS/n;

    monitor-enter v0

    :try_start_0
    sget-object v1, Lorg/xbill/DNS/n;->b:Lorg/xbill/DNS/w;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v0

    return-object v1

    :catchall_0
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method private b(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
    .locals 1

    const/4 v0, 0x0

    iput-boolean v0, p0, Lorg/xbill/DNS/n;->r:Z

    if-nez p2, :cond_0

    :goto_0
    invoke-direct {p0, p1}, Lorg/xbill/DNS/n;->a(Lorg/xbill/DNS/Name;)V

    :goto_1
    return-void

    :cond_0
    :try_start_0
    invoke-static {p1, p2}, Lorg/xbill/DNS/Name;->a(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
    :try_end_0
    .catch Lorg/xbill/DNS/NameTooLongException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object p1

    goto :goto_0

    :catch_0
    move-exception v0

    const/4 v0, 0x1

    iput-boolean v0, p0, Lorg/xbill/DNS/n;->B:Z

    goto :goto_1
.end method

.method public static declared-synchronized c()[Lorg/xbill/DNS/Name;
    .locals 2

    const-class v0, Lorg/xbill/DNS/n;

    monitor-enter v0

    :try_start_0
    sget-object v1, Lorg/xbill/DNS/n;->c:[Lorg/xbill/DNS/Name;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    monitor-exit v0

    return-object v1

    :catchall_0
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method private final f()V
    .locals 3

    const/4 v2, 0x0

    const/4 v1, 0x0

    iput v1, p0, Lorg/xbill/DNS/n;->o:I

    iput-boolean v1, p0, Lorg/xbill/DNS/n;->p:Z

    iput-boolean v1, p0, Lorg/xbill/DNS/n;->q:Z

    iput-boolean v1, p0, Lorg/xbill/DNS/n;->r:Z

    iput-object v2, p0, Lorg/xbill/DNS/n;->s:Ljava/util/List;

    iput-object v2, p0, Lorg/xbill/DNS/n;->t:[Lorg/xbill/DNS/Record;

    const/4 v0, -0x1

    iput v0, p0, Lorg/xbill/DNS/n;->u:I

    iput-object v2, p0, Lorg/xbill/DNS/n;->v:Ljava/lang/String;

    iput-boolean v1, p0, Lorg/xbill/DNS/n;->w:Z

    iput-boolean v1, p0, Lorg/xbill/DNS/n;->x:Z

    iput-object v2, p0, Lorg/xbill/DNS/n;->y:Ljava/lang/String;

    iput-boolean v1, p0, Lorg/xbill/DNS/n;->z:Z

    iput-boolean v1, p0, Lorg/xbill/DNS/n;->A:Z

    iput-boolean v1, p0, Lorg/xbill/DNS/n;->B:Z

    iput-boolean v1, p0, Lorg/xbill/DNS/n;->C:Z

    iget-boolean v0, p0, Lorg/xbill/DNS/n;->i:Z

    if-eqz v0, :cond_0

    iget-object v0, p0, Lorg/xbill/DNS/n;->h:Lorg/xbill/DNS/Cache;

    invoke-virtual {v0}, Lorg/xbill/DNS/Cache;->a()V

    :cond_0
    return-void
.end method

.method private g()V
    .locals 3

    iget-boolean v0, p0, Lorg/xbill/DNS/n;->q:Z

    if-eqz v0, :cond_0

    iget v0, p0, Lorg/xbill/DNS/n;->u:I

    const/4 v1, -0x1

    if-eq v0, v1, :cond_0

    return-void

    :cond_0
    new-instance v0, Ljava/lang/StringBuffer;

    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    const-string v2, "Lookup of "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    iget-object v2, p0, Lorg/xbill/DNS/n;->k:Lorg/xbill/DNS/Name;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, " "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/StringBuffer;-><init>(Ljava/lang/String;)V

    iget v1, p0, Lorg/xbill/DNS/n;->m:I

    const/4 v2, 0x1

    if-eq v1, v2, :cond_1

    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    iget v2, p0, Lorg/xbill/DNS/n;->m:I

    invoke-static {v2}, Lorg/xbill/DNS/e;->b(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, " "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    :cond_1
    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    iget v2, p0, Lorg/xbill/DNS/n;->l:I

    invoke-static {v2}, Lorg/xbill/DNS/ag;->b(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, " isn\'t done"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    new-instance v1, Ljava/lang/IllegalStateException;

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1
.end method


# virtual methods
.method public a(Lorg/xbill/DNS/Cache;)V
    .locals 2

    if-nez p1, :cond_0

    new-instance v0, Lorg/xbill/DNS/Cache;

    iget v1, p0, Lorg/xbill/DNS/n;->m:I

    invoke-direct {v0, v1}, Lorg/xbill/DNS/Cache;-><init>(I)V

    iput-object v0, p0, Lorg/xbill/DNS/n;->h:Lorg/xbill/DNS/Cache;

    const/4 v0, 0x1

    iput-boolean v0, p0, Lorg/xbill/DNS/n;->i:Z

    :goto_0
    return-void

    :cond_0
    iput-object p1, p0, Lorg/xbill/DNS/n;->h:Lorg/xbill/DNS/Cache;

    const/4 v0, 0x0

    iput-boolean v0, p0, Lorg/xbill/DNS/n;->i:Z

    goto :goto_0
.end method

.method public d()[Lorg/xbill/DNS/Record;
    .locals 5

    const/4 v4, 0x2

    const/4 v3, 0x1

    iget-boolean v0, p0, Lorg/xbill/DNS/n;->q:Z

    if-eqz v0, :cond_0

    invoke-direct {p0}, Lorg/xbill/DNS/n;->f()V

    :cond_0
    iget-object v0, p0, Lorg/xbill/DNS/n;->k:Lorg/xbill/DNS/Name;

    invoke-virtual {v0}, Lorg/xbill/DNS/Name;->a()Z

    move-result v0

    if-eqz v0, :cond_3

    iget-object v0, p0, Lorg/xbill/DNS/n;->k:Lorg/xbill/DNS/Name;

    const/4 v1, 0x0

    invoke-direct {p0, v0, v1}, Lorg/xbill/DNS/n;->b(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V

    :cond_1
    :goto_0
    iget-boolean v0, p0, Lorg/xbill/DNS/n;->q:Z

    if-nez v0, :cond_2

    iget-boolean v0, p0, Lorg/xbill/DNS/n;->x:Z

    if-eqz v0, :cond_8

    iput v4, p0, Lorg/xbill/DNS/n;->u:I

    iget-object v0, p0, Lorg/xbill/DNS/n;->y:Ljava/lang/String;

    iput-object v0, p0, Lorg/xbill/DNS/n;->v:Ljava/lang/String;

    iput-boolean v3, p0, Lorg/xbill/DNS/n;->q:Z

    :cond_2
    :goto_1
    iget-object v0, p0, Lorg/xbill/DNS/n;->t:[Lorg/xbill/DNS/Record;

    :goto_2
    return-object v0

    :cond_3
    iget-object v0, p0, Lorg/xbill/DNS/n;->g:[Lorg/xbill/DNS/Name;

    if-nez v0, :cond_4

    iget-object v0, p0, Lorg/xbill/DNS/n;->k:Lorg/xbill/DNS/Name;

    sget-object v1, Lorg/xbill/DNS/Name;->a:Lorg/xbill/DNS/Name;

    invoke-direct {p0, v0, v1}, Lorg/xbill/DNS/n;->b(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V

    goto :goto_0

    :cond_4
    iget-object v0, p0, Lorg/xbill/DNS/n;->k:Lorg/xbill/DNS/Name;

    invoke-virtual {v0}, Lorg/xbill/DNS/Name;->c()I

    move-result v0

    sget v1, Lorg/xbill/DNS/n;->e:I

    if-le v0, v1, :cond_5

    iget-object v0, p0, Lorg/xbill/DNS/n;->k:Lorg/xbill/DNS/Name;

    sget-object v1, Lorg/xbill/DNS/Name;->a:Lorg/xbill/DNS/Name;

    invoke-direct {p0, v0, v1}, Lorg/xbill/DNS/n;->b(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V

    :cond_5
    iget-boolean v0, p0, Lorg/xbill/DNS/n;->q:Z

    if-eqz v0, :cond_6

    iget-object v0, p0, Lorg/xbill/DNS/n;->t:[Lorg/xbill/DNS/Record;

    goto :goto_2

    :cond_6
    const/4 v0, 0x0

    :goto_3
    iget-object v1, p0, Lorg/xbill/DNS/n;->g:[Lorg/xbill/DNS/Name;

    array-length v1, v1

    if-ge v0, v1, :cond_1

    iget-object v1, p0, Lorg/xbill/DNS/n;->k:Lorg/xbill/DNS/Name;

    iget-object v2, p0, Lorg/xbill/DNS/n;->g:[Lorg/xbill/DNS/Name;

    aget-object v2, v2, v0

    invoke-direct {p0, v1, v2}, Lorg/xbill/DNS/n;->b(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V

    iget-boolean v1, p0, Lorg/xbill/DNS/n;->q:Z

    if-eqz v1, :cond_7

    iget-object v0, p0, Lorg/xbill/DNS/n;->t:[Lorg/xbill/DNS/Record;

    goto :goto_2

    :cond_7
    iget-boolean v1, p0, Lorg/xbill/DNS/n;->p:Z

    if-nez v1, :cond_1

    add-int/lit8 v0, v0, 0x1

    goto :goto_3

    :cond_8
    iget-boolean v0, p0, Lorg/xbill/DNS/n;->A:Z

    if-eqz v0, :cond_9

    iput v4, p0, Lorg/xbill/DNS/n;->u:I

    const-string v0, "timed out"

    iput-object v0, p0, Lorg/xbill/DNS/n;->v:Ljava/lang/String;

    iput-boolean v3, p0, Lorg/xbill/DNS/n;->q:Z

    goto :goto_1

    :cond_9
    iget-boolean v0, p0, Lorg/xbill/DNS/n;->z:Z

    if-eqz v0, :cond_a

    iput v4, p0, Lorg/xbill/DNS/n;->u:I

    const-string v0, "network error"

    iput-object v0, p0, Lorg/xbill/DNS/n;->v:Ljava/lang/String;

    iput-boolean v3, p0, Lorg/xbill/DNS/n;->q:Z

    goto :goto_1

    :cond_a
    iget-boolean v0, p0, Lorg/xbill/DNS/n;->w:Z

    if-eqz v0, :cond_b

    const/4 v0, 0x3

    iput v0, p0, Lorg/xbill/DNS/n;->u:I

    iput-boolean v3, p0, Lorg/xbill/DNS/n;->q:Z

    goto :goto_1

    :cond_b
    iget-boolean v0, p0, Lorg/xbill/DNS/n;->C:Z

    if-eqz v0, :cond_c

    iput v3, p0, Lorg/xbill/DNS/n;->u:I

    const-string v0, "referral"

    iput-object v0, p0, Lorg/xbill/DNS/n;->v:Ljava/lang/String;

    iput-boolean v3, p0, Lorg/xbill/DNS/n;->q:Z

    goto :goto_1

    :cond_c
    iget-boolean v0, p0, Lorg/xbill/DNS/n;->B:Z

    if-eqz v0, :cond_2

    iput v3, p0, Lorg/xbill/DNS/n;->u:I

    const-string v0, "name too long"

    iput-object v0, p0, Lorg/xbill/DNS/n;->v:Ljava/lang/String;

    iput-boolean v3, p0, Lorg/xbill/DNS/n;->q:Z

    goto/16 :goto_1
.end method

.method public e()I
    .locals 1

    invoke-direct {p0}, Lorg/xbill/DNS/n;->g()V

    iget v0, p0, Lorg/xbill/DNS/n;->u:I

    return v0
.end method
