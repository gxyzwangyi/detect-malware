.class public Lorg/xbill/DNS/aj;
.super Ljava/lang/Object;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lorg/xbill/DNS/aj$1;,
        Lorg/xbill/DNS/aj$a;,
        Lorg/xbill/DNS/aj$c;,
        Lorg/xbill/DNS/aj$b;
    }
.end annotation


# instance fields
.field private a:Lorg/xbill/DNS/Name;

.field private b:I

.field private c:I

.field private d:J

.field private e:Z

.field private f:Lorg/xbill/DNS/aj$c;

.field private g:Ljava/net/SocketAddress;

.field private h:Ljava/net/SocketAddress;

.field private i:Lorg/xbill/DNS/ad;

.field private j:Lorg/xbill/DNS/ae;

.field private k:Lorg/xbill/DNS/ae$a;

.field private l:J

.field private m:I

.field private n:J

.field private o:J

.field private p:Lorg/xbill/DNS/Record;

.field private q:I


# direct methods
.method private constructor <init>()V
    .locals 2

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const-wide/32 v0, 0xdbba0

    iput-wide v0, p0, Lorg/xbill/DNS/aj;->l:J

    return-void
.end method

.method private constructor <init>(Lorg/xbill/DNS/Name;IJZLjava/net/SocketAddress;Lorg/xbill/DNS/ae;)V
    .locals 3

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const-wide/32 v0, 0xdbba0

    iput-wide v0, p0, Lorg/xbill/DNS/aj;->l:J

    iput-object p6, p0, Lorg/xbill/DNS/aj;->h:Ljava/net/SocketAddress;

    iput-object p7, p0, Lorg/xbill/DNS/aj;->j:Lorg/xbill/DNS/ae;

    invoke-virtual {p1}, Lorg/xbill/DNS/Name;->a()Z

    move-result v0

    if-eqz v0, :cond_0

    iput-object p1, p0, Lorg/xbill/DNS/aj;->a:Lorg/xbill/DNS/Name;

    :goto_0
    iput p2, p0, Lorg/xbill/DNS/aj;->b:I

    const/4 v0, 0x1

    iput v0, p0, Lorg/xbill/DNS/aj;->c:I

    iput-wide p3, p0, Lorg/xbill/DNS/aj;->d:J

    iput-boolean p5, p0, Lorg/xbill/DNS/aj;->e:Z

    const/4 v0, 0x0

    iput v0, p0, Lorg/xbill/DNS/aj;->m:I

    return-void

    :cond_0
    :try_start_0
    sget-object v0, Lorg/xbill/DNS/Name;->a:Lorg/xbill/DNS/Name;

    invoke-static {p1, v0}, Lorg/xbill/DNS/Name;->a(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;

    move-result-object v0

    iput-object v0, p0, Lorg/xbill/DNS/aj;->a:Lorg/xbill/DNS/Name;
    :try_end_0
    .catch Lorg/xbill/DNS/NameTooLongException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "ZoneTransferIn: name too long"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method static a(Lorg/xbill/DNS/Record;)J
    .locals 2

    invoke-static {p0}, Lorg/xbill/DNS/aj;->b(Lorg/xbill/DNS/Record;)J

    move-result-wide v0

    return-wide v0
.end method

.method public static a(Lorg/xbill/DNS/Name;Ljava/net/SocketAddress;Lorg/xbill/DNS/ae;)Lorg/xbill/DNS/aj;
    .locals 9

    new-instance v1, Lorg/xbill/DNS/aj;

    const/16 v3, 0xfc

    const-wide/16 v4, 0x0

    const/4 v6, 0x0

    move-object v2, p0

    move-object v7, p1

    move-object v8, p2

    invoke-direct/range {v1 .. v8}, Lorg/xbill/DNS/aj;-><init>(Lorg/xbill/DNS/Name;IJZLjava/net/SocketAddress;Lorg/xbill/DNS/ae;)V

    return-object v1
.end method

.method private a([B)Lorg/xbill/DNS/o;
    .locals 2

    :try_start_0
    new-instance v0, Lorg/xbill/DNS/o;

    invoke-direct {v0, p1}, Lorg/xbill/DNS/o;-><init>([B)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    instance-of v1, v0, Lorg/xbill/DNS/WireParseException;

    if-eqz v1, :cond_0

    check-cast v0, Lorg/xbill/DNS/WireParseException;

    throw v0

    :cond_0
    new-instance v0, Lorg/xbill/DNS/WireParseException;

    const-string v1, "Error parsing message"

    invoke-direct {v0, v1}, Lorg/xbill/DNS/WireParseException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private a(Ljava/lang/String;)V
    .locals 3

    const-string v0, "verbose"

    invoke-static {v0}, Lorg/xbill/DNS/s;->b(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    sget-object v0, Ljava/lang/System;->out:Ljava/io/PrintStream;

    new-instance v1, Ljava/lang/StringBuffer;

    invoke-direct {v1}, Ljava/lang/StringBuffer;-><init>()V

    iget-object v2, p0, Lorg/xbill/DNS/aj;->a:Lorg/xbill/DNS/Name;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/Object;)Ljava/lang/StringBuffer;

    move-result-object v1

    const-string v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    :cond_0
    return-void
.end method

.method private static b(Lorg/xbill/DNS/Record;)J
    .locals 2

    check-cast p0, Lorg/xbill/DNS/SOARecord;

    invoke-virtual {p0}, Lorg/xbill/DNS/SOARecord;->d()J

    move-result-wide v0

    return-wide v0
.end method

.method private b(Ljava/lang/String;)V
    .locals 1

    new-instance v0, Lorg/xbill/DNS/ZoneTransferException;

    invoke-direct {v0, p1}, Lorg/xbill/DNS/ZoneTransferException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private c()V
    .locals 4

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iget-wide v2, p0, Lorg/xbill/DNS/aj;->l:J

    add-long/2addr v0, v2

    new-instance v2, Lorg/xbill/DNS/ad;

    invoke-direct {v2, v0, v1}, Lorg/xbill/DNS/ad;-><init>(J)V

    iput-object v2, p0, Lorg/xbill/DNS/aj;->i:Lorg/xbill/DNS/ad;

    iget-object v0, p0, Lorg/xbill/DNS/aj;->g:Ljava/net/SocketAddress;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lorg/xbill/DNS/aj;->i:Lorg/xbill/DNS/ad;

    iget-object v1, p0, Lorg/xbill/DNS/aj;->g:Ljava/net/SocketAddress;

    invoke-virtual {v0, v1}, Lorg/xbill/DNS/ad;->a(Ljava/net/SocketAddress;)V

    :cond_0
    iget-object v0, p0, Lorg/xbill/DNS/aj;->i:Lorg/xbill/DNS/ad;

    iget-object v1, p0, Lorg/xbill/DNS/aj;->h:Ljava/net/SocketAddress;

    invoke-virtual {v0, v1}, Lorg/xbill/DNS/ad;->b(Ljava/net/SocketAddress;)V

    return-void
.end method

.method private c(Lorg/xbill/DNS/Record;)V
    .locals 9

    const/4 v8, 0x2

    const/4 v7, 0x1

    const/16 v6, 0xfb

    const/4 v5, 0x7

    const/4 v4, 0x6

    invoke-virtual {p1}, Lorg/xbill/DNS/Record;->k()I

    move-result v0

    iget v1, p0, Lorg/xbill/DNS/aj;->m:I

    packed-switch v1, :pswitch_data_0

    const-string v0, "invalid state"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->b(Ljava/lang/String;)V

    :cond_0
    :goto_0
    return-void

    :pswitch_0
    if-eq v0, v4, :cond_1

    const-string v0, "missing initial SOA"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->b(Ljava/lang/String;)V

    :cond_1
    iput-object p1, p0, Lorg/xbill/DNS/aj;->p:Lorg/xbill/DNS/Record;

    invoke-static {p1}, Lorg/xbill/DNS/aj;->b(Lorg/xbill/DNS/Record;)J

    move-result-wide v0

    iput-wide v0, p0, Lorg/xbill/DNS/aj;->n:J

    iget v0, p0, Lorg/xbill/DNS/aj;->b:I

    if-ne v0, v6, :cond_2

    iget-wide v0, p0, Lorg/xbill/DNS/aj;->n:J

    iget-wide v2, p0, Lorg/xbill/DNS/aj;->d:J

    invoke-static {v0, v1, v2, v3}, Lorg/xbill/DNS/aa;->a(JJ)I

    move-result v0

    if-gtz v0, :cond_2

    const-string v0, "up to date"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->a(Ljava/lang/String;)V

    iput v5, p0, Lorg/xbill/DNS/aj;->m:I

    goto :goto_0

    :cond_2
    iput v7, p0, Lorg/xbill/DNS/aj;->m:I

    goto :goto_0

    :pswitch_1
    iget v1, p0, Lorg/xbill/DNS/aj;->b:I

    if-ne v1, v6, :cond_3

    if-ne v0, v4, :cond_3

    invoke-static {p1}, Lorg/xbill/DNS/aj;->b(Lorg/xbill/DNS/Record;)J

    move-result-wide v0

    iget-wide v2, p0, Lorg/xbill/DNS/aj;->d:J

    cmp-long v0, v0, v2

    if-nez v0, :cond_3

    iput v6, p0, Lorg/xbill/DNS/aj;->q:I

    iget-object v0, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    invoke-interface {v0}, Lorg/xbill/DNS/aj$c;->b()V

    const-string v0, "got incremental response"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->a(Ljava/lang/String;)V

    iput v8, p0, Lorg/xbill/DNS/aj;->m:I

    :goto_1
    invoke-direct {p0, p1}, Lorg/xbill/DNS/aj;->c(Lorg/xbill/DNS/Record;)V

    goto :goto_0

    :cond_3
    const/16 v0, 0xfc

    iput v0, p0, Lorg/xbill/DNS/aj;->q:I

    iget-object v0, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    invoke-interface {v0}, Lorg/xbill/DNS/aj$c;->a()V

    iget-object v0, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    iget-object v1, p0, Lorg/xbill/DNS/aj;->p:Lorg/xbill/DNS/Record;

    invoke-interface {v0, v1}, Lorg/xbill/DNS/aj$c;->c(Lorg/xbill/DNS/Record;)V

    const-string v0, "got nonincremental response"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->a(Ljava/lang/String;)V

    iput v4, p0, Lorg/xbill/DNS/aj;->m:I

    goto :goto_1

    :pswitch_2
    iget-object v0, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    invoke-interface {v0, p1}, Lorg/xbill/DNS/aj$c;->a(Lorg/xbill/DNS/Record;)V

    const/4 v0, 0x3

    iput v0, p0, Lorg/xbill/DNS/aj;->m:I

    goto :goto_0

    :pswitch_3
    if-ne v0, v4, :cond_4

    invoke-static {p1}, Lorg/xbill/DNS/aj;->b(Lorg/xbill/DNS/Record;)J

    move-result-wide v0

    iput-wide v0, p0, Lorg/xbill/DNS/aj;->o:J

    const/4 v0, 0x4

    iput v0, p0, Lorg/xbill/DNS/aj;->m:I

    invoke-direct {p0, p1}, Lorg/xbill/DNS/aj;->c(Lorg/xbill/DNS/Record;)V

    goto :goto_0

    :cond_4
    iget-object v0, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    invoke-interface {v0, p1}, Lorg/xbill/DNS/aj$c;->c(Lorg/xbill/DNS/Record;)V

    goto :goto_0

    :pswitch_4
    iget-object v0, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    invoke-interface {v0, p1}, Lorg/xbill/DNS/aj$c;->b(Lorg/xbill/DNS/Record;)V

    const/4 v0, 0x5

    iput v0, p0, Lorg/xbill/DNS/aj;->m:I

    goto/16 :goto_0

    :pswitch_5
    if-ne v0, v4, :cond_6

    invoke-static {p1}, Lorg/xbill/DNS/aj;->b(Lorg/xbill/DNS/Record;)J

    move-result-wide v0

    iget-wide v2, p0, Lorg/xbill/DNS/aj;->n:J

    cmp-long v2, v0, v2

    if-nez v2, :cond_5

    iput v5, p0, Lorg/xbill/DNS/aj;->m:I

    goto/16 :goto_0

    :cond_5
    iget-wide v2, p0, Lorg/xbill/DNS/aj;->o:J

    cmp-long v2, v0, v2

    if-eqz v2, :cond_7

    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const-string v3, "IXFR out of sync: expected serial "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    iget-wide v4, p0, Lorg/xbill/DNS/aj;->o:J

    invoke-virtual {v2, v4, v5}, Ljava/lang/StringBuffer;->append(J)Ljava/lang/StringBuffer;

    move-result-object v2

    const-string v3, " , got "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuffer;->append(J)Ljava/lang/StringBuffer;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->b(Ljava/lang/String;)V

    :cond_6
    iget-object v0, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    invoke-interface {v0, p1}, Lorg/xbill/DNS/aj$c;->c(Lorg/xbill/DNS/Record;)V

    goto/16 :goto_0

    :cond_7
    iput v8, p0, Lorg/xbill/DNS/aj;->m:I

    invoke-direct {p0, p1}, Lorg/xbill/DNS/aj;->c(Lorg/xbill/DNS/Record;)V

    goto/16 :goto_0

    :pswitch_6
    if-ne v0, v7, :cond_8

    invoke-virtual {p1}, Lorg/xbill/DNS/Record;->m()I

    move-result v1

    iget v2, p0, Lorg/xbill/DNS/aj;->c:I

    if-ne v1, v2, :cond_0

    :cond_8
    iget-object v1, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    invoke-interface {v1, p1}, Lorg/xbill/DNS/aj$c;->c(Lorg/xbill/DNS/Record;)V

    if-ne v0, v4, :cond_0

    iput v5, p0, Lorg/xbill/DNS/aj;->m:I

    goto/16 :goto_0

    :pswitch_7
    const-string v0, "extra data"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->b(Ljava/lang/String;)V

    goto/16 :goto_0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_4
        :pswitch_5
        :pswitch_6
        :pswitch_7
    .end packed-switch
.end method

.method private d()V
    .locals 21

    move-object/from16 v0, p0

    iget-object v2, v0, Lorg/xbill/DNS/aj;->a:Lorg/xbill/DNS/Name;

    move-object/from16 v0, p0

    iget v3, v0, Lorg/xbill/DNS/aj;->b:I

    move-object/from16 v0, p0

    iget v4, v0, Lorg/xbill/DNS/aj;->c:I

    invoke-static {v2, v3, v4}, Lorg/xbill/DNS/Record;->a(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;

    move-result-object v2

    new-instance v20, Lorg/xbill/DNS/o;

    invoke-direct/range {v20 .. v20}, Lorg/xbill/DNS/o;-><init>()V

    invoke-virtual/range {v20 .. v20}, Lorg/xbill/DNS/o;->a()Lorg/xbill/DNS/m;

    move-result-object v3

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lorg/xbill/DNS/m;->d(I)V

    const/4 v3, 0x0

    move-object/from16 v0, v20

    invoke-virtual {v0, v2, v3}, Lorg/xbill/DNS/o;->a(Lorg/xbill/DNS/Record;I)V

    move-object/from16 v0, p0

    iget v2, v0, Lorg/xbill/DNS/aj;->b:I

    const/16 v3, 0xfb

    if-ne v2, v3, :cond_0

    new-instance v3, Lorg/xbill/DNS/SOARecord;

    move-object/from16 v0, p0

    iget-object v4, v0, Lorg/xbill/DNS/aj;->a:Lorg/xbill/DNS/Name;

    move-object/from16 v0, p0

    iget v5, v0, Lorg/xbill/DNS/aj;->c:I

    const-wide/16 v6, 0x0

    sget-object v8, Lorg/xbill/DNS/Name;->a:Lorg/xbill/DNS/Name;

    sget-object v9, Lorg/xbill/DNS/Name;->a:Lorg/xbill/DNS/Name;

    move-object/from16 v0, p0

    iget-wide v10, v0, Lorg/xbill/DNS/aj;->d:J

    const-wide/16 v12, 0x0

    const-wide/16 v14, 0x0

    const-wide/16 v16, 0x0

    const-wide/16 v18, 0x0

    invoke-direct/range {v3 .. v19}, Lorg/xbill/DNS/SOARecord;-><init>(Lorg/xbill/DNS/Name;IJLorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;JJJJJ)V

    const/4 v2, 0x2

    move-object/from16 v0, v20

    invoke-virtual {v0, v3, v2}, Lorg/xbill/DNS/o;->a(Lorg/xbill/DNS/Record;I)V

    :cond_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lorg/xbill/DNS/aj;->j:Lorg/xbill/DNS/ae;

    if-eqz v2, :cond_1

    move-object/from16 v0, p0

    iget-object v2, v0, Lorg/xbill/DNS/aj;->j:Lorg/xbill/DNS/ae;

    const/4 v3, 0x0

    move-object/from16 v0, v20

    invoke-virtual {v2, v0, v3}, Lorg/xbill/DNS/ae;->a(Lorg/xbill/DNS/o;Lorg/xbill/DNS/TSIGRecord;)V

    new-instance v2, Lorg/xbill/DNS/ae$a;

    move-object/from16 v0, p0

    iget-object v3, v0, Lorg/xbill/DNS/aj;->j:Lorg/xbill/DNS/ae;

    invoke-virtual/range {v20 .. v20}, Lorg/xbill/DNS/o;->c()Lorg/xbill/DNS/TSIGRecord;

    move-result-object v4

    invoke-direct {v2, v3, v4}, Lorg/xbill/DNS/ae$a;-><init>(Lorg/xbill/DNS/ae;Lorg/xbill/DNS/TSIGRecord;)V

    move-object/from16 v0, p0

    iput-object v2, v0, Lorg/xbill/DNS/aj;->k:Lorg/xbill/DNS/ae$a;

    :cond_1
    const v2, 0xffff

    move-object/from16 v0, v20

    invoke-virtual {v0, v2}, Lorg/xbill/DNS/o;->c(I)[B

    move-result-object v2

    move-object/from16 v0, p0

    iget-object v3, v0, Lorg/xbill/DNS/aj;->i:Lorg/xbill/DNS/ad;

    invoke-virtual {v3, v2}, Lorg/xbill/DNS/ad;->a([B)V

    return-void
.end method

.method private e()V
    .locals 1

    iget-boolean v0, p0, Lorg/xbill/DNS/aj;->e:Z

    if-nez v0, :cond_0

    const-string v0, "server doesn\'t support IXFR"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->b(Ljava/lang/String;)V

    :cond_0
    const-string v0, "falling back to AXFR"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->a(Ljava/lang/String;)V

    const/16 v0, 0xfc

    iput v0, p0, Lorg/xbill/DNS/aj;->b:I

    const/4 v0, 0x0

    iput v0, p0, Lorg/xbill/DNS/aj;->m:I

    return-void
.end method

.method private f()V
    .locals 1

    :try_start_0
    iget-object v0, p0, Lorg/xbill/DNS/aj;->i:Lorg/xbill/DNS/ad;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lorg/xbill/DNS/aj;->i:Lorg/xbill/DNS/ad;

    invoke-virtual {v0}, Lorg/xbill/DNS/ad;->a()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    :cond_0
    :goto_0
    return-void

    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method private g()V
    .locals 6

    const/16 v5, 0xfb

    const/4 v4, 0x7

    invoke-direct {p0}, Lorg/xbill/DNS/aj;->d()V

    :cond_0
    :goto_0
    iget v0, p0, Lorg/xbill/DNS/aj;->m:I

    if-eq v0, v4, :cond_2

    iget-object v0, p0, Lorg/xbill/DNS/aj;->i:Lorg/xbill/DNS/ad;

    invoke-virtual {v0}, Lorg/xbill/DNS/ad;->b()[B

    move-result-object v0

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->a([B)Lorg/xbill/DNS/o;

    move-result-object v1

    invoke-virtual {v1}, Lorg/xbill/DNS/o;->a()Lorg/xbill/DNS/m;

    move-result-object v2

    invoke-virtual {v2}, Lorg/xbill/DNS/m;->c()I

    move-result v2

    if-nez v2, :cond_1

    iget-object v2, p0, Lorg/xbill/DNS/aj;->k:Lorg/xbill/DNS/ae$a;

    if-eqz v2, :cond_1

    invoke-virtual {v1}, Lorg/xbill/DNS/o;->c()Lorg/xbill/DNS/TSIGRecord;

    iget-object v2, p0, Lorg/xbill/DNS/aj;->k:Lorg/xbill/DNS/ae$a;

    invoke-virtual {v2, v1, v0}, Lorg/xbill/DNS/ae$a;->a(Lorg/xbill/DNS/o;[B)I

    move-result v0

    if-eqz v0, :cond_1

    const-string v0, "TSIG failure"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->b(Ljava/lang/String;)V

    :cond_1
    const/4 v0, 0x1

    invoke-virtual {v1, v0}, Lorg/xbill/DNS/o;->a(I)[Lorg/xbill/DNS/Record;

    move-result-object v2

    iget v0, p0, Lorg/xbill/DNS/aj;->m:I

    if-nez v0, :cond_6

    invoke-virtual {v1}, Lorg/xbill/DNS/o;->g()I

    move-result v0

    if-eqz v0, :cond_4

    iget v3, p0, Lorg/xbill/DNS/aj;->b:I

    if-ne v3, v5, :cond_3

    const/4 v3, 0x4

    if-ne v0, v3, :cond_3

    invoke-direct {p0}, Lorg/xbill/DNS/aj;->e()V

    invoke-direct {p0}, Lorg/xbill/DNS/aj;->g()V

    :cond_2
    :goto_1
    return-void

    :cond_3
    invoke-static {v0}, Lorg/xbill/DNS/u;->a(I)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->b(Ljava/lang/String;)V

    :cond_4
    invoke-virtual {v1}, Lorg/xbill/DNS/o;->b()Lorg/xbill/DNS/Record;

    move-result-object v0

    if-eqz v0, :cond_5

    invoke-virtual {v0}, Lorg/xbill/DNS/Record;->k()I

    move-result v0

    iget v3, p0, Lorg/xbill/DNS/aj;->b:I

    if-eq v0, v3, :cond_5

    const-string v0, "invalid question section"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->b(Ljava/lang/String;)V

    :cond_5
    array-length v0, v2

    if-nez v0, :cond_6

    iget v0, p0, Lorg/xbill/DNS/aj;->b:I

    if-ne v0, v5, :cond_6

    invoke-direct {p0}, Lorg/xbill/DNS/aj;->e()V

    invoke-direct {p0}, Lorg/xbill/DNS/aj;->g()V

    goto :goto_1

    :cond_6
    const/4 v0, 0x0

    :goto_2
    array-length v3, v2

    if-ge v0, v3, :cond_7

    aget-object v3, v2, v0

    invoke-direct {p0, v3}, Lorg/xbill/DNS/aj;->c(Lorg/xbill/DNS/Record;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    :cond_7
    iget v0, p0, Lorg/xbill/DNS/aj;->m:I

    if-ne v0, v4, :cond_0

    iget-object v0, p0, Lorg/xbill/DNS/aj;->k:Lorg/xbill/DNS/ae$a;

    if-eqz v0, :cond_0

    invoke-virtual {v1}, Lorg/xbill/DNS/o;->e()Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "last message must be signed"

    invoke-direct {p0, v0}, Lorg/xbill/DNS/aj;->b(Ljava/lang/String;)V

    goto/16 :goto_0
.end method

.method private h()Lorg/xbill/DNS/aj$a;
    .locals 2

    iget-object v0, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    instance-of v0, v0, Lorg/xbill/DNS/aj$a;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    check-cast v0, Lorg/xbill/DNS/aj$a;

    return-object v0

    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "ZoneTransferIn used callback interface"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method


# virtual methods
.method public a()Ljava/util/List;
    .locals 2

    new-instance v0, Lorg/xbill/DNS/aj$a;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Lorg/xbill/DNS/aj$a;-><init>(Lorg/xbill/DNS/aj$1;)V

    invoke-virtual {p0, v0}, Lorg/xbill/DNS/aj;->a(Lorg/xbill/DNS/aj$c;)V

    invoke-static {v0}, Lorg/xbill/DNS/aj$a;->a(Lorg/xbill/DNS/aj$a;)Ljava/util/List;

    move-result-object v1

    if-eqz v1, :cond_0

    invoke-static {v0}, Lorg/xbill/DNS/aj$a;->a(Lorg/xbill/DNS/aj$a;)Ljava/util/List;

    move-result-object v0

    :goto_0
    return-object v0

    :cond_0
    invoke-static {v0}, Lorg/xbill/DNS/aj$a;->b(Lorg/xbill/DNS/aj$a;)Ljava/util/List;

    move-result-object v0

    goto :goto_0
.end method

.method public a(I)V
    .locals 4

    if-gez p1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "timeout cannot be negative"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    const-wide/16 v0, 0x3e8

    int-to-long v2, p1

    mul-long/2addr v0, v2

    iput-wide v0, p0, Lorg/xbill/DNS/aj;->l:J

    return-void
.end method

.method public a(Ljava/net/SocketAddress;)V
    .locals 0

    iput-object p1, p0, Lorg/xbill/DNS/aj;->g:Ljava/net/SocketAddress;

    return-void
.end method

.method public a(Lorg/xbill/DNS/aj$c;)V
    .locals 1

    iput-object p1, p0, Lorg/xbill/DNS/aj;->f:Lorg/xbill/DNS/aj$c;

    :try_start_0
    invoke-direct {p0}, Lorg/xbill/DNS/aj;->c()V

    invoke-direct {p0}, Lorg/xbill/DNS/aj;->g()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-direct {p0}, Lorg/xbill/DNS/aj;->f()V

    return-void

    :catchall_0
    move-exception v0

    invoke-direct {p0}, Lorg/xbill/DNS/aj;->f()V

    throw v0
.end method

.method public b()Ljava/util/List;
    .locals 1

    invoke-direct {p0}, Lorg/xbill/DNS/aj;->h()Lorg/xbill/DNS/aj$a;

    move-result-object v0

    invoke-static {v0}, Lorg/xbill/DNS/aj$a;->a(Lorg/xbill/DNS/aj$a;)Ljava/util/List;

    move-result-object v0

    return-object v0
.end method
