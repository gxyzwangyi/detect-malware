#!/usr/bin/python3
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, String
from sqlalchemy import ForeignKey
from sqlalchemy.orm import relationship, backref
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker


Base = declarative_base()
class APKdata(Base):
    def __init__(self, url, priority, time):
        self.url = url
        self.priority = priority
        self.time = time
        
    __tablename__ = 'apkdata'
    url = Column(String, primary_key=True)
    priority = Column(Integer)
    time = Column(Integer)

class Downloaded(Base):
    def __init__(self, sha1, name, url, downloadurl, version):
        self.sha1 = sha1
        self.name = name
        self.url = url
        self.downloadurl = downloadurl
        self.version = version
        
    __tablename__ = 'downloaded'
    sha1 = Column(String, primary_key=True)
    url = Column(String)
    name = Column(String)
    downloadurl = Column(String)
    version = Column(String)

class Errors(Base):
    def __init__(self, url, amount):
        self.url = url
        self.amount = amount

    __tablename__ = 'errors'
    url = Column(String, primary_key=True)
    amount = Column(Integer)
    
engine = create_engine('sqlite:////home/coconut/crawler/database1.sql')
Base.metadata.create_all(engine)

Session = sessionmaker(bind=engine)
session = Session()

